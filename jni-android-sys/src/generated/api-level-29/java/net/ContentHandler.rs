// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-net-ContentHandler"))]
__jni_bindgen! {
    /// public class [ContentHandler](https://developer.android.com/reference/java/net/ContentHandler.html)
    ///
    /// Required feature: java-net-ContentHandler
    public class ContentHandler ("java/net/ContentHandler") extends crate::java::lang::Object {

        /// [ContentHandler](https://developer.android.com/reference/java/net/ContentHandler.html#ContentHandler())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::net::ContentHandler>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/ContentHandler", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/ContentHandler\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContent](https://developer.android.com/reference/java/net/ContentHandler.html#getContent(java.net.URLConnection))
        ///
        /// Required features: "java-lang-Object", "java-net-URLConnection"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-net-URLConnection")))]
        pub fn getContent_URLConnection<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::URLConnection>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/ContentHandler", java.flags == PUBLIC | ABSTRACT, .name == "getContent", .descriptor == "(Ljava/net/URLConnection;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/ContentHandler\0", "getContent\0", "(Ljava/net/URLConnection;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContent](https://developer.android.com/reference/java/net/ContentHandler.html#getContent(java.net.URLConnection,%20java.lang.Class%5B%5D))
        ///
        /// Required features: "java-lang-Class", "java-lang-Object", "java-net-URLConnection"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-lang-Object", feature = "java-net-URLConnection")))]
        pub fn getContent_URLConnection_Class_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::URLConnection>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::Class, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/ContentHandler", java.flags == PUBLIC, .name == "getContent", .descriptor == "(Ljava/net/URLConnection;[Ljava/lang/Class;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/ContentHandler\0", "getContent\0", "(Ljava/net/URLConnection;[Ljava/lang/Class;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
