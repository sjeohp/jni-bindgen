// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-net-SocketImpl"))]
__jni_bindgen! {
    /// public class [SocketImpl](https://developer.android.com/reference/java/net/SocketImpl.html)
    ///
    /// Required feature: java-net-SocketImpl
    public class SocketImpl ("java/net/SocketImpl") extends crate::java::lang::Object, implements crate::java::net::SocketOptions {

        /// [SocketImpl](https://developer.android.com/reference/java/net/SocketImpl.html#SocketImpl())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::net::SocketImpl>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/SocketImpl", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [create](https://developer.android.com/reference/java/net/SocketImpl.html#create(boolean))
        // fn create<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "create", .descriptor == "(Z)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "create\0", "(Z)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [connect](https://developer.android.com/reference/java/net/SocketImpl.html#connect(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn connect<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "connect", .descriptor == "(Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "connect\0", "(Ljava/lang/String;I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [connect](https://developer.android.com/reference/java/net/SocketImpl.html#connect(java.net.InetAddress,%20int))
        // ///
        // /// Required features: "java-net-InetAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-InetAddress")))]
        // fn connect<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::InetAddress>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "connect", .descriptor == "(Ljava/net/InetAddress;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "connect\0", "(Ljava/net/InetAddress;I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [connect](https://developer.android.com/reference/java/net/SocketImpl.html#connect(java.net.SocketAddress,%20int))
        // ///
        // /// Required features: "java-net-SocketAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-SocketAddress")))]
        // fn connect<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::SocketAddress>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "connect", .descriptor == "(Ljava/net/SocketAddress;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "connect\0", "(Ljava/net/SocketAddress;I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [bind](https://developer.android.com/reference/java/net/SocketImpl.html#bind(java.net.InetAddress,%20int))
        // ///
        // /// Required features: "java-net-InetAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-InetAddress")))]
        // fn bind<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::InetAddress>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "bind", .descriptor == "(Ljava/net/InetAddress;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "bind\0", "(Ljava/net/InetAddress;I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [listen](https://developer.android.com/reference/java/net/SocketImpl.html#listen(int))
        // fn listen<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "listen", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "listen\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [accept](https://developer.android.com/reference/java/net/SocketImpl.html#accept(java.net.SocketImpl))
        // ///
        // /// Required features: "java-net-SocketImpl"
        // #[cfg(any(feature = "all", all(feature = "java-net-SocketImpl")))]
        // fn accept<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::SocketImpl>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "accept", .descriptor == "(Ljava/net/SocketImpl;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "accept\0", "(Ljava/net/SocketImpl;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getInputStream](https://developer.android.com/reference/java/net/SocketImpl.html#getInputStream())
        // ///
        // /// Required features: "java-io-InputStream"
        // #[cfg(any(feature = "all", all(feature = "java-io-InputStream")))]
        // fn getInputStream<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::InputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "getInputStream", .descriptor == "()Ljava/io/InputStream;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "getInputStream\0", "()Ljava/io/InputStream;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getOutputStream](https://developer.android.com/reference/java/net/SocketImpl.html#getOutputStream())
        // ///
        // /// Required features: "java-io-OutputStream"
        // #[cfg(any(feature = "all", all(feature = "java-io-OutputStream")))]
        // fn getOutputStream<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::OutputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "getOutputStream", .descriptor == "()Ljava/io/OutputStream;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "getOutputStream\0", "()Ljava/io/OutputStream;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [available](https://developer.android.com/reference/java/net/SocketImpl.html#available())
        // fn available<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "available", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "available\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [close](https://developer.android.com/reference/java/net/SocketImpl.html#close())
        // fn close<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "close", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "close\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [shutdownInput](https://developer.android.com/reference/java/net/SocketImpl.html#shutdownInput())
        // fn shutdownInput<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED, .name == "shutdownInput", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "shutdownInput\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [shutdownOutput](https://developer.android.com/reference/java/net/SocketImpl.html#shutdownOutput())
        // fn shutdownOutput<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED, .name == "shutdownOutput", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "shutdownOutput\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getFileDescriptor](https://developer.android.com/reference/java/net/SocketImpl.html#getFileDescriptor())
        // ///
        // /// Required features: "java-io-FileDescriptor"
        // #[cfg(any(feature = "all", all(feature = "java-io-FileDescriptor")))]
        // fn getFileDescriptor<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::FileDescriptor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED, .name == "getFileDescriptor", .descriptor == "()Ljava/io/FileDescriptor;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "getFileDescriptor\0", "()Ljava/io/FileDescriptor;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getInetAddress](https://developer.android.com/reference/java/net/SocketImpl.html#getInetAddress())
        // ///
        // /// Required features: "java-net-InetAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-InetAddress")))]
        // fn getInetAddress<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::InetAddress>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED, .name == "getInetAddress", .descriptor == "()Ljava/net/InetAddress;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "getInetAddress\0", "()Ljava/net/InetAddress;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getPort](https://developer.android.com/reference/java/net/SocketImpl.html#getPort())
        // fn getPort<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED, .name == "getPort", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "getPort\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [supportsUrgentData](https://developer.android.com/reference/java/net/SocketImpl.html#supportsUrgentData())
        // fn supportsUrgentData<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED, .name == "supportsUrgentData", .descriptor == "()Z"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "supportsUrgentData\0", "()Z\0");
        //         __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [sendUrgentData](https://developer.android.com/reference/java/net/SocketImpl.html#sendUrgentData(int))
        // fn sendUrgentData<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "sendUrgentData", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "sendUrgentData\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getLocalPort](https://developer.android.com/reference/java/net/SocketImpl.html#getLocalPort())
        // fn getLocalPort<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED, .name == "getLocalPort", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "getLocalPort\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [toString](https://developer.android.com/reference/java/net/SocketImpl.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/SocketImpl", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [setPerformancePreferences](https://developer.android.com/reference/java/net/SocketImpl.html#setPerformancePreferences(int,%20int,%20int))
        // fn setPerformancePreferences<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/SocketImpl", java.flags == PROTECTED, .name == "setPerformancePreferences", .descriptor == "(III)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/SocketImpl\0", "setPerformancePreferences\0", "(III)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [address](https://developer.android.com/reference/java/net/SocketImpl.html#address)
        // ///
        // /// Required feature: java-net-InetAddress
        // #[cfg(any(feature = "all", feature = "java-net-InetAddress"))]
        // pub fn address<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::InetAddress>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/SocketImpl\0", "address\0", "Ljava/net/InetAddress;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [address](https://developer.android.com/reference/java/net/SocketImpl.html#address)
        // ///
        // /// Required feature: java-net-InetAddress
        // #[cfg(any(feature = "all", feature = "java-net-InetAddress"))]
        // pub fn set_address<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::net::InetAddress>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/SocketImpl\0", "address\0", "Ljava/net/InetAddress;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [fd](https://developer.android.com/reference/java/net/SocketImpl.html#fd)
        // ///
        // /// Required feature: java-io-FileDescriptor
        // #[cfg(any(feature = "all", feature = "java-io-FileDescriptor"))]
        // pub fn fd<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::FileDescriptor>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/SocketImpl\0", "fd\0", "Ljava/io/FileDescriptor;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [fd](https://developer.android.com/reference/java/net/SocketImpl.html#fd)
        // ///
        // /// Required feature: java-io-FileDescriptor
        // #[cfg(any(feature = "all", feature = "java-io-FileDescriptor"))]
        // pub fn set_fd<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::io::FileDescriptor>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/SocketImpl\0", "fd\0", "Ljava/io/FileDescriptor;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [localport](https://developer.android.com/reference/java/net/SocketImpl.html#localport)
        // pub fn localport<'env>(&'env self) -> i32 {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/SocketImpl\0", "localport\0", "I\0");
        //         env.get_int_field(class, field)
        //     }
        // }

        // /// **set** protected [localport](https://developer.android.com/reference/java/net/SocketImpl.html#localport)
        // pub fn set_localport<'env>(&'env self, value: i32) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/SocketImpl\0", "localport\0", "I\0");
        //         env.set_int_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [port](https://developer.android.com/reference/java/net/SocketImpl.html#port)
        // pub fn port<'env>(&'env self) -> i32 {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/SocketImpl\0", "port\0", "I\0");
        //         env.get_int_field(class, field)
        //     }
        // }

        // /// **set** protected [port](https://developer.android.com/reference/java/net/SocketImpl.html#port)
        // pub fn set_port<'env>(&'env self, value: i32) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/SocketImpl\0", "port\0", "I\0");
        //         env.set_int_field(class, field, value)
        //     }
        // }
    }
}
