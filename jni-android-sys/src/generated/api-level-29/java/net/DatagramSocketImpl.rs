// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-net-DatagramSocketImpl"))]
__jni_bindgen! {
    /// public class [DatagramSocketImpl](https://developer.android.com/reference/java/net/DatagramSocketImpl.html)
    ///
    /// Required feature: java-net-DatagramSocketImpl
    public class DatagramSocketImpl ("java/net/DatagramSocketImpl") extends crate::java::lang::Object, implements crate::java::net::SocketOptions {

        /// [DatagramSocketImpl](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#DatagramSocketImpl())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::net::DatagramSocketImpl>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/DatagramSocketImpl", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [create](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#create())
        // fn create<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "create", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "create\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [bind](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#bind(int,%20java.net.InetAddress))
        // ///
        // /// Required features: "java-net-InetAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-InetAddress")))]
        // fn bind<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::InetAddress>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "bind", .descriptor == "(ILjava/net/InetAddress;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "bind\0", "(ILjava/net/InetAddress;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [send](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#send(java.net.DatagramPacket))
        // ///
        // /// Required features: "java-net-DatagramPacket"
        // #[cfg(any(feature = "all", all(feature = "java-net-DatagramPacket")))]
        // fn send<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::DatagramPacket>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "send", .descriptor == "(Ljava/net/DatagramPacket;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "send\0", "(Ljava/net/DatagramPacket;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [connect](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#connect(java.net.InetAddress,%20int))
        // ///
        // /// Required features: "java-net-InetAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-InetAddress")))]
        // fn connect<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::InetAddress>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED, .name == "connect", .descriptor == "(Ljava/net/InetAddress;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "connect\0", "(Ljava/net/InetAddress;I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [disconnect](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#disconnect())
        // fn disconnect<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED, .name == "disconnect", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "disconnect\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [peek](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#peek(java.net.InetAddress))
        // ///
        // /// Required features: "java-net-InetAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-InetAddress")))]
        // fn peek<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::InetAddress>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "peek", .descriptor == "(Ljava/net/InetAddress;)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "peek\0", "(Ljava/net/InetAddress;)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [peekData](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#peekData(java.net.DatagramPacket))
        // ///
        // /// Required features: "java-net-DatagramPacket"
        // #[cfg(any(feature = "all", all(feature = "java-net-DatagramPacket")))]
        // fn peekData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::DatagramPacket>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "peekData", .descriptor == "(Ljava/net/DatagramPacket;)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "peekData\0", "(Ljava/net/DatagramPacket;)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [receive](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#receive(java.net.DatagramPacket))
        // ///
        // /// Required features: "java-net-DatagramPacket"
        // #[cfg(any(feature = "all", all(feature = "java-net-DatagramPacket")))]
        // fn receive<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::DatagramPacket>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "receive", .descriptor == "(Ljava/net/DatagramPacket;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "receive\0", "(Ljava/net/DatagramPacket;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [setTTL](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#setTTL(byte))
        // #[deprecated] fn setTTL<'env>(&'env self, arg0: i8) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "setTTL", .descriptor == "(B)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "setTTL\0", "(B)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getTTL](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#getTTL())
        // #[deprecated] fn getTTL<'env>(&'env self) -> __jni_bindgen::std::result::Result<i8, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "getTTL", .descriptor == "()B"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "getTTL\0", "()B\0");
        //         __jni_env.call_byte_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [setTimeToLive](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#setTimeToLive(int))
        // fn setTimeToLive<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "setTimeToLive", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "setTimeToLive\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getTimeToLive](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#getTimeToLive())
        // fn getTimeToLive<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "getTimeToLive", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "getTimeToLive\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [join](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#join(java.net.InetAddress))
        // ///
        // /// Required features: "java-net-InetAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-InetAddress")))]
        // fn join<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::InetAddress>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "join", .descriptor == "(Ljava/net/InetAddress;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "join\0", "(Ljava/net/InetAddress;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [leave](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#leave(java.net.InetAddress))
        // ///
        // /// Required features: "java-net-InetAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-InetAddress")))]
        // fn leave<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::InetAddress>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "leave", .descriptor == "(Ljava/net/InetAddress;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "leave\0", "(Ljava/net/InetAddress;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [joinGroup](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#joinGroup(java.net.SocketAddress,%20java.net.NetworkInterface))
        // ///
        // /// Required features: "java-net-NetworkInterface", "java-net-SocketAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-NetworkInterface", feature = "java-net-SocketAddress")))]
        // fn joinGroup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::SocketAddress>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::NetworkInterface>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "joinGroup", .descriptor == "(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "joinGroup\0", "(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [leaveGroup](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#leaveGroup(java.net.SocketAddress,%20java.net.NetworkInterface))
        // ///
        // /// Required features: "java-net-NetworkInterface", "java-net-SocketAddress"
        // #[cfg(any(feature = "all", all(feature = "java-net-NetworkInterface", feature = "java-net-SocketAddress")))]
        // fn leaveGroup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::SocketAddress>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::NetworkInterface>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "leaveGroup", .descriptor == "(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "leaveGroup\0", "(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [close](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#close())
        // fn close<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED | ABSTRACT, .name == "close", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "close\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getLocalPort](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#getLocalPort())
        // fn getLocalPort<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED, .name == "getLocalPort", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "getLocalPort\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getFileDescriptor](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#getFileDescriptor())
        // ///
        // /// Required features: "java-io-FileDescriptor"
        // #[cfg(any(feature = "all", all(feature = "java-io-FileDescriptor")))]
        // fn getFileDescriptor<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::FileDescriptor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/DatagramSocketImpl", java.flags == PROTECTED, .name == "getFileDescriptor", .descriptor == "()Ljava/io/FileDescriptor;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/DatagramSocketImpl\0", "getFileDescriptor\0", "()Ljava/io/FileDescriptor;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [fd](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#fd)
        // ///
        // /// Required feature: java-io-FileDescriptor
        // #[cfg(any(feature = "all", feature = "java-io-FileDescriptor"))]
        // pub fn fd<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::FileDescriptor>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/DatagramSocketImpl\0", "fd\0", "Ljava/io/FileDescriptor;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [fd](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#fd)
        // ///
        // /// Required feature: java-io-FileDescriptor
        // #[cfg(any(feature = "all", feature = "java-io-FileDescriptor"))]
        // pub fn set_fd<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::io::FileDescriptor>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/DatagramSocketImpl\0", "fd\0", "Ljava/io/FileDescriptor;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [localPort](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#localPort)
        // pub fn localPort<'env>(&'env self) -> i32 {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/DatagramSocketImpl\0", "localPort\0", "I\0");
        //         env.get_int_field(class, field)
        //     }
        // }

        // /// **set** protected [localPort](https://developer.android.com/reference/java/net/DatagramSocketImpl.html#localPort)
        // pub fn set_localPort<'env>(&'env self, value: i32) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/DatagramSocketImpl\0", "localPort\0", "I\0");
        //         env.set_int_field(class, field, value)
        //     }
        // }
    }
}
