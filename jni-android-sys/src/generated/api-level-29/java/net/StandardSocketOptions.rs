// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-net-StandardSocketOptions"))]
__jni_bindgen! {
    /// public final class [StandardSocketOptions](https://developer.android.com/reference/java/net/StandardSocketOptions.html)
    ///
    /// Required feature: java-net-StandardSocketOptions
    public final class StandardSocketOptions ("java/net/StandardSocketOptions") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [StandardSocketOptions](https://developer.android.com/reference/java/net/StandardSocketOptions.html#StandardSocketOptions())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::net::StandardSocketOptions>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/StandardSocketOptions", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/StandardSocketOptions\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// **get** public static final [IP_MULTICAST_IF](https://developer.android.com/reference/java/net/StandardSocketOptions.html#IP_MULTICAST_IF)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn IP_MULTICAST_IF<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "IP_MULTICAST_IF\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [IP_MULTICAST_LOOP](https://developer.android.com/reference/java/net/StandardSocketOptions.html#IP_MULTICAST_LOOP)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn IP_MULTICAST_LOOP<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "IP_MULTICAST_LOOP\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [IP_MULTICAST_TTL](https://developer.android.com/reference/java/net/StandardSocketOptions.html#IP_MULTICAST_TTL)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn IP_MULTICAST_TTL<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "IP_MULTICAST_TTL\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [IP_TOS](https://developer.android.com/reference/java/net/StandardSocketOptions.html#IP_TOS)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn IP_TOS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "IP_TOS\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SO_BROADCAST](https://developer.android.com/reference/java/net/StandardSocketOptions.html#SO_BROADCAST)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn SO_BROADCAST<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "SO_BROADCAST\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SO_KEEPALIVE](https://developer.android.com/reference/java/net/StandardSocketOptions.html#SO_KEEPALIVE)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn SO_KEEPALIVE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "SO_KEEPALIVE\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SO_LINGER](https://developer.android.com/reference/java/net/StandardSocketOptions.html#SO_LINGER)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn SO_LINGER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "SO_LINGER\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SO_RCVBUF](https://developer.android.com/reference/java/net/StandardSocketOptions.html#SO_RCVBUF)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn SO_RCVBUF<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "SO_RCVBUF\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SO_REUSEADDR](https://developer.android.com/reference/java/net/StandardSocketOptions.html#SO_REUSEADDR)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn SO_REUSEADDR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "SO_REUSEADDR\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SO_SNDBUF](https://developer.android.com/reference/java/net/StandardSocketOptions.html#SO_SNDBUF)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn SO_SNDBUF<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "SO_SNDBUF\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [TCP_NODELAY](https://developer.android.com/reference/java/net/StandardSocketOptions.html#TCP_NODELAY)
        ///
        /// Required feature: java-net-SocketOption
        #[cfg(any(feature = "all", feature = "java-net-SocketOption"))]
        pub fn TCP_NODELAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::SocketOption>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/net/StandardSocketOptions\0", "TCP_NODELAY\0", "Ljava/net/SocketOption;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
