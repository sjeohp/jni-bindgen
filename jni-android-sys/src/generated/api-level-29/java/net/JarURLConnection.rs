// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-net-JarURLConnection"))]
__jni_bindgen! {
    /// public class [JarURLConnection](https://developer.android.com/reference/java/net/JarURLConnection.html)
    ///
    /// Required feature: java-net-JarURLConnection
    public class JarURLConnection ("java/net/JarURLConnection") extends crate::java::net::URLConnection {

        // // Not emitting: Non-public method
        // /// [JarURLConnection](https://developer.android.com/reference/java/net/JarURLConnection.html#JarURLConnection(java.net.URL))
        // ///
        // /// Required features: "java-net-URL"
        // #[cfg(any(feature = "all", all(feature = "java-net-URL")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::URL>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::net::JarURLConnection>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/net/JarURLConnection", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/net/URL;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "<init>\0", "(Ljava/net/URL;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getJarFileURL](https://developer.android.com/reference/java/net/JarURLConnection.html#getJarFileURL())
        ///
        /// Required features: "java-net-URL"
        #[cfg(any(feature = "all", all(feature = "java-net-URL")))]
        pub fn getJarFileURL<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::URL>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/JarURLConnection", java.flags == PUBLIC, .name == "getJarFileURL", .descriptor == "()Ljava/net/URL;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "getJarFileURL\0", "()Ljava/net/URL;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEntryName](https://developer.android.com/reference/java/net/JarURLConnection.html#getEntryName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getEntryName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/JarURLConnection", java.flags == PUBLIC, .name == "getEntryName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "getEntryName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getJarFile](https://developer.android.com/reference/java/net/JarURLConnection.html#getJarFile())
        ///
        /// Required features: "java-util-jar-JarFile"
        #[cfg(any(feature = "all", all(feature = "java-util-jar-JarFile")))]
        pub fn getJarFile<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::jar::JarFile>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/JarURLConnection", java.flags == PUBLIC | ABSTRACT, .name == "getJarFile", .descriptor == "()Ljava/util/jar/JarFile;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "getJarFile\0", "()Ljava/util/jar/JarFile;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getManifest](https://developer.android.com/reference/java/net/JarURLConnection.html#getManifest())
        ///
        /// Required features: "java-util-jar-Manifest"
        #[cfg(any(feature = "all", all(feature = "java-util-jar-Manifest")))]
        pub fn getManifest<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::jar::Manifest>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/JarURLConnection", java.flags == PUBLIC, .name == "getManifest", .descriptor == "()Ljava/util/jar/Manifest;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "getManifest\0", "()Ljava/util/jar/Manifest;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getJarEntry](https://developer.android.com/reference/java/net/JarURLConnection.html#getJarEntry())
        ///
        /// Required features: "java-util-jar-JarEntry"
        #[cfg(any(feature = "all", all(feature = "java-util-jar-JarEntry")))]
        pub fn getJarEntry<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::jar::JarEntry>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/JarURLConnection", java.flags == PUBLIC, .name == "getJarEntry", .descriptor == "()Ljava/util/jar/JarEntry;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "getJarEntry\0", "()Ljava/util/jar/JarEntry;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAttributes](https://developer.android.com/reference/java/net/JarURLConnection.html#getAttributes())
        ///
        /// Required features: "java-util-jar-Attributes"
        #[cfg(any(feature = "all", all(feature = "java-util-jar-Attributes")))]
        pub fn getAttributes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::jar::Attributes>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/JarURLConnection", java.flags == PUBLIC, .name == "getAttributes", .descriptor == "()Ljava/util/jar/Attributes;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "getAttributes\0", "()Ljava/util/jar/Attributes;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMainAttributes](https://developer.android.com/reference/java/net/JarURLConnection.html#getMainAttributes())
        ///
        /// Required features: "java-util-jar-Attributes"
        #[cfg(any(feature = "all", all(feature = "java-util-jar-Attributes")))]
        pub fn getMainAttributes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::jar::Attributes>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/JarURLConnection", java.flags == PUBLIC, .name == "getMainAttributes", .descriptor == "()Ljava/util/jar/Attributes;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "getMainAttributes\0", "()Ljava/util/jar/Attributes;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCertificates](https://developer.android.com/reference/java/net/JarURLConnection.html#getCertificates())
        ///
        /// Required features: "java-security-cert-Certificate"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-Certificate")))]
        pub fn getCertificates<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::security::cert::Certificate, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/net/JarURLConnection", java.flags == PUBLIC, .name == "getCertificates", .descriptor == "()[Ljava/security/cert/Certificate;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/net/JarURLConnection\0", "getCertificates\0", "()[Ljava/security/cert/Certificate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // /// **get** protected [jarFileURLConnection](https://developer.android.com/reference/java/net/JarURLConnection.html#jarFileURLConnection)
        // ///
        // /// Required feature: java-net-URLConnection
        // #[cfg(any(feature = "all", feature = "java-net-URLConnection"))]
        // pub fn jarFileURLConnection<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::URLConnection>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/JarURLConnection\0", "jarFileURLConnection\0", "Ljava/net/URLConnection;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [jarFileURLConnection](https://developer.android.com/reference/java/net/JarURLConnection.html#jarFileURLConnection)
        // ///
        // /// Required feature: java-net-URLConnection
        // #[cfg(any(feature = "all", feature = "java-net-URLConnection"))]
        // pub fn set_jarFileURLConnection<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::net::URLConnection>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/net/JarURLConnection\0", "jarFileURLConnection\0", "Ljava/net/URLConnection;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
