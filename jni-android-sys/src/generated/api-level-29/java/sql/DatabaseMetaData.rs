// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-sql-DatabaseMetaData"))]
__jni_bindgen! {
    /// public interface [DatabaseMetaData](https://developer.android.com/reference/java/sql/DatabaseMetaData.html)
    ///
    /// Required feature: java-sql-DatabaseMetaData
    public interface DatabaseMetaData ("java/sql/DatabaseMetaData") extends crate::java::lang::Object, implements crate::java::sql::Wrapper {

        /// [allProceduresAreCallable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#allProceduresAreCallable())
        pub fn allProceduresAreCallable<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "allProceduresAreCallable", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "allProceduresAreCallable\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [allTablesAreSelectable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#allTablesAreSelectable())
        pub fn allTablesAreSelectable<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "allTablesAreSelectable", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "allTablesAreSelectable\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getURL](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getURL())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getURL<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getURL", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getURL\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUserName](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getUserName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getUserName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getUserName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getUserName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isReadOnly](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#isReadOnly())
        pub fn isReadOnly<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "isReadOnly", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "isReadOnly\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [nullsAreSortedHigh](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#nullsAreSortedHigh())
        pub fn nullsAreSortedHigh<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "nullsAreSortedHigh", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "nullsAreSortedHigh\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [nullsAreSortedLow](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#nullsAreSortedLow())
        pub fn nullsAreSortedLow<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "nullsAreSortedLow", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "nullsAreSortedLow\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [nullsAreSortedAtStart](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#nullsAreSortedAtStart())
        pub fn nullsAreSortedAtStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "nullsAreSortedAtStart", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "nullsAreSortedAtStart\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [nullsAreSortedAtEnd](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#nullsAreSortedAtEnd())
        pub fn nullsAreSortedAtEnd<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "nullsAreSortedAtEnd", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "nullsAreSortedAtEnd\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDatabaseProductName](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDatabaseProductName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDatabaseProductName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDatabaseProductName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDatabaseProductName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDatabaseProductVersion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDatabaseProductVersion())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDatabaseProductVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDatabaseProductVersion", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDatabaseProductVersion\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDriverName](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDriverName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDriverName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDriverName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDriverName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDriverVersion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDriverVersion())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDriverVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDriverVersion", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDriverVersion\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDriverMajorVersion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDriverMajorVersion())
        pub fn getDriverMajorVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDriverMajorVersion", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDriverMajorVersion\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDriverMinorVersion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDriverMinorVersion())
        pub fn getDriverMinorVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDriverMinorVersion", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDriverMinorVersion\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [usesLocalFiles](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#usesLocalFiles())
        pub fn usesLocalFiles<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "usesLocalFiles", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "usesLocalFiles\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [usesLocalFilePerTable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#usesLocalFilePerTable())
        pub fn usesLocalFilePerTable<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "usesLocalFilePerTable", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "usesLocalFilePerTable\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsMixedCaseIdentifiers](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsMixedCaseIdentifiers())
        pub fn supportsMixedCaseIdentifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsMixedCaseIdentifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsMixedCaseIdentifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [storesUpperCaseIdentifiers](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#storesUpperCaseIdentifiers())
        pub fn storesUpperCaseIdentifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "storesUpperCaseIdentifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "storesUpperCaseIdentifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [storesLowerCaseIdentifiers](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#storesLowerCaseIdentifiers())
        pub fn storesLowerCaseIdentifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "storesLowerCaseIdentifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "storesLowerCaseIdentifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [storesMixedCaseIdentifiers](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#storesMixedCaseIdentifiers())
        pub fn storesMixedCaseIdentifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "storesMixedCaseIdentifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "storesMixedCaseIdentifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsMixedCaseQuotedIdentifiers](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsMixedCaseQuotedIdentifiers())
        pub fn supportsMixedCaseQuotedIdentifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsMixedCaseQuotedIdentifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsMixedCaseQuotedIdentifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [storesUpperCaseQuotedIdentifiers](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#storesUpperCaseQuotedIdentifiers())
        pub fn storesUpperCaseQuotedIdentifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "storesUpperCaseQuotedIdentifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "storesUpperCaseQuotedIdentifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [storesLowerCaseQuotedIdentifiers](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#storesLowerCaseQuotedIdentifiers())
        pub fn storesLowerCaseQuotedIdentifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "storesLowerCaseQuotedIdentifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "storesLowerCaseQuotedIdentifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [storesMixedCaseQuotedIdentifiers](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#storesMixedCaseQuotedIdentifiers())
        pub fn storesMixedCaseQuotedIdentifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "storesMixedCaseQuotedIdentifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "storesMixedCaseQuotedIdentifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIdentifierQuoteString](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getIdentifierQuoteString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getIdentifierQuoteString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getIdentifierQuoteString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getIdentifierQuoteString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSQLKeywords](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSQLKeywords())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getSQLKeywords<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSQLKeywords", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSQLKeywords\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNumericFunctions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getNumericFunctions())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getNumericFunctions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getNumericFunctions", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getNumericFunctions\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStringFunctions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getStringFunctions())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getStringFunctions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getStringFunctions", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getStringFunctions\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSystemFunctions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSystemFunctions())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getSystemFunctions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSystemFunctions", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSystemFunctions\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeDateFunctions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getTimeDateFunctions())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getTimeDateFunctions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getTimeDateFunctions", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getTimeDateFunctions\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSearchStringEscape](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSearchStringEscape())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getSearchStringEscape<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSearchStringEscape", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSearchStringEscape\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtraNameCharacters](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getExtraNameCharacters())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getExtraNameCharacters<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getExtraNameCharacters", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getExtraNameCharacters\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsAlterTableWithAddColumn](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsAlterTableWithAddColumn())
        pub fn supportsAlterTableWithAddColumn<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsAlterTableWithAddColumn", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsAlterTableWithAddColumn\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsAlterTableWithDropColumn](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsAlterTableWithDropColumn())
        pub fn supportsAlterTableWithDropColumn<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsAlterTableWithDropColumn", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsAlterTableWithDropColumn\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsColumnAliasing](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsColumnAliasing())
        pub fn supportsColumnAliasing<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsColumnAliasing", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsColumnAliasing\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [nullPlusNonNullIsNull](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#nullPlusNonNullIsNull())
        pub fn nullPlusNonNullIsNull<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "nullPlusNonNullIsNull", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "nullPlusNonNullIsNull\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsConvert](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsConvert())
        pub fn supportsConvert<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsConvert", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsConvert\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsConvert](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsConvert(int,%20int))
        pub fn supportsConvert_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsConvert", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsConvert\0", "(II)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsTableCorrelationNames](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsTableCorrelationNames())
        pub fn supportsTableCorrelationNames<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsTableCorrelationNames", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsTableCorrelationNames\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsDifferentTableCorrelationNames](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsDifferentTableCorrelationNames())
        pub fn supportsDifferentTableCorrelationNames<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsDifferentTableCorrelationNames", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsDifferentTableCorrelationNames\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsExpressionsInOrderBy](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsExpressionsInOrderBy())
        pub fn supportsExpressionsInOrderBy<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsExpressionsInOrderBy", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsExpressionsInOrderBy\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsOrderByUnrelated](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsOrderByUnrelated())
        pub fn supportsOrderByUnrelated<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsOrderByUnrelated", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsOrderByUnrelated\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsGroupBy](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsGroupBy())
        pub fn supportsGroupBy<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsGroupBy", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsGroupBy\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsGroupByUnrelated](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsGroupByUnrelated())
        pub fn supportsGroupByUnrelated<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsGroupByUnrelated", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsGroupByUnrelated\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsGroupByBeyondSelect](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsGroupByBeyondSelect())
        pub fn supportsGroupByBeyondSelect<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsGroupByBeyondSelect", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsGroupByBeyondSelect\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsLikeEscapeClause](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsLikeEscapeClause())
        pub fn supportsLikeEscapeClause<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsLikeEscapeClause", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsLikeEscapeClause\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsMultipleResultSets](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsMultipleResultSets())
        pub fn supportsMultipleResultSets<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsMultipleResultSets", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsMultipleResultSets\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsMultipleTransactions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsMultipleTransactions())
        pub fn supportsMultipleTransactions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsMultipleTransactions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsMultipleTransactions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsNonNullableColumns](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsNonNullableColumns())
        pub fn supportsNonNullableColumns<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsNonNullableColumns", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsNonNullableColumns\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsMinimumSQLGrammar](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsMinimumSQLGrammar())
        pub fn supportsMinimumSQLGrammar<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsMinimumSQLGrammar", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsMinimumSQLGrammar\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsCoreSQLGrammar](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsCoreSQLGrammar())
        pub fn supportsCoreSQLGrammar<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsCoreSQLGrammar", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsCoreSQLGrammar\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsExtendedSQLGrammar](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsExtendedSQLGrammar())
        pub fn supportsExtendedSQLGrammar<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsExtendedSQLGrammar", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsExtendedSQLGrammar\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsANSI92EntryLevelSQL](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsANSI92EntryLevelSQL())
        pub fn supportsANSI92EntryLevelSQL<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsANSI92EntryLevelSQL", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsANSI92EntryLevelSQL\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsANSI92IntermediateSQL](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsANSI92IntermediateSQL())
        pub fn supportsANSI92IntermediateSQL<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsANSI92IntermediateSQL", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsANSI92IntermediateSQL\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsANSI92FullSQL](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsANSI92FullSQL())
        pub fn supportsANSI92FullSQL<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsANSI92FullSQL", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsANSI92FullSQL\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsIntegrityEnhancementFacility](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsIntegrityEnhancementFacility())
        pub fn supportsIntegrityEnhancementFacility<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsIntegrityEnhancementFacility", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsIntegrityEnhancementFacility\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsOuterJoins](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsOuterJoins())
        pub fn supportsOuterJoins<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsOuterJoins", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsOuterJoins\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsFullOuterJoins](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsFullOuterJoins())
        pub fn supportsFullOuterJoins<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsFullOuterJoins", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsFullOuterJoins\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsLimitedOuterJoins](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsLimitedOuterJoins())
        pub fn supportsLimitedOuterJoins<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsLimitedOuterJoins", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsLimitedOuterJoins\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSchemaTerm](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSchemaTerm())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getSchemaTerm<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSchemaTerm", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSchemaTerm\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProcedureTerm](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getProcedureTerm())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getProcedureTerm<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getProcedureTerm", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getProcedureTerm\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCatalogTerm](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getCatalogTerm())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCatalogTerm<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getCatalogTerm", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getCatalogTerm\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isCatalogAtStart](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#isCatalogAtStart())
        pub fn isCatalogAtStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "isCatalogAtStart", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "isCatalogAtStart\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCatalogSeparator](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getCatalogSeparator())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCatalogSeparator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getCatalogSeparator", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getCatalogSeparator\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSchemasInDataManipulation](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSchemasInDataManipulation())
        pub fn supportsSchemasInDataManipulation<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSchemasInDataManipulation", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSchemasInDataManipulation\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSchemasInProcedureCalls](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSchemasInProcedureCalls())
        pub fn supportsSchemasInProcedureCalls<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSchemasInProcedureCalls", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSchemasInProcedureCalls\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSchemasInTableDefinitions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSchemasInTableDefinitions())
        pub fn supportsSchemasInTableDefinitions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSchemasInTableDefinitions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSchemasInTableDefinitions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSchemasInIndexDefinitions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSchemasInIndexDefinitions())
        pub fn supportsSchemasInIndexDefinitions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSchemasInIndexDefinitions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSchemasInIndexDefinitions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSchemasInPrivilegeDefinitions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSchemasInPrivilegeDefinitions())
        pub fn supportsSchemasInPrivilegeDefinitions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSchemasInPrivilegeDefinitions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSchemasInPrivilegeDefinitions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsCatalogsInDataManipulation](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsCatalogsInDataManipulation())
        pub fn supportsCatalogsInDataManipulation<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsCatalogsInDataManipulation", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsCatalogsInDataManipulation\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsCatalogsInProcedureCalls](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsCatalogsInProcedureCalls())
        pub fn supportsCatalogsInProcedureCalls<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsCatalogsInProcedureCalls", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsCatalogsInProcedureCalls\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsCatalogsInTableDefinitions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsCatalogsInTableDefinitions())
        pub fn supportsCatalogsInTableDefinitions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsCatalogsInTableDefinitions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsCatalogsInTableDefinitions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsCatalogsInIndexDefinitions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsCatalogsInIndexDefinitions())
        pub fn supportsCatalogsInIndexDefinitions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsCatalogsInIndexDefinitions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsCatalogsInIndexDefinitions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsCatalogsInPrivilegeDefinitions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsCatalogsInPrivilegeDefinitions())
        pub fn supportsCatalogsInPrivilegeDefinitions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsCatalogsInPrivilegeDefinitions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsCatalogsInPrivilegeDefinitions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsPositionedDelete](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsPositionedDelete())
        pub fn supportsPositionedDelete<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsPositionedDelete", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsPositionedDelete\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsPositionedUpdate](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsPositionedUpdate())
        pub fn supportsPositionedUpdate<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsPositionedUpdate", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsPositionedUpdate\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSelectForUpdate](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSelectForUpdate())
        pub fn supportsSelectForUpdate<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSelectForUpdate", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSelectForUpdate\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsStoredProcedures](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsStoredProcedures())
        pub fn supportsStoredProcedures<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsStoredProcedures", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsStoredProcedures\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSubqueriesInComparisons](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSubqueriesInComparisons())
        pub fn supportsSubqueriesInComparisons<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSubqueriesInComparisons", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSubqueriesInComparisons\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSubqueriesInExists](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSubqueriesInExists())
        pub fn supportsSubqueriesInExists<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSubqueriesInExists", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSubqueriesInExists\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSubqueriesInIns](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSubqueriesInIns())
        pub fn supportsSubqueriesInIns<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSubqueriesInIns", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSubqueriesInIns\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSubqueriesInQuantifieds](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSubqueriesInQuantifieds())
        pub fn supportsSubqueriesInQuantifieds<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSubqueriesInQuantifieds", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSubqueriesInQuantifieds\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsCorrelatedSubqueries](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsCorrelatedSubqueries())
        pub fn supportsCorrelatedSubqueries<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsCorrelatedSubqueries", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsCorrelatedSubqueries\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsUnion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsUnion())
        pub fn supportsUnion<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsUnion", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsUnion\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsUnionAll](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsUnionAll())
        pub fn supportsUnionAll<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsUnionAll", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsUnionAll\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsOpenCursorsAcrossCommit](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsOpenCursorsAcrossCommit())
        pub fn supportsOpenCursorsAcrossCommit<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsOpenCursorsAcrossCommit", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsOpenCursorsAcrossCommit\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsOpenCursorsAcrossRollback](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsOpenCursorsAcrossRollback())
        pub fn supportsOpenCursorsAcrossRollback<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsOpenCursorsAcrossRollback", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsOpenCursorsAcrossRollback\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsOpenStatementsAcrossCommit](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsOpenStatementsAcrossCommit())
        pub fn supportsOpenStatementsAcrossCommit<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsOpenStatementsAcrossCommit", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsOpenStatementsAcrossCommit\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsOpenStatementsAcrossRollback](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsOpenStatementsAcrossRollback())
        pub fn supportsOpenStatementsAcrossRollback<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsOpenStatementsAcrossRollback", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsOpenStatementsAcrossRollback\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxBinaryLiteralLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxBinaryLiteralLength())
        pub fn getMaxBinaryLiteralLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxBinaryLiteralLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxBinaryLiteralLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxCharLiteralLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxCharLiteralLength())
        pub fn getMaxCharLiteralLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxCharLiteralLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxCharLiteralLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxColumnNameLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxColumnNameLength())
        pub fn getMaxColumnNameLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxColumnNameLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxColumnNameLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxColumnsInGroupBy](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxColumnsInGroupBy())
        pub fn getMaxColumnsInGroupBy<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxColumnsInGroupBy", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxColumnsInGroupBy\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxColumnsInIndex](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxColumnsInIndex())
        pub fn getMaxColumnsInIndex<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxColumnsInIndex", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxColumnsInIndex\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxColumnsInOrderBy](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxColumnsInOrderBy())
        pub fn getMaxColumnsInOrderBy<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxColumnsInOrderBy", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxColumnsInOrderBy\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxColumnsInSelect](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxColumnsInSelect())
        pub fn getMaxColumnsInSelect<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxColumnsInSelect", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxColumnsInSelect\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxColumnsInTable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxColumnsInTable())
        pub fn getMaxColumnsInTable<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxColumnsInTable", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxColumnsInTable\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxConnections](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxConnections())
        pub fn getMaxConnections<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxConnections", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxConnections\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxCursorNameLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxCursorNameLength())
        pub fn getMaxCursorNameLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxCursorNameLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxCursorNameLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxIndexLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxIndexLength())
        pub fn getMaxIndexLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxIndexLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxIndexLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxSchemaNameLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxSchemaNameLength())
        pub fn getMaxSchemaNameLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxSchemaNameLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxSchemaNameLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxProcedureNameLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxProcedureNameLength())
        pub fn getMaxProcedureNameLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxProcedureNameLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxProcedureNameLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxCatalogNameLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxCatalogNameLength())
        pub fn getMaxCatalogNameLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxCatalogNameLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxCatalogNameLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxRowSize](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxRowSize())
        pub fn getMaxRowSize<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxRowSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxRowSize\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [doesMaxRowSizeIncludeBlobs](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#doesMaxRowSizeIncludeBlobs())
        pub fn doesMaxRowSizeIncludeBlobs<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "doesMaxRowSizeIncludeBlobs", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "doesMaxRowSizeIncludeBlobs\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxStatementLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxStatementLength())
        pub fn getMaxStatementLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxStatementLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxStatementLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxStatements](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxStatements())
        pub fn getMaxStatements<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxStatements", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxStatements\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxTableNameLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxTableNameLength())
        pub fn getMaxTableNameLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxTableNameLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxTableNameLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxTablesInSelect](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxTablesInSelect())
        pub fn getMaxTablesInSelect<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxTablesInSelect", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxTablesInSelect\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxUserNameLength](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getMaxUserNameLength())
        pub fn getMaxUserNameLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getMaxUserNameLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getMaxUserNameLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultTransactionIsolation](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDefaultTransactionIsolation())
        pub fn getDefaultTransactionIsolation<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDefaultTransactionIsolation", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDefaultTransactionIsolation\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsTransactions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsTransactions())
        pub fn supportsTransactions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsTransactions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsTransactions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsTransactionIsolationLevel](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsTransactionIsolationLevel(int))
        pub fn supportsTransactionIsolationLevel<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsTransactionIsolationLevel", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsTransactionIsolationLevel\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsDataDefinitionAndDataManipulationTransactions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsDataDefinitionAndDataManipulationTransactions())
        pub fn supportsDataDefinitionAndDataManipulationTransactions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsDataDefinitionAndDataManipulationTransactions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsDataDefinitionAndDataManipulationTransactions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsDataManipulationTransactionsOnly](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsDataManipulationTransactionsOnly())
        pub fn supportsDataManipulationTransactionsOnly<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsDataManipulationTransactionsOnly", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsDataManipulationTransactionsOnly\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dataDefinitionCausesTransactionCommit](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#dataDefinitionCausesTransactionCommit())
        pub fn dataDefinitionCausesTransactionCommit<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "dataDefinitionCausesTransactionCommit", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "dataDefinitionCausesTransactionCommit\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dataDefinitionIgnoredInTransactions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#dataDefinitionIgnoredInTransactions())
        pub fn dataDefinitionIgnoredInTransactions<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "dataDefinitionIgnoredInTransactions", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "dataDefinitionIgnoredInTransactions\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProcedures](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getProcedures(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getProcedures<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getProcedures", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getProcedures\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProcedureColumns](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getProcedureColumns(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getProcedureColumns<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getProcedureColumns", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getProcedureColumns\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTables](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getTables(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String%5B%5D))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getTables<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getTables", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getTables\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSchemas](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSchemas())
        ///
        /// Required features: "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-sql-ResultSet")))]
        pub fn getSchemas<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSchemas", .descriptor == "()Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSchemas\0", "()Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCatalogs](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getCatalogs())
        ///
        /// Required features: "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-sql-ResultSet")))]
        pub fn getCatalogs<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getCatalogs", .descriptor == "()Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getCatalogs\0", "()Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTableTypes](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getTableTypes())
        ///
        /// Required features: "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-sql-ResultSet")))]
        pub fn getTableTypes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getTableTypes", .descriptor == "()Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getTableTypes\0", "()Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getColumns](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getColumns(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getColumns<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getColumns", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getColumns\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getColumnPrivileges](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getColumnPrivileges(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getColumnPrivileges<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getColumnPrivileges", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getColumnPrivileges\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTablePrivileges](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getTablePrivileges(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getTablePrivileges<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getTablePrivileges", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getTablePrivileges\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBestRowIdentifier](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getBestRowIdentifier(java.lang.String,%20java.lang.String,%20java.lang.String,%20int,%20boolean))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getBestRowIdentifier<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: i32, arg4: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getBestRowIdentifier", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getBestRowIdentifier\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getVersionColumns](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getVersionColumns(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getVersionColumns<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getVersionColumns", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getVersionColumns\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPrimaryKeys](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getPrimaryKeys(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getPrimaryKeys<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getPrimaryKeys", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getPrimaryKeys\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getImportedKeys](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getImportedKeys(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getImportedKeys<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getImportedKeys", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getImportedKeys\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExportedKeys](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getExportedKeys(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getExportedKeys<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getExportedKeys", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getExportedKeys\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCrossReference](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getCrossReference(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getCrossReference<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getCrossReference", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getCrossReference\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTypeInfo](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getTypeInfo())
        ///
        /// Required features: "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-sql-ResultSet")))]
        pub fn getTypeInfo<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getTypeInfo", .descriptor == "()Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getTypeInfo\0", "()Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIndexInfo](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getIndexInfo(java.lang.String,%20java.lang.String,%20java.lang.String,%20boolean,%20boolean))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getIndexInfo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: bool, arg4: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getIndexInfo", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getIndexInfo\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsResultSetType](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsResultSetType(int))
        pub fn supportsResultSetType<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsResultSetType", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsResultSetType\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsResultSetConcurrency](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsResultSetConcurrency(int,%20int))
        pub fn supportsResultSetConcurrency<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsResultSetConcurrency", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsResultSetConcurrency\0", "(II)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ownUpdatesAreVisible](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#ownUpdatesAreVisible(int))
        pub fn ownUpdatesAreVisible<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "ownUpdatesAreVisible", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "ownUpdatesAreVisible\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ownDeletesAreVisible](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#ownDeletesAreVisible(int))
        pub fn ownDeletesAreVisible<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "ownDeletesAreVisible", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "ownDeletesAreVisible\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ownInsertsAreVisible](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#ownInsertsAreVisible(int))
        pub fn ownInsertsAreVisible<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "ownInsertsAreVisible", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "ownInsertsAreVisible\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [othersUpdatesAreVisible](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#othersUpdatesAreVisible(int))
        pub fn othersUpdatesAreVisible<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "othersUpdatesAreVisible", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "othersUpdatesAreVisible\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [othersDeletesAreVisible](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#othersDeletesAreVisible(int))
        pub fn othersDeletesAreVisible<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "othersDeletesAreVisible", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "othersDeletesAreVisible\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [othersInsertsAreVisible](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#othersInsertsAreVisible(int))
        pub fn othersInsertsAreVisible<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "othersInsertsAreVisible", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "othersInsertsAreVisible\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [updatesAreDetected](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#updatesAreDetected(int))
        pub fn updatesAreDetected<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "updatesAreDetected", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "updatesAreDetected\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [deletesAreDetected](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#deletesAreDetected(int))
        pub fn deletesAreDetected<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "deletesAreDetected", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "deletesAreDetected\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [insertsAreDetected](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#insertsAreDetected(int))
        pub fn insertsAreDetected<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "insertsAreDetected", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "insertsAreDetected\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsBatchUpdates](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsBatchUpdates())
        pub fn supportsBatchUpdates<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsBatchUpdates", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsBatchUpdates\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUDTs](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getUDTs(java.lang.String,%20java.lang.String,%20java.lang.String,%20int%5B%5D))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getUDTs<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getUDTs", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getUDTs\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getConnection](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getConnection())
        ///
        /// Required features: "java-sql-Connection"
        #[cfg(any(feature = "all", all(feature = "java-sql-Connection")))]
        pub fn getConnection<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Connection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getConnection", .descriptor == "()Ljava/sql/Connection;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getConnection\0", "()Ljava/sql/Connection;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsSavepoints](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsSavepoints())
        pub fn supportsSavepoints<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsSavepoints", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsSavepoints\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsNamedParameters](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsNamedParameters())
        pub fn supportsNamedParameters<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsNamedParameters", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsNamedParameters\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsMultipleOpenResults](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsMultipleOpenResults())
        pub fn supportsMultipleOpenResults<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsMultipleOpenResults", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsMultipleOpenResults\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsGetGeneratedKeys](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsGetGeneratedKeys())
        pub fn supportsGetGeneratedKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsGetGeneratedKeys", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsGetGeneratedKeys\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSuperTypes](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSuperTypes(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getSuperTypes<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSuperTypes", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSuperTypes\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSuperTables](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSuperTables(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getSuperTables<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSuperTables", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSuperTables\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAttributes](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getAttributes(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getAttributes<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getAttributes", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getAttributes\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsResultSetHoldability](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsResultSetHoldability(int))
        pub fn supportsResultSetHoldability<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsResultSetHoldability", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsResultSetHoldability\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getResultSetHoldability](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getResultSetHoldability())
        pub fn getResultSetHoldability<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getResultSetHoldability", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getResultSetHoldability\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDatabaseMajorVersion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDatabaseMajorVersion())
        pub fn getDatabaseMajorVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDatabaseMajorVersion", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDatabaseMajorVersion\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDatabaseMinorVersion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getDatabaseMinorVersion())
        pub fn getDatabaseMinorVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getDatabaseMinorVersion", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getDatabaseMinorVersion\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getJDBCMajorVersion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getJDBCMajorVersion())
        pub fn getJDBCMajorVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getJDBCMajorVersion", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getJDBCMajorVersion\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getJDBCMinorVersion](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getJDBCMinorVersion())
        pub fn getJDBCMinorVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getJDBCMinorVersion", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getJDBCMinorVersion\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSQLStateType](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSQLStateType())
        pub fn getSQLStateType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSQLStateType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSQLStateType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [locatorsUpdateCopy](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#locatorsUpdateCopy())
        pub fn locatorsUpdateCopy<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "locatorsUpdateCopy", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "locatorsUpdateCopy\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsStatementPooling](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsStatementPooling())
        pub fn supportsStatementPooling<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsStatementPooling", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsStatementPooling\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRowIdLifetime](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getRowIdLifetime())
        ///
        /// Required features: "java-sql-RowIdLifetime"
        #[cfg(any(feature = "all", all(feature = "java-sql-RowIdLifetime")))]
        pub fn getRowIdLifetime<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::RowIdLifetime>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getRowIdLifetime", .descriptor == "()Ljava/sql/RowIdLifetime;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getRowIdLifetime\0", "()Ljava/sql/RowIdLifetime;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSchemas](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getSchemas(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getSchemas_String_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getSchemas", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getSchemas\0", "(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsStoredFunctionsUsingCallSyntax](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#supportsStoredFunctionsUsingCallSyntax())
        pub fn supportsStoredFunctionsUsingCallSyntax<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "supportsStoredFunctionsUsingCallSyntax", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "supportsStoredFunctionsUsingCallSyntax\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [autoCommitFailureClosesAllResultSets](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#autoCommitFailureClosesAllResultSets())
        pub fn autoCommitFailureClosesAllResultSets<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "autoCommitFailureClosesAllResultSets", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "autoCommitFailureClosesAllResultSets\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getClientInfoProperties](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getClientInfoProperties())
        ///
        /// Required features: "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-sql-ResultSet")))]
        pub fn getClientInfoProperties<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getClientInfoProperties", .descriptor == "()Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getClientInfoProperties\0", "()Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFunctions](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getFunctions(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getFunctions<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getFunctions", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getFunctions\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFunctionColumns](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#getFunctionColumns(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-ResultSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-ResultSet")))]
        pub fn getFunctionColumns<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::ResultSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/DatabaseMetaData", java.flags == PUBLIC | ABSTRACT, .name == "getFunctionColumns", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/DatabaseMetaData\0", "getFunctionColumns\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [attributeNoNulls](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#attributeNoNulls)
        pub const attributeNoNulls : i16 = 0;

        /// public static final [attributeNullable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#attributeNullable)
        pub const attributeNullable : i16 = 1;

        /// public static final [attributeNullableUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#attributeNullableUnknown)
        pub const attributeNullableUnknown : i16 = 2;

        /// public static final [bestRowNotPseudo](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#bestRowNotPseudo)
        pub const bestRowNotPseudo : i32 = 1;

        /// public static final [bestRowPseudo](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#bestRowPseudo)
        pub const bestRowPseudo : i32 = 2;

        /// public static final [bestRowSession](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#bestRowSession)
        pub const bestRowSession : i32 = 2;

        /// public static final [bestRowTemporary](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#bestRowTemporary)
        pub const bestRowTemporary : i32 = 0;

        /// public static final [bestRowTransaction](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#bestRowTransaction)
        pub const bestRowTransaction : i32 = 1;

        /// public static final [bestRowUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#bestRowUnknown)
        pub const bestRowUnknown : i32 = 0;

        /// public static final [columnNoNulls](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#columnNoNulls)
        pub const columnNoNulls : i32 = 0;

        /// public static final [columnNullable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#columnNullable)
        pub const columnNullable : i32 = 1;

        /// public static final [columnNullableUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#columnNullableUnknown)
        pub const columnNullableUnknown : i32 = 2;

        /// public static final [functionColumnIn](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionColumnIn)
        pub const functionColumnIn : i32 = 1;

        /// public static final [functionColumnInOut](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionColumnInOut)
        pub const functionColumnInOut : i32 = 2;

        /// public static final [functionColumnOut](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionColumnOut)
        pub const functionColumnOut : i32 = 3;

        /// public static final [functionColumnResult](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionColumnResult)
        pub const functionColumnResult : i32 = 5;

        /// public static final [functionColumnUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionColumnUnknown)
        pub const functionColumnUnknown : i32 = 0;

        /// public static final [functionNoNulls](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionNoNulls)
        pub const functionNoNulls : i32 = 0;

        /// public static final [functionNoTable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionNoTable)
        pub const functionNoTable : i32 = 1;

        /// public static final [functionNullable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionNullable)
        pub const functionNullable : i32 = 1;

        /// public static final [functionNullableUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionNullableUnknown)
        pub const functionNullableUnknown : i32 = 2;

        /// public static final [functionResultUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionResultUnknown)
        pub const functionResultUnknown : i32 = 0;

        /// public static final [functionReturn](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionReturn)
        pub const functionReturn : i32 = 4;

        /// public static final [functionReturnsTable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#functionReturnsTable)
        pub const functionReturnsTable : i32 = 2;

        /// public static final [importedKeyCascade](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#importedKeyCascade)
        pub const importedKeyCascade : i32 = 0;

        /// public static final [importedKeyInitiallyDeferred](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#importedKeyInitiallyDeferred)
        pub const importedKeyInitiallyDeferred : i32 = 5;

        /// public static final [importedKeyInitiallyImmediate](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#importedKeyInitiallyImmediate)
        pub const importedKeyInitiallyImmediate : i32 = 6;

        /// public static final [importedKeyNoAction](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#importedKeyNoAction)
        pub const importedKeyNoAction : i32 = 3;

        /// public static final [importedKeyNotDeferrable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#importedKeyNotDeferrable)
        pub const importedKeyNotDeferrable : i32 = 7;

        /// public static final [importedKeyRestrict](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#importedKeyRestrict)
        pub const importedKeyRestrict : i32 = 1;

        /// public static final [importedKeySetDefault](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#importedKeySetDefault)
        pub const importedKeySetDefault : i32 = 4;

        /// public static final [importedKeySetNull](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#importedKeySetNull)
        pub const importedKeySetNull : i32 = 2;

        /// public static final [procedureColumnIn](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureColumnIn)
        pub const procedureColumnIn : i32 = 1;

        /// public static final [procedureColumnInOut](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureColumnInOut)
        pub const procedureColumnInOut : i32 = 2;

        /// public static final [procedureColumnOut](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureColumnOut)
        pub const procedureColumnOut : i32 = 4;

        /// public static final [procedureColumnResult](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureColumnResult)
        pub const procedureColumnResult : i32 = 3;

        /// public static final [procedureColumnReturn](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureColumnReturn)
        pub const procedureColumnReturn : i32 = 5;

        /// public static final [procedureColumnUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureColumnUnknown)
        pub const procedureColumnUnknown : i32 = 0;

        /// public static final [procedureNoNulls](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureNoNulls)
        pub const procedureNoNulls : i32 = 0;

        /// public static final [procedureNoResult](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureNoResult)
        pub const procedureNoResult : i32 = 1;

        /// public static final [procedureNullable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureNullable)
        pub const procedureNullable : i32 = 1;

        /// public static final [procedureNullableUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureNullableUnknown)
        pub const procedureNullableUnknown : i32 = 2;

        /// public static final [procedureResultUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureResultUnknown)
        pub const procedureResultUnknown : i32 = 0;

        /// public static final [procedureReturnsResult](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#procedureReturnsResult)
        pub const procedureReturnsResult : i32 = 2;

        /// public static final [sqlStateSQL](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#sqlStateSQL)
        pub const sqlStateSQL : i32 = 2;

        /// public static final [sqlStateSQL99](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#sqlStateSQL99)
        pub const sqlStateSQL99 : i32 = 2;

        /// public static final [sqlStateXOpen](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#sqlStateXOpen)
        pub const sqlStateXOpen : i32 = 1;

        /// public static final [tableIndexClustered](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#tableIndexClustered)
        pub const tableIndexClustered : i16 = 1;

        /// public static final [tableIndexHashed](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#tableIndexHashed)
        pub const tableIndexHashed : i16 = 2;

        /// public static final [tableIndexOther](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#tableIndexOther)
        pub const tableIndexOther : i16 = 3;

        /// public static final [tableIndexStatistic](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#tableIndexStatistic)
        pub const tableIndexStatistic : i16 = 0;

        /// public static final [typeNoNulls](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#typeNoNulls)
        pub const typeNoNulls : i32 = 0;

        /// public static final [typeNullable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#typeNullable)
        pub const typeNullable : i32 = 1;

        /// public static final [typeNullableUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#typeNullableUnknown)
        pub const typeNullableUnknown : i32 = 2;

        /// public static final [typePredBasic](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#typePredBasic)
        pub const typePredBasic : i32 = 2;

        /// public static final [typePredChar](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#typePredChar)
        pub const typePredChar : i32 = 1;

        /// public static final [typePredNone](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#typePredNone)
        pub const typePredNone : i32 = 0;

        /// public static final [typeSearchable](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#typeSearchable)
        pub const typeSearchable : i32 = 3;

        /// public static final [versionColumnNotPseudo](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#versionColumnNotPseudo)
        pub const versionColumnNotPseudo : i32 = 1;

        /// public static final [versionColumnPseudo](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#versionColumnPseudo)
        pub const versionColumnPseudo : i32 = 2;

        /// public static final [versionColumnUnknown](https://developer.android.com/reference/java/sql/DatabaseMetaData.html#versionColumnUnknown)
        pub const versionColumnUnknown : i32 = 0;
    }
}
