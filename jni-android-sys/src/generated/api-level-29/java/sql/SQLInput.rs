// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-sql-SQLInput"))]
__jni_bindgen! {
    /// public interface [SQLInput](https://developer.android.com/reference/java/sql/SQLInput.html)
    ///
    /// Required feature: java-sql-SQLInput
    public interface SQLInput ("java/sql/SQLInput") extends crate::java::lang::Object {

        /// [readString](https://developer.android.com/reference/java/sql/SQLInput.html#readString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn readString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readBoolean](https://developer.android.com/reference/java/sql/SQLInput.html#readBoolean())
        pub fn readBoolean<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readBoolean", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readBoolean\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readByte](https://developer.android.com/reference/java/sql/SQLInput.html#readByte())
        pub fn readByte<'env>(&'env self) -> __jni_bindgen::std::result::Result<i8, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readByte", .descriptor == "()B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readByte\0", "()B\0");
                __jni_env.call_byte_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readShort](https://developer.android.com/reference/java/sql/SQLInput.html#readShort())
        pub fn readShort<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readShort", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readShort\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readInt](https://developer.android.com/reference/java/sql/SQLInput.html#readInt())
        pub fn readInt<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readInt", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readInt\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readLong](https://developer.android.com/reference/java/sql/SQLInput.html#readLong())
        pub fn readLong<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readLong", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readLong\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readFloat](https://developer.android.com/reference/java/sql/SQLInput.html#readFloat())
        pub fn readFloat<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readFloat", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readFloat\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readDouble](https://developer.android.com/reference/java/sql/SQLInput.html#readDouble())
        pub fn readDouble<'env>(&'env self) -> __jni_bindgen::std::result::Result<f64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readDouble", .descriptor == "()D"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readDouble\0", "()D\0");
                __jni_env.call_double_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readBigDecimal](https://developer.android.com/reference/java/sql/SQLInput.html#readBigDecimal())
        ///
        /// Required features: "java-math-BigDecimal"
        #[cfg(any(feature = "all", all(feature = "java-math-BigDecimal")))]
        pub fn readBigDecimal<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::math::BigDecimal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readBigDecimal", .descriptor == "()Ljava/math/BigDecimal;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readBigDecimal\0", "()Ljava/math/BigDecimal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readBytes](https://developer.android.com/reference/java/sql/SQLInput.html#readBytes())
        pub fn readBytes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readBytes", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readBytes\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readDate](https://developer.android.com/reference/java/sql/SQLInput.html#readDate())
        ///
        /// Required features: "java-sql-Date"
        #[cfg(any(feature = "all", all(feature = "java-sql-Date")))]
        pub fn readDate<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readDate", .descriptor == "()Ljava/sql/Date;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readDate\0", "()Ljava/sql/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readTime](https://developer.android.com/reference/java/sql/SQLInput.html#readTime())
        ///
        /// Required features: "java-sql-Time"
        #[cfg(any(feature = "all", all(feature = "java-sql-Time")))]
        pub fn readTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Time>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readTime", .descriptor == "()Ljava/sql/Time;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readTime\0", "()Ljava/sql/Time;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readTimestamp](https://developer.android.com/reference/java/sql/SQLInput.html#readTimestamp())
        ///
        /// Required features: "java-sql-Timestamp"
        #[cfg(any(feature = "all", all(feature = "java-sql-Timestamp")))]
        pub fn readTimestamp<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Timestamp>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readTimestamp", .descriptor == "()Ljava/sql/Timestamp;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readTimestamp\0", "()Ljava/sql/Timestamp;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readCharacterStream](https://developer.android.com/reference/java/sql/SQLInput.html#readCharacterStream())
        ///
        /// Required features: "java-io-Reader"
        #[cfg(any(feature = "all", all(feature = "java-io-Reader")))]
        pub fn readCharacterStream<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::Reader>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readCharacterStream", .descriptor == "()Ljava/io/Reader;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readCharacterStream\0", "()Ljava/io/Reader;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readAsciiStream](https://developer.android.com/reference/java/sql/SQLInput.html#readAsciiStream())
        ///
        /// Required features: "java-io-InputStream"
        #[cfg(any(feature = "all", all(feature = "java-io-InputStream")))]
        pub fn readAsciiStream<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::InputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readAsciiStream", .descriptor == "()Ljava/io/InputStream;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readAsciiStream\0", "()Ljava/io/InputStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readBinaryStream](https://developer.android.com/reference/java/sql/SQLInput.html#readBinaryStream())
        ///
        /// Required features: "java-io-InputStream"
        #[cfg(any(feature = "all", all(feature = "java-io-InputStream")))]
        pub fn readBinaryStream<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::InputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readBinaryStream", .descriptor == "()Ljava/io/InputStream;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readBinaryStream\0", "()Ljava/io/InputStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readObject](https://developer.android.com/reference/java/sql/SQLInput.html#readObject())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn readObject<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readObject", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readObject\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readRef](https://developer.android.com/reference/java/sql/SQLInput.html#readRef())
        ///
        /// Required features: "java-sql-Ref"
        #[cfg(any(feature = "all", all(feature = "java-sql-Ref")))]
        pub fn readRef<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Ref>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readRef", .descriptor == "()Ljava/sql/Ref;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readRef\0", "()Ljava/sql/Ref;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readBlob](https://developer.android.com/reference/java/sql/SQLInput.html#readBlob())
        ///
        /// Required features: "java-sql-Blob"
        #[cfg(any(feature = "all", all(feature = "java-sql-Blob")))]
        pub fn readBlob<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Blob>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readBlob", .descriptor == "()Ljava/sql/Blob;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readBlob\0", "()Ljava/sql/Blob;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readClob](https://developer.android.com/reference/java/sql/SQLInput.html#readClob())
        ///
        /// Required features: "java-sql-Clob"
        #[cfg(any(feature = "all", all(feature = "java-sql-Clob")))]
        pub fn readClob<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Clob>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readClob", .descriptor == "()Ljava/sql/Clob;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readClob\0", "()Ljava/sql/Clob;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readArray](https://developer.android.com/reference/java/sql/SQLInput.html#readArray())
        ///
        /// Required features: "java-sql-Array"
        #[cfg(any(feature = "all", all(feature = "java-sql-Array")))]
        pub fn readArray<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Array>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readArray", .descriptor == "()Ljava/sql/Array;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readArray\0", "()Ljava/sql/Array;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [wasNull](https://developer.android.com/reference/java/sql/SQLInput.html#wasNull())
        pub fn wasNull<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "wasNull", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "wasNull\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readURL](https://developer.android.com/reference/java/sql/SQLInput.html#readURL())
        ///
        /// Required features: "java-net-URL"
        #[cfg(any(feature = "all", all(feature = "java-net-URL")))]
        pub fn readURL<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::URL>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readURL", .descriptor == "()Ljava/net/URL;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readURL\0", "()Ljava/net/URL;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readNClob](https://developer.android.com/reference/java/sql/SQLInput.html#readNClob())
        ///
        /// Required features: "java-sql-NClob"
        #[cfg(any(feature = "all", all(feature = "java-sql-NClob")))]
        pub fn readNClob<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::NClob>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readNClob", .descriptor == "()Ljava/sql/NClob;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readNClob\0", "()Ljava/sql/NClob;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readNString](https://developer.android.com/reference/java/sql/SQLInput.html#readNString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn readNString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readNString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readNString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readSQLXML](https://developer.android.com/reference/java/sql/SQLInput.html#readSQLXML())
        ///
        /// Required features: "java-sql-SQLXML"
        #[cfg(any(feature = "all", all(feature = "java-sql-SQLXML")))]
        pub fn readSQLXML<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::SQLXML>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readSQLXML", .descriptor == "()Ljava/sql/SQLXML;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readSQLXML\0", "()Ljava/sql/SQLXML;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readRowId](https://developer.android.com/reference/java/sql/SQLInput.html#readRowId())
        ///
        /// Required features: "java-sql-RowId"
        #[cfg(any(feature = "all", all(feature = "java-sql-RowId")))]
        pub fn readRowId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::RowId>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/SQLInput", java.flags == PUBLIC | ABSTRACT, .name == "readRowId", .descriptor == "()Ljava/sql/RowId;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/SQLInput\0", "readRowId\0", "()Ljava/sql/RowId;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
