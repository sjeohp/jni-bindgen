// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-sql-Wrapper"))]
__jni_bindgen! {
    /// public interface [Wrapper](https://developer.android.com/reference/java/sql/Wrapper.html)
    ///
    /// Required feature: java-sql-Wrapper
    public interface Wrapper ("java/sql/Wrapper") extends crate::java::lang::Object {

        /// [unwrap](https://developer.android.com/reference/java/sql/Wrapper.html#unwrap(java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-lang-Object")))]
        pub fn unwrap<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/Wrapper", java.flags == PUBLIC | ABSTRACT, .name == "unwrap", .descriptor == "(Ljava/lang/Class;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/Wrapper\0", "unwrap\0", "(Ljava/lang/Class;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isWrapperFor](https://developer.android.com/reference/java/sql/Wrapper.html#isWrapperFor(java.lang.Class))
        ///
        /// Required features: "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class")))]
        pub fn isWrapperFor<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/sql/Wrapper", java.flags == PUBLIC | ABSTRACT, .name == "isWrapperFor", .descriptor == "(Ljava/lang/Class;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/sql/Wrapper\0", "isWrapperFor\0", "(Ljava/lang/Class;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
