// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-beans-PropertyChangeSupport"))]
__jni_bindgen! {
    /// public class [PropertyChangeSupport](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html)
    ///
    /// Required feature: java-beans-PropertyChangeSupport
    public class PropertyChangeSupport ("java/beans/PropertyChangeSupport") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        /// [PropertyChangeSupport](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#PropertyChangeSupport(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::beans::PropertyChangeSupport>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "<init>\0", "(Ljava/lang/Object;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addPropertyChangeListener](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#addPropertyChangeListener(java.beans.PropertyChangeListener))
        ///
        /// Required features: "java-beans-PropertyChangeListener"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeListener")))]
        pub fn addPropertyChangeListener_PropertyChangeListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::beans::PropertyChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "addPropertyChangeListener", .descriptor == "(Ljava/beans/PropertyChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "addPropertyChangeListener\0", "(Ljava/beans/PropertyChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removePropertyChangeListener](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#removePropertyChangeListener(java.beans.PropertyChangeListener))
        ///
        /// Required features: "java-beans-PropertyChangeListener"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeListener")))]
        pub fn removePropertyChangeListener_PropertyChangeListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::beans::PropertyChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "removePropertyChangeListener", .descriptor == "(Ljava/beans/PropertyChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "removePropertyChangeListener\0", "(Ljava/beans/PropertyChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPropertyChangeListeners](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#getPropertyChangeListeners())
        ///
        /// Required features: "java-beans-PropertyChangeListener"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeListener")))]
        pub fn getPropertyChangeListeners<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::beans::PropertyChangeListener, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "getPropertyChangeListeners", .descriptor == "()[Ljava/beans/PropertyChangeListener;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "getPropertyChangeListeners\0", "()[Ljava/beans/PropertyChangeListener;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addPropertyChangeListener](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#addPropertyChangeListener(java.lang.String,%20java.beans.PropertyChangeListener))
        ///
        /// Required features: "java-beans-PropertyChangeListener", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeListener", feature = "java-lang-String")))]
        pub fn addPropertyChangeListener_String_PropertyChangeListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::beans::PropertyChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "addPropertyChangeListener", .descriptor == "(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "addPropertyChangeListener\0", "(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removePropertyChangeListener](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#removePropertyChangeListener(java.lang.String,%20java.beans.PropertyChangeListener))
        ///
        /// Required features: "java-beans-PropertyChangeListener", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeListener", feature = "java-lang-String")))]
        pub fn removePropertyChangeListener_String_PropertyChangeListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::beans::PropertyChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "removePropertyChangeListener", .descriptor == "(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "removePropertyChangeListener\0", "(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPropertyChangeListeners](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#getPropertyChangeListeners(java.lang.String))
        ///
        /// Required features: "java-beans-PropertyChangeListener", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeListener", feature = "java-lang-String")))]
        pub fn getPropertyChangeListeners_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::beans::PropertyChangeListener, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "getPropertyChangeListeners", .descriptor == "(Ljava/lang/String;)[Ljava/beans/PropertyChangeListener;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "getPropertyChangeListeners\0", "(Ljava/lang/String;)[Ljava/beans/PropertyChangeListener;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [firePropertyChange](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#firePropertyChange(java.lang.String,%20java.lang.Object,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        pub fn firePropertyChange_String_Object_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "firePropertyChange", .descriptor == "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "firePropertyChange\0", "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [firePropertyChange](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#firePropertyChange(java.lang.String,%20int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn firePropertyChange_String_int_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "firePropertyChange", .descriptor == "(Ljava/lang/String;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "firePropertyChange\0", "(Ljava/lang/String;II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [firePropertyChange](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#firePropertyChange(java.lang.String,%20boolean,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn firePropertyChange_String_boolean_boolean<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool, arg2: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "firePropertyChange", .descriptor == "(Ljava/lang/String;ZZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "firePropertyChange\0", "(Ljava/lang/String;ZZ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [firePropertyChange](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#firePropertyChange(java.beans.PropertyChangeEvent))
        ///
        /// Required features: "java-beans-PropertyChangeEvent"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeEvent")))]
        pub fn firePropertyChange_PropertyChangeEvent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::beans::PropertyChangeEvent>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "firePropertyChange", .descriptor == "(Ljava/beans/PropertyChangeEvent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "firePropertyChange\0", "(Ljava/beans/PropertyChangeEvent;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fireIndexedPropertyChange](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#fireIndexedPropertyChange(java.lang.String,%20int,%20java.lang.Object,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        pub fn fireIndexedPropertyChange_String_int_Object_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "fireIndexedPropertyChange", .descriptor == "(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "fireIndexedPropertyChange\0", "(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fireIndexedPropertyChange](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#fireIndexedPropertyChange(java.lang.String,%20int,%20int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn fireIndexedPropertyChange_String_int_int_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "fireIndexedPropertyChange", .descriptor == "(Ljava/lang/String;III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "fireIndexedPropertyChange\0", "(Ljava/lang/String;III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fireIndexedPropertyChange](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#fireIndexedPropertyChange(java.lang.String,%20int,%20boolean,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn fireIndexedPropertyChange_String_int_boolean_boolean<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: bool, arg3: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "fireIndexedPropertyChange", .descriptor == "(Ljava/lang/String;IZZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "fireIndexedPropertyChange\0", "(Ljava/lang/String;IZZ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasListeners](https://developer.android.com/reference/java/beans/PropertyChangeSupport.html#hasListeners(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn hasListeners<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/beans/PropertyChangeSupport", java.flags == PUBLIC, .name == "hasListeners", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/beans/PropertyChangeSupport\0", "hasListeners\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
