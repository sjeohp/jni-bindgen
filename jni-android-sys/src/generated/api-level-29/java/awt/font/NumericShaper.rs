// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-awt-font-NumericShaper"))]
__jni_bindgen! {
    /// public final class [NumericShaper](https://developer.android.com/reference/java/awt/font/NumericShaper.html)
    ///
    /// Required feature: java-awt-font-NumericShaper
    public final class NumericShaper ("java/awt/font/NumericShaper") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [NumericShaper](https://developer.android.com/reference/java/awt/font/NumericShaper.html#NumericShaper(int,%20int))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::awt::font::NumericShaper>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/awt/font/NumericShaper", java.flags == (empty), .name == "<init>", .descriptor == "(II)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "<init>\0", "(II)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getShaper](https://developer.android.com/reference/java/awt/font/NumericShaper.html#getShaper(int))
        ///
        /// Required features: "java-awt-font-NumericShaper"
        #[cfg(any(feature = "all", all(feature = "java-awt-font-NumericShaper")))]
        pub fn getShaper_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::awt::font::NumericShaper>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC | STATIC, .name == "getShaper", .descriptor == "(I)Ljava/awt/font/NumericShaper;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/awt/font/NumericShaper\0", "getShaper\0", "(I)Ljava/awt/font/NumericShaper;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getShaper](https://developer.android.com/reference/java/awt/font/NumericShaper.html#getShaper(java.awt.font.NumericShaper.Range))
        ///
        /// Required features: "java-awt-font-NumericShaper", "java-awt-font-NumericShaper_Range"
        #[cfg(any(feature = "all", all(feature = "java-awt-font-NumericShaper", feature = "java-awt-font-NumericShaper_Range")))]
        pub fn getShaper_Range<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::awt::font::NumericShaper_Range>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::awt::font::NumericShaper>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC | STATIC, .name == "getShaper", .descriptor == "(Ljava/awt/font/NumericShaper$Range;)Ljava/awt/font/NumericShaper;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/awt/font/NumericShaper\0", "getShaper\0", "(Ljava/awt/font/NumericShaper$Range;)Ljava/awt/font/NumericShaper;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContextualShaper](https://developer.android.com/reference/java/awt/font/NumericShaper.html#getContextualShaper(int))
        ///
        /// Required features: "java-awt-font-NumericShaper"
        #[cfg(any(feature = "all", all(feature = "java-awt-font-NumericShaper")))]
        pub fn getContextualShaper_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::awt::font::NumericShaper>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC | STATIC, .name == "getContextualShaper", .descriptor == "(I)Ljava/awt/font/NumericShaper;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/awt/font/NumericShaper\0", "getContextualShaper\0", "(I)Ljava/awt/font/NumericShaper;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContextualShaper](https://developer.android.com/reference/java/awt/font/NumericShaper.html#getContextualShaper(java.util.Set))
        ///
        /// Required features: "java-awt-font-NumericShaper", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-awt-font-NumericShaper", feature = "java-util-Set")))]
        pub fn getContextualShaper_Set<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::awt::font::NumericShaper>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC | STATIC, .name == "getContextualShaper", .descriptor == "(Ljava/util/Set;)Ljava/awt/font/NumericShaper;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/awt/font/NumericShaper\0", "getContextualShaper\0", "(Ljava/util/Set;)Ljava/awt/font/NumericShaper;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContextualShaper](https://developer.android.com/reference/java/awt/font/NumericShaper.html#getContextualShaper(int,%20int))
        ///
        /// Required features: "java-awt-font-NumericShaper"
        #[cfg(any(feature = "all", all(feature = "java-awt-font-NumericShaper")))]
        pub fn getContextualShaper_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::awt::font::NumericShaper>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC | STATIC, .name == "getContextualShaper", .descriptor == "(II)Ljava/awt/font/NumericShaper;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/awt/font/NumericShaper\0", "getContextualShaper\0", "(II)Ljava/awt/font/NumericShaper;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContextualShaper](https://developer.android.com/reference/java/awt/font/NumericShaper.html#getContextualShaper(java.util.Set,%20java.awt.font.NumericShaper.Range))
        ///
        /// Required features: "java-awt-font-NumericShaper", "java-awt-font-NumericShaper_Range", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-awt-font-NumericShaper", feature = "java-awt-font-NumericShaper_Range", feature = "java-util-Set")))]
        pub fn getContextualShaper_Set_Range<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::awt::font::NumericShaper_Range>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::awt::font::NumericShaper>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC | STATIC, .name == "getContextualShaper", .descriptor == "(Ljava/util/Set;Ljava/awt/font/NumericShaper$Range;)Ljava/awt/font/NumericShaper;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/awt/font/NumericShaper\0", "getContextualShaper\0", "(Ljava/util/Set;Ljava/awt/font/NumericShaper$Range;)Ljava/awt/font/NumericShaper;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [shape](https://developer.android.com/reference/java/awt/font/NumericShaper.html#shape(char%5B%5D,%20int,%20int))
        pub fn shape_char_array_int_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "shape", .descriptor == "([CII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "shape\0", "([CII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [shape](https://developer.android.com/reference/java/awt/font/NumericShaper.html#shape(char%5B%5D,%20int,%20int,%20int))
        pub fn shape_char_array_int_int_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "shape", .descriptor == "([CIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "shape\0", "([CIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [shape](https://developer.android.com/reference/java/awt/font/NumericShaper.html#shape(char%5B%5D,%20int,%20int,%20java.awt.font.NumericShaper.Range))
        ///
        /// Required features: "java-awt-font-NumericShaper_Range"
        #[cfg(any(feature = "all", all(feature = "java-awt-font-NumericShaper_Range")))]
        pub fn shape_char_array_int_int_Range<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::awt::font::NumericShaper_Range>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "shape", .descriptor == "([CIILjava/awt/font/NumericShaper$Range;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "shape\0", "([CIILjava/awt/font/NumericShaper$Range;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isContextual](https://developer.android.com/reference/java/awt/font/NumericShaper.html#isContextual())
        pub fn isContextual<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "isContextual", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "isContextual\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRanges](https://developer.android.com/reference/java/awt/font/NumericShaper.html#getRanges())
        pub fn getRanges<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "getRanges", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "getRanges\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRangeSet](https://developer.android.com/reference/java/awt/font/NumericShaper.html#getRangeSet())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn getRangeSet<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "getRangeSet", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "getRangeSet\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/java/awt/font/NumericShaper.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/java/awt/font/NumericShaper.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/awt/font/NumericShaper.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/awt/font/NumericShaper", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/awt/font/NumericShaper\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ALL_RANGES](https://developer.android.com/reference/java/awt/font/NumericShaper.html#ALL_RANGES)
        pub const ALL_RANGES : i32 = 524287;

        /// public static final [ARABIC](https://developer.android.com/reference/java/awt/font/NumericShaper.html#ARABIC)
        pub const ARABIC : i32 = 2;

        /// public static final [BENGALI](https://developer.android.com/reference/java/awt/font/NumericShaper.html#BENGALI)
        pub const BENGALI : i32 = 16;

        /// public static final [DEVANAGARI](https://developer.android.com/reference/java/awt/font/NumericShaper.html#DEVANAGARI)
        pub const DEVANAGARI : i32 = 8;

        /// public static final [EASTERN_ARABIC](https://developer.android.com/reference/java/awt/font/NumericShaper.html#EASTERN_ARABIC)
        pub const EASTERN_ARABIC : i32 = 4;

        /// public static final [ETHIOPIC](https://developer.android.com/reference/java/awt/font/NumericShaper.html#ETHIOPIC)
        pub const ETHIOPIC : i32 = 65536;

        /// public static final [EUROPEAN](https://developer.android.com/reference/java/awt/font/NumericShaper.html#EUROPEAN)
        pub const EUROPEAN : i32 = 1;

        /// public static final [GUJARATI](https://developer.android.com/reference/java/awt/font/NumericShaper.html#GUJARATI)
        pub const GUJARATI : i32 = 64;

        /// public static final [GURMUKHI](https://developer.android.com/reference/java/awt/font/NumericShaper.html#GURMUKHI)
        pub const GURMUKHI : i32 = 32;

        /// public static final [KANNADA](https://developer.android.com/reference/java/awt/font/NumericShaper.html#KANNADA)
        pub const KANNADA : i32 = 1024;

        /// public static final [KHMER](https://developer.android.com/reference/java/awt/font/NumericShaper.html#KHMER)
        pub const KHMER : i32 = 131072;

        /// public static final [LAO](https://developer.android.com/reference/java/awt/font/NumericShaper.html#LAO)
        pub const LAO : i32 = 8192;

        /// public static final [MALAYALAM](https://developer.android.com/reference/java/awt/font/NumericShaper.html#MALAYALAM)
        pub const MALAYALAM : i32 = 2048;

        /// public static final [MONGOLIAN](https://developer.android.com/reference/java/awt/font/NumericShaper.html#MONGOLIAN)
        pub const MONGOLIAN : i32 = 262144;

        /// public static final [MYANMAR](https://developer.android.com/reference/java/awt/font/NumericShaper.html#MYANMAR)
        pub const MYANMAR : i32 = 32768;

        /// public static final [ORIYA](https://developer.android.com/reference/java/awt/font/NumericShaper.html#ORIYA)
        pub const ORIYA : i32 = 128;

        /// public static final [TAMIL](https://developer.android.com/reference/java/awt/font/NumericShaper.html#TAMIL)
        pub const TAMIL : i32 = 256;

        /// public static final [TELUGU](https://developer.android.com/reference/java/awt/font/NumericShaper.html#TELUGU)
        pub const TELUGU : i32 = 512;

        /// public static final [THAI](https://developer.android.com/reference/java/awt/font/NumericShaper.html#THAI)
        pub const THAI : i32 = 4096;

        /// public static final [TIBETAN](https://developer.android.com/reference/java/awt/font/NumericShaper.html#TIBETAN)
        pub const TIBETAN : i32 = 16384;
    }
}
