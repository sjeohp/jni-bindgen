// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-text-SimpleDateFormat"))]
__jni_bindgen! {
    /// public class [SimpleDateFormat](https://developer.android.com/reference/java/text/SimpleDateFormat.html)
    ///
    /// Required feature: java-text-SimpleDateFormat
    public class SimpleDateFormat ("java/text/SimpleDateFormat") extends crate::java::text::DateFormat {

        /// [SimpleDateFormat](https://developer.android.com/reference/java/text/SimpleDateFormat.html#SimpleDateFormat())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleDateFormat](https://developer.android.com/reference/java/text/SimpleDateFormat.html#SimpleDateFormat(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleDateFormat](https://developer.android.com/reference/java/text/SimpleDateFormat.html#SimpleDateFormat(java.lang.String,%20java.util.Locale))
        ///
        /// Required features: "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn new_String_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/util/Locale;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "<init>\0", "(Ljava/lang/String;Ljava/util/Locale;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleDateFormat](https://developer.android.com/reference/java/text/SimpleDateFormat.html#SimpleDateFormat(java.lang.String,%20java.text.DateFormatSymbols))
        ///
        /// Required features: "java-lang-String", "java-text-DateFormatSymbols"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-text-DateFormatSymbols")))]
        pub fn new_String_DateFormatSymbols<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::DateFormatSymbols>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/text/DateFormatSymbols;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "<init>\0", "(Ljava/lang/String;Ljava/text/DateFormatSymbols;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [set2DigitYearStart](https://developer.android.com/reference/java/text/SimpleDateFormat.html#set2DigitYearStart(java.util.Date))
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn set2DigitYearStart<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "set2DigitYearStart", .descriptor == "(Ljava/util/Date;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "set2DigitYearStart\0", "(Ljava/util/Date;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get2DigitYearStart](https://developer.android.com/reference/java/text/SimpleDateFormat.html#get2DigitYearStart())
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn get2DigitYearStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "get2DigitYearStart", .descriptor == "()Ljava/util/Date;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "get2DigitYearStart\0", "()Ljava/util/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/java/text/SimpleDateFormat.html#format(java.util.Date,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "java-lang-StringBuffer", "java-text-FieldPosition", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition", feature = "java-util-Date")))]
        pub fn format<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "format\0", "(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [formatToCharacterIterator](https://developer.android.com/reference/java/text/SimpleDateFormat.html#formatToCharacterIterator(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-text-AttributedCharacterIterator"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-text-AttributedCharacterIterator")))]
        pub fn formatToCharacterIterator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::AttributedCharacterIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "formatToCharacterIterator", .descriptor == "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "formatToCharacterIterator\0", "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/java/text/SimpleDateFormat.html#parse(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "java-lang-String", "java-text-ParsePosition", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-text-ParsePosition", feature = "java-util-Date")))]
        pub fn parse<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "parse\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toPattern](https://developer.android.com/reference/java/text/SimpleDateFormat.html#toPattern())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toPattern<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "toPattern", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "toPattern\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toLocalizedPattern](https://developer.android.com/reference/java/text/SimpleDateFormat.html#toLocalizedPattern())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toLocalizedPattern<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "toLocalizedPattern", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "toLocalizedPattern\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [applyPattern](https://developer.android.com/reference/java/text/SimpleDateFormat.html#applyPattern(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn applyPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "applyPattern", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "applyPattern\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [applyLocalizedPattern](https://developer.android.com/reference/java/text/SimpleDateFormat.html#applyLocalizedPattern(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn applyLocalizedPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "applyLocalizedPattern", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "applyLocalizedPattern\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateFormatSymbols](https://developer.android.com/reference/java/text/SimpleDateFormat.html#getDateFormatSymbols())
        ///
        /// Required features: "java-text-DateFormatSymbols"
        #[cfg(any(feature = "all", all(feature = "java-text-DateFormatSymbols")))]
        pub fn getDateFormatSymbols<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::DateFormatSymbols>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "getDateFormatSymbols", .descriptor == "()Ljava/text/DateFormatSymbols;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "getDateFormatSymbols\0", "()Ljava/text/DateFormatSymbols;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDateFormatSymbols](https://developer.android.com/reference/java/text/SimpleDateFormat.html#setDateFormatSymbols(java.text.DateFormatSymbols))
        ///
        /// Required features: "java-text-DateFormatSymbols"
        #[cfg(any(feature = "all", all(feature = "java-text-DateFormatSymbols")))]
        pub fn setDateFormatSymbols<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::DateFormatSymbols>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "setDateFormatSymbols", .descriptor == "(Ljava/text/DateFormatSymbols;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "setDateFormatSymbols\0", "(Ljava/text/DateFormatSymbols;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/java/text/SimpleDateFormat.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/java/text/SimpleDateFormat.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/java/text/SimpleDateFormat.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/SimpleDateFormat", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/SimpleDateFormat\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
