// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-text-BreakIterator"))]
__jni_bindgen! {
    /// public class [BreakIterator](https://developer.android.com/reference/java/text/BreakIterator.html)
    ///
    /// Required feature: java-text-BreakIterator
    public class BreakIterator ("java/text/BreakIterator") extends crate::java::lang::Object, implements crate::java::lang::Cloneable {

        // // Not emitting: Non-public method
        // /// [BreakIterator](https://developer.android.com/reference/java/text/BreakIterator.html#BreakIterator())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/text/BreakIterator", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [clone](https://developer.android.com/reference/java/text/BreakIterator.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [first](https://developer.android.com/reference/java/text/BreakIterator.html#first())
        pub fn first<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "first", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "first\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [last](https://developer.android.com/reference/java/text/BreakIterator.html#last())
        pub fn last<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "last", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "last\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [next](https://developer.android.com/reference/java/text/BreakIterator.html#next(int))
        pub fn next_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "next", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "next\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [next](https://developer.android.com/reference/java/text/BreakIterator.html#next())
        pub fn next<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "next", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "next\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [previous](https://developer.android.com/reference/java/text/BreakIterator.html#previous())
        pub fn previous<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "previous", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "previous\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [following](https://developer.android.com/reference/java/text/BreakIterator.html#following(int))
        pub fn following<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "following", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "following\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [preceding](https://developer.android.com/reference/java/text/BreakIterator.html#preceding(int))
        pub fn preceding<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC, .name == "preceding", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "preceding\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isBoundary](https://developer.android.com/reference/java/text/BreakIterator.html#isBoundary(int))
        pub fn isBoundary<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC, .name == "isBoundary", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "isBoundary\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [current](https://developer.android.com/reference/java/text/BreakIterator.html#current())
        pub fn current<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "current", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "current\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getText](https://developer.android.com/reference/java/text/BreakIterator.html#getText())
        ///
        /// Required features: "java-text-CharacterIterator"
        #[cfg(any(feature = "all", all(feature = "java-text-CharacterIterator")))]
        pub fn getText<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::CharacterIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "getText", .descriptor == "()Ljava/text/CharacterIterator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "getText\0", "()Ljava/text/CharacterIterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setText](https://developer.android.com/reference/java/text/BreakIterator.html#setText(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setText_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC, .name == "setText", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "setText\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setText](https://developer.android.com/reference/java/text/BreakIterator.html#setText(java.text.CharacterIterator))
        ///
        /// Required features: "java-text-CharacterIterator"
        #[cfg(any(feature = "all", all(feature = "java-text-CharacterIterator")))]
        pub fn setText_CharacterIterator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::CharacterIterator>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | ABSTRACT, .name == "setText", .descriptor == "(Ljava/text/CharacterIterator;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/BreakIterator\0", "setText\0", "(Ljava/text/CharacterIterator;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWordInstance](https://developer.android.com/reference/java/text/BreakIterator.html#getWordInstance())
        ///
        /// Required features: "java-text-BreakIterator"
        #[cfg(any(feature = "all", all(feature = "java-text-BreakIterator")))]
        pub fn getWordInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC, .name == "getWordInstance", .descriptor == "()Ljava/text/BreakIterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getWordInstance\0", "()Ljava/text/BreakIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWordInstance](https://developer.android.com/reference/java/text/BreakIterator.html#getWordInstance(java.util.Locale))
        ///
        /// Required features: "java-text-BreakIterator", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-text-BreakIterator", feature = "java-util-Locale")))]
        pub fn getWordInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC, .name == "getWordInstance", .descriptor == "(Ljava/util/Locale;)Ljava/text/BreakIterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getWordInstance\0", "(Ljava/util/Locale;)Ljava/text/BreakIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLineInstance](https://developer.android.com/reference/java/text/BreakIterator.html#getLineInstance())
        ///
        /// Required features: "java-text-BreakIterator"
        #[cfg(any(feature = "all", all(feature = "java-text-BreakIterator")))]
        pub fn getLineInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC, .name == "getLineInstance", .descriptor == "()Ljava/text/BreakIterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getLineInstance\0", "()Ljava/text/BreakIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLineInstance](https://developer.android.com/reference/java/text/BreakIterator.html#getLineInstance(java.util.Locale))
        ///
        /// Required features: "java-text-BreakIterator", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-text-BreakIterator", feature = "java-util-Locale")))]
        pub fn getLineInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC, .name == "getLineInstance", .descriptor == "(Ljava/util/Locale;)Ljava/text/BreakIterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getLineInstance\0", "(Ljava/util/Locale;)Ljava/text/BreakIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharacterInstance](https://developer.android.com/reference/java/text/BreakIterator.html#getCharacterInstance())
        ///
        /// Required features: "java-text-BreakIterator"
        #[cfg(any(feature = "all", all(feature = "java-text-BreakIterator")))]
        pub fn getCharacterInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC, .name == "getCharacterInstance", .descriptor == "()Ljava/text/BreakIterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getCharacterInstance\0", "()Ljava/text/BreakIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharacterInstance](https://developer.android.com/reference/java/text/BreakIterator.html#getCharacterInstance(java.util.Locale))
        ///
        /// Required features: "java-text-BreakIterator", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-text-BreakIterator", feature = "java-util-Locale")))]
        pub fn getCharacterInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC, .name == "getCharacterInstance", .descriptor == "(Ljava/util/Locale;)Ljava/text/BreakIterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getCharacterInstance\0", "(Ljava/util/Locale;)Ljava/text/BreakIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSentenceInstance](https://developer.android.com/reference/java/text/BreakIterator.html#getSentenceInstance())
        ///
        /// Required features: "java-text-BreakIterator"
        #[cfg(any(feature = "all", all(feature = "java-text-BreakIterator")))]
        pub fn getSentenceInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC, .name == "getSentenceInstance", .descriptor == "()Ljava/text/BreakIterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getSentenceInstance\0", "()Ljava/text/BreakIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSentenceInstance](https://developer.android.com/reference/java/text/BreakIterator.html#getSentenceInstance(java.util.Locale))
        ///
        /// Required features: "java-text-BreakIterator", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-text-BreakIterator", feature = "java-util-Locale")))]
        pub fn getSentenceInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::BreakIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC, .name == "getSentenceInstance", .descriptor == "(Ljava/util/Locale;)Ljava/text/BreakIterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getSentenceInstance\0", "(Ljava/util/Locale;)Ljava/text/BreakIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableLocales](https://developer.android.com/reference/java/text/BreakIterator.html#getAvailableLocales())
        ///
        /// Required features: "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-util-Locale")))]
        pub fn getAvailableLocales<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::util::Locale, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/BreakIterator", java.flags == PUBLIC | STATIC | SYNCRONIZED, .name == "getAvailableLocales", .descriptor == "()[Ljava/util/Locale;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/BreakIterator\0", "getAvailableLocales\0", "()[Ljava/util/Locale;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [DONE](https://developer.android.com/reference/java/text/BreakIterator.html#DONE)
        pub const DONE : i32 = -1;
    }
}
