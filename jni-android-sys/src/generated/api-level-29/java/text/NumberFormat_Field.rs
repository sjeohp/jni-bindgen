// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
__jni_bindgen! {
    /// public class [NumberFormat.Field](https://developer.android.com/reference/java/text/NumberFormat.Field.html)
    ///
    /// Required feature: java-text-NumberFormat_Field
    public class NumberFormat_Field ("java/text/NumberFormat$Field") extends crate::java::text::Format_Field {

        // // Not emitting: Non-public method
        // /// [Field](https://developer.android.com/reference/java/text/NumberFormat.Field.html#Field(java.lang.String))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/text/NumberFormat$Field", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/NumberFormat$Field\0", "<init>\0", "(Ljava/lang/String;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [readResolve](https://developer.android.com/reference/java/text/NumberFormat.Field.html#readResolve())
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // fn readResolve<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/text/NumberFormat$Field", java.flags == PROTECTED, .name == "readResolve", .descriptor == "()Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/NumberFormat$Field\0", "readResolve\0", "()Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// **get** public static final [CURRENCY](https://developer.android.com/reference/java/text/NumberFormat.Field.html#CURRENCY)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn CURRENCY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "CURRENCY\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DECIMAL_SEPARATOR](https://developer.android.com/reference/java/text/NumberFormat.Field.html#DECIMAL_SEPARATOR)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn DECIMAL_SEPARATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "DECIMAL_SEPARATOR\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EXPONENT](https://developer.android.com/reference/java/text/NumberFormat.Field.html#EXPONENT)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn EXPONENT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "EXPONENT\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EXPONENT_SIGN](https://developer.android.com/reference/java/text/NumberFormat.Field.html#EXPONENT_SIGN)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn EXPONENT_SIGN<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "EXPONENT_SIGN\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EXPONENT_SYMBOL](https://developer.android.com/reference/java/text/NumberFormat.Field.html#EXPONENT_SYMBOL)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn EXPONENT_SYMBOL<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "EXPONENT_SYMBOL\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [FRACTION](https://developer.android.com/reference/java/text/NumberFormat.Field.html#FRACTION)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn FRACTION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "FRACTION\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [GROUPING_SEPARATOR](https://developer.android.com/reference/java/text/NumberFormat.Field.html#GROUPING_SEPARATOR)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn GROUPING_SEPARATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "GROUPING_SEPARATOR\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INTEGER](https://developer.android.com/reference/java/text/NumberFormat.Field.html#INTEGER)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn INTEGER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "INTEGER\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [PERCENT](https://developer.android.com/reference/java/text/NumberFormat.Field.html#PERCENT)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn PERCENT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "PERCENT\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [PERMILLE](https://developer.android.com/reference/java/text/NumberFormat.Field.html#PERMILLE)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn PERMILLE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "PERMILLE\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SIGN](https://developer.android.com/reference/java/text/NumberFormat.Field.html#SIGN)
        ///
        /// Required feature: java-text-NumberFormat_Field
        #[cfg(any(feature = "all", feature = "java-text-NumberFormat_Field"))]
        pub fn SIGN<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::NumberFormat_Field>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/text/NumberFormat$Field\0", "SIGN\0", "Ljava/text/NumberFormat$Field;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
