// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-text-Bidi"))]
__jni_bindgen! {
    /// public final class [Bidi](https://developer.android.com/reference/java/text/Bidi.html)
    ///
    /// Required feature: java-text-Bidi
    public final class Bidi ("java/text/Bidi") extends crate::java::lang::Object {

        /// [Bidi](https://developer.android.com/reference/java/text/Bidi.html#Bidi(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::Bidi>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "<init>\0", "(Ljava/lang/String;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Bidi](https://developer.android.com/reference/java/text/Bidi.html#Bidi(java.text.AttributedCharacterIterator))
        ///
        /// Required features: "java-text-AttributedCharacterIterator"
        #[cfg(any(feature = "all", all(feature = "java-text-AttributedCharacterIterator")))]
        pub fn new_AttributedCharacterIterator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::AttributedCharacterIterator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::Bidi>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/text/AttributedCharacterIterator;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "<init>\0", "(Ljava/text/AttributedCharacterIterator;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Bidi](https://developer.android.com/reference/java/text/Bidi.html#Bidi(char%5B%5D,%20int,%20byte%5B%5D,%20int,%20int,%20int))
        pub fn new_char_array_int_byte_array_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::text::Bidi>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "<init>", .descriptor == "([CI[BIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "<init>\0", "([CI[BIII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createLineBidi](https://developer.android.com/reference/java/text/Bidi.html#createLineBidi(int,%20int))
        ///
        /// Required features: "java-text-Bidi"
        #[cfg(any(feature = "all", all(feature = "java-text-Bidi")))]
        pub fn createLineBidi<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::Bidi>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "createLineBidi", .descriptor == "(II)Ljava/text/Bidi;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "createLineBidi\0", "(II)Ljava/text/Bidi;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isMixed](https://developer.android.com/reference/java/text/Bidi.html#isMixed())
        pub fn isMixed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "isMixed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "isMixed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLeftToRight](https://developer.android.com/reference/java/text/Bidi.html#isLeftToRight())
        pub fn isLeftToRight<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "isLeftToRight", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "isLeftToRight\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isRightToLeft](https://developer.android.com/reference/java/text/Bidi.html#isRightToLeft())
        pub fn isRightToLeft<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "isRightToLeft", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "isRightToLeft\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLength](https://developer.android.com/reference/java/text/Bidi.html#getLength())
        pub fn getLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "getLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "getLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [baseIsLeftToRight](https://developer.android.com/reference/java/text/Bidi.html#baseIsLeftToRight())
        pub fn baseIsLeftToRight<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "baseIsLeftToRight", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "baseIsLeftToRight\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBaseLevel](https://developer.android.com/reference/java/text/Bidi.html#getBaseLevel())
        pub fn getBaseLevel<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "getBaseLevel", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "getBaseLevel\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLevelAt](https://developer.android.com/reference/java/text/Bidi.html#getLevelAt(int))
        pub fn getLevelAt<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "getLevelAt", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "getLevelAt\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRunCount](https://developer.android.com/reference/java/text/Bidi.html#getRunCount())
        pub fn getRunCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "getRunCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "getRunCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRunLevel](https://developer.android.com/reference/java/text/Bidi.html#getRunLevel(int))
        pub fn getRunLevel<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "getRunLevel", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "getRunLevel\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRunStart](https://developer.android.com/reference/java/text/Bidi.html#getRunStart(int))
        pub fn getRunStart<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "getRunStart", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "getRunStart\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRunLimit](https://developer.android.com/reference/java/text/Bidi.html#getRunLimit(int))
        pub fn getRunLimit<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "getRunLimit", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "getRunLimit\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [requiresBidi](https://developer.android.com/reference/java/text/Bidi.html#requiresBidi(char%5B%5D,%20int,%20int))
        pub fn requiresBidi<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC | STATIC, .name == "requiresBidi", .descriptor == "([CII)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/Bidi\0", "requiresBidi\0", "([CII)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reorderVisually](https://developer.android.com/reference/java/text/Bidi.html#reorderVisually(byte%5B%5D,%20int,%20java.lang.Object%5B%5D,%20int,%20int))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn reorderVisually<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::Object, crate::java::lang::Throwable>>>, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC | STATIC, .name == "reorderVisually", .descriptor == "([BI[Ljava/lang/Object;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/text/Bidi\0", "reorderVisually\0", "([BI[Ljava/lang/Object;II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/text/Bidi.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/text/Bidi", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/text/Bidi\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [DIRECTION_DEFAULT_LEFT_TO_RIGHT](https://developer.android.com/reference/java/text/Bidi.html#DIRECTION_DEFAULT_LEFT_TO_RIGHT)
        pub const DIRECTION_DEFAULT_LEFT_TO_RIGHT : i32 = -2;

        /// public static final [DIRECTION_DEFAULT_RIGHT_TO_LEFT](https://developer.android.com/reference/java/text/Bidi.html#DIRECTION_DEFAULT_RIGHT_TO_LEFT)
        pub const DIRECTION_DEFAULT_RIGHT_TO_LEFT : i32 = -1;

        /// public static final [DIRECTION_LEFT_TO_RIGHT](https://developer.android.com/reference/java/text/Bidi.html#DIRECTION_LEFT_TO_RIGHT)
        pub const DIRECTION_LEFT_TO_RIGHT : i32 = 0;

        /// public static final [DIRECTION_RIGHT_TO_LEFT](https://developer.android.com/reference/java/text/Bidi.html#DIRECTION_RIGHT_TO_LEFT)
        pub const DIRECTION_RIGHT_TO_LEFT : i32 = 1;
    }
}
