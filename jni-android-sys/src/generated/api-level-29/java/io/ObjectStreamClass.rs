// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-io-ObjectStreamClass"))]
__jni_bindgen! {
    /// public class [ObjectStreamClass](https://developer.android.com/reference/java/io/ObjectStreamClass.html)
    ///
    /// Required feature: java-io-ObjectStreamClass
    public class ObjectStreamClass ("java/io/ObjectStreamClass") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [ObjectStreamClass](https://developer.android.com/reference/java/io/ObjectStreamClass.html#ObjectStreamClass())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::io::ObjectStreamClass>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/io/ObjectStreamClass", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/ObjectStreamClass\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [lookup](https://developer.android.com/reference/java/io/ObjectStreamClass.html#lookup(java.lang.Class))
        ///
        /// Required features: "java-io-ObjectStreamClass", "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "java-io-ObjectStreamClass", feature = "java-lang-Class")))]
        pub fn lookup<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::ObjectStreamClass>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/ObjectStreamClass", java.flags == PUBLIC | STATIC, .name == "lookup", .descriptor == "(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/io/ObjectStreamClass\0", "lookup\0", "(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [lookupAny](https://developer.android.com/reference/java/io/ObjectStreamClass.html#lookupAny(java.lang.Class))
        ///
        /// Required features: "java-io-ObjectStreamClass", "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "java-io-ObjectStreamClass", feature = "java-lang-Class")))]
        pub fn lookupAny<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::ObjectStreamClass>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/ObjectStreamClass", java.flags == PUBLIC | STATIC, .name == "lookupAny", .descriptor == "(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/io/ObjectStreamClass\0", "lookupAny\0", "(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getName](https://developer.android.com/reference/java/io/ObjectStreamClass.html#getName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/ObjectStreamClass", java.flags == PUBLIC, .name == "getName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/ObjectStreamClass\0", "getName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSerialVersionUID](https://developer.android.com/reference/java/io/ObjectStreamClass.html#getSerialVersionUID())
        pub fn getSerialVersionUID<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/ObjectStreamClass", java.flags == PUBLIC, .name == "getSerialVersionUID", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/ObjectStreamClass\0", "getSerialVersionUID\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [forClass](https://developer.android.com/reference/java/io/ObjectStreamClass.html#forClass())
        ///
        /// Required features: "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class")))]
        pub fn forClass<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Class>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/ObjectStreamClass", java.flags == PUBLIC, .name == "forClass", .descriptor == "()Ljava/lang/Class;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/ObjectStreamClass\0", "forClass\0", "()Ljava/lang/Class;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFields](https://developer.android.com/reference/java/io/ObjectStreamClass.html#getFields())
        ///
        /// Required features: "java-io-ObjectStreamField"
        #[cfg(any(feature = "all", all(feature = "java-io-ObjectStreamField")))]
        pub fn getFields<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::io::ObjectStreamField, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/ObjectStreamClass", java.flags == PUBLIC, .name == "getFields", .descriptor == "()[Ljava/io/ObjectStreamField;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/ObjectStreamClass\0", "getFields\0", "()[Ljava/io/ObjectStreamField;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getField](https://developer.android.com/reference/java/io/ObjectStreamClass.html#getField(java.lang.String))
        ///
        /// Required features: "java-io-ObjectStreamField", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-io-ObjectStreamField", feature = "java-lang-String")))]
        pub fn getField<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::ObjectStreamField>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/ObjectStreamClass", java.flags == PUBLIC, .name == "getField", .descriptor == "(Ljava/lang/String;)Ljava/io/ObjectStreamField;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/ObjectStreamClass\0", "getField\0", "(Ljava/lang/String;)Ljava/io/ObjectStreamField;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/io/ObjectStreamClass.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/ObjectStreamClass", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/ObjectStreamClass\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [NO_FIELDS](https://developer.android.com/reference/java/io/ObjectStreamClass.html#NO_FIELDS)
        ///
        /// Required feature: java-io-ObjectStreamField
        #[cfg(any(feature = "all", feature = "java-io-ObjectStreamField"))]
        pub fn NO_FIELDS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::io::ObjectStreamField, crate::java::lang::Throwable>>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/io/ObjectStreamClass\0", "NO_FIELDS\0", "[Ljava/io/ObjectStreamField;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
