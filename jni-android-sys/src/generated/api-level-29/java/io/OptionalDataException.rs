// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-io-OptionalDataException"))]
__jni_bindgen! {
    /// public class [OptionalDataException](https://developer.android.com/reference/java/io/OptionalDataException.html)
    ///
    /// Required feature: java-io-OptionalDataException
    public class OptionalDataException ("java/io/OptionalDataException") extends crate::java::io::ObjectStreamException {

        // // Not emitting: Non-public method
        // /// [OptionalDataException](https://developer.android.com/reference/java/io/OptionalDataException.html#OptionalDataException(int))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::io::OptionalDataException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/io/OptionalDataException", java.flags == (empty), .name == "<init>", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/OptionalDataException\0", "<init>\0", "(I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// **get** public [eof](https://developer.android.com/reference/java/io/OptionalDataException.html#eof)
        pub fn eof<'env>(&'env self) -> bool {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("java/io/OptionalDataException\0", "eof\0", "Z\0");
                env.get_boolean_field(class, field)
            }
        }

        /// **set** public [eof](https://developer.android.com/reference/java/io/OptionalDataException.html#eof)
        pub fn set_eof<'env>(&'env self, value: bool) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("java/io/OptionalDataException\0", "eof\0", "Z\0");
                env.set_boolean_field(class, field, value)
            }
        }

        /// **get** public [length](https://developer.android.com/reference/java/io/OptionalDataException.html#length)
        pub fn length<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("java/io/OptionalDataException\0", "length\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [length](https://developer.android.com/reference/java/io/OptionalDataException.html#length)
        pub fn set_length<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("java/io/OptionalDataException\0", "length\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }
    }
}
