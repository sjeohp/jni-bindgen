// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-io-Externalizable"))]
__jni_bindgen! {
    /// public interface [Externalizable](https://developer.android.com/reference/java/io/Externalizable.html)
    ///
    /// Required feature: java-io-Externalizable
    public interface Externalizable ("java/io/Externalizable") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        /// [writeExternal](https://developer.android.com/reference/java/io/Externalizable.html#writeExternal(java.io.ObjectOutput))
        ///
        /// Required features: "java-io-ObjectOutput"
        #[cfg(any(feature = "all", all(feature = "java-io-ObjectOutput")))]
        pub fn writeExternal<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::ObjectOutput>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/Externalizable", java.flags == PUBLIC | ABSTRACT, .name == "writeExternal", .descriptor == "(Ljava/io/ObjectOutput;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/Externalizable\0", "writeExternal\0", "(Ljava/io/ObjectOutput;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readExternal](https://developer.android.com/reference/java/io/Externalizable.html#readExternal(java.io.ObjectInput))
        ///
        /// Required features: "java-io-ObjectInput"
        #[cfg(any(feature = "all", all(feature = "java-io-ObjectInput")))]
        pub fn readExternal<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::ObjectInput>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/io/Externalizable", java.flags == PUBLIC | ABSTRACT, .name == "readExternal", .descriptor == "(Ljava/io/ObjectInput;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/io/Externalizable\0", "readExternal\0", "(Ljava/io/ObjectInput;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
