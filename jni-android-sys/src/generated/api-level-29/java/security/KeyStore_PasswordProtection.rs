// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-KeyStore_PasswordProtection"))]
__jni_bindgen! {
    /// public class [KeyStore.PasswordProtection](https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html)
    ///
    /// Required feature: java-security-KeyStore_PasswordProtection
    public class KeyStore_PasswordProtection ("java/security/KeyStore$PasswordProtection") extends crate::java::lang::Object, implements crate::java::security::KeyStore_ProtectionParameter, crate::javax::security::auth::Destroyable {

        /// [PasswordProtection](https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html#PasswordProtection(char%5B%5D))
        pub fn new_char_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::KeyStore_PasswordProtection>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$PasswordProtection", java.flags == PUBLIC, .name == "<init>", .descriptor == "([C)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$PasswordProtection\0", "<init>\0", "([C)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [PasswordProtection](https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html#PasswordProtection(char%5B%5D,%20java.lang.String,%20java.security.spec.AlgorithmParameterSpec))
        ///
        /// Required features: "java-lang-String", "java-security-spec-AlgorithmParameterSpec"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-security-spec-AlgorithmParameterSpec")))]
        pub fn new_char_array_String_AlgorithmParameterSpec<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::spec::AlgorithmParameterSpec>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::KeyStore_PasswordProtection>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$PasswordProtection", java.flags == PUBLIC, .name == "<init>", .descriptor == "([CLjava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$PasswordProtection\0", "<init>\0", "([CLjava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProtectionAlgorithm](https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html#getProtectionAlgorithm())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getProtectionAlgorithm<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$PasswordProtection", java.flags == PUBLIC, .name == "getProtectionAlgorithm", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$PasswordProtection\0", "getProtectionAlgorithm\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProtectionParameters](https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html#getProtectionParameters())
        ///
        /// Required features: "java-security-spec-AlgorithmParameterSpec"
        #[cfg(any(feature = "all", all(feature = "java-security-spec-AlgorithmParameterSpec")))]
        pub fn getProtectionParameters<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::spec::AlgorithmParameterSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$PasswordProtection", java.flags == PUBLIC, .name == "getProtectionParameters", .descriptor == "()Ljava/security/spec/AlgorithmParameterSpec;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$PasswordProtection\0", "getProtectionParameters\0", "()Ljava/security/spec/AlgorithmParameterSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPassword](https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html#getPassword())
        pub fn getPassword<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::CharArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$PasswordProtection", java.flags == PUBLIC | SYNCRONIZED, .name == "getPassword", .descriptor == "()[C"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$PasswordProtection\0", "getPassword\0", "()[C\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [destroy](https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html#destroy())
        pub fn destroy<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$PasswordProtection", java.flags == PUBLIC | SYNCRONIZED, .name == "destroy", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$PasswordProtection\0", "destroy\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDestroyed](https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html#isDestroyed())
        pub fn isDestroyed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$PasswordProtection", java.flags == PUBLIC | SYNCRONIZED, .name == "isDestroyed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$PasswordProtection\0", "isDestroyed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
