// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-KeyStore_CallbackHandlerProtection"))]
__jni_bindgen! {
    /// public class [KeyStore.CallbackHandlerProtection](https://developer.android.com/reference/java/security/KeyStore.CallbackHandlerProtection.html)
    ///
    /// Required feature: java-security-KeyStore_CallbackHandlerProtection
    public class KeyStore_CallbackHandlerProtection ("java/security/KeyStore$CallbackHandlerProtection") extends crate::java::lang::Object, implements crate::java::security::KeyStore_ProtectionParameter {

        /// [CallbackHandlerProtection](https://developer.android.com/reference/java/security/KeyStore.CallbackHandlerProtection.html#CallbackHandlerProtection(javax.security.auth.callback.CallbackHandler))
        ///
        /// Required features: "javax-security-auth-callback-CallbackHandler"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-callback-CallbackHandler")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::security::auth::callback::CallbackHandler>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::KeyStore_CallbackHandlerProtection>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$CallbackHandlerProtection", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljavax/security/auth/callback/CallbackHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$CallbackHandlerProtection\0", "<init>\0", "(Ljavax/security/auth/callback/CallbackHandler;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCallbackHandler](https://developer.android.com/reference/java/security/KeyStore.CallbackHandlerProtection.html#getCallbackHandler())
        ///
        /// Required features: "javax-security-auth-callback-CallbackHandler"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-callback-CallbackHandler")))]
        pub fn getCallbackHandler<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::security::auth::callback::CallbackHandler>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/KeyStore$CallbackHandlerProtection", java.flags == PUBLIC, .name == "getCallbackHandler", .descriptor == "()Ljavax/security/auth/callback/CallbackHandler;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/KeyStore$CallbackHandlerProtection\0", "getCallbackHandler\0", "()Ljavax/security/auth/callback/CallbackHandler;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
