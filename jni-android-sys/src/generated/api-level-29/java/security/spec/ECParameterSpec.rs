// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-spec-ECParameterSpec"))]
__jni_bindgen! {
    /// public class [ECParameterSpec](https://developer.android.com/reference/java/security/spec/ECParameterSpec.html)
    ///
    /// Required feature: java-security-spec-ECParameterSpec
    public class ECParameterSpec ("java/security/spec/ECParameterSpec") extends crate::java::lang::Object, implements crate::java::security::spec::AlgorithmParameterSpec {

        /// [ECParameterSpec](https://developer.android.com/reference/java/security/spec/ECParameterSpec.html#ECParameterSpec(java.security.spec.EllipticCurve,%20java.security.spec.ECPoint,%20java.math.BigInteger,%20int))
        ///
        /// Required features: "java-math-BigInteger", "java-security-spec-ECPoint", "java-security-spec-EllipticCurve"
        #[cfg(any(feature = "all", all(feature = "java-math-BigInteger", feature = "java-security-spec-ECPoint", feature = "java-security-spec-EllipticCurve")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::spec::EllipticCurve>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::spec::ECPoint>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::spec::ECParameterSpec>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/spec/ECParameterSpec", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/security/spec/EllipticCurve;Ljava/security/spec/ECPoint;Ljava/math/BigInteger;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/spec/ECParameterSpec\0", "<init>\0", "(Ljava/security/spec/EllipticCurve;Ljava/security/spec/ECPoint;Ljava/math/BigInteger;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCurve](https://developer.android.com/reference/java/security/spec/ECParameterSpec.html#getCurve())
        ///
        /// Required features: "java-security-spec-EllipticCurve"
        #[cfg(any(feature = "all", all(feature = "java-security-spec-EllipticCurve")))]
        pub fn getCurve<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::spec::EllipticCurve>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/spec/ECParameterSpec", java.flags == PUBLIC, .name == "getCurve", .descriptor == "()Ljava/security/spec/EllipticCurve;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/spec/ECParameterSpec\0", "getCurve\0", "()Ljava/security/spec/EllipticCurve;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGenerator](https://developer.android.com/reference/java/security/spec/ECParameterSpec.html#getGenerator())
        ///
        /// Required features: "java-security-spec-ECPoint"
        #[cfg(any(feature = "all", all(feature = "java-security-spec-ECPoint")))]
        pub fn getGenerator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::spec::ECPoint>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/spec/ECParameterSpec", java.flags == PUBLIC, .name == "getGenerator", .descriptor == "()Ljava/security/spec/ECPoint;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/spec/ECParameterSpec\0", "getGenerator\0", "()Ljava/security/spec/ECPoint;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOrder](https://developer.android.com/reference/java/security/spec/ECParameterSpec.html#getOrder())
        ///
        /// Required features: "java-math-BigInteger"
        #[cfg(any(feature = "all", all(feature = "java-math-BigInteger")))]
        pub fn getOrder<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::math::BigInteger>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/spec/ECParameterSpec", java.flags == PUBLIC, .name == "getOrder", .descriptor == "()Ljava/math/BigInteger;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/spec/ECParameterSpec\0", "getOrder\0", "()Ljava/math/BigInteger;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCofactor](https://developer.android.com/reference/java/security/spec/ECParameterSpec.html#getCofactor())
        pub fn getCofactor<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/spec/ECParameterSpec", java.flags == PUBLIC, .name == "getCofactor", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/spec/ECParameterSpec\0", "getCofactor\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
