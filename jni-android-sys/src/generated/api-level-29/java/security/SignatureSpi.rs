// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-SignatureSpi"))]
__jni_bindgen! {
    /// public class [SignatureSpi](https://developer.android.com/reference/java/security/SignatureSpi.html)
    ///
    /// Required feature: java-security-SignatureSpi
    public class SignatureSpi ("java/security/SignatureSpi") extends crate::java::lang::Object {

        /// [SignatureSpi](https://developer.android.com/reference/java/security/SignatureSpi.html#SignatureSpi())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::SignatureSpi>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/SignatureSpi", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [engineInitVerify](https://developer.android.com/reference/java/security/SignatureSpi.html#engineInitVerify(java.security.PublicKey))
        // ///
        // /// Required features: "java-security-PublicKey"
        // #[cfg(any(feature = "all", all(feature = "java-security-PublicKey")))]
        // fn engineInitVerify<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::PublicKey>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineInitVerify", .descriptor == "(Ljava/security/PublicKey;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineInitVerify\0", "(Ljava/security/PublicKey;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineInitSign](https://developer.android.com/reference/java/security/SignatureSpi.html#engineInitSign(java.security.PrivateKey))
        // ///
        // /// Required features: "java-security-PrivateKey"
        // #[cfg(any(feature = "all", all(feature = "java-security-PrivateKey")))]
        // fn engineInitSign<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::PrivateKey>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineInitSign", .descriptor == "(Ljava/security/PrivateKey;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineInitSign\0", "(Ljava/security/PrivateKey;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineInitSign](https://developer.android.com/reference/java/security/SignatureSpi.html#engineInitSign(java.security.PrivateKey,%20java.security.SecureRandom))
        // ///
        // /// Required features: "java-security-PrivateKey", "java-security-SecureRandom"
        // #[cfg(any(feature = "all", all(feature = "java-security-PrivateKey", feature = "java-security-SecureRandom")))]
        // fn engineInitSign<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::PrivateKey>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::SecureRandom>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED, .name == "engineInitSign", .descriptor == "(Ljava/security/PrivateKey;Ljava/security/SecureRandom;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineInitSign\0", "(Ljava/security/PrivateKey;Ljava/security/SecureRandom;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineUpdate](https://developer.android.com/reference/java/security/SignatureSpi.html#engineUpdate(byte))
        // fn engineUpdate<'env>(&'env self, arg0: i8) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineUpdate", .descriptor == "(B)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineUpdate\0", "(B)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineUpdate](https://developer.android.com/reference/java/security/SignatureSpi.html#engineUpdate(byte%5B%5D,%20int,%20int))
        // fn engineUpdate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineUpdate", .descriptor == "([BII)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineUpdate\0", "([BII)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineUpdate](https://developer.android.com/reference/java/security/SignatureSpi.html#engineUpdate(java.nio.ByteBuffer))
        // ///
        // /// Required features: "java-nio-ByteBuffer"
        // #[cfg(any(feature = "all", all(feature = "java-nio-ByteBuffer")))]
        // fn engineUpdate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::ByteBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED, .name == "engineUpdate", .descriptor == "(Ljava/nio/ByteBuffer;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineUpdate\0", "(Ljava/nio/ByteBuffer;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineSign](https://developer.android.com/reference/java/security/SignatureSpi.html#engineSign())
        // fn engineSign<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineSign", .descriptor == "()[B"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineSign\0", "()[B\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineSign](https://developer.android.com/reference/java/security/SignatureSpi.html#engineSign(byte%5B%5D,%20int,%20int))
        // fn engineSign<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED, .name == "engineSign", .descriptor == "([BII)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineSign\0", "([BII)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineVerify](https://developer.android.com/reference/java/security/SignatureSpi.html#engineVerify(byte%5B%5D))
        // fn engineVerify<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineVerify", .descriptor == "([B)Z"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineVerify\0", "([B)Z\0");
        //         __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineVerify](https://developer.android.com/reference/java/security/SignatureSpi.html#engineVerify(byte%5B%5D,%20int,%20int))
        // fn engineVerify<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED, .name == "engineVerify", .descriptor == "([BII)Z"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineVerify\0", "([BII)Z\0");
        //         __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineSetParameter](https://developer.android.com/reference/java/security/SignatureSpi.html#engineSetParameter(java.lang.String,%20java.lang.Object))
        // ///
        // /// Required features: "java-lang-Object", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        // #[deprecated] fn engineSetParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineSetParameter", .descriptor == "(Ljava/lang/String;Ljava/lang/Object;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineSetParameter\0", "(Ljava/lang/String;Ljava/lang/Object;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineSetParameter](https://developer.android.com/reference/java/security/SignatureSpi.html#engineSetParameter(java.security.spec.AlgorithmParameterSpec))
        // ///
        // /// Required features: "java-security-spec-AlgorithmParameterSpec"
        // #[cfg(any(feature = "all", all(feature = "java-security-spec-AlgorithmParameterSpec")))]
        // fn engineSetParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::spec::AlgorithmParameterSpec>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED, .name == "engineSetParameter", .descriptor == "(Ljava/security/spec/AlgorithmParameterSpec;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineSetParameter\0", "(Ljava/security/spec/AlgorithmParameterSpec;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGetParameters](https://developer.android.com/reference/java/security/SignatureSpi.html#engineGetParameters())
        // ///
        // /// Required features: "java-security-AlgorithmParameters"
        // #[cfg(any(feature = "all", all(feature = "java-security-AlgorithmParameters")))]
        // fn engineGetParameters<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::AlgorithmParameters>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED, .name == "engineGetParameters", .descriptor == "()Ljava/security/AlgorithmParameters;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineGetParameters\0", "()Ljava/security/AlgorithmParameters;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGetParameter](https://developer.android.com/reference/java/security/SignatureSpi.html#engineGetParameter(java.lang.String))
        // ///
        // /// Required features: "java-lang-Object", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        // #[deprecated] fn engineGetParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/SignatureSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineGetParameter", .descriptor == "(Ljava/lang/String;)Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "engineGetParameter\0", "(Ljava/lang/String;)Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [clone](https://developer.android.com/reference/java/security/SignatureSpi.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/SignatureSpi", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignatureSpi\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // /// **get** protected [appRandom](https://developer.android.com/reference/java/security/SignatureSpi.html#appRandom)
        // ///
        // /// Required feature: java-security-SecureRandom
        // #[cfg(any(feature = "all", feature = "java-security-SecureRandom"))]
        // pub fn appRandom<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::SecureRandom>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/security/SignatureSpi\0", "appRandom\0", "Ljava/security/SecureRandom;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [appRandom](https://developer.android.com/reference/java/security/SignatureSpi.html#appRandom)
        // ///
        // /// Required feature: java-security-SecureRandom
        // #[cfg(any(feature = "all", feature = "java-security-SecureRandom"))]
        // pub fn set_appRandom<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::security::SecureRandom>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/security/SignatureSpi\0", "appRandom\0", "Ljava/security/SecureRandom;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
