// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-Signer"))]
__jni_bindgen! {
    /// public class [Signer](https://developer.android.com/reference/java/security/Signer.html)
    ///
    /// Required feature: java-security-Signer
    #[deprecated] public class Signer ("java/security/Signer") extends crate::java::security::Identity {

        // // Not emitting: Non-public method
        // /// [Signer](https://developer.android.com/reference/java/security/Signer.html#Signer())
        // #[deprecated] fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::Signer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/Signer", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/Signer\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [Signer](https://developer.android.com/reference/java/security/Signer.html#Signer(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::Signer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/Signer", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/Signer\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Signer](https://developer.android.com/reference/java/security/Signer.html#Signer(java.lang.String,%20java.security.IdentityScope))
        ///
        /// Required features: "java-lang-String", "java-security-IdentityScope"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-security-IdentityScope")))]
        #[deprecated] pub fn new_String_IdentityScope<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::IdentityScope>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::Signer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/Signer", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/security/IdentityScope;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/Signer\0", "<init>\0", "(Ljava/lang/String;Ljava/security/IdentityScope;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPrivateKey](https://developer.android.com/reference/java/security/Signer.html#getPrivateKey())
        ///
        /// Required features: "java-security-PrivateKey"
        #[cfg(any(feature = "all", all(feature = "java-security-PrivateKey")))]
        #[deprecated] pub fn getPrivateKey<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::PrivateKey>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/Signer", java.flags == PUBLIC, .name == "getPrivateKey", .descriptor == "()Ljava/security/PrivateKey;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/Signer\0", "getPrivateKey\0", "()Ljava/security/PrivateKey;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setKeyPair](https://developer.android.com/reference/java/security/Signer.html#setKeyPair(java.security.KeyPair))
        ///
        /// Required features: "java-security-KeyPair"
        #[cfg(any(feature = "all", all(feature = "java-security-KeyPair")))]
        #[deprecated] pub fn setKeyPair<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::KeyPair>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/Signer", java.flags == PUBLIC | FINAL, .name == "setKeyPair", .descriptor == "(Ljava/security/KeyPair;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/Signer\0", "setKeyPair\0", "(Ljava/security/KeyPair;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/security/Signer.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/Signer", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/Signer\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
