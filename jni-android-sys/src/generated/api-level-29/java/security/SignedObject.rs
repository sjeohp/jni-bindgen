// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-SignedObject"))]
__jni_bindgen! {
    /// public final class [SignedObject](https://developer.android.com/reference/java/security/SignedObject.html)
    ///
    /// Required feature: java-security-SignedObject
    public final class SignedObject ("java/security/SignedObject") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        /// [SignedObject](https://developer.android.com/reference/java/security/SignedObject.html#SignedObject(java.io.Serializable,%20java.security.PrivateKey,%20java.security.Signature))
        ///
        /// Required features: "java-io-Serializable", "java-security-PrivateKey", "java-security-Signature"
        #[cfg(any(feature = "all", all(feature = "java-io-Serializable", feature = "java-security-PrivateKey", feature = "java-security-Signature")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::Serializable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::PrivateKey>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::Signature>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::SignedObject>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/SignedObject", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/Serializable;Ljava/security/PrivateKey;Ljava/security/Signature;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignedObject\0", "<init>\0", "(Ljava/io/Serializable;Ljava/security/PrivateKey;Ljava/security/Signature;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getObject](https://developer.android.com/reference/java/security/SignedObject.html#getObject())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn getObject<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/SignedObject", java.flags == PUBLIC, .name == "getObject", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignedObject\0", "getObject\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSignature](https://developer.android.com/reference/java/security/SignedObject.html#getSignature())
        pub fn getSignature<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/SignedObject", java.flags == PUBLIC, .name == "getSignature", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignedObject\0", "getSignature\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAlgorithm](https://developer.android.com/reference/java/security/SignedObject.html#getAlgorithm())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAlgorithm<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/SignedObject", java.flags == PUBLIC, .name == "getAlgorithm", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignedObject\0", "getAlgorithm\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [verify](https://developer.android.com/reference/java/security/SignedObject.html#verify(java.security.PublicKey,%20java.security.Signature))
        ///
        /// Required features: "java-security-PublicKey", "java-security-Signature"
        #[cfg(any(feature = "all", all(feature = "java-security-PublicKey", feature = "java-security-Signature")))]
        pub fn verify<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::PublicKey>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::Signature>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/SignedObject", java.flags == PUBLIC, .name == "verify", .descriptor == "(Ljava/security/PublicKey;Ljava/security/Signature;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/SignedObject\0", "verify\0", "(Ljava/security/PublicKey;Ljava/security/Signature;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
