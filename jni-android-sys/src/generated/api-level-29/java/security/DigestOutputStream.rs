// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-DigestOutputStream"))]
__jni_bindgen! {
    /// public class [DigestOutputStream](https://developer.android.com/reference/java/security/DigestOutputStream.html)
    ///
    /// Required feature: java-security-DigestOutputStream
    public class DigestOutputStream ("java/security/DigestOutputStream") extends crate::java::io::FilterOutputStream {

        /// [DigestOutputStream](https://developer.android.com/reference/java/security/DigestOutputStream.html#DigestOutputStream(java.io.OutputStream,%20java.security.MessageDigest))
        ///
        /// Required features: "java-io-OutputStream", "java-security-MessageDigest"
        #[cfg(any(feature = "all", all(feature = "java-io-OutputStream", feature = "java-security-MessageDigest")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::OutputStream>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::MessageDigest>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::DigestOutputStream>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/DigestOutputStream", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/OutputStream;Ljava/security/MessageDigest;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/DigestOutputStream\0", "<init>\0", "(Ljava/io/OutputStream;Ljava/security/MessageDigest;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMessageDigest](https://developer.android.com/reference/java/security/DigestOutputStream.html#getMessageDigest())
        ///
        /// Required features: "java-security-MessageDigest"
        #[cfg(any(feature = "all", all(feature = "java-security-MessageDigest")))]
        pub fn getMessageDigest<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::MessageDigest>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/DigestOutputStream", java.flags == PUBLIC, .name == "getMessageDigest", .descriptor == "()Ljava/security/MessageDigest;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/DigestOutputStream\0", "getMessageDigest\0", "()Ljava/security/MessageDigest;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMessageDigest](https://developer.android.com/reference/java/security/DigestOutputStream.html#setMessageDigest(java.security.MessageDigest))
        ///
        /// Required features: "java-security-MessageDigest"
        #[cfg(any(feature = "all", all(feature = "java-security-MessageDigest")))]
        pub fn setMessageDigest<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::MessageDigest>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/DigestOutputStream", java.flags == PUBLIC, .name == "setMessageDigest", .descriptor == "(Ljava/security/MessageDigest;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/DigestOutputStream\0", "setMessageDigest\0", "(Ljava/security/MessageDigest;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [write](https://developer.android.com/reference/java/security/DigestOutputStream.html#write(int))
        pub fn write_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/DigestOutputStream", java.flags == PUBLIC, .name == "write", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/DigestOutputStream\0", "write\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [write](https://developer.android.com/reference/java/security/DigestOutputStream.html#write(byte%5B%5D,%20int,%20int))
        pub fn write_byte_array_int_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/DigestOutputStream", java.flags == PUBLIC, .name == "write", .descriptor == "([BII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/DigestOutputStream\0", "write\0", "([BII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [on](https://developer.android.com/reference/java/security/DigestOutputStream.html#on(boolean))
        pub fn on<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/DigestOutputStream", java.flags == PUBLIC, .name == "on", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/DigestOutputStream\0", "on\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/security/DigestOutputStream.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/DigestOutputStream", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/DigestOutputStream\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // /// **get** protected [digest](https://developer.android.com/reference/java/security/DigestOutputStream.html#digest)
        // ///
        // /// Required feature: java-security-MessageDigest
        // #[cfg(any(feature = "all", feature = "java-security-MessageDigest"))]
        // pub fn digest<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::MessageDigest>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/security/DigestOutputStream\0", "digest\0", "Ljava/security/MessageDigest;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [digest](https://developer.android.com/reference/java/security/DigestOutputStream.html#digest)
        // ///
        // /// Required feature: java-security-MessageDigest
        // #[cfg(any(feature = "all", feature = "java-security-MessageDigest"))]
        // pub fn set_digest<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::security::MessageDigest>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/security/DigestOutputStream\0", "digest\0", "Ljava/security/MessageDigest;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
