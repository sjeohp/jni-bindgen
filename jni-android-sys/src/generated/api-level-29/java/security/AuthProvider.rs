// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-AuthProvider"))]
__jni_bindgen! {
    /// public class [AuthProvider](https://developer.android.com/reference/java/security/AuthProvider.html)
    ///
    /// Required feature: java-security-AuthProvider
    public class AuthProvider ("java/security/AuthProvider") extends crate::java::security::Provider {

        // // Not emitting: Non-public method
        // /// [AuthProvider](https://developer.android.com/reference/java/security/AuthProvider.html#AuthProvider(java.lang.String,%20double,%20java.lang.String))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: f64, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::AuthProvider>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/AuthProvider", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/lang/String;DLjava/lang/String;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/AuthProvider\0", "<init>\0", "(Ljava/lang/String;DLjava/lang/String;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [login](https://developer.android.com/reference/java/security/AuthProvider.html#login(javax.security.auth.Subject,%20javax.security.auth.callback.CallbackHandler))
        ///
        /// Required features: "javax-security-auth-Subject", "javax-security-auth-callback-CallbackHandler"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-Subject", feature = "javax-security-auth-callback-CallbackHandler")))]
        pub fn login<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::security::auth::Subject>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::security::auth::callback::CallbackHandler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/AuthProvider", java.flags == PUBLIC | ABSTRACT, .name == "login", .descriptor == "(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/AuthProvider\0", "login\0", "(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [logout](https://developer.android.com/reference/java/security/AuthProvider.html#logout())
        pub fn logout<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/AuthProvider", java.flags == PUBLIC | ABSTRACT, .name == "logout", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/AuthProvider\0", "logout\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCallbackHandler](https://developer.android.com/reference/java/security/AuthProvider.html#setCallbackHandler(javax.security.auth.callback.CallbackHandler))
        ///
        /// Required features: "javax-security-auth-callback-CallbackHandler"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-callback-CallbackHandler")))]
        pub fn setCallbackHandler<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::security::auth::callback::CallbackHandler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/AuthProvider", java.flags == PUBLIC | ABSTRACT, .name == "setCallbackHandler", .descriptor == "(Ljavax/security/auth/callback/CallbackHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/AuthProvider\0", "setCallbackHandler\0", "(Ljavax/security/auth/callback/CallbackHandler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
