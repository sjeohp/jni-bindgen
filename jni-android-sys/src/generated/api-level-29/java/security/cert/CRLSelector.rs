// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-cert-CRLSelector"))]
__jni_bindgen! {
    /// public interface [CRLSelector](https://developer.android.com/reference/java/security/cert/CRLSelector.html)
    ///
    /// Required feature: java-security-cert-CRLSelector
    public interface CRLSelector ("java/security/cert/CRLSelector") extends crate::java::lang::Object, implements crate::java::lang::Cloneable {

        /// [match](https://developer.android.com/reference/java/security/cert/CRLSelector.html#match(java.security.cert.CRL))
        ///
        /// Required features: "java-security-cert-CRL"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-CRL")))]
        pub fn r#match<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::CRL>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/CRLSelector", java.flags == PUBLIC | ABSTRACT, .name == "match", .descriptor == "(Ljava/security/cert/CRL;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/CRLSelector\0", "match\0", "(Ljava/security/cert/CRL;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/java/security/cert/CRLSelector.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/CRLSelector", java.flags == PUBLIC | ABSTRACT, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/CRLSelector\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
