// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-cert-CertPathValidatorSpi"))]
__jni_bindgen! {
    /// public class [CertPathValidatorSpi](https://developer.android.com/reference/java/security/cert/CertPathValidatorSpi.html)
    ///
    /// Required feature: java-security-cert-CertPathValidatorSpi
    public class CertPathValidatorSpi ("java/security/cert/CertPathValidatorSpi") extends crate::java::lang::Object {

        /// [CertPathValidatorSpi](https://developer.android.com/reference/java/security/cert/CertPathValidatorSpi.html#CertPathValidatorSpi())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::cert::CertPathValidatorSpi>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/CertPathValidatorSpi", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/CertPathValidatorSpi\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [engineValidate](https://developer.android.com/reference/java/security/cert/CertPathValidatorSpi.html#engineValidate(java.security.cert.CertPath,%20java.security.cert.CertPathParameters))
        ///
        /// Required features: "java-security-cert-CertPath", "java-security-cert-CertPathParameters", "java-security-cert-CertPathValidatorResult"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-CertPath", feature = "java-security-cert-CertPathParameters", feature = "java-security-cert-CertPathValidatorResult")))]
        pub fn engineValidate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::CertPath>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::CertPathParameters>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::CertPathValidatorResult>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/CertPathValidatorSpi", java.flags == PUBLIC | ABSTRACT, .name == "engineValidate", .descriptor == "(Ljava/security/cert/CertPath;Ljava/security/cert/CertPathParameters;)Ljava/security/cert/CertPathValidatorResult;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/CertPathValidatorSpi\0", "engineValidate\0", "(Ljava/security/cert/CertPath;Ljava/security/cert/CertPathParameters;)Ljava/security/cert/CertPathValidatorResult;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [engineGetRevocationChecker](https://developer.android.com/reference/java/security/cert/CertPathValidatorSpi.html#engineGetRevocationChecker())
        ///
        /// Required features: "java-security-cert-CertPathChecker"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-CertPathChecker")))]
        pub fn engineGetRevocationChecker<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::CertPathChecker>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/CertPathValidatorSpi", java.flags == PUBLIC, .name == "engineGetRevocationChecker", .descriptor == "()Ljava/security/cert/CertPathChecker;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/CertPathValidatorSpi\0", "engineGetRevocationChecker\0", "()Ljava/security/cert/CertPathChecker;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
