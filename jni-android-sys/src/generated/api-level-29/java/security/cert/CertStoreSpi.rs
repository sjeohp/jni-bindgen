// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-cert-CertStoreSpi"))]
__jni_bindgen! {
    /// public class [CertStoreSpi](https://developer.android.com/reference/java/security/cert/CertStoreSpi.html)
    ///
    /// Required feature: java-security-cert-CertStoreSpi
    public class CertStoreSpi ("java/security/cert/CertStoreSpi") extends crate::java::lang::Object {

        /// [CertStoreSpi](https://developer.android.com/reference/java/security/cert/CertStoreSpi.html#CertStoreSpi(java.security.cert.CertStoreParameters))
        ///
        /// Required features: "java-security-cert-CertStoreParameters"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-CertStoreParameters")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::CertStoreParameters>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::cert::CertStoreSpi>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/CertStoreSpi", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/security/cert/CertStoreParameters;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/CertStoreSpi\0", "<init>\0", "(Ljava/security/cert/CertStoreParameters;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [engineGetCertificates](https://developer.android.com/reference/java/security/cert/CertStoreSpi.html#engineGetCertificates(java.security.cert.CertSelector))
        ///
        /// Required features: "java-security-cert-CertSelector", "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-CertSelector", feature = "java-util-Collection")))]
        pub fn engineGetCertificates<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::CertSelector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Collection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/CertStoreSpi", java.flags == PUBLIC | ABSTRACT, .name == "engineGetCertificates", .descriptor == "(Ljava/security/cert/CertSelector;)Ljava/util/Collection;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/CertStoreSpi\0", "engineGetCertificates\0", "(Ljava/security/cert/CertSelector;)Ljava/util/Collection;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [engineGetCRLs](https://developer.android.com/reference/java/security/cert/CertStoreSpi.html#engineGetCRLs(java.security.cert.CRLSelector))
        ///
        /// Required features: "java-security-cert-CRLSelector", "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-CRLSelector", feature = "java-util-Collection")))]
        pub fn engineGetCRLs<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::CRLSelector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Collection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/CertStoreSpi", java.flags == PUBLIC | ABSTRACT, .name == "engineGetCRLs", .descriptor == "(Ljava/security/cert/CRLSelector;)Ljava/util/Collection;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/CertStoreSpi\0", "engineGetCRLs\0", "(Ljava/security/cert/CRLSelector;)Ljava/util/Collection;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
