// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
__jni_bindgen! {
    /// public enum [PKIXReason](https://developer.android.com/reference/java/security/cert/PKIXReason.html)
    ///
    /// Required feature: java-security-cert-PKIXReason
    public enum PKIXReason ("java/security/cert/PKIXReason") extends crate::java::lang::Enum, implements crate::java::security::cert::CertPathValidatorException_Reason {

        /// [values](https://developer.android.com/reference/java/security/cert/PKIXReason.html#values())
        ///
        /// Required features: "java-security-cert-PKIXReason"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-PKIXReason")))]
        pub fn values<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::security::cert::PKIXReason, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/PKIXReason", java.flags == PUBLIC | STATIC, .name == "values", .descriptor == "()[Ljava/security/cert/PKIXReason;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/security/cert/PKIXReason\0", "values\0", "()[Ljava/security/cert/PKIXReason;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [valueOf](https://developer.android.com/reference/java/security/cert/PKIXReason.html#valueOf(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-security-cert-PKIXReason"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-security-cert-PKIXReason")))]
        pub fn valueOf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/cert/PKIXReason", java.flags == PUBLIC | STATIC, .name == "valueOf", .descriptor == "(Ljava/lang/String;)Ljava/security/cert/PKIXReason;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/security/cert/PKIXReason\0", "valueOf\0", "(Ljava/lang/String;)Ljava/security/cert/PKIXReason;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [PKIXReason](https://developer.android.com/reference/java/security/cert/PKIXReason.html#PKIXReason(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/security/cert/PKIXReason", java.flags == PRIVATE, .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/cert/PKIXReason\0", "<init>\0", "(Ljava/lang/String;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// **get** public static final [NAME_CHAINING](https://developer.android.com/reference/java/security/cert/PKIXReason.html#NAME_CHAINING)
        ///
        /// Required feature: java-security-cert-PKIXReason
        #[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
        pub fn NAME_CHAINING<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/security/cert/PKIXReason\0", "NAME_CHAINING\0", "Ljava/security/cert/PKIXReason;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INVALID_KEY_USAGE](https://developer.android.com/reference/java/security/cert/PKIXReason.html#INVALID_KEY_USAGE)
        ///
        /// Required feature: java-security-cert-PKIXReason
        #[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
        pub fn INVALID_KEY_USAGE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/security/cert/PKIXReason\0", "INVALID_KEY_USAGE\0", "Ljava/security/cert/PKIXReason;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INVALID_POLICY](https://developer.android.com/reference/java/security/cert/PKIXReason.html#INVALID_POLICY)
        ///
        /// Required feature: java-security-cert-PKIXReason
        #[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
        pub fn INVALID_POLICY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/security/cert/PKIXReason\0", "INVALID_POLICY\0", "Ljava/security/cert/PKIXReason;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [NO_TRUST_ANCHOR](https://developer.android.com/reference/java/security/cert/PKIXReason.html#NO_TRUST_ANCHOR)
        ///
        /// Required feature: java-security-cert-PKIXReason
        #[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
        pub fn NO_TRUST_ANCHOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/security/cert/PKIXReason\0", "NO_TRUST_ANCHOR\0", "Ljava/security/cert/PKIXReason;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [UNRECOGNIZED_CRIT_EXT](https://developer.android.com/reference/java/security/cert/PKIXReason.html#UNRECOGNIZED_CRIT_EXT)
        ///
        /// Required feature: java-security-cert-PKIXReason
        #[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
        pub fn UNRECOGNIZED_CRIT_EXT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/security/cert/PKIXReason\0", "UNRECOGNIZED_CRIT_EXT\0", "Ljava/security/cert/PKIXReason;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [NOT_CA_CERT](https://developer.android.com/reference/java/security/cert/PKIXReason.html#NOT_CA_CERT)
        ///
        /// Required feature: java-security-cert-PKIXReason
        #[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
        pub fn NOT_CA_CERT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/security/cert/PKIXReason\0", "NOT_CA_CERT\0", "Ljava/security/cert/PKIXReason;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [PATH_TOO_LONG](https://developer.android.com/reference/java/security/cert/PKIXReason.html#PATH_TOO_LONG)
        ///
        /// Required feature: java-security-cert-PKIXReason
        #[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
        pub fn PATH_TOO_LONG<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/security/cert/PKIXReason\0", "PATH_TOO_LONG\0", "Ljava/security/cert/PKIXReason;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INVALID_NAME](https://developer.android.com/reference/java/security/cert/PKIXReason.html#INVALID_NAME)
        ///
        /// Required feature: java-security-cert-PKIXReason
        #[cfg(any(feature = "all", feature = "java-security-cert-PKIXReason"))]
        pub fn INVALID_NAME<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::PKIXReason>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/security/cert/PKIXReason\0", "INVALID_NAME\0", "Ljava/security/cert/PKIXReason;\0");
                env.get_static_object_field(class, field)
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: enum $VALUES
        // pub fn get_"$VALUES"<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::security::cert::PKIXReason, crate::java::lang::Throwable>>> { ... }
    }
}
