// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-security-CodeSource"))]
__jni_bindgen! {
    /// public class [CodeSource](https://developer.android.com/reference/java/security/CodeSource.html)
    ///
    /// Required feature: java-security-CodeSource
    public class CodeSource ("java/security/CodeSource") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        /// [CodeSource](https://developer.android.com/reference/java/security/CodeSource.html#CodeSource(java.net.URL,%20java.security.cert.Certificate%5B%5D))
        ///
        /// Required features: "java-net-URL", "java-security-cert-Certificate"
        #[cfg(any(feature = "all", all(feature = "java-net-URL", feature = "java-security-cert-Certificate")))]
        pub fn new_URL_Certificate_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::URL>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::security::cert::Certificate, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::CodeSource>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/CodeSource", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/net/URL;[Ljava/security/cert/Certificate;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/CodeSource\0", "<init>\0", "(Ljava/net/URL;[Ljava/security/cert/Certificate;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [CodeSource](https://developer.android.com/reference/java/security/CodeSource.html#CodeSource(java.net.URL,%20java.security.CodeSigner%5B%5D))
        ///
        /// Required features: "java-net-URL", "java-security-CodeSigner"
        #[cfg(any(feature = "all", all(feature = "java-net-URL", feature = "java-security-CodeSigner")))]
        pub fn new_URL_CodeSigner_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::URL>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::security::CodeSigner, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::security::CodeSource>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/CodeSource", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/net/URL;[Ljava/security/CodeSigner;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/CodeSource\0", "<init>\0", "(Ljava/net/URL;[Ljava/security/CodeSigner;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLocation](https://developer.android.com/reference/java/security/CodeSource.html#getLocation())
        ///
        /// Required features: "java-net-URL"
        #[cfg(any(feature = "all", all(feature = "java-net-URL")))]
        pub fn getLocation<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::net::URL>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/CodeSource", java.flags == PUBLIC | FINAL, .name == "getLocation", .descriptor == "()Ljava/net/URL;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/CodeSource\0", "getLocation\0", "()Ljava/net/URL;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCertificates](https://developer.android.com/reference/java/security/CodeSource.html#getCertificates())
        ///
        /// Required features: "java-security-cert-Certificate"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-Certificate")))]
        pub fn getCertificates<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::security::cert::Certificate, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/CodeSource", java.flags == PUBLIC | FINAL, .name == "getCertificates", .descriptor == "()[Ljava/security/cert/Certificate;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/CodeSource\0", "getCertificates\0", "()[Ljava/security/cert/Certificate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCodeSigners](https://developer.android.com/reference/java/security/CodeSource.html#getCodeSigners())
        ///
        /// Required features: "java-security-CodeSigner"
        #[cfg(any(feature = "all", all(feature = "java-security-CodeSigner")))]
        pub fn getCodeSigners<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::security::CodeSigner, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/CodeSource", java.flags == PUBLIC | FINAL, .name == "getCodeSigners", .descriptor == "()[Ljava/security/CodeSigner;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/CodeSource\0", "getCodeSigners\0", "()[Ljava/security/CodeSigner;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [implies](https://developer.android.com/reference/java/security/CodeSource.html#implies(java.security.CodeSource))
        ///
        /// Required features: "java-security-CodeSource"
        #[cfg(any(feature = "all", all(feature = "java-security-CodeSource")))]
        pub fn implies<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::CodeSource>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/security/CodeSource", java.flags == PUBLIC, .name == "implies", .descriptor == "(Ljava/security/CodeSource;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/security/CodeSource\0", "implies\0", "(Ljava/security/CodeSource;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
