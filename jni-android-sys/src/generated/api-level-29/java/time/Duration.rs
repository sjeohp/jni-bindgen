// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-time-Duration"))]
__jni_bindgen! {
    /// public final class [Duration](https://developer.android.com/reference/java/time/Duration.html)
    ///
    /// Required feature: java-time-Duration
    public final class Duration ("java/time/Duration") extends crate::java::lang::Object, implements crate::java::time::temporal::TemporalAmount, crate::java::lang::Comparable, crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [Duration](https://developer.android.com/reference/java/time/Duration.html#Duration(long,%20int))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::time::Duration>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/Duration", java.flags == (empty), .name == "<init>", .descriptor == "(JI)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "<init>\0", "(JI)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [ofDays](https://developer.android.com/reference/java/time/Duration.html#ofDays(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn ofDays<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "ofDays", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "ofDays\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ofHours](https://developer.android.com/reference/java/time/Duration.html#ofHours(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn ofHours<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "ofHours", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "ofHours\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ofMinutes](https://developer.android.com/reference/java/time/Duration.html#ofMinutes(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn ofMinutes<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "ofMinutes", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "ofMinutes\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ofSeconds](https://developer.android.com/reference/java/time/Duration.html#ofSeconds(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn ofSeconds_long<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "ofSeconds", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "ofSeconds\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ofSeconds](https://developer.android.com/reference/java/time/Duration.html#ofSeconds(long,%20long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn ofSeconds_long_long<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "ofSeconds", .descriptor == "(JJ)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "ofSeconds\0", "(JJ)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ofMillis](https://developer.android.com/reference/java/time/Duration.html#ofMillis(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn ofMillis<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "ofMillis", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "ofMillis\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ofNanos](https://developer.android.com/reference/java/time/Duration.html#ofNanos(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn ofNanos<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "ofNanos", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "ofNanos\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/time/Duration.html#of(long,%20java.time.temporal.TemporalUnit))
        ///
        /// Required features: "java-time-Duration", "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration", feature = "java-time-temporal-TemporalUnit")))]
        pub fn of<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "of\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [from](https://developer.android.com/reference/java/time/Duration.html#from(java.time.temporal.TemporalAmount))
        ///
        /// Required features: "java-time-Duration", "java-time-temporal-TemporalAmount"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration", feature = "java-time-temporal-TemporalAmount")))]
        pub fn from<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAmount>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "from", .descriptor == "(Ljava/time/temporal/TemporalAmount;)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "from\0", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/java/time/Duration.html#parse(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence", "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence", feature = "java-time-Duration")))]
        pub fn parse<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "parse", .descriptor == "(Ljava/lang/CharSequence;)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "parse\0", "(Ljava/lang/CharSequence;)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [between](https://developer.android.com/reference/java/time/Duration.html#between(java.time.temporal.Temporal,%20java.time.temporal.Temporal))
        ///
        /// Required features: "java-time-Duration", "java-time-temporal-Temporal"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration", feature = "java-time-temporal-Temporal")))]
        pub fn between<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::Temporal>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::Temporal>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC | STATIC, .name == "between", .descriptor == "(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Duration\0", "between\0", "(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Ljava/time/Duration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get](https://developer.android.com/reference/java/time/Duration.html#get(java.time.temporal.TemporalUnit))
        ///
        /// Required features: "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalUnit")))]
        pub fn get<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "get", .descriptor == "(Ljava/time/temporal/TemporalUnit;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "get\0", "(Ljava/time/temporal/TemporalUnit;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUnits](https://developer.android.com/reference/java/time/Duration.html#getUnits())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getUnits<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "getUnits", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "getUnits\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isZero](https://developer.android.com/reference/java/time/Duration.html#isZero())
        pub fn isZero<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "isZero", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "isZero\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNegative](https://developer.android.com/reference/java/time/Duration.html#isNegative())
        pub fn isNegative<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "isNegative", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "isNegative\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSeconds](https://developer.android.com/reference/java/time/Duration.html#getSeconds())
        pub fn getSeconds<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "getSeconds", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "getSeconds\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNano](https://developer.android.com/reference/java/time/Duration.html#getNano())
        pub fn getNano<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "getNano", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "getNano\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [withSeconds](https://developer.android.com/reference/java/time/Duration.html#withSeconds(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn withSeconds<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "withSeconds", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "withSeconds\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [withNanos](https://developer.android.com/reference/java/time/Duration.html#withNanos(int))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn withNanos<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "withNanos", .descriptor == "(I)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "withNanos\0", "(I)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plus](https://developer.android.com/reference/java/time/Duration.html#plus(java.time.Duration))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn plus_Duration<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::Duration>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "plus", .descriptor == "(Ljava/time/Duration;)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "plus\0", "(Ljava/time/Duration;)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plus](https://developer.android.com/reference/java/time/Duration.html#plus(long,%20java.time.temporal.TemporalUnit))
        ///
        /// Required features: "java-time-Duration", "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration", feature = "java-time-temporal-TemporalUnit")))]
        pub fn plus_long_TemporalUnit<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "plus", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "plus\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plusDays](https://developer.android.com/reference/java/time/Duration.html#plusDays(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn plusDays<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "plusDays", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "plusDays\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plusHours](https://developer.android.com/reference/java/time/Duration.html#plusHours(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn plusHours<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "plusHours", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "plusHours\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plusMinutes](https://developer.android.com/reference/java/time/Duration.html#plusMinutes(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn plusMinutes<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "plusMinutes", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "plusMinutes\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plusSeconds](https://developer.android.com/reference/java/time/Duration.html#plusSeconds(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn plusSeconds<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "plusSeconds", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "plusSeconds\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plusMillis](https://developer.android.com/reference/java/time/Duration.html#plusMillis(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn plusMillis<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "plusMillis", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "plusMillis\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plusNanos](https://developer.android.com/reference/java/time/Duration.html#plusNanos(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn plusNanos<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "plusNanos", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "plusNanos\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minus](https://developer.android.com/reference/java/time/Duration.html#minus(java.time.Duration))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn minus_Duration<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::Duration>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "minus", .descriptor == "(Ljava/time/Duration;)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "minus\0", "(Ljava/time/Duration;)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minus](https://developer.android.com/reference/java/time/Duration.html#minus(long,%20java.time.temporal.TemporalUnit))
        ///
        /// Required features: "java-time-Duration", "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration", feature = "java-time-temporal-TemporalUnit")))]
        pub fn minus_long_TemporalUnit<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "minus", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "minus\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minusDays](https://developer.android.com/reference/java/time/Duration.html#minusDays(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn minusDays<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "minusDays", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "minusDays\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minusHours](https://developer.android.com/reference/java/time/Duration.html#minusHours(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn minusHours<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "minusHours", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "minusHours\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minusMinutes](https://developer.android.com/reference/java/time/Duration.html#minusMinutes(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn minusMinutes<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "minusMinutes", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "minusMinutes\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minusSeconds](https://developer.android.com/reference/java/time/Duration.html#minusSeconds(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn minusSeconds<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "minusSeconds", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "minusSeconds\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minusMillis](https://developer.android.com/reference/java/time/Duration.html#minusMillis(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn minusMillis<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "minusMillis", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "minusMillis\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minusNanos](https://developer.android.com/reference/java/time/Duration.html#minusNanos(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn minusNanos<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "minusNanos", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "minusNanos\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [multipliedBy](https://developer.android.com/reference/java/time/Duration.html#multipliedBy(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn multipliedBy<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "multipliedBy", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "multipliedBy\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dividedBy](https://developer.android.com/reference/java/time/Duration.html#dividedBy(long))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn dividedBy<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "dividedBy", .descriptor == "(J)Ljava/time/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "dividedBy\0", "(J)Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [negated](https://developer.android.com/reference/java/time/Duration.html#negated())
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn negated<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "negated", .descriptor == "()Ljava/time/Duration;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "negated\0", "()Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [abs](https://developer.android.com/reference/java/time/Duration.html#abs())
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn abs<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "abs", .descriptor == "()Ljava/time/Duration;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "abs\0", "()Ljava/time/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addTo](https://developer.android.com/reference/java/time/Duration.html#addTo(java.time.temporal.Temporal))
        ///
        /// Required features: "java-time-temporal-Temporal"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal")))]
        pub fn addTo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::Temporal>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "addTo", .descriptor == "(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "addTo\0", "(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [subtractFrom](https://developer.android.com/reference/java/time/Duration.html#subtractFrom(java.time.temporal.Temporal))
        ///
        /// Required features: "java-time-temporal-Temporal"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal")))]
        pub fn subtractFrom<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::Temporal>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "subtractFrom", .descriptor == "(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "subtractFrom\0", "(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toDays](https://developer.android.com/reference/java/time/Duration.html#toDays())
        pub fn toDays<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "toDays", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "toDays\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toHours](https://developer.android.com/reference/java/time/Duration.html#toHours())
        pub fn toHours<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "toHours", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "toHours\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toMinutes](https://developer.android.com/reference/java/time/Duration.html#toMinutes())
        pub fn toMinutes<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "toMinutes", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "toMinutes\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toMillis](https://developer.android.com/reference/java/time/Duration.html#toMillis())
        pub fn toMillis<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "toMillis", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "toMillis\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toNanos](https://developer.android.com/reference/java/time/Duration.html#toNanos())
        pub fn toNanos<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "toNanos", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "toNanos\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [compareTo](https://developer.android.com/reference/java/time/Duration.html#compareTo(java.time.Duration))
        ///
        /// Required features: "java-time-Duration"
        #[cfg(any(feature = "all", all(feature = "java-time-Duration")))]
        pub fn compareTo_Duration<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::Duration>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "compareTo", .descriptor == "(Ljava/time/Duration;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "compareTo\0", "(Ljava/time/Duration;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/java/time/Duration.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/java/time/Duration.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/time/Duration.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Duration", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [compareTo](https://developer.android.com/reference/java/time/Duration.html#compareTo(java.lang.Object))
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn compareTo_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/Duration", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "compareTo", .descriptor == "(Ljava/lang/Object;)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Duration\0", "compareTo\0", "(Ljava/lang/Object;)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// **get** public static final [ZERO](https://developer.android.com/reference/java/time/Duration.html#ZERO)
        ///
        /// Required feature: java-time-Duration
        #[cfg(any(feature = "all", feature = "java-time-Duration"))]
        pub fn ZERO<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Duration>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Duration\0", "ZERO\0", "Ljava/time/Duration;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
