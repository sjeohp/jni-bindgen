// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-time-chrono-ThaiBuddhistDate"))]
__jni_bindgen! {
    /// public final class [ThaiBuddhistDate](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html)
    ///
    /// Required feature: java-time-chrono-ThaiBuddhistDate
    public final class ThaiBuddhistDate ("java/time/chrono/ThaiBuddhistDate") extends crate::java::lang::Object, implements crate::java::time::chrono::ChronoLocalDate, crate::java::time::temporal::Temporal, crate::java::time::temporal::TemporalAdjuster, crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [ThaiBuddhistDate](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#ThaiBuddhistDate(java.time.LocalDate))
        // ///
        // /// Required features: "java-time-LocalDate"
        // #[cfg(any(feature = "all", all(feature = "java-time-LocalDate")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::LocalDate>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/time/LocalDate;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "<init>\0", "(Ljava/time/LocalDate;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [now](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#now())
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate")))]
        pub fn now<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | STATIC, .name == "now", .descriptor == "()Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/chrono/ThaiBuddhistDate\0", "now\0", "()Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [now](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#now(java.time.ZoneId))
        ///
        /// Required features: "java-time-ZoneId", "java-time-chrono-ThaiBuddhistDate"
        #[cfg(any(feature = "all", all(feature = "java-time-ZoneId", feature = "java-time-chrono-ThaiBuddhistDate")))]
        pub fn now_ZoneId<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::ZoneId>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | STATIC, .name == "now", .descriptor == "(Ljava/time/ZoneId;)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/chrono/ThaiBuddhistDate\0", "now\0", "(Ljava/time/ZoneId;)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [now](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#now(java.time.Clock))
        ///
        /// Required features: "java-time-Clock", "java-time-chrono-ThaiBuddhistDate"
        #[cfg(any(feature = "all", all(feature = "java-time-Clock", feature = "java-time-chrono-ThaiBuddhistDate")))]
        pub fn now_Clock<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::Clock>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | STATIC, .name == "now", .descriptor == "(Ljava/time/Clock;)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/chrono/ThaiBuddhistDate\0", "now\0", "(Ljava/time/Clock;)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#of(int,%20int,%20int))
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate")))]
        pub fn of<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(III)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/chrono/ThaiBuddhistDate\0", "of\0", "(III)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [from](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#from(java.time.temporal.TemporalAccessor))
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate", "java-time-temporal-TemporalAccessor"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate", feature = "java-time-temporal-TemporalAccessor")))]
        pub fn from<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | STATIC, .name == "from", .descriptor == "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/chrono/ThaiBuddhistDate\0", "from\0", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChronology](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#getChronology())
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistChronology"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistChronology")))]
        pub fn getChronology<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistChronology>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "getChronology", .descriptor == "()Ljava/time/chrono/ThaiBuddhistChronology;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "getChronology\0", "()Ljava/time/chrono/ThaiBuddhistChronology;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEra](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#getEra())
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistEra"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistEra")))]
        pub fn getEra<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistEra>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "getEra", .descriptor == "()Ljava/time/chrono/ThaiBuddhistEra;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "getEra\0", "()Ljava/time/chrono/ThaiBuddhistEra;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [lengthOfMonth](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#lengthOfMonth())
        pub fn lengthOfMonth<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "lengthOfMonth", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "lengthOfMonth\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [range](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#range(java.time.temporal.TemporalField))
        ///
        /// Required features: "java-time-temporal-TemporalField", "java-time-temporal-ValueRange"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalField", feature = "java-time-temporal-ValueRange")))]
        pub fn range<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ValueRange>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "range", .descriptor == "(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "range\0", "(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLong](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#getLong(java.time.temporal.TemporalField))
        ///
        /// Required features: "java-time-temporal-TemporalField"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalField")))]
        pub fn getLong<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "getLong", .descriptor == "(Ljava/time/temporal/TemporalField;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "getLong\0", "(Ljava/time/temporal/TemporalField;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [with](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#with(java.time.temporal.TemporalField,%20long))
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate", "java-time-temporal-TemporalField"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate", feature = "java-time-temporal-TemporalField")))]
        pub fn with_TemporalField_long<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "with", .descriptor == "(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "with\0", "(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [with](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#with(java.time.temporal.TemporalAdjuster))
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate", "java-time-temporal-TemporalAdjuster"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate", feature = "java-time-temporal-TemporalAdjuster")))]
        pub fn with_TemporalAdjuster<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAdjuster>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "with", .descriptor == "(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "with\0", "(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#plus(java.time.temporal.TemporalAmount))
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate", "java-time-temporal-TemporalAmount"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate", feature = "java-time-temporal-TemporalAmount")))]
        pub fn plus_TemporalAmount<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAmount>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "plus", .descriptor == "(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "plus\0", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#minus(java.time.temporal.TemporalAmount))
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate", "java-time-temporal-TemporalAmount"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate", feature = "java-time-temporal-TemporalAmount")))]
        pub fn minus_TemporalAmount<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAmount>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "minus", .descriptor == "(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "minus\0", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#plus(long,%20java.time.temporal.TemporalUnit))
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate", "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate", feature = "java-time-temporal-TemporalUnit")))]
        pub fn plus_long_TemporalUnit<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "plus", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "plus\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#minus(long,%20java.time.temporal.TemporalUnit))
        ///
        /// Required features: "java-time-chrono-ThaiBuddhistDate", "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ThaiBuddhistDate", feature = "java-time-temporal-TemporalUnit")))]
        pub fn minus_long_TemporalUnit<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ThaiBuddhistDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "minus", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ThaiBuddhistDate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "minus\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ThaiBuddhistDate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [atTime](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#atTime(java.time.LocalTime))
        ///
        /// Required features: "java-time-LocalTime", "java-time-chrono-ChronoLocalDateTime"
        #[cfg(any(feature = "all", all(feature = "java-time-LocalTime", feature = "java-time-chrono-ChronoLocalDateTime")))]
        pub fn atTime<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::LocalTime>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ChronoLocalDateTime>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "atTime", .descriptor == "(Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "atTime\0", "(Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [until](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#until(java.time.chrono.ChronoLocalDate))
        ///
        /// Required features: "java-time-chrono-ChronoLocalDate", "java-time-chrono-ChronoPeriod"
        #[cfg(any(feature = "all", all(feature = "java-time-chrono-ChronoLocalDate", feature = "java-time-chrono-ChronoPeriod")))]
        pub fn until_ChronoLocalDate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::chrono::ChronoLocalDate>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ChronoPeriod>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "until", .descriptor == "(Ljava/time/chrono/ChronoLocalDate;)Ljava/time/chrono/ChronoPeriod;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "until\0", "(Ljava/time/chrono/ChronoLocalDate;)Ljava/time/chrono/ChronoPeriod;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toEpochDay](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#toEpochDay())
        pub fn toEpochDay<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "toEpochDay", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "toEpochDay\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [until](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#until(java.time.temporal.Temporal,%20java.time.temporal.TemporalUnit))
        ///
        /// Required features: "java-time-temporal-Temporal", "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal", feature = "java-time-temporal-TemporalUnit")))]
        pub fn until_Temporal_TemporalUnit<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::Temporal>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "until", .descriptor == "(Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "until\0", "(Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [minus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#minus(long,%20java.time.temporal.TemporalUnit))
        // ///
        // /// Required features: "java-time-chrono-ChronoLocalDate", "java-time-temporal-TemporalUnit"
        // #[cfg(any(feature = "all", all(feature = "java-time-chrono-ChronoLocalDate", feature = "java-time-temporal-TemporalUnit")))]
        // pub fn minus_long_TemporalUnit<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ChronoLocalDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "minus", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "minus\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [minus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#minus(java.time.temporal.TemporalAmount))
        // ///
        // /// Required features: "java-time-chrono-ChronoLocalDate", "java-time-temporal-TemporalAmount"
        // #[cfg(any(feature = "all", all(feature = "java-time-chrono-ChronoLocalDate", feature = "java-time-temporal-TemporalAmount")))]
        // pub fn minus_TemporalAmount<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAmount>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ChronoLocalDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "minus", .descriptor == "(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "minus\0", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [plus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#plus(long,%20java.time.temporal.TemporalUnit))
        // ///
        // /// Required features: "java-time-chrono-ChronoLocalDate", "java-time-temporal-TemporalUnit"
        // #[cfg(any(feature = "all", all(feature = "java-time-chrono-ChronoLocalDate", feature = "java-time-temporal-TemporalUnit")))]
        // pub fn plus_long_TemporalUnit<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ChronoLocalDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "plus", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "plus\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [plus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#plus(java.time.temporal.TemporalAmount))
        // ///
        // /// Required features: "java-time-chrono-ChronoLocalDate", "java-time-temporal-TemporalAmount"
        // #[cfg(any(feature = "all", all(feature = "java-time-chrono-ChronoLocalDate", feature = "java-time-temporal-TemporalAmount")))]
        // pub fn plus_TemporalAmount<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAmount>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ChronoLocalDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "plus", .descriptor == "(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "plus\0", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [with](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#with(java.time.temporal.TemporalField,%20long))
        // ///
        // /// Required features: "java-time-chrono-ChronoLocalDate", "java-time-temporal-TemporalField"
        // #[cfg(any(feature = "all", all(feature = "java-time-chrono-ChronoLocalDate", feature = "java-time-temporal-TemporalField")))]
        // pub fn with_TemporalField_long<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ChronoLocalDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "with", .descriptor == "(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDate;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "with\0", "(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDate;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [with](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#with(java.time.temporal.TemporalAdjuster))
        // ///
        // /// Required features: "java-time-chrono-ChronoLocalDate", "java-time-temporal-TemporalAdjuster"
        // #[cfg(any(feature = "all", all(feature = "java-time-chrono-ChronoLocalDate", feature = "java-time-temporal-TemporalAdjuster")))]
        // pub fn with_TemporalAdjuster<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAdjuster>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::ChronoLocalDate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "with", .descriptor == "(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDate;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "with\0", "(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDate;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [getEra](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#getEra())
        // ///
        // /// Required features: "java-time-chrono-Era"
        // #[cfg(any(feature = "all", all(feature = "java-time-chrono-Era")))]
        // pub fn getEra<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::Era>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "getEra", .descriptor == "()Ljava/time/chrono/Era;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "getEra\0", "()Ljava/time/chrono/Era;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [getChronology](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#getChronology())
        // ///
        // /// Required features: "java-time-chrono-Chronology"
        // #[cfg(any(feature = "all", all(feature = "java-time-chrono-Chronology")))]
        // pub fn getChronology<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::chrono::Chronology>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "getChronology", .descriptor == "()Ljava/time/chrono/Chronology;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "getChronology\0", "()Ljava/time/chrono/Chronology;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [minus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#minus(long,%20java.time.temporal.TemporalUnit))
        // ///
        // /// Required features: "java-time-temporal-Temporal", "java-time-temporal-TemporalUnit"
        // #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal", feature = "java-time-temporal-TemporalUnit")))]
        // pub fn minus_long_TemporalUnit<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "minus", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "minus\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [minus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#minus(java.time.temporal.TemporalAmount))
        // ///
        // /// Required features: "java-time-temporal-Temporal", "java-time-temporal-TemporalAmount"
        // #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal", feature = "java-time-temporal-TemporalAmount")))]
        // pub fn minus_TemporalAmount<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAmount>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "minus", .descriptor == "(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "minus\0", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [plus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#plus(long,%20java.time.temporal.TemporalUnit))
        // ///
        // /// Required features: "java-time-temporal-Temporal", "java-time-temporal-TemporalUnit"
        // #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal", feature = "java-time-temporal-TemporalUnit")))]
        // pub fn plus_long_TemporalUnit<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalUnit>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "plus", .descriptor == "(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "plus\0", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [plus](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#plus(java.time.temporal.TemporalAmount))
        // ///
        // /// Required features: "java-time-temporal-Temporal", "java-time-temporal-TemporalAmount"
        // #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal", feature = "java-time-temporal-TemporalAmount")))]
        // pub fn plus_TemporalAmount<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAmount>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "plus", .descriptor == "(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "plus\0", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [with](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#with(java.time.temporal.TemporalField,%20long))
        // ///
        // /// Required features: "java-time-temporal-Temporal", "java-time-temporal-TemporalField"
        // #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal", feature = "java-time-temporal-TemporalField")))]
        // pub fn with_TemporalField_long<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "with", .descriptor == "(Ljava/time/temporal/TemporalField;J)Ljava/time/temporal/Temporal;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "with\0", "(Ljava/time/temporal/TemporalField;J)Ljava/time/temporal/Temporal;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [with](https://developer.android.com/reference/java/time/chrono/ThaiBuddhistDate.html#with(java.time.temporal.TemporalAdjuster))
        // ///
        // /// Required features: "java-time-temporal-Temporal", "java-time-temporal-TemporalAdjuster"
        // #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal", feature = "java-time-temporal-TemporalAdjuster")))]
        // pub fn with_TemporalAdjuster<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAdjuster>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/chrono/ThaiBuddhistDate", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "with", .descriptor == "(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/temporal/Temporal;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/chrono/ThaiBuddhistDate\0", "with\0", "(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/temporal/Temporal;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
