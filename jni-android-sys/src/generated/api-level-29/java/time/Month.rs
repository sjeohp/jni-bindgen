// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-time-Month"))]
__jni_bindgen! {
    /// public enum [Month](https://developer.android.com/reference/java/time/Month.html)
    ///
    /// Required feature: java-time-Month
    public enum Month ("java/time/Month") extends crate::java::lang::Enum, implements crate::java::time::temporal::TemporalAccessor, crate::java::time::temporal::TemporalAdjuster {

        /// [values](https://developer.android.com/reference/java/time/Month.html#values())
        ///
        /// Required features: "java-time-Month"
        #[cfg(any(feature = "all", all(feature = "java-time-Month")))]
        pub fn values<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::time::Month, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC | STATIC, .name == "values", .descriptor == "()[Ljava/time/Month;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Month\0", "values\0", "()[Ljava/time/Month;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [valueOf](https://developer.android.com/reference/java/time/Month.html#valueOf(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-time-Month"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-time-Month")))]
        pub fn valueOf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC | STATIC, .name == "valueOf", .descriptor == "(Ljava/lang/String;)Ljava/time/Month;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Month\0", "valueOf\0", "(Ljava/lang/String;)Ljava/time/Month;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [Month](https://developer.android.com/reference/java/time/Month.html#Month(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::time::Month>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/Month", java.flags == PRIVATE, .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "<init>\0", "(Ljava/lang/String;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [of](https://developer.android.com/reference/java/time/Month.html#of(int))
        ///
        /// Required features: "java-time-Month"
        #[cfg(any(feature = "all", all(feature = "java-time-Month")))]
        pub fn of<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(I)Ljava/time/Month;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Month\0", "of\0", "(I)Ljava/time/Month;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [from](https://developer.android.com/reference/java/time/Month.html#from(java.time.temporal.TemporalAccessor))
        ///
        /// Required features: "java-time-Month", "java-time-temporal-TemporalAccessor"
        #[cfg(any(feature = "all", all(feature = "java-time-Month", feature = "java-time-temporal-TemporalAccessor")))]
        pub fn from<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC | STATIC, .name == "from", .descriptor == "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/Month;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/Month\0", "from\0", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/Month;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getValue](https://developer.android.com/reference/java/time/Month.html#getValue())
        pub fn getValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "getValue", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "getValue\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayName](https://developer.android.com/reference/java/time/Month.html#getDisplayName(java.time.format.TextStyle,%20java.util.Locale))
        ///
        /// Required features: "java-lang-String", "java-time-format-TextStyle", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-time-format-TextStyle", feature = "java-util-Locale")))]
        pub fn getDisplayName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::format::TextStyle>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "getDisplayName", .descriptor == "(Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "getDisplayName\0", "(Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSupported](https://developer.android.com/reference/java/time/Month.html#isSupported(java.time.temporal.TemporalField))
        ///
        /// Required features: "java-time-temporal-TemporalField"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalField")))]
        pub fn isSupported<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "isSupported", .descriptor == "(Ljava/time/temporal/TemporalField;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "isSupported\0", "(Ljava/time/temporal/TemporalField;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [range](https://developer.android.com/reference/java/time/Month.html#range(java.time.temporal.TemporalField))
        ///
        /// Required features: "java-time-temporal-TemporalField", "java-time-temporal-ValueRange"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalField", feature = "java-time-temporal-ValueRange")))]
        pub fn range<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ValueRange>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "range", .descriptor == "(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "range\0", "(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get](https://developer.android.com/reference/java/time/Month.html#get(java.time.temporal.TemporalField))
        ///
        /// Required features: "java-time-temporal-TemporalField"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalField")))]
        pub fn get<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "get", .descriptor == "(Ljava/time/temporal/TemporalField;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "get\0", "(Ljava/time/temporal/TemporalField;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLong](https://developer.android.com/reference/java/time/Month.html#getLong(java.time.temporal.TemporalField))
        ///
        /// Required features: "java-time-temporal-TemporalField"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalField")))]
        pub fn getLong<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalField>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "getLong", .descriptor == "(Ljava/time/temporal/TemporalField;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "getLong\0", "(Ljava/time/temporal/TemporalField;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [plus](https://developer.android.com/reference/java/time/Month.html#plus(long))
        ///
        /// Required features: "java-time-Month"
        #[cfg(any(feature = "all", all(feature = "java-time-Month")))]
        pub fn plus<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "plus", .descriptor == "(J)Ljava/time/Month;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "plus\0", "(J)Ljava/time/Month;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minus](https://developer.android.com/reference/java/time/Month.html#minus(long))
        ///
        /// Required features: "java-time-Month"
        #[cfg(any(feature = "all", all(feature = "java-time-Month")))]
        pub fn minus<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "minus", .descriptor == "(J)Ljava/time/Month;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "minus\0", "(J)Ljava/time/Month;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [length](https://developer.android.com/reference/java/time/Month.html#length(boolean))
        pub fn length<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "length", .descriptor == "(Z)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "length\0", "(Z)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minLength](https://developer.android.com/reference/java/time/Month.html#minLength())
        pub fn minLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "minLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "minLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [maxLength](https://developer.android.com/reference/java/time/Month.html#maxLength())
        pub fn maxLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "maxLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "maxLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [firstDayOfYear](https://developer.android.com/reference/java/time/Month.html#firstDayOfYear(boolean))
        pub fn firstDayOfYear<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "firstDayOfYear", .descriptor == "(Z)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "firstDayOfYear\0", "(Z)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [firstMonthOfQuarter](https://developer.android.com/reference/java/time/Month.html#firstMonthOfQuarter())
        ///
        /// Required features: "java-time-Month"
        #[cfg(any(feature = "all", all(feature = "java-time-Month")))]
        pub fn firstMonthOfQuarter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "firstMonthOfQuarter", .descriptor == "()Ljava/time/Month;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "firstMonthOfQuarter\0", "()Ljava/time/Month;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [query](https://developer.android.com/reference/java/time/Month.html#query(java.time.temporal.TemporalQuery))
        ///
        /// Required features: "java-lang-Object", "java-time-temporal-TemporalQuery"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-time-temporal-TemporalQuery")))]
        pub fn query<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalQuery>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "query", .descriptor == "(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "query\0", "(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [adjustInto](https://developer.android.com/reference/java/time/Month.html#adjustInto(java.time.temporal.Temporal))
        ///
        /// Required features: "java-time-temporal-Temporal"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal")))]
        pub fn adjustInto<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::Temporal>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/Month", java.flags == PUBLIC, .name == "adjustInto", .descriptor == "(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/Month\0", "adjustInto\0", "(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [JANUARY](https://developer.android.com/reference/java/time/Month.html#JANUARY)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn JANUARY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "JANUARY\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [FEBRUARY](https://developer.android.com/reference/java/time/Month.html#FEBRUARY)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn FEBRUARY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "FEBRUARY\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MARCH](https://developer.android.com/reference/java/time/Month.html#MARCH)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn MARCH<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "MARCH\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [APRIL](https://developer.android.com/reference/java/time/Month.html#APRIL)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn APRIL<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "APRIL\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MAY](https://developer.android.com/reference/java/time/Month.html#MAY)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn MAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "MAY\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [JUNE](https://developer.android.com/reference/java/time/Month.html#JUNE)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn JUNE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "JUNE\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [JULY](https://developer.android.com/reference/java/time/Month.html#JULY)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn JULY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "JULY\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [AUGUST](https://developer.android.com/reference/java/time/Month.html#AUGUST)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn AUGUST<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "AUGUST\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SEPTEMBER](https://developer.android.com/reference/java/time/Month.html#SEPTEMBER)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn SEPTEMBER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "SEPTEMBER\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [OCTOBER](https://developer.android.com/reference/java/time/Month.html#OCTOBER)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn OCTOBER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "OCTOBER\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [NOVEMBER](https://developer.android.com/reference/java/time/Month.html#NOVEMBER)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn NOVEMBER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "NOVEMBER\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DECEMBER](https://developer.android.com/reference/java/time/Month.html#DECEMBER)
        ///
        /// Required feature: java-time-Month
        #[cfg(any(feature = "all", feature = "java-time-Month"))]
        pub fn DECEMBER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Month>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/Month\0", "DECEMBER\0", "Ljava/time/Month;\0");
                env.get_static_object_field(class, field)
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: enum $VALUES
        // pub fn get_"$VALUES"<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::time::Month, crate::java::lang::Throwable>>> { ... }
    }
}
