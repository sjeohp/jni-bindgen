// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
__jni_bindgen! {
    /// public enum [ChronoField](https://developer.android.com/reference/java/time/temporal/ChronoField.html)
    ///
    /// Required feature: java-time-temporal-ChronoField
    public enum ChronoField ("java/time/temporal/ChronoField") extends crate::java::lang::Enum, implements crate::java::time::temporal::TemporalField {

        /// [values](https://developer.android.com/reference/java/time/temporal/ChronoField.html#values())
        ///
        /// Required features: "java-time-temporal-ChronoField"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-ChronoField")))]
        pub fn values<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::time::temporal::ChronoField, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC | STATIC, .name == "values", .descriptor == "()[Ljava/time/temporal/ChronoField;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/temporal/ChronoField\0", "values\0", "()[Ljava/time/temporal/ChronoField;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [valueOf](https://developer.android.com/reference/java/time/temporal/ChronoField.html#valueOf(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-time-temporal-ChronoField"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-time-temporal-ChronoField")))]
        pub fn valueOf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC | STATIC, .name == "valueOf", .descriptor == "(Ljava/lang/String;)Ljava/time/temporal/ChronoField;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/time/temporal/ChronoField\0", "valueOf\0", "(Ljava/lang/String;)Ljava/time/temporal/ChronoField;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [ChronoField](https://developer.android.com/reference/java/time/temporal/ChronoField.html#ChronoField(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/time/temporal/ChronoField", java.flags == PRIVATE, .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "<init>\0", "(Ljava/lang/String;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getDisplayName](https://developer.android.com/reference/java/time/temporal/ChronoField.html#getDisplayName(java.util.Locale))
        ///
        /// Required features: "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn getDisplayName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "getDisplayName", .descriptor == "(Ljava/util/Locale;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "getDisplayName\0", "(Ljava/util/Locale;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBaseUnit](https://developer.android.com/reference/java/time/temporal/ChronoField.html#getBaseUnit())
        ///
        /// Required features: "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalUnit")))]
        pub fn getBaseUnit<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::TemporalUnit>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "getBaseUnit", .descriptor == "()Ljava/time/temporal/TemporalUnit;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "getBaseUnit\0", "()Ljava/time/temporal/TemporalUnit;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRangeUnit](https://developer.android.com/reference/java/time/temporal/ChronoField.html#getRangeUnit())
        ///
        /// Required features: "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalUnit")))]
        pub fn getRangeUnit<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::TemporalUnit>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "getRangeUnit", .descriptor == "()Ljava/time/temporal/TemporalUnit;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "getRangeUnit\0", "()Ljava/time/temporal/TemporalUnit;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [range](https://developer.android.com/reference/java/time/temporal/ChronoField.html#range())
        ///
        /// Required features: "java-time-temporal-ValueRange"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-ValueRange")))]
        pub fn range<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ValueRange>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "range", .descriptor == "()Ljava/time/temporal/ValueRange;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "range\0", "()Ljava/time/temporal/ValueRange;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDateBased](https://developer.android.com/reference/java/time/temporal/ChronoField.html#isDateBased())
        pub fn isDateBased<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "isDateBased", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "isDateBased\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isTimeBased](https://developer.android.com/reference/java/time/temporal/ChronoField.html#isTimeBased())
        pub fn isTimeBased<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "isTimeBased", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "isTimeBased\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkValidValue](https://developer.android.com/reference/java/time/temporal/ChronoField.html#checkValidValue(long))
        pub fn checkValidValue<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "checkValidValue", .descriptor == "(J)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "checkValidValue\0", "(J)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkValidIntValue](https://developer.android.com/reference/java/time/temporal/ChronoField.html#checkValidIntValue(long))
        pub fn checkValidIntValue<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "checkValidIntValue", .descriptor == "(J)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "checkValidIntValue\0", "(J)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSupportedBy](https://developer.android.com/reference/java/time/temporal/ChronoField.html#isSupportedBy(java.time.temporal.TemporalAccessor))
        ///
        /// Required features: "java-time-temporal-TemporalAccessor"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalAccessor")))]
        pub fn isSupportedBy<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "isSupportedBy", .descriptor == "(Ljava/time/temporal/TemporalAccessor;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "isSupportedBy\0", "(Ljava/time/temporal/TemporalAccessor;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [rangeRefinedBy](https://developer.android.com/reference/java/time/temporal/ChronoField.html#rangeRefinedBy(java.time.temporal.TemporalAccessor))
        ///
        /// Required features: "java-time-temporal-TemporalAccessor", "java-time-temporal-ValueRange"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalAccessor", feature = "java-time-temporal-ValueRange")))]
        pub fn rangeRefinedBy<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ValueRange>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "rangeRefinedBy", .descriptor == "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "rangeRefinedBy\0", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFrom](https://developer.android.com/reference/java/time/temporal/ChronoField.html#getFrom(java.time.temporal.TemporalAccessor))
        ///
        /// Required features: "java-time-temporal-TemporalAccessor"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalAccessor")))]
        pub fn getFrom<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "getFrom", .descriptor == "(Ljava/time/temporal/TemporalAccessor;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "getFrom\0", "(Ljava/time/temporal/TemporalAccessor;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [adjustInto](https://developer.android.com/reference/java/time/temporal/ChronoField.html#adjustInto(java.time.temporal.Temporal,%20long))
        ///
        /// Required features: "java-time-temporal-Temporal"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal")))]
        pub fn adjustInto<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::Temporal>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "adjustInto", .descriptor == "(Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "adjustInto\0", "(Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/time/temporal/ChronoField.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/ChronoField", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/ChronoField\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [NANO_OF_SECOND](https://developer.android.com/reference/java/time/temporal/ChronoField.html#NANO_OF_SECOND)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn NANO_OF_SECOND<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "NANO_OF_SECOND\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [NANO_OF_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#NANO_OF_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn NANO_OF_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "NANO_OF_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MICRO_OF_SECOND](https://developer.android.com/reference/java/time/temporal/ChronoField.html#MICRO_OF_SECOND)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn MICRO_OF_SECOND<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "MICRO_OF_SECOND\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MICRO_OF_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#MICRO_OF_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn MICRO_OF_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "MICRO_OF_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MILLI_OF_SECOND](https://developer.android.com/reference/java/time/temporal/ChronoField.html#MILLI_OF_SECOND)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn MILLI_OF_SECOND<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "MILLI_OF_SECOND\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MILLI_OF_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#MILLI_OF_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn MILLI_OF_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "MILLI_OF_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SECOND_OF_MINUTE](https://developer.android.com/reference/java/time/temporal/ChronoField.html#SECOND_OF_MINUTE)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn SECOND_OF_MINUTE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "SECOND_OF_MINUTE\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SECOND_OF_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#SECOND_OF_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn SECOND_OF_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "SECOND_OF_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MINUTE_OF_HOUR](https://developer.android.com/reference/java/time/temporal/ChronoField.html#MINUTE_OF_HOUR)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn MINUTE_OF_HOUR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "MINUTE_OF_HOUR\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MINUTE_OF_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#MINUTE_OF_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn MINUTE_OF_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "MINUTE_OF_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [HOUR_OF_AMPM](https://developer.android.com/reference/java/time/temporal/ChronoField.html#HOUR_OF_AMPM)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn HOUR_OF_AMPM<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "HOUR_OF_AMPM\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CLOCK_HOUR_OF_AMPM](https://developer.android.com/reference/java/time/temporal/ChronoField.html#CLOCK_HOUR_OF_AMPM)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn CLOCK_HOUR_OF_AMPM<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "CLOCK_HOUR_OF_AMPM\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [HOUR_OF_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#HOUR_OF_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn HOUR_OF_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "HOUR_OF_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CLOCK_HOUR_OF_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#CLOCK_HOUR_OF_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn CLOCK_HOUR_OF_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "CLOCK_HOUR_OF_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [AMPM_OF_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#AMPM_OF_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn AMPM_OF_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "AMPM_OF_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DAY_OF_WEEK](https://developer.android.com/reference/java/time/temporal/ChronoField.html#DAY_OF_WEEK)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn DAY_OF_WEEK<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "DAY_OF_WEEK\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ALIGNED_DAY_OF_WEEK_IN_MONTH](https://developer.android.com/reference/java/time/temporal/ChronoField.html#ALIGNED_DAY_OF_WEEK_IN_MONTH)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn ALIGNED_DAY_OF_WEEK_IN_MONTH<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "ALIGNED_DAY_OF_WEEK_IN_MONTH\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ALIGNED_DAY_OF_WEEK_IN_YEAR](https://developer.android.com/reference/java/time/temporal/ChronoField.html#ALIGNED_DAY_OF_WEEK_IN_YEAR)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn ALIGNED_DAY_OF_WEEK_IN_YEAR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "ALIGNED_DAY_OF_WEEK_IN_YEAR\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DAY_OF_MONTH](https://developer.android.com/reference/java/time/temporal/ChronoField.html#DAY_OF_MONTH)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn DAY_OF_MONTH<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "DAY_OF_MONTH\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DAY_OF_YEAR](https://developer.android.com/reference/java/time/temporal/ChronoField.html#DAY_OF_YEAR)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn DAY_OF_YEAR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "DAY_OF_YEAR\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EPOCH_DAY](https://developer.android.com/reference/java/time/temporal/ChronoField.html#EPOCH_DAY)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn EPOCH_DAY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "EPOCH_DAY\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ALIGNED_WEEK_OF_MONTH](https://developer.android.com/reference/java/time/temporal/ChronoField.html#ALIGNED_WEEK_OF_MONTH)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn ALIGNED_WEEK_OF_MONTH<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "ALIGNED_WEEK_OF_MONTH\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ALIGNED_WEEK_OF_YEAR](https://developer.android.com/reference/java/time/temporal/ChronoField.html#ALIGNED_WEEK_OF_YEAR)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn ALIGNED_WEEK_OF_YEAR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "ALIGNED_WEEK_OF_YEAR\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [MONTH_OF_YEAR](https://developer.android.com/reference/java/time/temporal/ChronoField.html#MONTH_OF_YEAR)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn MONTH_OF_YEAR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "MONTH_OF_YEAR\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [PROLEPTIC_MONTH](https://developer.android.com/reference/java/time/temporal/ChronoField.html#PROLEPTIC_MONTH)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn PROLEPTIC_MONTH<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "PROLEPTIC_MONTH\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [YEAR_OF_ERA](https://developer.android.com/reference/java/time/temporal/ChronoField.html#YEAR_OF_ERA)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn YEAR_OF_ERA<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "YEAR_OF_ERA\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [YEAR](https://developer.android.com/reference/java/time/temporal/ChronoField.html#YEAR)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn YEAR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "YEAR\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ERA](https://developer.android.com/reference/java/time/temporal/ChronoField.html#ERA)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn ERA<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "ERA\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INSTANT_SECONDS](https://developer.android.com/reference/java/time/temporal/ChronoField.html#INSTANT_SECONDS)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn INSTANT_SECONDS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "INSTANT_SECONDS\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [OFFSET_SECONDS](https://developer.android.com/reference/java/time/temporal/ChronoField.html#OFFSET_SECONDS)
        ///
        /// Required feature: java-time-temporal-ChronoField
        #[cfg(any(feature = "all", feature = "java-time-temporal-ChronoField"))]
        pub fn OFFSET_SECONDS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ChronoField>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/time/temporal/ChronoField\0", "OFFSET_SECONDS\0", "Ljava/time/temporal/ChronoField;\0");
                env.get_static_object_field(class, field)
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: enum $VALUES
        // pub fn get_"$VALUES"<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::time::temporal::ChronoField, crate::java::lang::Throwable>>> { ... }
    }
}
