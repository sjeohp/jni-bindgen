// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-time-temporal-TemporalField"))]
__jni_bindgen! {
    /// public interface [TemporalField](https://developer.android.com/reference/java/time/temporal/TemporalField.html)
    ///
    /// Required feature: java-time-temporal-TemporalField
    public interface TemporalField ("java/time/temporal/TemporalField") extends crate::java::lang::Object {

        /// [getDisplayName](https://developer.android.com/reference/java/time/temporal/TemporalField.html#getDisplayName(java.util.Locale))
        ///
        /// Required features: "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn getDisplayName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC, .name == "getDisplayName", .descriptor == "(Ljava/util/Locale;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "getDisplayName\0", "(Ljava/util/Locale;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBaseUnit](https://developer.android.com/reference/java/time/temporal/TemporalField.html#getBaseUnit())
        ///
        /// Required features: "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalUnit")))]
        pub fn getBaseUnit<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::TemporalUnit>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "getBaseUnit", .descriptor == "()Ljava/time/temporal/TemporalUnit;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "getBaseUnit\0", "()Ljava/time/temporal/TemporalUnit;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRangeUnit](https://developer.android.com/reference/java/time/temporal/TemporalField.html#getRangeUnit())
        ///
        /// Required features: "java-time-temporal-TemporalUnit"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalUnit")))]
        pub fn getRangeUnit<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::TemporalUnit>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "getRangeUnit", .descriptor == "()Ljava/time/temporal/TemporalUnit;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "getRangeUnit\0", "()Ljava/time/temporal/TemporalUnit;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [range](https://developer.android.com/reference/java/time/temporal/TemporalField.html#range())
        ///
        /// Required features: "java-time-temporal-ValueRange"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-ValueRange")))]
        pub fn range<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ValueRange>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "range", .descriptor == "()Ljava/time/temporal/ValueRange;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "range\0", "()Ljava/time/temporal/ValueRange;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDateBased](https://developer.android.com/reference/java/time/temporal/TemporalField.html#isDateBased())
        pub fn isDateBased<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "isDateBased", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "isDateBased\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isTimeBased](https://developer.android.com/reference/java/time/temporal/TemporalField.html#isTimeBased())
        pub fn isTimeBased<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "isTimeBased", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "isTimeBased\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSupportedBy](https://developer.android.com/reference/java/time/temporal/TemporalField.html#isSupportedBy(java.time.temporal.TemporalAccessor))
        ///
        /// Required features: "java-time-temporal-TemporalAccessor"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalAccessor")))]
        pub fn isSupportedBy<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "isSupportedBy", .descriptor == "(Ljava/time/temporal/TemporalAccessor;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "isSupportedBy\0", "(Ljava/time/temporal/TemporalAccessor;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [rangeRefinedBy](https://developer.android.com/reference/java/time/temporal/TemporalField.html#rangeRefinedBy(java.time.temporal.TemporalAccessor))
        ///
        /// Required features: "java-time-temporal-TemporalAccessor", "java-time-temporal-ValueRange"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalAccessor", feature = "java-time-temporal-ValueRange")))]
        pub fn rangeRefinedBy<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::ValueRange>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "rangeRefinedBy", .descriptor == "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "rangeRefinedBy\0", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFrom](https://developer.android.com/reference/java/time/temporal/TemporalField.html#getFrom(java.time.temporal.TemporalAccessor))
        ///
        /// Required features: "java-time-temporal-TemporalAccessor"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-TemporalAccessor")))]
        pub fn getFrom<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "getFrom", .descriptor == "(Ljava/time/temporal/TemporalAccessor;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "getFrom\0", "(Ljava/time/temporal/TemporalAccessor;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [adjustInto](https://developer.android.com/reference/java/time/temporal/TemporalField.html#adjustInto(java.time.temporal.Temporal,%20long))
        ///
        /// Required features: "java-time-temporal-Temporal"
        #[cfg(any(feature = "all", all(feature = "java-time-temporal-Temporal")))]
        pub fn adjustInto<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::Temporal>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::Temporal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "adjustInto", .descriptor == "(Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "adjustInto\0", "(Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resolve](https://developer.android.com/reference/java/time/temporal/TemporalField.html#resolve(java.util.Map,%20java.time.temporal.TemporalAccessor,%20java.time.format.ResolverStyle))
        ///
        /// Required features: "java-time-format-ResolverStyle", "java-time-temporal-TemporalAccessor", "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-time-format-ResolverStyle", feature = "java-time-temporal-TemporalAccessor", feature = "java-util-Map")))]
        pub fn resolve<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::temporal::TemporalAccessor>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::format::ResolverStyle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::temporal::TemporalAccessor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC, .name == "resolve", .descriptor == "(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "resolve\0", "(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/time/temporal/TemporalField.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/time/temporal/TemporalField", java.flags == PUBLIC | ABSTRACT, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/time/temporal/TemporalField\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
