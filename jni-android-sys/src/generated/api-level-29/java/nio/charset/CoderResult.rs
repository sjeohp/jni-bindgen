// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-charset-CoderResult"))]
__jni_bindgen! {
    /// public class [CoderResult](https://developer.android.com/reference/java/nio/charset/CoderResult.html)
    ///
    /// Required feature: java-nio-charset-CoderResult
    public class CoderResult ("java/nio/charset/CoderResult") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [CoderResult](https://developer.android.com/reference/java/nio/charset/CoderResult.html#CoderResult(int,%20int))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::nio::charset::CoderResult>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/charset/CoderResult", java.flags == (empty), .name == "<init>", .descriptor == "(II)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "<init>\0", "(II)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [toString](https://developer.android.com/reference/java/nio/charset/CoderResult.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUnderflow](https://developer.android.com/reference/java/nio/charset/CoderResult.html#isUnderflow())
        pub fn isUnderflow<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC, .name == "isUnderflow", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "isUnderflow\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isOverflow](https://developer.android.com/reference/java/nio/charset/CoderResult.html#isOverflow())
        pub fn isOverflow<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC, .name == "isOverflow", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "isOverflow\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isError](https://developer.android.com/reference/java/nio/charset/CoderResult.html#isError())
        pub fn isError<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC, .name == "isError", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "isError\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isMalformed](https://developer.android.com/reference/java/nio/charset/CoderResult.html#isMalformed())
        pub fn isMalformed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC, .name == "isMalformed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "isMalformed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUnmappable](https://developer.android.com/reference/java/nio/charset/CoderResult.html#isUnmappable())
        pub fn isUnmappable<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC, .name == "isUnmappable", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "isUnmappable\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [length](https://developer.android.com/reference/java/nio/charset/CoderResult.html#length())
        pub fn length<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC, .name == "length", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "length\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [malformedForLength](https://developer.android.com/reference/java/nio/charset/CoderResult.html#malformedForLength(int))
        ///
        /// Required features: "java-nio-charset-CoderResult"
        #[cfg(any(feature = "all", all(feature = "java-nio-charset-CoderResult")))]
        pub fn malformedForLength<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::charset::CoderResult>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC | STATIC, .name == "malformedForLength", .descriptor == "(I)Ljava/nio/charset/CoderResult;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/charset/CoderResult\0", "malformedForLength\0", "(I)Ljava/nio/charset/CoderResult;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmappableForLength](https://developer.android.com/reference/java/nio/charset/CoderResult.html#unmappableForLength(int))
        ///
        /// Required features: "java-nio-charset-CoderResult"
        #[cfg(any(feature = "all", all(feature = "java-nio-charset-CoderResult")))]
        pub fn unmappableForLength<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::charset::CoderResult>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC | STATIC, .name == "unmappableForLength", .descriptor == "(I)Ljava/nio/charset/CoderResult;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/charset/CoderResult\0", "unmappableForLength\0", "(I)Ljava/nio/charset/CoderResult;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [throwException](https://developer.android.com/reference/java/nio/charset/CoderResult.html#throwException())
        pub fn throwException<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/charset/CoderResult", java.flags == PUBLIC, .name == "throwException", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/charset/CoderResult\0", "throwException\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [OVERFLOW](https://developer.android.com/reference/java/nio/charset/CoderResult.html#OVERFLOW)
        ///
        /// Required feature: java-nio-charset-CoderResult
        #[cfg(any(feature = "all", feature = "java-nio-charset-CoderResult"))]
        pub fn OVERFLOW<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::charset::CoderResult>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/nio/charset/CoderResult\0", "OVERFLOW\0", "Ljava/nio/charset/CoderResult;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [UNDERFLOW](https://developer.android.com/reference/java/nio/charset/CoderResult.html#UNDERFLOW)
        ///
        /// Required feature: java-nio-charset-CoderResult
        #[cfg(any(feature = "all", feature = "java-nio-charset-CoderResult"))]
        pub fn UNDERFLOW<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::charset::CoderResult>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/nio/charset/CoderResult\0", "UNDERFLOW\0", "Ljava/nio/charset/CoderResult;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
