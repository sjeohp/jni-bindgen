// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-file-DirectoryIteratorException"))]
__jni_bindgen! {
    /// public final class [DirectoryIteratorException](https://developer.android.com/reference/java/nio/file/DirectoryIteratorException.html)
    ///
    /// Required feature: java-nio-file-DirectoryIteratorException
    public final class DirectoryIteratorException ("java/nio/file/DirectoryIteratorException") extends crate::java::util::ConcurrentModificationException {

        /// [DirectoryIteratorException](https://developer.android.com/reference/java/nio/file/DirectoryIteratorException.html#DirectoryIteratorException(java.io.IOException))
        ///
        /// Required features: "java-io-IOException"
        #[cfg(any(feature = "all", all(feature = "java-io-IOException")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::IOException>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::nio::file::DirectoryIteratorException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/DirectoryIteratorException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/IOException;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/DirectoryIteratorException\0", "<init>\0", "(Ljava/io/IOException;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCause](https://developer.android.com/reference/java/nio/file/DirectoryIteratorException.html#getCause())
        ///
        /// Required features: "java-io-IOException"
        #[cfg(any(feature = "all", all(feature = "java-io-IOException")))]
        pub fn getCause<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::IOException>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/DirectoryIteratorException", java.flags == PUBLIC, .name == "getCause", .descriptor == "()Ljava/io/IOException;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/DirectoryIteratorException\0", "getCause\0", "()Ljava/io/IOException;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [getCause](https://developer.android.com/reference/java/nio/file/DirectoryIteratorException.html#getCause())
        // ///
        // /// Required features: "java-lang-Throwable"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Throwable")))]
        // pub fn getCause<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Throwable>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/file/DirectoryIteratorException", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "getCause", .descriptor == "()Ljava/lang/Throwable;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/DirectoryIteratorException\0", "getCause\0", "()Ljava/lang/Throwable;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
