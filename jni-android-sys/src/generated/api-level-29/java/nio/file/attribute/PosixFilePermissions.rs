// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-file-attribute-PosixFilePermissions"))]
__jni_bindgen! {
    /// public final class [PosixFilePermissions](https://developer.android.com/reference/java/nio/file/attribute/PosixFilePermissions.html)
    ///
    /// Required feature: java-nio-file-attribute-PosixFilePermissions
    public final class PosixFilePermissions ("java/nio/file/attribute/PosixFilePermissions") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [PosixFilePermissions](https://developer.android.com/reference/java/nio/file/attribute/PosixFilePermissions.html#PosixFilePermissions())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::PosixFilePermissions>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/file/attribute/PosixFilePermissions", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/PosixFilePermissions\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [toString](https://developer.android.com/reference/java/nio/file/attribute/PosixFilePermissions.html#toString(java.util.Set))
        ///
        /// Required features: "java-lang-String", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Set")))]
        pub fn toString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/PosixFilePermissions", java.flags == PUBLIC | STATIC, .name == "toString", .descriptor == "(Ljava/util/Set;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/file/attribute/PosixFilePermissions\0", "toString\0", "(Ljava/util/Set;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fromString](https://developer.android.com/reference/java/nio/file/attribute/PosixFilePermissions.html#fromString(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Set")))]
        pub fn fromString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/PosixFilePermissions", java.flags == PUBLIC | STATIC, .name == "fromString", .descriptor == "(Ljava/lang/String;)Ljava/util/Set;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/file/attribute/PosixFilePermissions\0", "fromString\0", "(Ljava/lang/String;)Ljava/util/Set;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [asFileAttribute](https://developer.android.com/reference/java/nio/file/attribute/PosixFilePermissions.html#asFileAttribute(java.util.Set))
        ///
        /// Required features: "java-nio-file-attribute-FileAttribute", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-FileAttribute", feature = "java-util-Set")))]
        pub fn asFileAttribute<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::FileAttribute>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/PosixFilePermissions", java.flags == PUBLIC | STATIC, .name == "asFileAttribute", .descriptor == "(Ljava/util/Set;)Ljava/nio/file/attribute/FileAttribute;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/file/attribute/PosixFilePermissions\0", "asFileAttribute\0", "(Ljava/util/Set;)Ljava/nio/file/attribute/FileAttribute;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
