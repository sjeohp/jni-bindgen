// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-file-attribute-PosixFileAttributes"))]
__jni_bindgen! {
    /// public interface [PosixFileAttributes](https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributes.html)
    ///
    /// Required feature: java-nio-file-attribute-PosixFileAttributes
    public interface PosixFileAttributes ("java/nio/file/attribute/PosixFileAttributes") extends crate::java::lang::Object, implements crate::java::nio::file::attribute::BasicFileAttributes {

        /// [owner](https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributes.html#owner())
        ///
        /// Required features: "java-nio-file-attribute-UserPrincipal"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-UserPrincipal")))]
        pub fn owner<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::UserPrincipal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/PosixFileAttributes", java.flags == PUBLIC | ABSTRACT, .name == "owner", .descriptor == "()Ljava/nio/file/attribute/UserPrincipal;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/PosixFileAttributes\0", "owner\0", "()Ljava/nio/file/attribute/UserPrincipal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [group](https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributes.html#group())
        ///
        /// Required features: "java-nio-file-attribute-GroupPrincipal"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-GroupPrincipal")))]
        pub fn group<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::GroupPrincipal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/PosixFileAttributes", java.flags == PUBLIC | ABSTRACT, .name == "group", .descriptor == "()Ljava/nio/file/attribute/GroupPrincipal;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/PosixFileAttributes\0", "group\0", "()Ljava/nio/file/attribute/GroupPrincipal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [permissions](https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributes.html#permissions())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn permissions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/PosixFileAttributes", java.flags == PUBLIC | ABSTRACT, .name == "permissions", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/PosixFileAttributes\0", "permissions\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
