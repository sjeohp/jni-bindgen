// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-file-attribute-AclEntry_Builder"))]
__jni_bindgen! {
    /// public final class [AclEntry.Builder](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html)
    ///
    /// Required feature: java-nio-file-attribute-AclEntry_Builder
    public final class AclEntry_Builder ("java/nio/file/attribute/AclEntry$Builder") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Builder](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html#Builder(java.nio.file.attribute.AclEntryType,%20java.nio.file.attribute.UserPrincipal,%20java.util.Set,%20java.util.Set))
        // ///
        // /// Required features: "java-nio-file-attribute-AclEntryType", "java-nio-file-attribute-UserPrincipal", "java-util-Set"
        // #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-AclEntryType", feature = "java-nio-file-attribute-UserPrincipal", feature = "java-util-Set")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::file::attribute::AclEntryType>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::file::attribute::UserPrincipal>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::AclEntry_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/file/attribute/AclEntry$Builder", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/nio/file/attribute/AclEntryType;Ljava/nio/file/attribute/UserPrincipal;Ljava/util/Set;Ljava/util/Set;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/AclEntry$Builder\0", "<init>\0", "(Ljava/nio/file/attribute/AclEntryType;Ljava/nio/file/attribute/UserPrincipal;Ljava/util/Set;Ljava/util/Set;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [build](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html#build())
        ///
        /// Required features: "java-nio-file-attribute-AclEntry"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-AclEntry")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::AclEntry>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/AclEntry$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Ljava/nio/file/attribute/AclEntry;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/AclEntry$Builder\0", "build\0", "()Ljava/nio/file/attribute/AclEntry;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setType](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html#setType(java.nio.file.attribute.AclEntryType))
        ///
        /// Required features: "java-nio-file-attribute-AclEntryType", "java-nio-file-attribute-AclEntry_Builder"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-AclEntryType", feature = "java-nio-file-attribute-AclEntry_Builder")))]
        pub fn setType<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::file::attribute::AclEntryType>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::AclEntry_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/AclEntry$Builder", java.flags == PUBLIC, .name == "setType", .descriptor == "(Ljava/nio/file/attribute/AclEntryType;)Ljava/nio/file/attribute/AclEntry$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/AclEntry$Builder\0", "setType\0", "(Ljava/nio/file/attribute/AclEntryType;)Ljava/nio/file/attribute/AclEntry$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPrincipal](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html#setPrincipal(java.nio.file.attribute.UserPrincipal))
        ///
        /// Required features: "java-nio-file-attribute-AclEntry_Builder", "java-nio-file-attribute-UserPrincipal"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-AclEntry_Builder", feature = "java-nio-file-attribute-UserPrincipal")))]
        pub fn setPrincipal<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::file::attribute::UserPrincipal>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::AclEntry_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/AclEntry$Builder", java.flags == PUBLIC, .name == "setPrincipal", .descriptor == "(Ljava/nio/file/attribute/UserPrincipal;)Ljava/nio/file/attribute/AclEntry$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/AclEntry$Builder\0", "setPrincipal\0", "(Ljava/nio/file/attribute/UserPrincipal;)Ljava/nio/file/attribute/AclEntry$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPermissions](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html#setPermissions(java.util.Set))
        ///
        /// Required features: "java-nio-file-attribute-AclEntry_Builder", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-AclEntry_Builder", feature = "java-util-Set")))]
        pub fn setPermissions_Set<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::AclEntry_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/AclEntry$Builder", java.flags == PUBLIC, .name == "setPermissions", .descriptor == "(Ljava/util/Set;)Ljava/nio/file/attribute/AclEntry$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/AclEntry$Builder\0", "setPermissions\0", "(Ljava/util/Set;)Ljava/nio/file/attribute/AclEntry$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPermissions](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html#setPermissions(java.nio.file.attribute.AclEntryPermission...))
        ///
        /// Required features: "java-nio-file-attribute-AclEntryPermission", "java-nio-file-attribute-AclEntry_Builder"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-AclEntryPermission", feature = "java-nio-file-attribute-AclEntry_Builder")))]
        pub fn setPermissions_AclEntryPermission_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::nio::file::attribute::AclEntryPermission, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::AclEntry_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/AclEntry$Builder", java.flags == PUBLIC | VARARGS, .name == "setPermissions", .descriptor == "([Ljava/nio/file/attribute/AclEntryPermission;)Ljava/nio/file/attribute/AclEntry$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/AclEntry$Builder\0", "setPermissions\0", "([Ljava/nio/file/attribute/AclEntryPermission;)Ljava/nio/file/attribute/AclEntry$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFlags](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html#setFlags(java.util.Set))
        ///
        /// Required features: "java-nio-file-attribute-AclEntry_Builder", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-AclEntry_Builder", feature = "java-util-Set")))]
        pub fn setFlags_Set<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::AclEntry_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/AclEntry$Builder", java.flags == PUBLIC, .name == "setFlags", .descriptor == "(Ljava/util/Set;)Ljava/nio/file/attribute/AclEntry$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/AclEntry$Builder\0", "setFlags\0", "(Ljava/util/Set;)Ljava/nio/file/attribute/AclEntry$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFlags](https://developer.android.com/reference/java/nio/file/attribute/AclEntry.Builder.html#setFlags(java.nio.file.attribute.AclEntryFlag...))
        ///
        /// Required features: "java-nio-file-attribute-AclEntryFlag", "java-nio-file-attribute-AclEntry_Builder"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-AclEntryFlag", feature = "java-nio-file-attribute-AclEntry_Builder")))]
        pub fn setFlags_AclEntryFlag_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::nio::file::attribute::AclEntryFlag, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::AclEntry_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/AclEntry$Builder", java.flags == PUBLIC | VARARGS, .name == "setFlags", .descriptor == "([Ljava/nio/file/attribute/AclEntryFlag;)Ljava/nio/file/attribute/AclEntry$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/AclEntry$Builder\0", "setFlags\0", "([Ljava/nio/file/attribute/AclEntryFlag;)Ljava/nio/file/attribute/AclEntry$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
