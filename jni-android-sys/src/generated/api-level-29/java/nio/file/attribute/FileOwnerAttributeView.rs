// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-file-attribute-FileOwnerAttributeView"))]
__jni_bindgen! {
    /// public interface [FileOwnerAttributeView](https://developer.android.com/reference/java/nio/file/attribute/FileOwnerAttributeView.html)
    ///
    /// Required feature: java-nio-file-attribute-FileOwnerAttributeView
    public interface FileOwnerAttributeView ("java/nio/file/attribute/FileOwnerAttributeView") extends crate::java::lang::Object, implements crate::java::nio::file::attribute::FileAttributeView {

        /// [name](https://developer.android.com/reference/java/nio/file/attribute/FileOwnerAttributeView.html#name())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn name<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/FileOwnerAttributeView", java.flags == PUBLIC | ABSTRACT, .name == "name", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/FileOwnerAttributeView\0", "name\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOwner](https://developer.android.com/reference/java/nio/file/attribute/FileOwnerAttributeView.html#getOwner())
        ///
        /// Required features: "java-nio-file-attribute-UserPrincipal"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-UserPrincipal")))]
        pub fn getOwner<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::attribute::UserPrincipal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/FileOwnerAttributeView", java.flags == PUBLIC | ABSTRACT, .name == "getOwner", .descriptor == "()Ljava/nio/file/attribute/UserPrincipal;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/FileOwnerAttributeView\0", "getOwner\0", "()Ljava/nio/file/attribute/UserPrincipal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOwner](https://developer.android.com/reference/java/nio/file/attribute/FileOwnerAttributeView.html#setOwner(java.nio.file.attribute.UserPrincipal))
        ///
        /// Required features: "java-nio-file-attribute-UserPrincipal"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-attribute-UserPrincipal")))]
        pub fn setOwner<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::file::attribute::UserPrincipal>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/FileOwnerAttributeView", java.flags == PUBLIC | ABSTRACT, .name == "setOwner", .descriptor == "(Ljava/nio/file/attribute/UserPrincipal;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/FileOwnerAttributeView\0", "setOwner\0", "(Ljava/nio/file/attribute/UserPrincipal;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
