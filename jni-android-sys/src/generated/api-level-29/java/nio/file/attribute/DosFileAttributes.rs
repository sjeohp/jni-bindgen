// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-file-attribute-DosFileAttributes"))]
__jni_bindgen! {
    /// public interface [DosFileAttributes](https://developer.android.com/reference/java/nio/file/attribute/DosFileAttributes.html)
    ///
    /// Required feature: java-nio-file-attribute-DosFileAttributes
    public interface DosFileAttributes ("java/nio/file/attribute/DosFileAttributes") extends crate::java::lang::Object, implements crate::java::nio::file::attribute::BasicFileAttributes {

        /// [isReadOnly](https://developer.android.com/reference/java/nio/file/attribute/DosFileAttributes.html#isReadOnly())
        pub fn isReadOnly<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/DosFileAttributes", java.flags == PUBLIC | ABSTRACT, .name == "isReadOnly", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/DosFileAttributes\0", "isReadOnly\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isHidden](https://developer.android.com/reference/java/nio/file/attribute/DosFileAttributes.html#isHidden())
        pub fn isHidden<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/DosFileAttributes", java.flags == PUBLIC | ABSTRACT, .name == "isHidden", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/DosFileAttributes\0", "isHidden\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isArchive](https://developer.android.com/reference/java/nio/file/attribute/DosFileAttributes.html#isArchive())
        pub fn isArchive<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/DosFileAttributes", java.flags == PUBLIC | ABSTRACT, .name == "isArchive", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/DosFileAttributes\0", "isArchive\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSystem](https://developer.android.com/reference/java/nio/file/attribute/DosFileAttributes.html#isSystem())
        pub fn isSystem<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/attribute/DosFileAttributes", java.flags == PUBLIC | ABSTRACT, .name == "isSystem", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/attribute/DosFileAttributes\0", "isSystem\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
