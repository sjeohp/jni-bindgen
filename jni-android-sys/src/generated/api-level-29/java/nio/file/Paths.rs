// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-file-Paths"))]
__jni_bindgen! {
    /// public final class [Paths](https://developer.android.com/reference/java/nio/file/Paths.html)
    ///
    /// Required feature: java-nio-file-Paths
    public final class Paths ("java/nio/file/Paths") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Paths](https://developer.android.com/reference/java/nio/file/Paths.html#Paths())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::nio::file::Paths>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/file/Paths", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/Paths\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [get](https://developer.android.com/reference/java/nio/file/Paths.html#get(java.lang.String,%20java.lang.String...))
        ///
        /// Required features: "java-lang-String", "java-nio-file-Path"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-nio-file-Path")))]
        pub fn get_String_String_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::Path>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/Paths", java.flags == PUBLIC | STATIC | VARARGS, .name == "get", .descriptor == "(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/file/Paths\0", "get\0", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get](https://developer.android.com/reference/java/nio/file/Paths.html#get(java.net.URI))
        ///
        /// Required features: "java-net-URI", "java-nio-file-Path"
        #[cfg(any(feature = "all", all(feature = "java-net-URI", feature = "java-nio-file-Path")))]
        pub fn get_URI<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::net::URI>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::Path>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/Paths", java.flags == PUBLIC | STATIC, .name == "get", .descriptor == "(Ljava/net/URI;)Ljava/nio/file/Path;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/file/Paths\0", "get\0", "(Ljava/net/URI;)Ljava/nio/file/Path;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
