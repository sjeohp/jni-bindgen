// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-file-WatchEvent"))]
__jni_bindgen! {
    /// public interface [WatchEvent](https://developer.android.com/reference/java/nio/file/WatchEvent.html)
    ///
    /// Required feature: java-nio-file-WatchEvent
    public interface WatchEvent ("java/nio/file/WatchEvent") extends crate::java::lang::Object {

        /// [kind](https://developer.android.com/reference/java/nio/file/WatchEvent.html#kind())
        ///
        /// Required features: "java-nio-file-WatchEvent_Kind"
        #[cfg(any(feature = "all", all(feature = "java-nio-file-WatchEvent_Kind")))]
        pub fn kind<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::file::WatchEvent_Kind>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/WatchEvent", java.flags == PUBLIC | ABSTRACT, .name == "kind", .descriptor == "()Ljava/nio/file/WatchEvent$Kind;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/WatchEvent\0", "kind\0", "()Ljava/nio/file/WatchEvent$Kind;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [count](https://developer.android.com/reference/java/nio/file/WatchEvent.html#count())
        pub fn count<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/WatchEvent", java.flags == PUBLIC | ABSTRACT, .name == "count", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/WatchEvent\0", "count\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [context](https://developer.android.com/reference/java/nio/file/WatchEvent.html#context())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn context<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/file/WatchEvent", java.flags == PUBLIC | ABSTRACT, .name == "context", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/file/WatchEvent\0", "context\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
