// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-channels-spi-AbstractSelector"))]
__jni_bindgen! {
    /// public class [AbstractSelector](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html)
    ///
    /// Required feature: java-nio-channels-spi-AbstractSelector
    public class AbstractSelector ("java/nio/channels/spi/AbstractSelector") extends crate::java::nio::channels::Selector {

        // // Not emitting: Non-public method
        // /// [AbstractSelector](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#AbstractSelector(java.nio.channels.spi.SelectorProvider))
        // ///
        // /// Required features: "java-nio-channels-spi-SelectorProvider"
        // #[cfg(any(feature = "all", all(feature = "java-nio-channels-spi-SelectorProvider")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::spi::SelectorProvider>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::nio::channels::spi::AbstractSelector>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/nio/channels/spi/SelectorProvider;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "<init>\0", "(Ljava/nio/channels/spi/SelectorProvider;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [close](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#close())
        pub fn close<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PUBLIC | FINAL, .name == "close", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "close\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [implCloseSelector](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#implCloseSelector())
        // fn implCloseSelector<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PROTECTED | ABSTRACT, .name == "implCloseSelector", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "implCloseSelector\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [isOpen](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#isOpen())
        pub fn isOpen<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PUBLIC | FINAL, .name == "isOpen", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "isOpen\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [provider](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#provider())
        ///
        /// Required features: "java-nio-channels-spi-SelectorProvider"
        #[cfg(any(feature = "all", all(feature = "java-nio-channels-spi-SelectorProvider")))]
        pub fn provider<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::channels::spi::SelectorProvider>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PUBLIC | FINAL, .name == "provider", .descriptor == "()Ljava/nio/channels/spi/SelectorProvider;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "provider\0", "()Ljava/nio/channels/spi/SelectorProvider;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [cancelledKeys](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#cancelledKeys())
        // ///
        // /// Required features: "java-util-Set"
        // #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        // fn cancelledKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PROTECTED | FINAL, .name == "cancelledKeys", .descriptor == "()Ljava/util/Set;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "cancelledKeys\0", "()Ljava/util/Set;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [register](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#register(java.nio.channels.spi.AbstractSelectableChannel,%20int,%20java.lang.Object))
        // ///
        // /// Required features: "java-lang-Object", "java-nio-channels-SelectionKey", "java-nio-channels-spi-AbstractSelectableChannel"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-nio-channels-SelectionKey", feature = "java-nio-channels-spi-AbstractSelectableChannel")))]
        // fn register<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::spi::AbstractSelectableChannel>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::channels::SelectionKey>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PROTECTED | ABSTRACT, .name == "register", .descriptor == "(Ljava/nio/channels/spi/AbstractSelectableChannel;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "register\0", "(Ljava/nio/channels/spi/AbstractSelectableChannel;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [deregister](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#deregister(java.nio.channels.spi.AbstractSelectionKey))
        // ///
        // /// Required features: "java-nio-channels-spi-AbstractSelectionKey"
        // #[cfg(any(feature = "all", all(feature = "java-nio-channels-spi-AbstractSelectionKey")))]
        // fn deregister<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::spi::AbstractSelectionKey>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PROTECTED | FINAL, .name == "deregister", .descriptor == "(Ljava/nio/channels/spi/AbstractSelectionKey;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "deregister\0", "(Ljava/nio/channels/spi/AbstractSelectionKey;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [begin](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#begin())
        // fn begin<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PROTECTED | FINAL, .name == "begin", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "begin\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [end](https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html#end())
        // fn end<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/channels/spi/AbstractSelector", java.flags == PROTECTED | FINAL, .name == "end", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/spi/AbstractSelector\0", "end\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
