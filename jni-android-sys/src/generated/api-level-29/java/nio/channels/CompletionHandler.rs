// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-channels-CompletionHandler"))]
__jni_bindgen! {
    /// public interface [CompletionHandler](https://developer.android.com/reference/java/nio/channels/CompletionHandler.html)
    ///
    /// Required feature: java-nio-channels-CompletionHandler
    public interface CompletionHandler ("java/nio/channels/CompletionHandler") extends crate::java::lang::Object {

        /// [completed](https://developer.android.com/reference/java/nio/channels/CompletionHandler.html#completed(java.lang.Object,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn completed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/CompletionHandler", java.flags == PUBLIC | ABSTRACT, .name == "completed", .descriptor == "(Ljava/lang/Object;Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/CompletionHandler\0", "completed\0", "(Ljava/lang/Object;Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [failed](https://developer.android.com/reference/java/nio/channels/CompletionHandler.html#failed(java.lang.Throwable,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-lang-Throwable"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-Throwable")))]
        pub fn failed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Throwable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/CompletionHandler", java.flags == PUBLIC | ABSTRACT, .name == "failed", .descriptor == "(Ljava/lang/Throwable;Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/CompletionHandler\0", "failed\0", "(Ljava/lang/Throwable;Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
