// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-channels-Channels"))]
__jni_bindgen! {
    /// public final class [Channels](https://developer.android.com/reference/java/nio/channels/Channels.html)
    ///
    /// Required feature: java-nio-channels-Channels
    public final class Channels ("java/nio/channels/Channels") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Channels](https://developer.android.com/reference/java/nio/channels/Channels.html#Channels())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::nio::channels::Channels>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/channels/Channels", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/channels/Channels\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [newInputStream](https://developer.android.com/reference/java/nio/channels/Channels.html#newInputStream(java.nio.channels.ReadableByteChannel))
        ///
        /// Required features: "java-io-InputStream", "java-nio-channels-ReadableByteChannel"
        #[cfg(any(feature = "all", all(feature = "java-io-InputStream", feature = "java-nio-channels-ReadableByteChannel")))]
        pub fn newInputStream_ReadableByteChannel<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::ReadableByteChannel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::InputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newInputStream", .descriptor == "(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newInputStream\0", "(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newOutputStream](https://developer.android.com/reference/java/nio/channels/Channels.html#newOutputStream(java.nio.channels.WritableByteChannel))
        ///
        /// Required features: "java-io-OutputStream", "java-nio-channels-WritableByteChannel"
        #[cfg(any(feature = "all", all(feature = "java-io-OutputStream", feature = "java-nio-channels-WritableByteChannel")))]
        pub fn newOutputStream_WritableByteChannel<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::WritableByteChannel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::OutputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newOutputStream", .descriptor == "(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newOutputStream\0", "(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newInputStream](https://developer.android.com/reference/java/nio/channels/Channels.html#newInputStream(java.nio.channels.AsynchronousByteChannel))
        ///
        /// Required features: "java-io-InputStream", "java-nio-channels-AsynchronousByteChannel"
        #[cfg(any(feature = "all", all(feature = "java-io-InputStream", feature = "java-nio-channels-AsynchronousByteChannel")))]
        pub fn newInputStream_AsynchronousByteChannel<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::AsynchronousByteChannel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::InputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newInputStream", .descriptor == "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/InputStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newInputStream\0", "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/InputStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newOutputStream](https://developer.android.com/reference/java/nio/channels/Channels.html#newOutputStream(java.nio.channels.AsynchronousByteChannel))
        ///
        /// Required features: "java-io-OutputStream", "java-nio-channels-AsynchronousByteChannel"
        #[cfg(any(feature = "all", all(feature = "java-io-OutputStream", feature = "java-nio-channels-AsynchronousByteChannel")))]
        pub fn newOutputStream_AsynchronousByteChannel<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::AsynchronousByteChannel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::OutputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newOutputStream", .descriptor == "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/OutputStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newOutputStream\0", "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/OutputStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newChannel](https://developer.android.com/reference/java/nio/channels/Channels.html#newChannel(java.io.InputStream))
        ///
        /// Required features: "java-io-InputStream", "java-nio-channels-ReadableByteChannel"
        #[cfg(any(feature = "all", all(feature = "java-io-InputStream", feature = "java-nio-channels-ReadableByteChannel")))]
        pub fn newChannel_InputStream<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::InputStream>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::channels::ReadableByteChannel>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newChannel", .descriptor == "(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newChannel\0", "(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newChannel](https://developer.android.com/reference/java/nio/channels/Channels.html#newChannel(java.io.OutputStream))
        ///
        /// Required features: "java-io-OutputStream", "java-nio-channels-WritableByteChannel"
        #[cfg(any(feature = "all", all(feature = "java-io-OutputStream", feature = "java-nio-channels-WritableByteChannel")))]
        pub fn newChannel_OutputStream<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::OutputStream>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::channels::WritableByteChannel>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newChannel", .descriptor == "(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newChannel\0", "(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newReader](https://developer.android.com/reference/java/nio/channels/Channels.html#newReader(java.nio.channels.ReadableByteChannel,%20java.nio.charset.CharsetDecoder,%20int))
        ///
        /// Required features: "java-io-Reader", "java-nio-channels-ReadableByteChannel", "java-nio-charset-CharsetDecoder"
        #[cfg(any(feature = "all", all(feature = "java-io-Reader", feature = "java-nio-channels-ReadableByteChannel", feature = "java-nio-charset-CharsetDecoder")))]
        pub fn newReader_ReadableByteChannel_CharsetDecoder_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::ReadableByteChannel>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::charset::CharsetDecoder>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::Reader>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newReader", .descriptor == "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newReader\0", "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newReader](https://developer.android.com/reference/java/nio/channels/Channels.html#newReader(java.nio.channels.ReadableByteChannel,%20java.lang.String))
        ///
        /// Required features: "java-io-Reader", "java-lang-String", "java-nio-channels-ReadableByteChannel"
        #[cfg(any(feature = "all", all(feature = "java-io-Reader", feature = "java-lang-String", feature = "java-nio-channels-ReadableByteChannel")))]
        pub fn newReader_ReadableByteChannel_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::ReadableByteChannel>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::Reader>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newReader", .descriptor == "(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newReader\0", "(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newWriter](https://developer.android.com/reference/java/nio/channels/Channels.html#newWriter(java.nio.channels.WritableByteChannel,%20java.nio.charset.CharsetEncoder,%20int))
        ///
        /// Required features: "java-io-Writer", "java-nio-channels-WritableByteChannel", "java-nio-charset-CharsetEncoder"
        #[cfg(any(feature = "all", all(feature = "java-io-Writer", feature = "java-nio-channels-WritableByteChannel", feature = "java-nio-charset-CharsetEncoder")))]
        pub fn newWriter_WritableByteChannel_CharsetEncoder_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::WritableByteChannel>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::charset::CharsetEncoder>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::Writer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newWriter", .descriptor == "(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newWriter\0", "(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newWriter](https://developer.android.com/reference/java/nio/channels/Channels.html#newWriter(java.nio.channels.WritableByteChannel,%20java.lang.String))
        ///
        /// Required features: "java-io-Writer", "java-lang-String", "java-nio-channels-WritableByteChannel"
        #[cfg(any(feature = "all", all(feature = "java-io-Writer", feature = "java-lang-String", feature = "java-nio-channels-WritableByteChannel")))]
        pub fn newWriter_WritableByteChannel_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::channels::WritableByteChannel>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::Writer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/channels/Channels", java.flags == PUBLIC | STATIC, .name == "newWriter", .descriptor == "(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/nio/channels/Channels\0", "newWriter\0", "(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
