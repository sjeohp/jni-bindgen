// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-nio-MappedByteBuffer"))]
__jni_bindgen! {
    /// public class [MappedByteBuffer](https://developer.android.com/reference/java/nio/MappedByteBuffer.html)
    ///
    /// Required feature: java-nio-MappedByteBuffer
    public class MappedByteBuffer ("java/nio/MappedByteBuffer") extends crate::java::nio::ByteBuffer {

        // // Not emitting: Non-public method
        // /// [MappedByteBuffer](https://developer.android.com/reference/java/nio/MappedByteBuffer.html#MappedByteBuffer(int,%20int,%20int,%20int))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::nio::MappedByteBuffer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/nio/MappedByteBuffer", java.flags == (empty), .name == "<init>", .descriptor == "(IIII)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/MappedByteBuffer\0", "<init>\0", "(IIII)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [isLoaded](https://developer.android.com/reference/java/nio/MappedByteBuffer.html#isLoaded())
        pub fn isLoaded<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/MappedByteBuffer", java.flags == PUBLIC | FINAL, .name == "isLoaded", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/MappedByteBuffer\0", "isLoaded\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [load](https://developer.android.com/reference/java/nio/MappedByteBuffer.html#load())
        ///
        /// Required features: "java-nio-MappedByteBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-MappedByteBuffer")))]
        pub fn load<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::MappedByteBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/MappedByteBuffer", java.flags == PUBLIC | FINAL, .name == "load", .descriptor == "()Ljava/nio/MappedByteBuffer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/MappedByteBuffer\0", "load\0", "()Ljava/nio/MappedByteBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [force](https://developer.android.com/reference/java/nio/MappedByteBuffer.html#force())
        ///
        /// Required features: "java-nio-MappedByteBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-MappedByteBuffer")))]
        pub fn force<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::MappedByteBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/nio/MappedByteBuffer", java.flags == PUBLIC | FINAL, .name == "force", .descriptor == "()Ljava/nio/MappedByteBuffer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/nio/MappedByteBuffer\0", "force\0", "()Ljava/nio/MappedByteBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
