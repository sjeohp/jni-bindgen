// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-lang-reflect-Modifier"))]
__jni_bindgen! {
    /// public class [Modifier](https://developer.android.com/reference/java/lang/reflect/Modifier.html)
    ///
    /// Required feature: java-lang-reflect-Modifier
    public class Modifier ("java/lang/reflect/Modifier") extends crate::java::lang::Object {

        /// [Modifier](https://developer.android.com/reference/java/lang/reflect/Modifier.html#Modifier())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::lang::reflect::Modifier>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/reflect/Modifier\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isPublic](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isPublic(int))
        pub fn isPublic<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isPublic", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isPublic\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isPrivate](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isPrivate(int))
        pub fn isPrivate<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isPrivate", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isPrivate\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isProtected](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isProtected(int))
        pub fn isProtected<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isProtected", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isProtected\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isStatic](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isStatic(int))
        pub fn isStatic<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isStatic", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isStatic\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isFinal](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isFinal(int))
        pub fn isFinal<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isFinal", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isFinal\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSynchronized](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isSynchronized(int))
        pub fn isSynchronized<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isSynchronized", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isSynchronized\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isVolatile](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isVolatile(int))
        pub fn isVolatile<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isVolatile", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isVolatile\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isTransient](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isTransient(int))
        pub fn isTransient<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isTransient", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isTransient\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNative](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isNative(int))
        pub fn isNative<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isNative", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isNative\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isInterface](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isInterface(int))
        pub fn isInterface<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isInterface", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isInterface\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isAbstract](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isAbstract(int))
        pub fn isAbstract<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isAbstract", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isAbstract\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isStrict](https://developer.android.com/reference/java/lang/reflect/Modifier.html#isStrict(int))
        pub fn isStrict<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "isStrict", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "isStrict\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/lang/reflect/Modifier.html#toString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "toString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "toString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [classModifiers](https://developer.android.com/reference/java/lang/reflect/Modifier.html#classModifiers())
        pub fn classModifiers<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "classModifiers", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "classModifiers\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [interfaceModifiers](https://developer.android.com/reference/java/lang/reflect/Modifier.html#interfaceModifiers())
        pub fn interfaceModifiers<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "interfaceModifiers", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "interfaceModifiers\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [constructorModifiers](https://developer.android.com/reference/java/lang/reflect/Modifier.html#constructorModifiers())
        pub fn constructorModifiers<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "constructorModifiers", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "constructorModifiers\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [methodModifiers](https://developer.android.com/reference/java/lang/reflect/Modifier.html#methodModifiers())
        pub fn methodModifiers<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "methodModifiers", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "methodModifiers\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fieldModifiers](https://developer.android.com/reference/java/lang/reflect/Modifier.html#fieldModifiers())
        pub fn fieldModifiers<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "fieldModifiers", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "fieldModifiers\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parameterModifiers](https://developer.android.com/reference/java/lang/reflect/Modifier.html#parameterModifiers())
        pub fn parameterModifiers<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Modifier", java.flags == PUBLIC | STATIC, .name == "parameterModifiers", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Modifier\0", "parameterModifiers\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ABSTRACT](https://developer.android.com/reference/java/lang/reflect/Modifier.html#ABSTRACT)
        pub const ABSTRACT : i32 = 1024;

        /// public static final [FINAL](https://developer.android.com/reference/java/lang/reflect/Modifier.html#FINAL)
        pub const FINAL : i32 = 16;

        /// public static final [INTERFACE](https://developer.android.com/reference/java/lang/reflect/Modifier.html#INTERFACE)
        pub const INTERFACE : i32 = 512;

        /// public static final [NATIVE](https://developer.android.com/reference/java/lang/reflect/Modifier.html#NATIVE)
        pub const NATIVE : i32 = 256;

        /// public static final [PRIVATE](https://developer.android.com/reference/java/lang/reflect/Modifier.html#PRIVATE)
        pub const PRIVATE : i32 = 2;

        /// public static final [PROTECTED](https://developer.android.com/reference/java/lang/reflect/Modifier.html#PROTECTED)
        pub const PROTECTED : i32 = 4;

        /// public static final [PUBLIC](https://developer.android.com/reference/java/lang/reflect/Modifier.html#PUBLIC)
        pub const PUBLIC : i32 = 1;

        /// public static final [STATIC](https://developer.android.com/reference/java/lang/reflect/Modifier.html#STATIC)
        pub const STATIC : i32 = 8;

        /// public static final [STRICT](https://developer.android.com/reference/java/lang/reflect/Modifier.html#STRICT)
        pub const STRICT : i32 = 2048;

        /// public static final [SYNCHRONIZED](https://developer.android.com/reference/java/lang/reflect/Modifier.html#SYNCHRONIZED)
        pub const SYNCHRONIZED : i32 = 32;

        /// public static final [TRANSIENT](https://developer.android.com/reference/java/lang/reflect/Modifier.html#TRANSIENT)
        pub const TRANSIENT : i32 = 128;

        /// public static final [VOLATILE](https://developer.android.com/reference/java/lang/reflect/Modifier.html#VOLATILE)
        pub const VOLATILE : i32 = 64;
    }
}
