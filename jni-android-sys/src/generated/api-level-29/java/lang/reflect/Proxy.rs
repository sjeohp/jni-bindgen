// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-lang-reflect-Proxy"))]
__jni_bindgen! {
    /// public class [Proxy](https://developer.android.com/reference/java/lang/reflect/Proxy.html)
    ///
    /// Required feature: java-lang-reflect-Proxy
    public class Proxy ("java/lang/reflect/Proxy") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [Proxy](https://developer.android.com/reference/java/lang/reflect/Proxy.html#Proxy(java.lang.reflect.InvocationHandler))
        // ///
        // /// Required features: "java-lang-reflect-InvocationHandler"
        // #[cfg(any(feature = "all", all(feature = "java-lang-reflect-InvocationHandler")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::reflect::InvocationHandler>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::lang::reflect::Proxy>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/lang/reflect/Proxy", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/lang/reflect/InvocationHandler;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/reflect/Proxy\0", "<init>\0", "(Ljava/lang/reflect/InvocationHandler;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getProxyClass](https://developer.android.com/reference/java/lang/reflect/Proxy.html#getProxyClass(java.lang.ClassLoader,%20java.lang.Class...))
        ///
        /// Required features: "java-lang-Class", "java-lang-ClassLoader"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-lang-ClassLoader")))]
        pub fn getProxyClass<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::Class, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Class>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Proxy", java.flags == PUBLIC | STATIC | VARARGS, .name == "getProxyClass", .descriptor == "(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Proxy\0", "getProxyClass\0", "(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newProxyInstance](https://developer.android.com/reference/java/lang/reflect/Proxy.html#newProxyInstance(java.lang.ClassLoader,%20java.lang.Class%5B%5D,%20java.lang.reflect.InvocationHandler))
        ///
        /// Required features: "java-lang-Class", "java-lang-ClassLoader", "java-lang-Object", "java-lang-reflect-InvocationHandler"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-lang-ClassLoader", feature = "java-lang-Object", feature = "java-lang-reflect-InvocationHandler")))]
        pub fn newProxyInstance<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::Class, crate::java::lang::Throwable>>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::reflect::InvocationHandler>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Proxy", java.flags == PUBLIC | STATIC, .name == "newProxyInstance", .descriptor == "(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Proxy\0", "newProxyInstance\0", "(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isProxyClass](https://developer.android.com/reference/java/lang/reflect/Proxy.html#isProxyClass(java.lang.Class))
        ///
        /// Required features: "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class")))]
        pub fn isProxyClass<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Proxy", java.flags == PUBLIC | STATIC, .name == "isProxyClass", .descriptor == "(Ljava/lang/Class;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Proxy\0", "isProxyClass\0", "(Ljava/lang/Class;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInvocationHandler](https://developer.android.com/reference/java/lang/reflect/Proxy.html#getInvocationHandler(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-lang-reflect-InvocationHandler"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-reflect-InvocationHandler")))]
        pub fn getInvocationHandler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::reflect::InvocationHandler>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/reflect/Proxy", java.flags == PUBLIC | STATIC, .name == "getInvocationHandler", .descriptor == "(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/lang/reflect/Proxy\0", "getInvocationHandler\0", "(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // /// **get** protected [h](https://developer.android.com/reference/java/lang/reflect/Proxy.html#h)
        // ///
        // /// Required feature: java-lang-reflect-InvocationHandler
        // #[cfg(any(feature = "all", feature = "java-lang-reflect-InvocationHandler"))]
        // pub fn h<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::reflect::InvocationHandler>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/lang/reflect/Proxy\0", "h\0", "Ljava/lang/reflect/InvocationHandler;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [h](https://developer.android.com/reference/java/lang/reflect/Proxy.html#h)
        // ///
        // /// Required feature: java-lang-reflect-InvocationHandler
        // #[cfg(any(feature = "all", feature = "java-lang-reflect-InvocationHandler"))]
        // pub fn set_h<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::reflect::InvocationHandler>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/lang/reflect/Proxy\0", "h\0", "Ljava/lang/reflect/InvocationHandler;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
