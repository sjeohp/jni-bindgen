// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-lang-ref-ReferenceQueue"))]
__jni_bindgen! {
    /// public class [ReferenceQueue](https://developer.android.com/reference/java/lang/ref/ReferenceQueue.html)
    ///
    /// Required feature: java-lang-ref-ReferenceQueue
    public class ReferenceQueue ("java/lang/ref/ReferenceQueue") extends crate::java::lang::Object {

        /// [ReferenceQueue](https://developer.android.com/reference/java/lang/ref/ReferenceQueue.html#ReferenceQueue())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::lang::r#ref::ReferenceQueue>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/ref/ReferenceQueue", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/ref/ReferenceQueue\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [poll](https://developer.android.com/reference/java/lang/ref/ReferenceQueue.html#poll())
        ///
        /// Required features: "java-lang-ref-Reference"
        #[cfg(any(feature = "all", all(feature = "java-lang-ref-Reference")))]
        pub fn poll<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::r#ref::Reference>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/ref/ReferenceQueue", java.flags == PUBLIC, .name == "poll", .descriptor == "()Ljava/lang/ref/Reference;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/ref/ReferenceQueue\0", "poll\0", "()Ljava/lang/ref/Reference;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [remove](https://developer.android.com/reference/java/lang/ref/ReferenceQueue.html#remove(long))
        ///
        /// Required features: "java-lang-ref-Reference"
        #[cfg(any(feature = "all", all(feature = "java-lang-ref-Reference")))]
        pub fn remove_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::r#ref::Reference>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/ref/ReferenceQueue", java.flags == PUBLIC, .name == "remove", .descriptor == "(J)Ljava/lang/ref/Reference;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/ref/ReferenceQueue\0", "remove\0", "(J)Ljava/lang/ref/Reference;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [remove](https://developer.android.com/reference/java/lang/ref/ReferenceQueue.html#remove())
        ///
        /// Required features: "java-lang-ref-Reference"
        #[cfg(any(feature = "all", all(feature = "java-lang-ref-Reference")))]
        pub fn remove<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::r#ref::Reference>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/ref/ReferenceQueue", java.flags == PUBLIC, .name == "remove", .descriptor == "()Ljava/lang/ref/Reference;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/ref/ReferenceQueue\0", "remove\0", "()Ljava/lang/ref/Reference;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
