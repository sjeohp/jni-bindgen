// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-lang-invoke-CallSite"))]
__jni_bindgen! {
    /// public class [CallSite](https://developer.android.com/reference/java/lang/invoke/CallSite.html)
    ///
    /// Required feature: java-lang-invoke-CallSite
    public class CallSite ("java/lang/invoke/CallSite") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [CallSite](https://developer.android.com/reference/java/lang/invoke/CallSite.html#CallSite(java.lang.invoke.MethodType))
        // ///
        // /// Required features: "java-lang-invoke-MethodType"
        // #[cfg(any(feature = "all", all(feature = "java-lang-invoke-MethodType")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::invoke::MethodType>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::lang::invoke::CallSite>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/lang/invoke/CallSite", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/invoke/MethodType;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/invoke/CallSite\0", "<init>\0", "(Ljava/lang/invoke/MethodType;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [type](https://developer.android.com/reference/java/lang/invoke/CallSite.html#type())
        ///
        /// Required features: "java-lang-invoke-MethodType"
        #[cfg(any(feature = "all", all(feature = "java-lang-invoke-MethodType")))]
        pub fn r#type<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::invoke::MethodType>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/invoke/CallSite", java.flags == PUBLIC, .name == "type", .descriptor == "()Ljava/lang/invoke/MethodType;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/invoke/CallSite\0", "type\0", "()Ljava/lang/invoke/MethodType;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTarget](https://developer.android.com/reference/java/lang/invoke/CallSite.html#getTarget())
        ///
        /// Required features: "java-lang-invoke-MethodHandle"
        #[cfg(any(feature = "all", all(feature = "java-lang-invoke-MethodHandle")))]
        pub fn getTarget<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::invoke::MethodHandle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/invoke/CallSite", java.flags == PUBLIC | ABSTRACT, .name == "getTarget", .descriptor == "()Ljava/lang/invoke/MethodHandle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/invoke/CallSite\0", "getTarget\0", "()Ljava/lang/invoke/MethodHandle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTarget](https://developer.android.com/reference/java/lang/invoke/CallSite.html#setTarget(java.lang.invoke.MethodHandle))
        ///
        /// Required features: "java-lang-invoke-MethodHandle"
        #[cfg(any(feature = "all", all(feature = "java-lang-invoke-MethodHandle")))]
        pub fn setTarget<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::invoke::MethodHandle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/invoke/CallSite", java.flags == PUBLIC | ABSTRACT, .name == "setTarget", .descriptor == "(Ljava/lang/invoke/MethodHandle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/invoke/CallSite\0", "setTarget\0", "(Ljava/lang/invoke/MethodHandle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dynamicInvoker](https://developer.android.com/reference/java/lang/invoke/CallSite.html#dynamicInvoker())
        ///
        /// Required features: "java-lang-invoke-MethodHandle"
        #[cfg(any(feature = "all", all(feature = "java-lang-invoke-MethodHandle")))]
        pub fn dynamicInvoker<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::invoke::MethodHandle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/lang/invoke/CallSite", java.flags == PUBLIC | ABSTRACT, .name == "dynamicInvoker", .descriptor == "()Ljava/lang/invoke/MethodHandle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/lang/invoke/CallSite\0", "dynamicInvoker\0", "()Ljava/lang/invoke/MethodHandle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
