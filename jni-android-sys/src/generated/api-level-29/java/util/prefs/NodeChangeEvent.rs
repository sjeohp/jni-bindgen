// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-prefs-NodeChangeEvent"))]
__jni_bindgen! {
    /// public class [NodeChangeEvent](https://developer.android.com/reference/java/util/prefs/NodeChangeEvent.html)
    ///
    /// Required feature: java-util-prefs-NodeChangeEvent
    public class NodeChangeEvent ("java/util/prefs/NodeChangeEvent") extends crate::java::util::EventObject {

        /// [NodeChangeEvent](https://developer.android.com/reference/java/util/prefs/NodeChangeEvent.html#NodeChangeEvent(java.util.prefs.Preferences,%20java.util.prefs.Preferences))
        ///
        /// Required features: "java-util-prefs-Preferences"
        #[cfg(any(feature = "all", all(feature = "java-util-prefs-Preferences")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::prefs::Preferences>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::prefs::Preferences>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::prefs::NodeChangeEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/prefs/NodeChangeEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/prefs/NodeChangeEvent\0", "<init>\0", "(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getParent](https://developer.android.com/reference/java/util/prefs/NodeChangeEvent.html#getParent())
        ///
        /// Required features: "java-util-prefs-Preferences"
        #[cfg(any(feature = "all", all(feature = "java-util-prefs-Preferences")))]
        pub fn getParent<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::prefs::Preferences>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/prefs/NodeChangeEvent", java.flags == PUBLIC, .name == "getParent", .descriptor == "()Ljava/util/prefs/Preferences;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/prefs/NodeChangeEvent\0", "getParent\0", "()Ljava/util/prefs/Preferences;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChild](https://developer.android.com/reference/java/util/prefs/NodeChangeEvent.html#getChild())
        ///
        /// Required features: "java-util-prefs-Preferences"
        #[cfg(any(feature = "all", all(feature = "java-util-prefs-Preferences")))]
        pub fn getChild<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::prefs::Preferences>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/prefs/NodeChangeEvent", java.flags == PUBLIC, .name == "getChild", .descriptor == "()Ljava/util/prefs/Preferences;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/prefs/NodeChangeEvent\0", "getChild\0", "()Ljava/util/prefs/Preferences;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
