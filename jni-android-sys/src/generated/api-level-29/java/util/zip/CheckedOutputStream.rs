// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-zip-CheckedOutputStream"))]
__jni_bindgen! {
    /// public class [CheckedOutputStream](https://developer.android.com/reference/java/util/zip/CheckedOutputStream.html)
    ///
    /// Required feature: java-util-zip-CheckedOutputStream
    public class CheckedOutputStream ("java/util/zip/CheckedOutputStream") extends crate::java::io::FilterOutputStream {

        /// [CheckedOutputStream](https://developer.android.com/reference/java/util/zip/CheckedOutputStream.html#CheckedOutputStream(java.io.OutputStream,%20java.util.zip.Checksum))
        ///
        /// Required features: "java-io-OutputStream", "java-util-zip-Checksum"
        #[cfg(any(feature = "all", all(feature = "java-io-OutputStream", feature = "java-util-zip-Checksum")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::OutputStream>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::zip::Checksum>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::zip::CheckedOutputStream>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/zip/CheckedOutputStream", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/OutputStream;Ljava/util/zip/Checksum;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/zip/CheckedOutputStream\0", "<init>\0", "(Ljava/io/OutputStream;Ljava/util/zip/Checksum;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [write](https://developer.android.com/reference/java/util/zip/CheckedOutputStream.html#write(int))
        pub fn write_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/zip/CheckedOutputStream", java.flags == PUBLIC, .name == "write", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/zip/CheckedOutputStream\0", "write\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [write](https://developer.android.com/reference/java/util/zip/CheckedOutputStream.html#write(byte%5B%5D,%20int,%20int))
        pub fn write_byte_array_int_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/zip/CheckedOutputStream", java.flags == PUBLIC, .name == "write", .descriptor == "([BII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/zip/CheckedOutputStream\0", "write\0", "([BII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChecksum](https://developer.android.com/reference/java/util/zip/CheckedOutputStream.html#getChecksum())
        ///
        /// Required features: "java-util-zip-Checksum"
        #[cfg(any(feature = "all", all(feature = "java-util-zip-Checksum")))]
        pub fn getChecksum<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::zip::Checksum>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/zip/CheckedOutputStream", java.flags == PUBLIC, .name == "getChecksum", .descriptor == "()Ljava/util/zip/Checksum;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/zip/CheckedOutputStream\0", "getChecksum\0", "()Ljava/util/zip/Checksum;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
