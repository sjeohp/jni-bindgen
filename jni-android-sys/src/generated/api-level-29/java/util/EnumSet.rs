// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-EnumSet"))]
__jni_bindgen! {
    /// public class [EnumSet](https://developer.android.com/reference/java/util/EnumSet.html)
    ///
    /// Required feature: java-util-EnumSet
    public class EnumSet ("java/util/EnumSet") extends crate::java::util::AbstractSet, implements crate::java::lang::Cloneable, crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [EnumSet](https://developer.android.com/reference/java/util/EnumSet.html#EnumSet(java.lang.Class,%20java.lang.Enum%5B%5D))
        // ///
        // /// Required features: "java-lang-Class", "java-lang-Enum"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-lang-Enum")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::Enum, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::EnumSet>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/EnumSet", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/Class;[Ljava/lang/Enum;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/EnumSet\0", "<init>\0", "(Ljava/lang/Class;[Ljava/lang/Enum;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [noneOf](https://developer.android.com/reference/java/util/EnumSet.html#noneOf(java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-EnumSet")))]
        pub fn noneOf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "noneOf", .descriptor == "(Ljava/lang/Class;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "noneOf\0", "(Ljava/lang/Class;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [allOf](https://developer.android.com/reference/java/util/EnumSet.html#allOf(java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-EnumSet")))]
        pub fn allOf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "allOf", .descriptor == "(Ljava/lang/Class;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "allOf\0", "(Ljava/lang/Class;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [copyOf](https://developer.android.com/reference/java/util/EnumSet.html#copyOf(java.util.EnumSet))
        ///
        /// Required features: "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-util-EnumSet")))]
        pub fn copyOf_EnumSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::EnumSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "copyOf", .descriptor == "(Ljava/util/EnumSet;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "copyOf\0", "(Ljava/util/EnumSet;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [copyOf](https://developer.android.com/reference/java/util/EnumSet.html#copyOf(java.util.Collection))
        ///
        /// Required features: "java-util-Collection", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-util-Collection", feature = "java-util-EnumSet")))]
        pub fn copyOf_Collection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "copyOf", .descriptor == "(Ljava/util/Collection;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "copyOf\0", "(Ljava/util/Collection;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [complementOf](https://developer.android.com/reference/java/util/EnumSet.html#complementOf(java.util.EnumSet))
        ///
        /// Required features: "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-util-EnumSet")))]
        pub fn complementOf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::EnumSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "complementOf", .descriptor == "(Ljava/util/EnumSet;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "complementOf\0", "(Ljava/util/EnumSet;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/EnumSet.html#of(java.lang.Enum))
        ///
        /// Required features: "java-lang-Enum", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Enum", feature = "java-util-EnumSet")))]
        pub fn of_Enum<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(Ljava/lang/Enum;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "of\0", "(Ljava/lang/Enum;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/EnumSet.html#of(java.lang.Enum,%20java.lang.Enum))
        ///
        /// Required features: "java-lang-Enum", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Enum", feature = "java-util-EnumSet")))]
        pub fn of_Enum_Enum<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "of\0", "(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/EnumSet.html#of(java.lang.Enum,%20java.lang.Enum,%20java.lang.Enum))
        ///
        /// Required features: "java-lang-Enum", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Enum", feature = "java-util-EnumSet")))]
        pub fn of_Enum_Enum_Enum<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "of\0", "(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/EnumSet.html#of(java.lang.Enum,%20java.lang.Enum,%20java.lang.Enum,%20java.lang.Enum))
        ///
        /// Required features: "java-lang-Enum", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Enum", feature = "java-util-EnumSet")))]
        pub fn of_Enum_Enum_Enum_Enum<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "of\0", "(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/EnumSet.html#of(java.lang.Enum,%20java.lang.Enum,%20java.lang.Enum,%20java.lang.Enum,%20java.lang.Enum))
        ///
        /// Required features: "java-lang-Enum", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Enum", feature = "java-util-EnumSet")))]
        pub fn of_Enum_Enum_Enum_Enum_Enum<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "of\0", "(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/EnumSet.html#of(java.lang.Enum,%20java.lang.Enum...))
        ///
        /// Required features: "java-lang-Enum", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Enum", feature = "java-util-EnumSet")))]
        pub fn of_Enum_Enum_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::Enum, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC | VARARGS, .name == "of", .descriptor == "(Ljava/lang/Enum;[Ljava/lang/Enum;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "of\0", "(Ljava/lang/Enum;[Ljava/lang/Enum;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [range](https://developer.android.com/reference/java/util/EnumSet.html#range(java.lang.Enum,%20java.lang.Enum))
        ///
        /// Required features: "java-lang-Enum", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Enum", feature = "java-util-EnumSet")))]
        pub fn range<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Enum>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC | STATIC, .name == "range", .descriptor == "(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/EnumSet\0", "range\0", "(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/java/util/EnumSet.html#clone())
        ///
        /// Required features: "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-util-EnumSet")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EnumSet", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/EnumSet\0", "clone\0", "()Ljava/util/EnumSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [clone](https://developer.android.com/reference/java/util/EnumSet.html#clone())
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/EnumSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/EnumSet\0", "clone\0", "()Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
