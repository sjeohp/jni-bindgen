// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-concurrent-ThreadFactory"))]
__jni_bindgen! {
    /// public interface [ThreadFactory](https://developer.android.com/reference/java/util/concurrent/ThreadFactory.html)
    ///
    /// Required feature: java-util-concurrent-ThreadFactory
    public interface ThreadFactory ("java/util/concurrent/ThreadFactory") extends crate::java::lang::Object {

        /// [newThread](https://developer.android.com/reference/java/util/concurrent/ThreadFactory.html#newThread(java.lang.Runnable))
        ///
        /// Required features: "java-lang-Runnable", "java-lang-Thread"
        #[cfg(any(feature = "all", all(feature = "java-lang-Runnable", feature = "java-lang-Thread")))]
        pub fn newThread<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Runnable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Thread>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/ThreadFactory", java.flags == PUBLIC | ABSTRACT, .name == "newThread", .descriptor == "(Ljava/lang/Runnable;)Ljava/lang/Thread;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/ThreadFactory\0", "newThread\0", "(Ljava/lang/Runnable;)Ljava/lang/Thread;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
