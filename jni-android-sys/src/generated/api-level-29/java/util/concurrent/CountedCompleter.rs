// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-concurrent-CountedCompleter"))]
__jni_bindgen! {
    /// public class [CountedCompleter](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html)
    ///
    /// Required feature: java-util-concurrent-CountedCompleter
    public class CountedCompleter ("java/util/concurrent/CountedCompleter") extends crate::java::util::concurrent::ForkJoinTask {

        // // Not emitting: Non-public method
        // /// [CountedCompleter](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#CountedCompleter(java.util.concurrent.CountedCompleter,%20int))
        // ///
        // /// Required features: "java-util-concurrent-CountedCompleter"
        // #[cfg(any(feature = "all", all(feature = "java-util-concurrent-CountedCompleter")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::CountedCompleter>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::concurrent::CountedCompleter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/CountedCompleter", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/util/concurrent/CountedCompleter;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "<init>\0", "(Ljava/util/concurrent/CountedCompleter;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [CountedCompleter](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#CountedCompleter(java.util.concurrent.CountedCompleter))
        // ///
        // /// Required features: "java-util-concurrent-CountedCompleter"
        // #[cfg(any(feature = "all", all(feature = "java-util-concurrent-CountedCompleter")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::CountedCompleter>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::concurrent::CountedCompleter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/CountedCompleter", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/util/concurrent/CountedCompleter;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "<init>\0", "(Ljava/util/concurrent/CountedCompleter;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [CountedCompleter](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#CountedCompleter())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::concurrent::CountedCompleter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/CountedCompleter", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [compute](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#compute())
        pub fn compute<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | ABSTRACT, .name == "compute", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "compute\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCompletion](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#onCompletion(java.util.concurrent.CountedCompleter))
        ///
        /// Required features: "java-util-concurrent-CountedCompleter"
        #[cfg(any(feature = "all", all(feature = "java-util-concurrent-CountedCompleter")))]
        pub fn onCompletion<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::CountedCompleter>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC, .name == "onCompletion", .descriptor == "(Ljava/util/concurrent/CountedCompleter;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "onCompletion\0", "(Ljava/util/concurrent/CountedCompleter;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onExceptionalCompletion](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#onExceptionalCompletion(java.lang.Throwable,%20java.util.concurrent.CountedCompleter))
        ///
        /// Required features: "java-lang-Throwable", "java-util-concurrent-CountedCompleter"
        #[cfg(any(feature = "all", all(feature = "java-lang-Throwable", feature = "java-util-concurrent-CountedCompleter")))]
        pub fn onExceptionalCompletion<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Throwable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::CountedCompleter>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC, .name == "onExceptionalCompletion", .descriptor == "(Ljava/lang/Throwable;Ljava/util/concurrent/CountedCompleter;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "onExceptionalCompletion\0", "(Ljava/lang/Throwable;Ljava/util/concurrent/CountedCompleter;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCompleter](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#getCompleter())
        ///
        /// Required features: "java-util-concurrent-CountedCompleter"
        #[cfg(any(feature = "all", all(feature = "java-util-concurrent-CountedCompleter")))]
        pub fn getCompleter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::concurrent::CountedCompleter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "getCompleter", .descriptor == "()Ljava/util/concurrent/CountedCompleter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "getCompleter\0", "()Ljava/util/concurrent/CountedCompleter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPendingCount](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#getPendingCount())
        pub fn getPendingCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "getPendingCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "getPendingCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPendingCount](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#setPendingCount(int))
        pub fn setPendingCount<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "setPendingCount", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "setPendingCount\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addToPendingCount](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#addToPendingCount(int))
        pub fn addToPendingCount<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "addToPendingCount", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "addToPendingCount\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [compareAndSetPendingCount](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#compareAndSetPendingCount(int,%20int))
        pub fn compareAndSetPendingCount<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "compareAndSetPendingCount", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "compareAndSetPendingCount\0", "(II)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [decrementPendingCountUnlessZero](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#decrementPendingCountUnlessZero())
        pub fn decrementPendingCountUnlessZero<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "decrementPendingCountUnlessZero", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "decrementPendingCountUnlessZero\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRoot](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#getRoot())
        ///
        /// Required features: "java-util-concurrent-CountedCompleter"
        #[cfg(any(feature = "all", all(feature = "java-util-concurrent-CountedCompleter")))]
        pub fn getRoot<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::concurrent::CountedCompleter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "getRoot", .descriptor == "()Ljava/util/concurrent/CountedCompleter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "getRoot\0", "()Ljava/util/concurrent/CountedCompleter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [tryComplete](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#tryComplete())
        pub fn tryComplete<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "tryComplete", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "tryComplete\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [propagateCompletion](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#propagateCompletion())
        pub fn propagateCompletion<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "propagateCompletion", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "propagateCompletion\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [complete](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#complete(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn complete<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC, .name == "complete", .descriptor == "(Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "complete\0", "(Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [firstComplete](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#firstComplete())
        ///
        /// Required features: "java-util-concurrent-CountedCompleter"
        #[cfg(any(feature = "all", all(feature = "java-util-concurrent-CountedCompleter")))]
        pub fn firstComplete<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::concurrent::CountedCompleter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "firstComplete", .descriptor == "()Ljava/util/concurrent/CountedCompleter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "firstComplete\0", "()Ljava/util/concurrent/CountedCompleter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [nextComplete](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#nextComplete())
        ///
        /// Required features: "java-util-concurrent-CountedCompleter"
        #[cfg(any(feature = "all", all(feature = "java-util-concurrent-CountedCompleter")))]
        pub fn nextComplete<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::concurrent::CountedCompleter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "nextComplete", .descriptor == "()Ljava/util/concurrent/CountedCompleter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "nextComplete\0", "()Ljava/util/concurrent/CountedCompleter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [quietlyCompleteRoot](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#quietlyCompleteRoot())
        pub fn quietlyCompleteRoot<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "quietlyCompleteRoot", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "quietlyCompleteRoot\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [helpComplete](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#helpComplete(int))
        pub fn helpComplete<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC | FINAL, .name == "helpComplete", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "helpComplete\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [exec](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#exec())
        // fn exec<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/CountedCompleter", java.flags == PROTECTED | FINAL, .name == "exec", .descriptor == "()Z"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "exec\0", "()Z\0");
        //         __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getRawResult](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#getRawResult())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn getRawResult<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/CountedCompleter", java.flags == PUBLIC, .name == "getRawResult", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "getRawResult\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [setRawResult](https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html#setRawResult(java.lang.Object))
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // fn setRawResult<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/CountedCompleter", java.flags == PROTECTED, .name == "setRawResult", .descriptor == "(Ljava/lang/Object;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/CountedCompleter\0", "setRawResult\0", "(Ljava/lang/Object;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
