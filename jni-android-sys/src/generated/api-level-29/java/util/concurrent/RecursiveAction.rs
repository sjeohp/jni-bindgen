// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-concurrent-RecursiveAction"))]
__jni_bindgen! {
    /// public class [RecursiveAction](https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html)
    ///
    /// Required feature: java-util-concurrent-RecursiveAction
    public class RecursiveAction ("java/util/concurrent/RecursiveAction") extends crate::java::util::concurrent::ForkJoinTask {

        /// [RecursiveAction](https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html#RecursiveAction())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::concurrent::RecursiveAction>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/RecursiveAction", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/RecursiveAction\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [compute](https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html#compute())
        // fn compute<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/RecursiveAction", java.flags == PROTECTED | ABSTRACT, .name == "compute", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/RecursiveAction\0", "compute\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getRawResult](https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html#getRawResult())
        ///
        /// Required features: "java-lang-Void"
        #[cfg(any(feature = "all", all(feature = "java-lang-Void")))]
        pub fn getRawResult<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Void>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/RecursiveAction", java.flags == PUBLIC | FINAL, .name == "getRawResult", .descriptor == "()Ljava/lang/Void;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/RecursiveAction\0", "getRawResult\0", "()Ljava/lang/Void;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [setRawResult](https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html#setRawResult(java.lang.Void))
        // ///
        // /// Required features: "java-lang-Void"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Void")))]
        // fn setRawResult<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Void>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/RecursiveAction", java.flags == PROTECTED | FINAL, .name == "setRawResult", .descriptor == "(Ljava/lang/Void;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/RecursiveAction\0", "setRawResult\0", "(Ljava/lang/Void;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [exec](https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html#exec())
        // fn exec<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/RecursiveAction", java.flags == PROTECTED | FINAL, .name == "exec", .descriptor == "()Z"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/RecursiveAction\0", "exec\0", "()Z\0");
        //         __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // // Not emitting: Bridge method - type erasure
        // /// [setRawResult](https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html#setRawResult(java.lang.Object))
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // fn setRawResult<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/RecursiveAction", java.flags == PROTECTED | BRIDGE | SYNTHETIC, .name == "setRawResult", .descriptor == "(Ljava/lang/Object;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/RecursiveAction\0", "setRawResult\0", "(Ljava/lang/Object;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [getRawResult](https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html#getRawResult())
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn getRawResult<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/concurrent/RecursiveAction", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "getRawResult", .descriptor == "()Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/RecursiveAction\0", "getRawResult\0", "()Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
