// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-concurrent-Delayed"))]
__jni_bindgen! {
    /// public interface [Delayed](https://developer.android.com/reference/java/util/concurrent/Delayed.html)
    ///
    /// Required feature: java-util-concurrent-Delayed
    public interface Delayed ("java/util/concurrent/Delayed") extends crate::java::lang::Object, implements crate::java::lang::Comparable {

        /// [getDelay](https://developer.android.com/reference/java/util/concurrent/Delayed.html#getDelay(java.util.concurrent.TimeUnit))
        ///
        /// Required features: "java-util-concurrent-TimeUnit"
        #[cfg(any(feature = "all", all(feature = "java-util-concurrent-TimeUnit")))]
        pub fn getDelay<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::TimeUnit>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/concurrent/Delayed", java.flags == PUBLIC | ABSTRACT, .name == "getDelay", .descriptor == "(Ljava/util/concurrent/TimeUnit;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/concurrent/Delayed\0", "getDelay\0", "(Ljava/util/concurrent/TimeUnit;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
