// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-function-IntBinaryOperator"))]
__jni_bindgen! {
    /// public interface [IntBinaryOperator](https://developer.android.com/reference/java/util/function/IntBinaryOperator.html)
    ///
    /// Required feature: java-util-function-IntBinaryOperator
    public interface IntBinaryOperator ("java/util/function/IntBinaryOperator") extends crate::java::lang::Object {

        /// [applyAsInt](https://developer.android.com/reference/java/util/function/IntBinaryOperator.html#applyAsInt(int,%20int))
        pub fn applyAsInt<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/function/IntBinaryOperator", java.flags == PUBLIC | ABSTRACT, .name == "applyAsInt", .descriptor == "(II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/function/IntBinaryOperator\0", "applyAsInt\0", "(II)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
