// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-SortedSet"))]
__jni_bindgen! {
    /// public interface [SortedSet](https://developer.android.com/reference/java/util/SortedSet.html)
    ///
    /// Required feature: java-util-SortedSet
    public interface SortedSet ("java/util/SortedSet") extends crate::java::lang::Object, implements crate::java::util::Set {

        /// [comparator](https://developer.android.com/reference/java/util/SortedSet.html#comparator())
        ///
        /// Required features: "java-util-Comparator"
        #[cfg(any(feature = "all", all(feature = "java-util-Comparator")))]
        pub fn comparator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Comparator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/SortedSet", java.flags == PUBLIC | ABSTRACT, .name == "comparator", .descriptor == "()Ljava/util/Comparator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/SortedSet\0", "comparator\0", "()Ljava/util/Comparator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [subSet](https://developer.android.com/reference/java/util/SortedSet.html#subSet(java.lang.Object,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-SortedSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-SortedSet")))]
        pub fn subSet<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/SortedSet", java.flags == PUBLIC | ABSTRACT, .name == "subSet", .descriptor == "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/SortedSet\0", "subSet\0", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [headSet](https://developer.android.com/reference/java/util/SortedSet.html#headSet(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-SortedSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-SortedSet")))]
        pub fn headSet<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/SortedSet", java.flags == PUBLIC | ABSTRACT, .name == "headSet", .descriptor == "(Ljava/lang/Object;)Ljava/util/SortedSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/SortedSet\0", "headSet\0", "(Ljava/lang/Object;)Ljava/util/SortedSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [tailSet](https://developer.android.com/reference/java/util/SortedSet.html#tailSet(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-SortedSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-SortedSet")))]
        pub fn tailSet<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/SortedSet", java.flags == PUBLIC | ABSTRACT, .name == "tailSet", .descriptor == "(Ljava/lang/Object;)Ljava/util/SortedSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/SortedSet\0", "tailSet\0", "(Ljava/lang/Object;)Ljava/util/SortedSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [first](https://developer.android.com/reference/java/util/SortedSet.html#first())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn first<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/SortedSet", java.flags == PUBLIC | ABSTRACT, .name == "first", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/SortedSet\0", "first\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [last](https://developer.android.com/reference/java/util/SortedSet.html#last())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn last<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/SortedSet", java.flags == PUBLIC | ABSTRACT, .name == "last", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/SortedSet\0", "last\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [spliterator](https://developer.android.com/reference/java/util/SortedSet.html#spliterator())
        ///
        /// Required features: "java-util-Spliterator"
        #[cfg(any(feature = "all", all(feature = "java-util-Spliterator")))]
        pub fn spliterator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Spliterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/SortedSet", java.flags == PUBLIC, .name == "spliterator", .descriptor == "()Ljava/util/Spliterator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/SortedSet\0", "spliterator\0", "()Ljava/util/Spliterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
