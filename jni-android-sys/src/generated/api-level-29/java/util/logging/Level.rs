// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
__jni_bindgen! {
    /// public class [Level](https://developer.android.com/reference/java/util/logging/Level.html)
    ///
    /// Required feature: java-util-logging-Level
    public class Level ("java/util/logging/Level") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [Level](https://developer.android.com/reference/java/util/logging/Level.html#Level(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::logging::Level>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/logging/Level", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "<init>\0", "(Ljava/lang/String;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [Level](https://developer.android.com/reference/java/util/logging/Level.html#Level(java.lang.String,%20int,%20java.lang.String))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::logging::Level>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/logging/Level", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Ljava/lang/String;ILjava/lang/String;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "<init>\0", "(Ljava/lang/String;ILjava/lang/String;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getResourceBundleName](https://developer.android.com/reference/java/util/logging/Level.html#getResourceBundleName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getResourceBundleName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/Level", java.flags == PUBLIC, .name == "getResourceBundleName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "getResourceBundleName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getName](https://developer.android.com/reference/java/util/logging/Level.html#getName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/Level", java.flags == PUBLIC, .name == "getName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "getName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLocalizedName](https://developer.android.com/reference/java/util/logging/Level.html#getLocalizedName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getLocalizedName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/Level", java.flags == PUBLIC, .name == "getLocalizedName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "getLocalizedName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/util/logging/Level.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/Level", java.flags == PUBLIC | FINAL, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [intValue](https://developer.android.com/reference/java/util/logging/Level.html#intValue())
        pub fn intValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/Level", java.flags == PUBLIC | FINAL, .name == "intValue", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "intValue\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/java/util/logging/Level.html#parse(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-logging-Level"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-logging-Level")))]
        pub fn parse<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/Level", java.flags == PUBLIC | STATIC | SYNCRONIZED, .name == "parse", .descriptor == "(Ljava/lang/String;)Ljava/util/logging/Level;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/logging/Level\0", "parse\0", "(Ljava/lang/String;)Ljava/util/logging/Level;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/java/util/logging/Level.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/Level", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/java/util/logging/Level.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/Level", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/Level\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [ALL](https://developer.android.com/reference/java/util/logging/Level.html#ALL)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn ALL<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "ALL\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONFIG](https://developer.android.com/reference/java/util/logging/Level.html#CONFIG)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn CONFIG<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "CONFIG\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [FINE](https://developer.android.com/reference/java/util/logging/Level.html#FINE)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn FINE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "FINE\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [FINER](https://developer.android.com/reference/java/util/logging/Level.html#FINER)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn FINER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "FINER\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [FINEST](https://developer.android.com/reference/java/util/logging/Level.html#FINEST)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn FINEST<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "FINEST\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INFO](https://developer.android.com/reference/java/util/logging/Level.html#INFO)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn INFO<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "INFO\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [OFF](https://developer.android.com/reference/java/util/logging/Level.html#OFF)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn OFF<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "OFF\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SEVERE](https://developer.android.com/reference/java/util/logging/Level.html#SEVERE)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn SEVERE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "SEVERE\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [WARNING](https://developer.android.com/reference/java/util/logging/Level.html#WARNING)
        ///
        /// Required feature: java-util-logging-Level
        #[cfg(any(feature = "all", feature = "java-util-logging-Level"))]
        pub fn WARNING<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::logging::Level>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/logging/Level\0", "WARNING\0", "Ljava/util/logging/Level;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
