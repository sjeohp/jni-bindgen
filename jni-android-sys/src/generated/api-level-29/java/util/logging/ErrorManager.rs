// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-logging-ErrorManager"))]
__jni_bindgen! {
    /// public class [ErrorManager](https://developer.android.com/reference/java/util/logging/ErrorManager.html)
    ///
    /// Required feature: java-util-logging-ErrorManager
    public class ErrorManager ("java/util/logging/ErrorManager") extends crate::java::lang::Object {

        /// [ErrorManager](https://developer.android.com/reference/java/util/logging/ErrorManager.html#ErrorManager())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::logging::ErrorManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/ErrorManager", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/ErrorManager\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [error](https://developer.android.com/reference/java/util/logging/ErrorManager.html#error(java.lang.String,%20java.lang.Exception,%20int))
        ///
        /// Required features: "java-lang-Exception", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Exception", feature = "java-lang-String")))]
        pub fn error<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Exception>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/logging/ErrorManager", java.flags == PUBLIC | SYNCRONIZED, .name == "error", .descriptor == "(Ljava/lang/String;Ljava/lang/Exception;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/logging/ErrorManager\0", "error\0", "(Ljava/lang/String;Ljava/lang/Exception;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CLOSE_FAILURE](https://developer.android.com/reference/java/util/logging/ErrorManager.html#CLOSE_FAILURE)
        pub const CLOSE_FAILURE : i32 = 3;

        /// public static final [FLUSH_FAILURE](https://developer.android.com/reference/java/util/logging/ErrorManager.html#FLUSH_FAILURE)
        pub const FLUSH_FAILURE : i32 = 2;

        /// public static final [FORMAT_FAILURE](https://developer.android.com/reference/java/util/logging/ErrorManager.html#FORMAT_FAILURE)
        pub const FORMAT_FAILURE : i32 = 5;

        /// public static final [GENERIC_FAILURE](https://developer.android.com/reference/java/util/logging/ErrorManager.html#GENERIC_FAILURE)
        pub const GENERIC_FAILURE : i32 = 0;

        /// public static final [OPEN_FAILURE](https://developer.android.com/reference/java/util/logging/ErrorManager.html#OPEN_FAILURE)
        pub const OPEN_FAILURE : i32 = 4;

        /// public static final [WRITE_FAILURE](https://developer.android.com/reference/java/util/logging/ErrorManager.html#WRITE_FAILURE)
        pub const WRITE_FAILURE : i32 = 1;
    }
}
