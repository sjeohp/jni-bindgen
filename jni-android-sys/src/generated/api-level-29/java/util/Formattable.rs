// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-Formattable"))]
__jni_bindgen! {
    /// public interface [Formattable](https://developer.android.com/reference/java/util/Formattable.html)
    ///
    /// Required feature: java-util-Formattable
    public interface Formattable ("java/util/Formattable") extends crate::java::lang::Object {

        /// [formatTo](https://developer.android.com/reference/java/util/Formattable.html#formatTo(java.util.Formatter,%20int,%20int,%20int))
        ///
        /// Required features: "java-util-Formatter"
        #[cfg(any(feature = "all", all(feature = "java-util-Formatter")))]
        pub fn formatTo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Formatter>>, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Formattable", java.flags == PUBLIC | ABSTRACT, .name == "formatTo", .descriptor == "(Ljava/util/Formatter;III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/Formattable\0", "formatTo\0", "(Ljava/util/Formatter;III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
