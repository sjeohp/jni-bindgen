// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-jar-Pack200_Packer"))]
__jni_bindgen! {
    /// public interface [Pack200.Packer](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html)
    ///
    /// Required feature: java-util-jar-Pack200_Packer
    public interface Pack200_Packer ("java/util/jar/Pack200$Packer") extends crate::java::lang::Object {

        /// [properties](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#properties())
        ///
        /// Required features: "java-util-SortedMap"
        #[cfg(any(feature = "all", all(feature = "java-util-SortedMap")))]
        pub fn properties<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/jar/Pack200$Packer", java.flags == PUBLIC | ABSTRACT, .name == "properties", .descriptor == "()Ljava/util/SortedMap;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/jar/Pack200$Packer\0", "properties\0", "()Ljava/util/SortedMap;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [pack](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#pack(java.util.jar.JarFile,%20java.io.OutputStream))
        ///
        /// Required features: "java-io-OutputStream", "java-util-jar-JarFile"
        #[cfg(any(feature = "all", all(feature = "java-io-OutputStream", feature = "java-util-jar-JarFile")))]
        pub fn pack_JarFile_OutputStream<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::jar::JarFile>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::OutputStream>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/jar/Pack200$Packer", java.flags == PUBLIC | ABSTRACT, .name == "pack", .descriptor == "(Ljava/util/jar/JarFile;Ljava/io/OutputStream;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/jar/Pack200$Packer\0", "pack\0", "(Ljava/util/jar/JarFile;Ljava/io/OutputStream;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [pack](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#pack(java.util.jar.JarInputStream,%20java.io.OutputStream))
        ///
        /// Required features: "java-io-OutputStream", "java-util-jar-JarInputStream"
        #[cfg(any(feature = "all", all(feature = "java-io-OutputStream", feature = "java-util-jar-JarInputStream")))]
        pub fn pack_JarInputStream_OutputStream<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::jar::JarInputStream>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::OutputStream>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/jar/Pack200$Packer", java.flags == PUBLIC | ABSTRACT, .name == "pack", .descriptor == "(Ljava/util/jar/JarInputStream;Ljava/io/OutputStream;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/jar/Pack200$Packer\0", "pack\0", "(Ljava/util/jar/JarInputStream;Ljava/io/OutputStream;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addPropertyChangeListener](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#addPropertyChangeListener(java.beans.PropertyChangeListener))
        ///
        /// Required features: "java-beans-PropertyChangeListener"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeListener")))]
        #[deprecated] pub fn addPropertyChangeListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::beans::PropertyChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/jar/Pack200$Packer", java.flags == PUBLIC, .name == "addPropertyChangeListener", .descriptor == "(Ljava/beans/PropertyChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/jar/Pack200$Packer\0", "addPropertyChangeListener\0", "(Ljava/beans/PropertyChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removePropertyChangeListener](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#removePropertyChangeListener(java.beans.PropertyChangeListener))
        ///
        /// Required features: "java-beans-PropertyChangeListener"
        #[cfg(any(feature = "all", all(feature = "java-beans-PropertyChangeListener")))]
        #[deprecated] pub fn removePropertyChangeListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::beans::PropertyChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/jar/Pack200$Packer", java.flags == PUBLIC, .name == "removePropertyChangeListener", .descriptor == "(Ljava/beans/PropertyChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/jar/Pack200$Packer\0", "removePropertyChangeListener\0", "(Ljava/beans/PropertyChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CLASS_ATTRIBUTE_PFX](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#CLASS_ATTRIBUTE_PFX)
        pub const CLASS_ATTRIBUTE_PFX : &'static str = "pack.class.attribute.";

        /// public static final [CODE_ATTRIBUTE_PFX](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#CODE_ATTRIBUTE_PFX)
        pub const CODE_ATTRIBUTE_PFX : &'static str = "pack.code.attribute.";

        /// public static final [DEFLATE_HINT](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#DEFLATE_HINT)
        pub const DEFLATE_HINT : &'static str = "pack.deflate.hint";

        /// public static final [EFFORT](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#EFFORT)
        pub const EFFORT : &'static str = "pack.effort";

        /// public static final [ERROR](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#ERROR)
        pub const ERROR : &'static str = "error";

        /// public static final [FALSE](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#FALSE)
        pub const FALSE : &'static str = "false";

        /// public static final [FIELD_ATTRIBUTE_PFX](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#FIELD_ATTRIBUTE_PFX)
        pub const FIELD_ATTRIBUTE_PFX : &'static str = "pack.field.attribute.";

        /// public static final [KEEP](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#KEEP)
        pub const KEEP : &'static str = "keep";

        /// public static final [KEEP_FILE_ORDER](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#KEEP_FILE_ORDER)
        pub const KEEP_FILE_ORDER : &'static str = "pack.keep.file.order";

        /// public static final [LATEST](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#LATEST)
        pub const LATEST : &'static str = "latest";

        /// public static final [METHOD_ATTRIBUTE_PFX](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#METHOD_ATTRIBUTE_PFX)
        pub const METHOD_ATTRIBUTE_PFX : &'static str = "pack.method.attribute.";

        /// public static final [MODIFICATION_TIME](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#MODIFICATION_TIME)
        pub const MODIFICATION_TIME : &'static str = "pack.modification.time";

        /// public static final [PASS](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#PASS)
        pub const PASS : &'static str = "pass";

        /// public static final [PASS_FILE_PFX](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#PASS_FILE_PFX)
        pub const PASS_FILE_PFX : &'static str = "pack.pass.file.";

        /// public static final [PROGRESS](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#PROGRESS)
        pub const PROGRESS : &'static str = "pack.progress";

        /// public static final [SEGMENT_LIMIT](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#SEGMENT_LIMIT)
        pub const SEGMENT_LIMIT : &'static str = "pack.segment.limit";

        /// public static final [STRIP](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#STRIP)
        pub const STRIP : &'static str = "strip";

        /// public static final [TRUE](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#TRUE)
        pub const TRUE : &'static str = "true";

        /// public static final [UNKNOWN_ATTRIBUTE](https://developer.android.com/reference/java/util/jar/Pack200.Packer.html#UNKNOWN_ATTRIBUTE)
        pub const UNKNOWN_ATTRIBUTE : &'static str = "pack.unknown.attribute";
    }
}
