// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-stream-LongStream"))]
__jni_bindgen! {
    /// public interface [LongStream](https://developer.android.com/reference/java/util/stream/LongStream.html)
    ///
    /// Required feature: java-util-stream-LongStream
    public interface LongStream ("java/util/stream/LongStream") extends crate::java::lang::Object, implements crate::java::util::stream::BaseStream {

        /// [filter](https://developer.android.com/reference/java/util/stream/LongStream.html#filter(java.util.function.LongPredicate))
        ///
        /// Required features: "java-util-function-LongPredicate", "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongPredicate", feature = "java-util-stream-LongStream")))]
        pub fn filter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongPredicate>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "filter", .descriptor == "(Ljava/util/function/LongPredicate;)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "filter\0", "(Ljava/util/function/LongPredicate;)Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [map](https://developer.android.com/reference/java/util/stream/LongStream.html#map(java.util.function.LongUnaryOperator))
        ///
        /// Required features: "java-util-function-LongUnaryOperator", "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongUnaryOperator", feature = "java-util-stream-LongStream")))]
        pub fn map<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongUnaryOperator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "map", .descriptor == "(Ljava/util/function/LongUnaryOperator;)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "map\0", "(Ljava/util/function/LongUnaryOperator;)Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [mapToObj](https://developer.android.com/reference/java/util/stream/LongStream.html#mapToObj(java.util.function.LongFunction))
        ///
        /// Required features: "java-util-function-LongFunction", "java-util-stream-Stream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongFunction", feature = "java-util-stream-Stream")))]
        pub fn mapToObj<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Stream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "mapToObj", .descriptor == "(Ljava/util/function/LongFunction;)Ljava/util/stream/Stream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "mapToObj\0", "(Ljava/util/function/LongFunction;)Ljava/util/stream/Stream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [mapToInt](https://developer.android.com/reference/java/util/stream/LongStream.html#mapToInt(java.util.function.LongToIntFunction))
        ///
        /// Required features: "java-util-function-LongToIntFunction", "java-util-stream-IntStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongToIntFunction", feature = "java-util-stream-IntStream")))]
        pub fn mapToInt<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongToIntFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::IntStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "mapToInt", .descriptor == "(Ljava/util/function/LongToIntFunction;)Ljava/util/stream/IntStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "mapToInt\0", "(Ljava/util/function/LongToIntFunction;)Ljava/util/stream/IntStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [mapToDouble](https://developer.android.com/reference/java/util/stream/LongStream.html#mapToDouble(java.util.function.LongToDoubleFunction))
        ///
        /// Required features: "java-util-function-LongToDoubleFunction", "java-util-stream-DoubleStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongToDoubleFunction", feature = "java-util-stream-DoubleStream")))]
        pub fn mapToDouble<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongToDoubleFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::DoubleStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "mapToDouble", .descriptor == "(Ljava/util/function/LongToDoubleFunction;)Ljava/util/stream/DoubleStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "mapToDouble\0", "(Ljava/util/function/LongToDoubleFunction;)Ljava/util/stream/DoubleStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [flatMap](https://developer.android.com/reference/java/util/stream/LongStream.html#flatMap(java.util.function.LongFunction))
        ///
        /// Required features: "java-util-function-LongFunction", "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongFunction", feature = "java-util-stream-LongStream")))]
        pub fn flatMap<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "flatMap", .descriptor == "(Ljava/util/function/LongFunction;)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "flatMap\0", "(Ljava/util/function/LongFunction;)Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [distinct](https://developer.android.com/reference/java/util/stream/LongStream.html#distinct())
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn distinct<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "distinct", .descriptor == "()Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "distinct\0", "()Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [sorted](https://developer.android.com/reference/java/util/stream/LongStream.html#sorted())
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn sorted<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "sorted", .descriptor == "()Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "sorted\0", "()Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [peek](https://developer.android.com/reference/java/util/stream/LongStream.html#peek(java.util.function.LongConsumer))
        ///
        /// Required features: "java-util-function-LongConsumer", "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongConsumer", feature = "java-util-stream-LongStream")))]
        pub fn peek<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongConsumer>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "peek", .descriptor == "(Ljava/util/function/LongConsumer;)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "peek\0", "(Ljava/util/function/LongConsumer;)Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [limit](https://developer.android.com/reference/java/util/stream/LongStream.html#limit(long))
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn limit<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "limit", .descriptor == "(J)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "limit\0", "(J)Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [skip](https://developer.android.com/reference/java/util/stream/LongStream.html#skip(long))
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn skip<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "skip", .descriptor == "(J)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "skip\0", "(J)Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [forEach](https://developer.android.com/reference/java/util/stream/LongStream.html#forEach(java.util.function.LongConsumer))
        ///
        /// Required features: "java-util-function-LongConsumer"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongConsumer")))]
        pub fn forEach<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongConsumer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "forEach", .descriptor == "(Ljava/util/function/LongConsumer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "forEach\0", "(Ljava/util/function/LongConsumer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [forEachOrdered](https://developer.android.com/reference/java/util/stream/LongStream.html#forEachOrdered(java.util.function.LongConsumer))
        ///
        /// Required features: "java-util-function-LongConsumer"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongConsumer")))]
        pub fn forEachOrdered<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongConsumer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "forEachOrdered", .descriptor == "(Ljava/util/function/LongConsumer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "forEachOrdered\0", "(Ljava/util/function/LongConsumer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toArray](https://developer.android.com/reference/java/util/stream/LongStream.html#toArray())
        pub fn toArray<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::LongArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "toArray", .descriptor == "()[J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "toArray\0", "()[J\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reduce](https://developer.android.com/reference/java/util/stream/LongStream.html#reduce(long,%20java.util.function.LongBinaryOperator))
        ///
        /// Required features: "java-util-function-LongBinaryOperator"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongBinaryOperator")))]
        pub fn reduce_long_LongBinaryOperator<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongBinaryOperator>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "reduce", .descriptor == "(JLjava/util/function/LongBinaryOperator;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "reduce\0", "(JLjava/util/function/LongBinaryOperator;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reduce](https://developer.android.com/reference/java/util/stream/LongStream.html#reduce(java.util.function.LongBinaryOperator))
        ///
        /// Required features: "java-util-OptionalLong", "java-util-function-LongBinaryOperator"
        #[cfg(any(feature = "all", all(feature = "java-util-OptionalLong", feature = "java-util-function-LongBinaryOperator")))]
        pub fn reduce_LongBinaryOperator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongBinaryOperator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::OptionalLong>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "reduce", .descriptor == "(Ljava/util/function/LongBinaryOperator;)Ljava/util/OptionalLong;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "reduce\0", "(Ljava/util/function/LongBinaryOperator;)Ljava/util/OptionalLong;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [collect](https://developer.android.com/reference/java/util/stream/LongStream.html#collect(java.util.function.Supplier,%20java.util.function.ObjLongConsumer,%20java.util.function.BiConsumer))
        ///
        /// Required features: "java-lang-Object", "java-util-function-BiConsumer", "java-util-function-ObjLongConsumer", "java-util-function-Supplier"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-function-BiConsumer", feature = "java-util-function-ObjLongConsumer", feature = "java-util-function-Supplier")))]
        pub fn collect<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ObjLongConsumer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BiConsumer>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "collect", .descriptor == "(Ljava/util/function/Supplier;Ljava/util/function/ObjLongConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "collect\0", "(Ljava/util/function/Supplier;Ljava/util/function/ObjLongConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [sum](https://developer.android.com/reference/java/util/stream/LongStream.html#sum())
        pub fn sum<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "sum", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "sum\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [min](https://developer.android.com/reference/java/util/stream/LongStream.html#min())
        ///
        /// Required features: "java-util-OptionalLong"
        #[cfg(any(feature = "all", all(feature = "java-util-OptionalLong")))]
        pub fn min<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::OptionalLong>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "min", .descriptor == "()Ljava/util/OptionalLong;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "min\0", "()Ljava/util/OptionalLong;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [max](https://developer.android.com/reference/java/util/stream/LongStream.html#max())
        ///
        /// Required features: "java-util-OptionalLong"
        #[cfg(any(feature = "all", all(feature = "java-util-OptionalLong")))]
        pub fn max<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::OptionalLong>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "max", .descriptor == "()Ljava/util/OptionalLong;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "max\0", "()Ljava/util/OptionalLong;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [count](https://developer.android.com/reference/java/util/stream/LongStream.html#count())
        pub fn count<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "count", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "count\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [average](https://developer.android.com/reference/java/util/stream/LongStream.html#average())
        ///
        /// Required features: "java-util-OptionalDouble"
        #[cfg(any(feature = "all", all(feature = "java-util-OptionalDouble")))]
        pub fn average<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::OptionalDouble>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "average", .descriptor == "()Ljava/util/OptionalDouble;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "average\0", "()Ljava/util/OptionalDouble;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [summaryStatistics](https://developer.android.com/reference/java/util/stream/LongStream.html#summaryStatistics())
        ///
        /// Required features: "java-util-LongSummaryStatistics"
        #[cfg(any(feature = "all", all(feature = "java-util-LongSummaryStatistics")))]
        pub fn summaryStatistics<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::LongSummaryStatistics>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "summaryStatistics", .descriptor == "()Ljava/util/LongSummaryStatistics;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "summaryStatistics\0", "()Ljava/util/LongSummaryStatistics;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [anyMatch](https://developer.android.com/reference/java/util/stream/LongStream.html#anyMatch(java.util.function.LongPredicate))
        ///
        /// Required features: "java-util-function-LongPredicate"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongPredicate")))]
        pub fn anyMatch<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongPredicate>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "anyMatch", .descriptor == "(Ljava/util/function/LongPredicate;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "anyMatch\0", "(Ljava/util/function/LongPredicate;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [allMatch](https://developer.android.com/reference/java/util/stream/LongStream.html#allMatch(java.util.function.LongPredicate))
        ///
        /// Required features: "java-util-function-LongPredicate"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongPredicate")))]
        pub fn allMatch<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongPredicate>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "allMatch", .descriptor == "(Ljava/util/function/LongPredicate;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "allMatch\0", "(Ljava/util/function/LongPredicate;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [noneMatch](https://developer.android.com/reference/java/util/stream/LongStream.html#noneMatch(java.util.function.LongPredicate))
        ///
        /// Required features: "java-util-function-LongPredicate"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongPredicate")))]
        pub fn noneMatch<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongPredicate>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "noneMatch", .descriptor == "(Ljava/util/function/LongPredicate;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "noneMatch\0", "(Ljava/util/function/LongPredicate;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [findFirst](https://developer.android.com/reference/java/util/stream/LongStream.html#findFirst())
        ///
        /// Required features: "java-util-OptionalLong"
        #[cfg(any(feature = "all", all(feature = "java-util-OptionalLong")))]
        pub fn findFirst<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::OptionalLong>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "findFirst", .descriptor == "()Ljava/util/OptionalLong;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "findFirst\0", "()Ljava/util/OptionalLong;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [findAny](https://developer.android.com/reference/java/util/stream/LongStream.html#findAny())
        ///
        /// Required features: "java-util-OptionalLong"
        #[cfg(any(feature = "all", all(feature = "java-util-OptionalLong")))]
        pub fn findAny<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::OptionalLong>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "findAny", .descriptor == "()Ljava/util/OptionalLong;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "findAny\0", "()Ljava/util/OptionalLong;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [asDoubleStream](https://developer.android.com/reference/java/util/stream/LongStream.html#asDoubleStream())
        ///
        /// Required features: "java-util-stream-DoubleStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-DoubleStream")))]
        pub fn asDoubleStream<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::DoubleStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "asDoubleStream", .descriptor == "()Ljava/util/stream/DoubleStream;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "asDoubleStream\0", "()Ljava/util/stream/DoubleStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [boxed](https://developer.android.com/reference/java/util/stream/LongStream.html#boxed())
        ///
        /// Required features: "java-util-stream-Stream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-Stream")))]
        pub fn boxed<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Stream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "boxed", .descriptor == "()Ljava/util/stream/Stream;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "boxed\0", "()Ljava/util/stream/Stream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [sequential](https://developer.android.com/reference/java/util/stream/LongStream.html#sequential())
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn sequential<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "sequential", .descriptor == "()Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "sequential\0", "()Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parallel](https://developer.android.com/reference/java/util/stream/LongStream.html#parallel())
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn parallel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "parallel", .descriptor == "()Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "parallel\0", "()Ljava/util/stream/LongStream;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [iterator](https://developer.android.com/reference/java/util/stream/LongStream.html#iterator())
        ///
        /// Required features: "java-util-PrimitiveIterator_OfLong"
        #[cfg(any(feature = "all", all(feature = "java-util-PrimitiveIterator_OfLong")))]
        pub fn iterator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::PrimitiveIterator_OfLong>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "iterator", .descriptor == "()Ljava/util/PrimitiveIterator$OfLong;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "iterator\0", "()Ljava/util/PrimitiveIterator$OfLong;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [spliterator](https://developer.android.com/reference/java/util/stream/LongStream.html#spliterator())
        ///
        /// Required features: "java-util-Spliterator_OfLong"
        #[cfg(any(feature = "all", all(feature = "java-util-Spliterator_OfLong")))]
        pub fn spliterator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Spliterator_OfLong>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | ABSTRACT, .name == "spliterator", .descriptor == "()Ljava/util/Spliterator$OfLong;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "spliterator\0", "()Ljava/util/Spliterator$OfLong;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [builder](https://developer.android.com/reference/java/util/stream/LongStream.html#builder())
        ///
        /// Required features: "java-util-stream-LongStream_Builder"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream_Builder")))]
        pub fn builder<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC, .name == "builder", .descriptor == "()Ljava/util/stream/LongStream$Builder;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "builder\0", "()Ljava/util/stream/LongStream$Builder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [empty](https://developer.android.com/reference/java/util/stream/LongStream.html#empty())
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn empty<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC, .name == "empty", .descriptor == "()Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "empty\0", "()Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/stream/LongStream.html#of(long))
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn of_long<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC, .name == "of", .descriptor == "(J)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "of\0", "(J)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/stream/LongStream.html#of(long...))
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn of_long_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::LongArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC | VARARGS, .name == "of", .descriptor == "([J)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "of\0", "([J)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [iterate](https://developer.android.com/reference/java/util/stream/LongStream.html#iterate(long,%20java.util.function.LongUnaryOperator))
        ///
        /// Required features: "java-util-function-LongUnaryOperator", "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongUnaryOperator", feature = "java-util-stream-LongStream")))]
        pub fn iterate<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongUnaryOperator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC, .name == "iterate", .descriptor == "(JLjava/util/function/LongUnaryOperator;)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "iterate\0", "(JLjava/util/function/LongUnaryOperator;)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [generate](https://developer.android.com/reference/java/util/stream/LongStream.html#generate(java.util.function.LongSupplier))
        ///
        /// Required features: "java-util-function-LongSupplier", "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-LongSupplier", feature = "java-util-stream-LongStream")))]
        pub fn generate<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::LongSupplier>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC, .name == "generate", .descriptor == "(Ljava/util/function/LongSupplier;)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "generate\0", "(Ljava/util/function/LongSupplier;)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [range](https://developer.android.com/reference/java/util/stream/LongStream.html#range(long,%20long))
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn range<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC, .name == "range", .descriptor == "(JJ)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "range\0", "(JJ)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [rangeClosed](https://developer.android.com/reference/java/util/stream/LongStream.html#rangeClosed(long,%20long))
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn rangeClosed<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC, .name == "rangeClosed", .descriptor == "(JJ)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "rangeClosed\0", "(JJ)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [concat](https://developer.android.com/reference/java/util/stream/LongStream.html#concat(java.util.stream.LongStream,%20java.util.stream.LongStream))
        ///
        /// Required features: "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-LongStream")))]
        pub fn concat<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::LongStream>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::LongStream>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | STATIC, .name == "concat", .descriptor == "(Ljava/util/stream/LongStream;Ljava/util/stream/LongStream;)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/LongStream\0", "concat\0", "(Ljava/util/stream/LongStream;Ljava/util/stream/LongStream;)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [parallel](https://developer.android.com/reference/java/util/stream/LongStream.html#parallel())
        // ///
        // /// Required features: "java-util-stream-BaseStream"
        // #[cfg(any(feature = "all", all(feature = "java-util-stream-BaseStream")))]
        // pub fn parallel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::BaseStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "parallel", .descriptor == "()Ljava/util/stream/BaseStream;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "parallel\0", "()Ljava/util/stream/BaseStream;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [sequential](https://developer.android.com/reference/java/util/stream/LongStream.html#sequential())
        // ///
        // /// Required features: "java-util-stream-BaseStream"
        // #[cfg(any(feature = "all", all(feature = "java-util-stream-BaseStream")))]
        // pub fn sequential<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::BaseStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "sequential", .descriptor == "()Ljava/util/stream/BaseStream;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "sequential\0", "()Ljava/util/stream/BaseStream;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [spliterator](https://developer.android.com/reference/java/util/stream/LongStream.html#spliterator())
        // ///
        // /// Required features: "java-util-Spliterator"
        // #[cfg(any(feature = "all", all(feature = "java-util-Spliterator")))]
        // pub fn spliterator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Spliterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "spliterator", .descriptor == "()Ljava/util/Spliterator;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "spliterator\0", "()Ljava/util/Spliterator;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [iterator](https://developer.android.com/reference/java/util/stream/LongStream.html#iterator())
        // ///
        // /// Required features: "java-util-Iterator"
        // #[cfg(any(feature = "all", all(feature = "java-util-Iterator")))]
        // pub fn iterator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Iterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/stream/LongStream", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "iterator", .descriptor == "()Ljava/util/Iterator;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/LongStream\0", "iterator\0", "()Ljava/util/Iterator;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
