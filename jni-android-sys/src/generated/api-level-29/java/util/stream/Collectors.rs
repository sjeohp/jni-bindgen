// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-stream-Collectors"))]
__jni_bindgen! {
    /// public final class [Collectors](https://developer.android.com/reference/java/util/stream/Collectors.html)
    ///
    /// Required feature: java-util-stream-Collectors
    public final class Collectors ("java/util/stream/Collectors") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Collectors](https://developer.android.com/reference/java/util/stream/Collectors.html#Collectors())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::stream::Collectors>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/stream/Collectors", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/Collectors\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [toCollection](https://developer.android.com/reference/java/util/stream/Collectors.html#toCollection(java.util.function.Supplier))
        ///
        /// Required features: "java-util-function-Supplier", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Supplier", feature = "java-util-stream-Collector")))]
        pub fn toCollection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toCollection", .descriptor == "(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toCollection\0", "(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toList](https://developer.android.com/reference/java/util/stream/Collectors.html#toList())
        ///
        /// Required features: "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-Collector")))]
        pub fn toList<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toList", .descriptor == "()Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toList\0", "()Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toSet](https://developer.android.com/reference/java/util/stream/Collectors.html#toSet())
        ///
        /// Required features: "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-Collector")))]
        pub fn toSet<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toSet", .descriptor == "()Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toSet\0", "()Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [joining](https://developer.android.com/reference/java/util/stream/Collectors.html#joining())
        ///
        /// Required features: "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-Collector")))]
        pub fn joining<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "joining", .descriptor == "()Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "joining\0", "()Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [joining](https://developer.android.com/reference/java/util/stream/Collectors.html#joining(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence", feature = "java-util-stream-Collector")))]
        pub fn joining_CharSequence<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "joining", .descriptor == "(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "joining\0", "(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [joining](https://developer.android.com/reference/java/util/stream/Collectors.html#joining(java.lang.CharSequence,%20java.lang.CharSequence,%20java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence", feature = "java-util-stream-Collector")))]
        pub fn joining_CharSequence_CharSequence_CharSequence<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "joining", .descriptor == "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "joining\0", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [mapping](https://developer.android.com/reference/java/util/stream/Collectors.html#mapping(java.util.function.Function,%20java.util.stream.Collector))
        ///
        /// Required features: "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn mapping<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::Collector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "mapping", .descriptor == "(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "mapping\0", "(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [collectingAndThen](https://developer.android.com/reference/java/util/stream/Collectors.html#collectingAndThen(java.util.stream.Collector,%20java.util.function.Function))
        ///
        /// Required features: "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn collectingAndThen<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::Collector>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "collectingAndThen", .descriptor == "(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "collectingAndThen\0", "(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [counting](https://developer.android.com/reference/java/util/stream/Collectors.html#counting())
        ///
        /// Required features: "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-stream-Collector")))]
        pub fn counting<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "counting", .descriptor == "()Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "counting\0", "()Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [minBy](https://developer.android.com/reference/java/util/stream/Collectors.html#minBy(java.util.Comparator))
        ///
        /// Required features: "java-util-Comparator", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-Comparator", feature = "java-util-stream-Collector")))]
        pub fn minBy<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Comparator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "minBy", .descriptor == "(Ljava/util/Comparator;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "minBy\0", "(Ljava/util/Comparator;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [maxBy](https://developer.android.com/reference/java/util/stream/Collectors.html#maxBy(java.util.Comparator))
        ///
        /// Required features: "java-util-Comparator", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-Comparator", feature = "java-util-stream-Collector")))]
        pub fn maxBy<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Comparator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "maxBy", .descriptor == "(Ljava/util/Comparator;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "maxBy\0", "(Ljava/util/Comparator;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [summingInt](https://developer.android.com/reference/java/util/stream/Collectors.html#summingInt(java.util.function.ToIntFunction))
        ///
        /// Required features: "java-util-function-ToIntFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToIntFunction", feature = "java-util-stream-Collector")))]
        pub fn summingInt<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToIntFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "summingInt", .descriptor == "(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "summingInt\0", "(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [summingLong](https://developer.android.com/reference/java/util/stream/Collectors.html#summingLong(java.util.function.ToLongFunction))
        ///
        /// Required features: "java-util-function-ToLongFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToLongFunction", feature = "java-util-stream-Collector")))]
        pub fn summingLong<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToLongFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "summingLong", .descriptor == "(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "summingLong\0", "(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [summingDouble](https://developer.android.com/reference/java/util/stream/Collectors.html#summingDouble(java.util.function.ToDoubleFunction))
        ///
        /// Required features: "java-util-function-ToDoubleFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToDoubleFunction", feature = "java-util-stream-Collector")))]
        pub fn summingDouble<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToDoubleFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "summingDouble", .descriptor == "(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "summingDouble\0", "(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [averagingInt](https://developer.android.com/reference/java/util/stream/Collectors.html#averagingInt(java.util.function.ToIntFunction))
        ///
        /// Required features: "java-util-function-ToIntFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToIntFunction", feature = "java-util-stream-Collector")))]
        pub fn averagingInt<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToIntFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "averagingInt", .descriptor == "(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "averagingInt\0", "(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [averagingLong](https://developer.android.com/reference/java/util/stream/Collectors.html#averagingLong(java.util.function.ToLongFunction))
        ///
        /// Required features: "java-util-function-ToLongFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToLongFunction", feature = "java-util-stream-Collector")))]
        pub fn averagingLong<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToLongFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "averagingLong", .descriptor == "(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "averagingLong\0", "(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [averagingDouble](https://developer.android.com/reference/java/util/stream/Collectors.html#averagingDouble(java.util.function.ToDoubleFunction))
        ///
        /// Required features: "java-util-function-ToDoubleFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToDoubleFunction", feature = "java-util-stream-Collector")))]
        pub fn averagingDouble<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToDoubleFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "averagingDouble", .descriptor == "(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "averagingDouble\0", "(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reducing](https://developer.android.com/reference/java/util/stream/Collectors.html#reducing(java.lang.Object,%20java.util.function.BinaryOperator))
        ///
        /// Required features: "java-lang-Object", "java-util-function-BinaryOperator", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-function-BinaryOperator", feature = "java-util-stream-Collector")))]
        pub fn reducing_Object_BinaryOperator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "reducing", .descriptor == "(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "reducing\0", "(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reducing](https://developer.android.com/reference/java/util/stream/Collectors.html#reducing(java.util.function.BinaryOperator))
        ///
        /// Required features: "java-util-function-BinaryOperator", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BinaryOperator", feature = "java-util-stream-Collector")))]
        pub fn reducing_BinaryOperator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "reducing", .descriptor == "(Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "reducing\0", "(Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reducing](https://developer.android.com/reference/java/util/stream/Collectors.html#reducing(java.lang.Object,%20java.util.function.Function,%20java.util.function.BinaryOperator))
        ///
        /// Required features: "java-lang-Object", "java-util-function-BinaryOperator", "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-function-BinaryOperator", feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn reducing_Object_Function_BinaryOperator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "reducing", .descriptor == "(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "reducing\0", "(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [groupingBy](https://developer.android.com/reference/java/util/stream/Collectors.html#groupingBy(java.util.function.Function))
        ///
        /// Required features: "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn groupingBy_Function<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "groupingBy", .descriptor == "(Ljava/util/function/Function;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "groupingBy\0", "(Ljava/util/function/Function;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [groupingBy](https://developer.android.com/reference/java/util/stream/Collectors.html#groupingBy(java.util.function.Function,%20java.util.stream.Collector))
        ///
        /// Required features: "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn groupingBy_Function_Collector<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::Collector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "groupingBy", .descriptor == "(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "groupingBy\0", "(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [groupingBy](https://developer.android.com/reference/java/util/stream/Collectors.html#groupingBy(java.util.function.Function,%20java.util.function.Supplier,%20java.util.stream.Collector))
        ///
        /// Required features: "java-util-function-Function", "java-util-function-Supplier", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-function-Supplier", feature = "java-util-stream-Collector")))]
        pub fn groupingBy_Function_Supplier_Collector<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::Collector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "groupingBy", .descriptor == "(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "groupingBy\0", "(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [groupingByConcurrent](https://developer.android.com/reference/java/util/stream/Collectors.html#groupingByConcurrent(java.util.function.Function))
        ///
        /// Required features: "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn groupingByConcurrent_Function<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "groupingByConcurrent", .descriptor == "(Ljava/util/function/Function;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "groupingByConcurrent\0", "(Ljava/util/function/Function;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [groupingByConcurrent](https://developer.android.com/reference/java/util/stream/Collectors.html#groupingByConcurrent(java.util.function.Function,%20java.util.stream.Collector))
        ///
        /// Required features: "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn groupingByConcurrent_Function_Collector<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::Collector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "groupingByConcurrent", .descriptor == "(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "groupingByConcurrent\0", "(Ljava/util/function/Function;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [groupingByConcurrent](https://developer.android.com/reference/java/util/stream/Collectors.html#groupingByConcurrent(java.util.function.Function,%20java.util.function.Supplier,%20java.util.stream.Collector))
        ///
        /// Required features: "java-util-function-Function", "java-util-function-Supplier", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-function-Supplier", feature = "java-util-stream-Collector")))]
        pub fn groupingByConcurrent_Function_Supplier_Collector<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::Collector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "groupingByConcurrent", .descriptor == "(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "groupingByConcurrent\0", "(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [partitioningBy](https://developer.android.com/reference/java/util/stream/Collectors.html#partitioningBy(java.util.function.Predicate))
        ///
        /// Required features: "java-util-function-Predicate", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Predicate", feature = "java-util-stream-Collector")))]
        pub fn partitioningBy_Predicate<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Predicate>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "partitioningBy", .descriptor == "(Ljava/util/function/Predicate;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "partitioningBy\0", "(Ljava/util/function/Predicate;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [partitioningBy](https://developer.android.com/reference/java/util/stream/Collectors.html#partitioningBy(java.util.function.Predicate,%20java.util.stream.Collector))
        ///
        /// Required features: "java-util-function-Predicate", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Predicate", feature = "java-util-stream-Collector")))]
        pub fn partitioningBy_Predicate_Collector<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Predicate>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::stream::Collector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "partitioningBy", .descriptor == "(Ljava/util/function/Predicate;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "partitioningBy\0", "(Ljava/util/function/Predicate;Ljava/util/stream/Collector;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toMap](https://developer.android.com/reference/java/util/stream/Collectors.html#toMap(java.util.function.Function,%20java.util.function.Function))
        ///
        /// Required features: "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn toMap_Function_Function<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toMap", .descriptor == "(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toMap\0", "(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toMap](https://developer.android.com/reference/java/util/stream/Collectors.html#toMap(java.util.function.Function,%20java.util.function.Function,%20java.util.function.BinaryOperator))
        ///
        /// Required features: "java-util-function-BinaryOperator", "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BinaryOperator", feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn toMap_Function_Function_BinaryOperator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toMap", .descriptor == "(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toMap\0", "(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toMap](https://developer.android.com/reference/java/util/stream/Collectors.html#toMap(java.util.function.Function,%20java.util.function.Function,%20java.util.function.BinaryOperator,%20java.util.function.Supplier))
        ///
        /// Required features: "java-util-function-BinaryOperator", "java-util-function-Function", "java-util-function-Supplier", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BinaryOperator", feature = "java-util-function-Function", feature = "java-util-function-Supplier", feature = "java-util-stream-Collector")))]
        pub fn toMap_Function_Function_BinaryOperator_Supplier<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toMap", .descriptor == "(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toMap\0", "(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toConcurrentMap](https://developer.android.com/reference/java/util/stream/Collectors.html#toConcurrentMap(java.util.function.Function,%20java.util.function.Function))
        ///
        /// Required features: "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn toConcurrentMap_Function_Function<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toConcurrentMap", .descriptor == "(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toConcurrentMap\0", "(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toConcurrentMap](https://developer.android.com/reference/java/util/stream/Collectors.html#toConcurrentMap(java.util.function.Function,%20java.util.function.Function,%20java.util.function.BinaryOperator))
        ///
        /// Required features: "java-util-function-BinaryOperator", "java-util-function-Function", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BinaryOperator", feature = "java-util-function-Function", feature = "java-util-stream-Collector")))]
        pub fn toConcurrentMap_Function_Function_BinaryOperator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toConcurrentMap", .descriptor == "(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toConcurrentMap\0", "(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toConcurrentMap](https://developer.android.com/reference/java/util/stream/Collectors.html#toConcurrentMap(java.util.function.Function,%20java.util.function.Function,%20java.util.function.BinaryOperator,%20java.util.function.Supplier))
        ///
        /// Required features: "java-util-function-BinaryOperator", "java-util-function-Function", "java-util-function-Supplier", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BinaryOperator", feature = "java-util-function-Function", feature = "java-util-function-Supplier", feature = "java-util-stream-Collector")))]
        pub fn toConcurrentMap_Function_Function_BinaryOperator_Supplier<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "toConcurrentMap", .descriptor == "(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "toConcurrentMap\0", "(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [summarizingInt](https://developer.android.com/reference/java/util/stream/Collectors.html#summarizingInt(java.util.function.ToIntFunction))
        ///
        /// Required features: "java-util-function-ToIntFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToIntFunction", feature = "java-util-stream-Collector")))]
        pub fn summarizingInt<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToIntFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "summarizingInt", .descriptor == "(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "summarizingInt\0", "(Ljava/util/function/ToIntFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [summarizingLong](https://developer.android.com/reference/java/util/stream/Collectors.html#summarizingLong(java.util.function.ToLongFunction))
        ///
        /// Required features: "java-util-function-ToLongFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToLongFunction", feature = "java-util-stream-Collector")))]
        pub fn summarizingLong<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToLongFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "summarizingLong", .descriptor == "(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "summarizingLong\0", "(Ljava/util/function/ToLongFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [summarizingDouble](https://developer.android.com/reference/java/util/stream/Collectors.html#summarizingDouble(java.util.function.ToDoubleFunction))
        ///
        /// Required features: "java-util-function-ToDoubleFunction", "java-util-stream-Collector"
        #[cfg(any(feature = "all", all(feature = "java-util-function-ToDoubleFunction", feature = "java-util-stream-Collector")))]
        pub fn summarizingDouble<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::ToDoubleFunction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collectors", java.flags == PUBLIC | STATIC, .name == "summarizingDouble", .descriptor == "(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collectors\0", "summarizingDouble\0", "(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
