// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-stream-Collector"))]
__jni_bindgen! {
    /// public interface [Collector](https://developer.android.com/reference/java/util/stream/Collector.html)
    ///
    /// Required feature: java-util-stream-Collector
    public interface Collector ("java/util/stream/Collector") extends crate::java::lang::Object {

        /// [supplier](https://developer.android.com/reference/java/util/stream/Collector.html#supplier())
        ///
        /// Required features: "java-util-function-Supplier"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Supplier")))]
        pub fn supplier<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::function::Supplier>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collector", java.flags == PUBLIC | ABSTRACT, .name == "supplier", .descriptor == "()Ljava/util/function/Supplier;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/Collector\0", "supplier\0", "()Ljava/util/function/Supplier;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [accumulator](https://developer.android.com/reference/java/util/stream/Collector.html#accumulator())
        ///
        /// Required features: "java-util-function-BiConsumer"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BiConsumer")))]
        pub fn accumulator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::function::BiConsumer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collector", java.flags == PUBLIC | ABSTRACT, .name == "accumulator", .descriptor == "()Ljava/util/function/BiConsumer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/Collector\0", "accumulator\0", "()Ljava/util/function/BiConsumer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [combiner](https://developer.android.com/reference/java/util/stream/Collector.html#combiner())
        ///
        /// Required features: "java-util-function-BinaryOperator"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BinaryOperator")))]
        pub fn combiner<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::function::BinaryOperator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collector", java.flags == PUBLIC | ABSTRACT, .name == "combiner", .descriptor == "()Ljava/util/function/BinaryOperator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/Collector\0", "combiner\0", "()Ljava/util/function/BinaryOperator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [finisher](https://developer.android.com/reference/java/util/stream/Collector.html#finisher())
        ///
        /// Required features: "java-util-function-Function"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Function")))]
        pub fn finisher<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::function::Function>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collector", java.flags == PUBLIC | ABSTRACT, .name == "finisher", .descriptor == "()Ljava/util/function/Function;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/Collector\0", "finisher\0", "()Ljava/util/function/Function;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [characteristics](https://developer.android.com/reference/java/util/stream/Collector.html#characteristics())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn characteristics<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collector", java.flags == PUBLIC | ABSTRACT, .name == "characteristics", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/Collector\0", "characteristics\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/stream/Collector.html#of(java.util.function.Supplier,%20java.util.function.BiConsumer,%20java.util.function.BinaryOperator,%20java.util.stream.Collector.Characteristics...))
        ///
        /// Required features: "java-util-function-BiConsumer", "java-util-function-BinaryOperator", "java-util-function-Supplier", "java-util-stream-Collector", "java-util-stream-Collector_Characteristics"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BiConsumer", feature = "java-util-function-BinaryOperator", feature = "java-util-function-Supplier", feature = "java-util-stream-Collector", feature = "java-util-stream-Collector_Characteristics")))]
        pub fn of_Supplier_BiConsumer_BinaryOperator_Characteristics_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BiConsumer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::util::stream::Collector_Characteristics, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collector", java.flags == PUBLIC | STATIC | VARARGS, .name == "of", .descriptor == "(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collector\0", "of\0", "(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [of](https://developer.android.com/reference/java/util/stream/Collector.html#of(java.util.function.Supplier,%20java.util.function.BiConsumer,%20java.util.function.BinaryOperator,%20java.util.function.Function,%20java.util.stream.Collector.Characteristics...))
        ///
        /// Required features: "java-util-function-BiConsumer", "java-util-function-BinaryOperator", "java-util-function-Function", "java-util-function-Supplier", "java-util-stream-Collector", "java-util-stream-Collector_Characteristics"
        #[cfg(any(feature = "all", all(feature = "java-util-function-BiConsumer", feature = "java-util-function-BinaryOperator", feature = "java-util-function-Function", feature = "java-util-function-Supplier", feature = "java-util-stream-Collector", feature = "java-util-stream-Collector_Characteristics")))]
        pub fn of_Supplier_BiConsumer_BinaryOperator_Function_Characteristics_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BiConsumer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::BinaryOperator>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::util::stream::Collector_Characteristics, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Collector>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/Collector", java.flags == PUBLIC | STATIC | VARARGS, .name == "of", .descriptor == "(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/Collector\0", "of\0", "(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
