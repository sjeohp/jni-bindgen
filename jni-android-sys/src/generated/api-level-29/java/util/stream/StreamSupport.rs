// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-stream-StreamSupport"))]
__jni_bindgen! {
    /// public final class [StreamSupport](https://developer.android.com/reference/java/util/stream/StreamSupport.html)
    ///
    /// Required feature: java-util-stream-StreamSupport
    public final class StreamSupport ("java/util/stream/StreamSupport") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [StreamSupport](https://developer.android.com/reference/java/util/stream/StreamSupport.html#StreamSupport())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::stream::StreamSupport>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/stream/StreamSupport", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/stream/StreamSupport\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [stream](https://developer.android.com/reference/java/util/stream/StreamSupport.html#stream(java.util.Spliterator,%20boolean))
        ///
        /// Required features: "java-util-Spliterator", "java-util-stream-Stream"
        #[cfg(any(feature = "all", all(feature = "java-util-Spliterator", feature = "java-util-stream-Stream")))]
        pub fn stream_Spliterator_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Spliterator>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Stream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/StreamSupport", java.flags == PUBLIC | STATIC, .name == "stream", .descriptor == "(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/StreamSupport\0", "stream\0", "(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [stream](https://developer.android.com/reference/java/util/stream/StreamSupport.html#stream(java.util.function.Supplier,%20int,%20boolean))
        ///
        /// Required features: "java-util-function-Supplier", "java-util-stream-Stream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Supplier", feature = "java-util-stream-Stream")))]
        pub fn stream_Supplier_int_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg1: i32, arg2: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::Stream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/StreamSupport", java.flags == PUBLIC | STATIC, .name == "stream", .descriptor == "(Ljava/util/function/Supplier;IZ)Ljava/util/stream/Stream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/StreamSupport\0", "stream\0", "(Ljava/util/function/Supplier;IZ)Ljava/util/stream/Stream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [intStream](https://developer.android.com/reference/java/util/stream/StreamSupport.html#intStream(java.util.Spliterator.OfInt,%20boolean))
        ///
        /// Required features: "java-util-Spliterator_OfInt", "java-util-stream-IntStream"
        #[cfg(any(feature = "all", all(feature = "java-util-Spliterator_OfInt", feature = "java-util-stream-IntStream")))]
        pub fn intStream_OfInt_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Spliterator_OfInt>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::IntStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/StreamSupport", java.flags == PUBLIC | STATIC, .name == "intStream", .descriptor == "(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/StreamSupport\0", "intStream\0", "(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [intStream](https://developer.android.com/reference/java/util/stream/StreamSupport.html#intStream(java.util.function.Supplier,%20int,%20boolean))
        ///
        /// Required features: "java-util-function-Supplier", "java-util-stream-IntStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Supplier", feature = "java-util-stream-IntStream")))]
        pub fn intStream_Supplier_int_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg1: i32, arg2: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::IntStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/StreamSupport", java.flags == PUBLIC | STATIC, .name == "intStream", .descriptor == "(Ljava/util/function/Supplier;IZ)Ljava/util/stream/IntStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/StreamSupport\0", "intStream\0", "(Ljava/util/function/Supplier;IZ)Ljava/util/stream/IntStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [longStream](https://developer.android.com/reference/java/util/stream/StreamSupport.html#longStream(java.util.Spliterator.OfLong,%20boolean))
        ///
        /// Required features: "java-util-Spliterator_OfLong", "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-Spliterator_OfLong", feature = "java-util-stream-LongStream")))]
        pub fn longStream_OfLong_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Spliterator_OfLong>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/StreamSupport", java.flags == PUBLIC | STATIC, .name == "longStream", .descriptor == "(Ljava/util/Spliterator$OfLong;Z)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/StreamSupport\0", "longStream\0", "(Ljava/util/Spliterator$OfLong;Z)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [longStream](https://developer.android.com/reference/java/util/stream/StreamSupport.html#longStream(java.util.function.Supplier,%20int,%20boolean))
        ///
        /// Required features: "java-util-function-Supplier", "java-util-stream-LongStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Supplier", feature = "java-util-stream-LongStream")))]
        pub fn longStream_Supplier_int_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg1: i32, arg2: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::LongStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/StreamSupport", java.flags == PUBLIC | STATIC, .name == "longStream", .descriptor == "(Ljava/util/function/Supplier;IZ)Ljava/util/stream/LongStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/StreamSupport\0", "longStream\0", "(Ljava/util/function/Supplier;IZ)Ljava/util/stream/LongStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [doubleStream](https://developer.android.com/reference/java/util/stream/StreamSupport.html#doubleStream(java.util.Spliterator.OfDouble,%20boolean))
        ///
        /// Required features: "java-util-Spliterator_OfDouble", "java-util-stream-DoubleStream"
        #[cfg(any(feature = "all", all(feature = "java-util-Spliterator_OfDouble", feature = "java-util-stream-DoubleStream")))]
        pub fn doubleStream_OfDouble_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Spliterator_OfDouble>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::DoubleStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/StreamSupport", java.flags == PUBLIC | STATIC, .name == "doubleStream", .descriptor == "(Ljava/util/Spliterator$OfDouble;Z)Ljava/util/stream/DoubleStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/StreamSupport\0", "doubleStream\0", "(Ljava/util/Spliterator$OfDouble;Z)Ljava/util/stream/DoubleStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [doubleStream](https://developer.android.com/reference/java/util/stream/StreamSupport.html#doubleStream(java.util.function.Supplier,%20int,%20boolean))
        ///
        /// Required features: "java-util-function-Supplier", "java-util-stream-DoubleStream"
        #[cfg(any(feature = "all", all(feature = "java-util-function-Supplier", feature = "java-util-stream-DoubleStream")))]
        pub fn doubleStream_Supplier_int_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Supplier>>, arg1: i32, arg2: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::stream::DoubleStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/stream/StreamSupport", java.flags == PUBLIC | STATIC, .name == "doubleStream", .descriptor == "(Ljava/util/function/Supplier;IZ)Ljava/util/stream/DoubleStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/stream/StreamSupport\0", "doubleStream\0", "(Ljava/util/function/Supplier;IZ)Ljava/util/stream/DoubleStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
