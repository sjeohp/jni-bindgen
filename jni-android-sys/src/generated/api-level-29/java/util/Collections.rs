// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-Collections"))]
__jni_bindgen! {
    /// public class [Collections](https://developer.android.com/reference/java/util/Collections.html)
    ///
    /// Required feature: java-util-Collections
    public class Collections ("java/util/Collections") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Collections](https://developer.android.com/reference/java/util/Collections.html#Collections())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::Collections>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/Collections", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/Collections\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [sort](https://developer.android.com/reference/java/util/Collections.html#sort(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn sort_List<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "sort", .descriptor == "(Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "sort\0", "(Ljava/util/List;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [sort](https://developer.android.com/reference/java/util/Collections.html#sort(java.util.List,%20java.util.Comparator))
        ///
        /// Required features: "java-util-Comparator", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-Comparator", feature = "java-util-List")))]
        pub fn sort_List_Comparator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Comparator>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "sort", .descriptor == "(Ljava/util/List;Ljava/util/Comparator;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "sort\0", "(Ljava/util/List;Ljava/util/Comparator;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [binarySearch](https://developer.android.com/reference/java/util/Collections.html#binarySearch(java.util.List,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-List")))]
        pub fn binarySearch_List_Object<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "binarySearch", .descriptor == "(Ljava/util/List;Ljava/lang/Object;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "binarySearch\0", "(Ljava/util/List;Ljava/lang/Object;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [binarySearch](https://developer.android.com/reference/java/util/Collections.html#binarySearch(java.util.List,%20java.lang.Object,%20java.util.Comparator))
        ///
        /// Required features: "java-lang-Object", "java-util-Comparator", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Comparator", feature = "java-util-List")))]
        pub fn binarySearch_List_Object_Comparator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Comparator>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "binarySearch", .descriptor == "(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "binarySearch\0", "(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reverse](https://developer.android.com/reference/java/util/Collections.html#reverse(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn reverse<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "reverse", .descriptor == "(Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "reverse\0", "(Ljava/util/List;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [shuffle](https://developer.android.com/reference/java/util/Collections.html#shuffle(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn shuffle_List<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "shuffle", .descriptor == "(Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "shuffle\0", "(Ljava/util/List;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [shuffle](https://developer.android.com/reference/java/util/Collections.html#shuffle(java.util.List,%20java.util.Random))
        ///
        /// Required features: "java-util-List", "java-util-Random"
        #[cfg(any(feature = "all", all(feature = "java-util-List", feature = "java-util-Random")))]
        pub fn shuffle_List_Random<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Random>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "shuffle", .descriptor == "(Ljava/util/List;Ljava/util/Random;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "shuffle\0", "(Ljava/util/List;Ljava/util/Random;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [swap](https://developer.android.com/reference/java/util/Collections.html#swap(java.util.List,%20int,%20int))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn swap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "swap", .descriptor == "(Ljava/util/List;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "swap\0", "(Ljava/util/List;II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fill](https://developer.android.com/reference/java/util/Collections.html#fill(java.util.List,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-List")))]
        pub fn fill<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "fill", .descriptor == "(Ljava/util/List;Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "fill\0", "(Ljava/util/List;Ljava/lang/Object;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [copy](https://developer.android.com/reference/java/util/Collections.html#copy(java.util.List,%20java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn copy<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "copy", .descriptor == "(Ljava/util/List;Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "copy\0", "(Ljava/util/List;Ljava/util/List;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [min](https://developer.android.com/reference/java/util/Collections.html#min(java.util.Collection))
        ///
        /// Required features: "java-lang-Object", "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Collection")))]
        pub fn min_Collection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "min", .descriptor == "(Ljava/util/Collection;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "min\0", "(Ljava/util/Collection;)Ljava/lang/Object;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [min](https://developer.android.com/reference/java/util/Collections.html#min(java.util.Collection,%20java.util.Comparator))
        ///
        /// Required features: "java-lang-Object", "java-util-Collection", "java-util-Comparator"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Collection", feature = "java-util-Comparator")))]
        pub fn min_Collection_Comparator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Comparator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "min", .descriptor == "(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "min\0", "(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [max](https://developer.android.com/reference/java/util/Collections.html#max(java.util.Collection))
        ///
        /// Required features: "java-lang-Object", "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Collection")))]
        pub fn max_Collection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "max", .descriptor == "(Ljava/util/Collection;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "max\0", "(Ljava/util/Collection;)Ljava/lang/Object;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [max](https://developer.android.com/reference/java/util/Collections.html#max(java.util.Collection,%20java.util.Comparator))
        ///
        /// Required features: "java-lang-Object", "java-util-Collection", "java-util-Comparator"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Collection", feature = "java-util-Comparator")))]
        pub fn max_Collection_Comparator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Comparator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "max", .descriptor == "(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "max\0", "(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [rotate](https://developer.android.com/reference/java/util/Collections.html#rotate(java.util.List,%20int))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn rotate<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "rotate", .descriptor == "(Ljava/util/List;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "rotate\0", "(Ljava/util/List;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replaceAll](https://developer.android.com/reference/java/util/Collections.html#replaceAll(java.util.List,%20java.lang.Object,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-List")))]
        pub fn replaceAll<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "replaceAll", .descriptor == "(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "replaceAll\0", "(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Object;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [indexOfSubList](https://developer.android.com/reference/java/util/Collections.html#indexOfSubList(java.util.List,%20java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn indexOfSubList<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "indexOfSubList", .descriptor == "(Ljava/util/List;Ljava/util/List;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "indexOfSubList\0", "(Ljava/util/List;Ljava/util/List;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [lastIndexOfSubList](https://developer.android.com/reference/java/util/Collections.html#lastIndexOfSubList(java.util.List,%20java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn lastIndexOfSubList<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "lastIndexOfSubList", .descriptor == "(Ljava/util/List;Ljava/util/List;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "lastIndexOfSubList\0", "(Ljava/util/List;Ljava/util/List;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmodifiableCollection](https://developer.android.com/reference/java/util/Collections.html#unmodifiableCollection(java.util.Collection))
        ///
        /// Required features: "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-util-Collection")))]
        pub fn unmodifiableCollection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Collection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "unmodifiableCollection", .descriptor == "(Ljava/util/Collection;)Ljava/util/Collection;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "unmodifiableCollection\0", "(Ljava/util/Collection;)Ljava/util/Collection;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmodifiableSet](https://developer.android.com/reference/java/util/Collections.html#unmodifiableSet(java.util.Set))
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn unmodifiableSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "unmodifiableSet", .descriptor == "(Ljava/util/Set;)Ljava/util/Set;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "unmodifiableSet\0", "(Ljava/util/Set;)Ljava/util/Set;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmodifiableSortedSet](https://developer.android.com/reference/java/util/Collections.html#unmodifiableSortedSet(java.util.SortedSet))
        ///
        /// Required features: "java-util-SortedSet"
        #[cfg(any(feature = "all", all(feature = "java-util-SortedSet")))]
        pub fn unmodifiableSortedSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::SortedSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "unmodifiableSortedSet", .descriptor == "(Ljava/util/SortedSet;)Ljava/util/SortedSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "unmodifiableSortedSet\0", "(Ljava/util/SortedSet;)Ljava/util/SortedSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmodifiableNavigableSet](https://developer.android.com/reference/java/util/Collections.html#unmodifiableNavigableSet(java.util.NavigableSet))
        ///
        /// Required features: "java-util-NavigableSet"
        #[cfg(any(feature = "all", all(feature = "java-util-NavigableSet")))]
        pub fn unmodifiableNavigableSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::NavigableSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::NavigableSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "unmodifiableNavigableSet", .descriptor == "(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "unmodifiableNavigableSet\0", "(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmodifiableList](https://developer.android.com/reference/java/util/Collections.html#unmodifiableList(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn unmodifiableList<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "unmodifiableList", .descriptor == "(Ljava/util/List;)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "unmodifiableList\0", "(Ljava/util/List;)Ljava/util/List;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmodifiableMap](https://developer.android.com/reference/java/util/Collections.html#unmodifiableMap(java.util.Map))
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn unmodifiableMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "unmodifiableMap", .descriptor == "(Ljava/util/Map;)Ljava/util/Map;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "unmodifiableMap\0", "(Ljava/util/Map;)Ljava/util/Map;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmodifiableSortedMap](https://developer.android.com/reference/java/util/Collections.html#unmodifiableSortedMap(java.util.SortedMap))
        ///
        /// Required features: "java-util-SortedMap"
        #[cfg(any(feature = "all", all(feature = "java-util-SortedMap")))]
        pub fn unmodifiableSortedMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::SortedMap>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "unmodifiableSortedMap", .descriptor == "(Ljava/util/SortedMap;)Ljava/util/SortedMap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "unmodifiableSortedMap\0", "(Ljava/util/SortedMap;)Ljava/util/SortedMap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unmodifiableNavigableMap](https://developer.android.com/reference/java/util/Collections.html#unmodifiableNavigableMap(java.util.NavigableMap))
        ///
        /// Required features: "java-util-NavigableMap"
        #[cfg(any(feature = "all", all(feature = "java-util-NavigableMap")))]
        pub fn unmodifiableNavigableMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::NavigableMap>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::NavigableMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "unmodifiableNavigableMap", .descriptor == "(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "unmodifiableNavigableMap\0", "(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [synchronizedCollection](https://developer.android.com/reference/java/util/Collections.html#synchronizedCollection(java.util.Collection))
        ///
        /// Required features: "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-util-Collection")))]
        pub fn synchronizedCollection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Collection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "synchronizedCollection", .descriptor == "(Ljava/util/Collection;)Ljava/util/Collection;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "synchronizedCollection\0", "(Ljava/util/Collection;)Ljava/util/Collection;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [synchronizedSet](https://developer.android.com/reference/java/util/Collections.html#synchronizedSet(java.util.Set))
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn synchronizedSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "synchronizedSet", .descriptor == "(Ljava/util/Set;)Ljava/util/Set;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "synchronizedSet\0", "(Ljava/util/Set;)Ljava/util/Set;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [synchronizedSortedSet](https://developer.android.com/reference/java/util/Collections.html#synchronizedSortedSet(java.util.SortedSet))
        ///
        /// Required features: "java-util-SortedSet"
        #[cfg(any(feature = "all", all(feature = "java-util-SortedSet")))]
        pub fn synchronizedSortedSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::SortedSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "synchronizedSortedSet", .descriptor == "(Ljava/util/SortedSet;)Ljava/util/SortedSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "synchronizedSortedSet\0", "(Ljava/util/SortedSet;)Ljava/util/SortedSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [synchronizedNavigableSet](https://developer.android.com/reference/java/util/Collections.html#synchronizedNavigableSet(java.util.NavigableSet))
        ///
        /// Required features: "java-util-NavigableSet"
        #[cfg(any(feature = "all", all(feature = "java-util-NavigableSet")))]
        pub fn synchronizedNavigableSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::NavigableSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::NavigableSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "synchronizedNavigableSet", .descriptor == "(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "synchronizedNavigableSet\0", "(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [synchronizedList](https://developer.android.com/reference/java/util/Collections.html#synchronizedList(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn synchronizedList<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "synchronizedList", .descriptor == "(Ljava/util/List;)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "synchronizedList\0", "(Ljava/util/List;)Ljava/util/List;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [synchronizedMap](https://developer.android.com/reference/java/util/Collections.html#synchronizedMap(java.util.Map))
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn synchronizedMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "synchronizedMap", .descriptor == "(Ljava/util/Map;)Ljava/util/Map;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "synchronizedMap\0", "(Ljava/util/Map;)Ljava/util/Map;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [synchronizedSortedMap](https://developer.android.com/reference/java/util/Collections.html#synchronizedSortedMap(java.util.SortedMap))
        ///
        /// Required features: "java-util-SortedMap"
        #[cfg(any(feature = "all", all(feature = "java-util-SortedMap")))]
        pub fn synchronizedSortedMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::SortedMap>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "synchronizedSortedMap", .descriptor == "(Ljava/util/SortedMap;)Ljava/util/SortedMap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "synchronizedSortedMap\0", "(Ljava/util/SortedMap;)Ljava/util/SortedMap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [synchronizedNavigableMap](https://developer.android.com/reference/java/util/Collections.html#synchronizedNavigableMap(java.util.NavigableMap))
        ///
        /// Required features: "java-util-NavigableMap"
        #[cfg(any(feature = "all", all(feature = "java-util-NavigableMap")))]
        pub fn synchronizedNavigableMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::NavigableMap>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::NavigableMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "synchronizedNavigableMap", .descriptor == "(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "synchronizedNavigableMap\0", "(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedCollection](https://developer.android.com/reference/java/util/Collections.html#checkedCollection(java.util.Collection,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-Collection")))]
        pub fn checkedCollection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Collection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedCollection", .descriptor == "(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedCollection\0", "(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedQueue](https://developer.android.com/reference/java/util/Collections.html#checkedQueue(java.util.Queue,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-Queue"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-Queue")))]
        pub fn checkedQueue<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Queue>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Queue>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedQueue", .descriptor == "(Ljava/util/Queue;Ljava/lang/Class;)Ljava/util/Queue;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedQueue\0", "(Ljava/util/Queue;Ljava/lang/Class;)Ljava/util/Queue;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedSet](https://developer.android.com/reference/java/util/Collections.html#checkedSet(java.util.Set,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-Set")))]
        pub fn checkedSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedSet", .descriptor == "(Ljava/util/Set;Ljava/lang/Class;)Ljava/util/Set;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedSet\0", "(Ljava/util/Set;Ljava/lang/Class;)Ljava/util/Set;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedSortedSet](https://developer.android.com/reference/java/util/Collections.html#checkedSortedSet(java.util.SortedSet,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-SortedSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-SortedSet")))]
        pub fn checkedSortedSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::SortedSet>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedSortedSet", .descriptor == "(Ljava/util/SortedSet;Ljava/lang/Class;)Ljava/util/SortedSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedSortedSet\0", "(Ljava/util/SortedSet;Ljava/lang/Class;)Ljava/util/SortedSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedNavigableSet](https://developer.android.com/reference/java/util/Collections.html#checkedNavigableSet(java.util.NavigableSet,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-NavigableSet"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-NavigableSet")))]
        pub fn checkedNavigableSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::NavigableSet>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::NavigableSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedNavigableSet", .descriptor == "(Ljava/util/NavigableSet;Ljava/lang/Class;)Ljava/util/NavigableSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedNavigableSet\0", "(Ljava/util/NavigableSet;Ljava/lang/Class;)Ljava/util/NavigableSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedList](https://developer.android.com/reference/java/util/Collections.html#checkedList(java.util.List,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-List")))]
        pub fn checkedList<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedList", .descriptor == "(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedList\0", "(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedMap](https://developer.android.com/reference/java/util/Collections.html#checkedMap(java.util.Map,%20java.lang.Class,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-Map")))]
        pub fn checkedMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedMap", .descriptor == "(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedMap\0", "(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedSortedMap](https://developer.android.com/reference/java/util/Collections.html#checkedSortedMap(java.util.SortedMap,%20java.lang.Class,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-SortedMap"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-SortedMap")))]
        pub fn checkedSortedMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::SortedMap>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedSortedMap", .descriptor == "(Ljava/util/SortedMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/SortedMap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedSortedMap\0", "(Ljava/util/SortedMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/SortedMap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [checkedNavigableMap](https://developer.android.com/reference/java/util/Collections.html#checkedNavigableMap(java.util.NavigableMap,%20java.lang.Class,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-util-NavigableMap"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-util-NavigableMap")))]
        pub fn checkedNavigableMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::NavigableMap>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::NavigableMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "checkedNavigableMap", .descriptor == "(Ljava/util/NavigableMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/NavigableMap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "checkedNavigableMap\0", "(Ljava/util/NavigableMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/NavigableMap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptyIterator](https://developer.android.com/reference/java/util/Collections.html#emptyIterator())
        ///
        /// Required features: "java-util-Iterator"
        #[cfg(any(feature = "all", all(feature = "java-util-Iterator")))]
        pub fn emptyIterator<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Iterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "emptyIterator", .descriptor == "()Ljava/util/Iterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptyIterator\0", "()Ljava/util/Iterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptyListIterator](https://developer.android.com/reference/java/util/Collections.html#emptyListIterator())
        ///
        /// Required features: "java-util-ListIterator"
        #[cfg(any(feature = "all", all(feature = "java-util-ListIterator")))]
        pub fn emptyListIterator<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::ListIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "emptyListIterator", .descriptor == "()Ljava/util/ListIterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptyListIterator\0", "()Ljava/util/ListIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptyEnumeration](https://developer.android.com/reference/java/util/Collections.html#emptyEnumeration())
        ///
        /// Required features: "java-util-Enumeration"
        #[cfg(any(feature = "all", all(feature = "java-util-Enumeration")))]
        pub fn emptyEnumeration<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Enumeration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "emptyEnumeration", .descriptor == "()Ljava/util/Enumeration;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptyEnumeration\0", "()Ljava/util/Enumeration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptySet](https://developer.android.com/reference/java/util/Collections.html#emptySet())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn emptySet<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC | FINAL, .name == "emptySet", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptySet\0", "()Ljava/util/Set;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptySortedSet](https://developer.android.com/reference/java/util/Collections.html#emptySortedSet())
        ///
        /// Required features: "java-util-SortedSet"
        #[cfg(any(feature = "all", all(feature = "java-util-SortedSet")))]
        pub fn emptySortedSet<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "emptySortedSet", .descriptor == "()Ljava/util/SortedSet;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptySortedSet\0", "()Ljava/util/SortedSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptyNavigableSet](https://developer.android.com/reference/java/util/Collections.html#emptyNavigableSet())
        ///
        /// Required features: "java-util-NavigableSet"
        #[cfg(any(feature = "all", all(feature = "java-util-NavigableSet")))]
        pub fn emptyNavigableSet<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::NavigableSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "emptyNavigableSet", .descriptor == "()Ljava/util/NavigableSet;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptyNavigableSet\0", "()Ljava/util/NavigableSet;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptyList](https://developer.android.com/reference/java/util/Collections.html#emptyList())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn emptyList<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC | FINAL, .name == "emptyList", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptyList\0", "()Ljava/util/List;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptyMap](https://developer.android.com/reference/java/util/Collections.html#emptyMap())
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn emptyMap<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC | FINAL, .name == "emptyMap", .descriptor == "()Ljava/util/Map;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptyMap\0", "()Ljava/util/Map;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptySortedMap](https://developer.android.com/reference/java/util/Collections.html#emptySortedMap())
        ///
        /// Required features: "java-util-SortedMap"
        #[cfg(any(feature = "all", all(feature = "java-util-SortedMap")))]
        pub fn emptySortedMap<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::SortedMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC | FINAL, .name == "emptySortedMap", .descriptor == "()Ljava/util/SortedMap;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptySortedMap\0", "()Ljava/util/SortedMap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [emptyNavigableMap](https://developer.android.com/reference/java/util/Collections.html#emptyNavigableMap())
        ///
        /// Required features: "java-util-NavigableMap"
        #[cfg(any(feature = "all", all(feature = "java-util-NavigableMap")))]
        pub fn emptyNavigableMap<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::NavigableMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC | FINAL, .name == "emptyNavigableMap", .descriptor == "()Ljava/util/NavigableMap;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "emptyNavigableMap\0", "()Ljava/util/NavigableMap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [singleton](https://developer.android.com/reference/java/util/Collections.html#singleton(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Set")))]
        pub fn singleton<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "singleton", .descriptor == "(Ljava/lang/Object;)Ljava/util/Set;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "singleton\0", "(Ljava/lang/Object;)Ljava/util/Set;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [singletonList](https://developer.android.com/reference/java/util/Collections.html#singletonList(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-List")))]
        pub fn singletonList<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "singletonList", .descriptor == "(Ljava/lang/Object;)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "singletonList\0", "(Ljava/lang/Object;)Ljava/util/List;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [singletonMap](https://developer.android.com/reference/java/util/Collections.html#singletonMap(java.lang.Object,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Map")))]
        pub fn singletonMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "singletonMap", .descriptor == "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "singletonMap\0", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [nCopies](https://developer.android.com/reference/java/util/Collections.html#nCopies(int,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-List")))]
        pub fn nCopies<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "nCopies", .descriptor == "(ILjava/lang/Object;)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "nCopies\0", "(ILjava/lang/Object;)Ljava/util/List;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reverseOrder](https://developer.android.com/reference/java/util/Collections.html#reverseOrder())
        ///
        /// Required features: "java-util-Comparator"
        #[cfg(any(feature = "all", all(feature = "java-util-Comparator")))]
        pub fn reverseOrder<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Comparator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "reverseOrder", .descriptor == "()Ljava/util/Comparator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "reverseOrder\0", "()Ljava/util/Comparator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [reverseOrder](https://developer.android.com/reference/java/util/Collections.html#reverseOrder(java.util.Comparator))
        ///
        /// Required features: "java-util-Comparator"
        #[cfg(any(feature = "all", all(feature = "java-util-Comparator")))]
        pub fn reverseOrder_Comparator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Comparator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Comparator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "reverseOrder", .descriptor == "(Ljava/util/Comparator;)Ljava/util/Comparator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "reverseOrder\0", "(Ljava/util/Comparator;)Ljava/util/Comparator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [enumeration](https://developer.android.com/reference/java/util/Collections.html#enumeration(java.util.Collection))
        ///
        /// Required features: "java-util-Collection", "java-util-Enumeration"
        #[cfg(any(feature = "all", all(feature = "java-util-Collection", feature = "java-util-Enumeration")))]
        pub fn enumeration<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Enumeration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "enumeration", .descriptor == "(Ljava/util/Collection;)Ljava/util/Enumeration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "enumeration\0", "(Ljava/util/Collection;)Ljava/util/Enumeration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [list](https://developer.android.com/reference/java/util/Collections.html#list(java.util.Enumeration))
        ///
        /// Required features: "java-util-ArrayList", "java-util-Enumeration"
        #[cfg(any(feature = "all", all(feature = "java-util-ArrayList", feature = "java-util-Enumeration")))]
        pub fn list<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Enumeration>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::ArrayList>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "list", .descriptor == "(Ljava/util/Enumeration;)Ljava/util/ArrayList;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "list\0", "(Ljava/util/Enumeration;)Ljava/util/ArrayList;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [frequency](https://developer.android.com/reference/java/util/Collections.html#frequency(java.util.Collection,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Collection")))]
        pub fn frequency<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "frequency", .descriptor == "(Ljava/util/Collection;Ljava/lang/Object;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "frequency\0", "(Ljava/util/Collection;Ljava/lang/Object;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [disjoint](https://developer.android.com/reference/java/util/Collections.html#disjoint(java.util.Collection,%20java.util.Collection))
        ///
        /// Required features: "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-util-Collection")))]
        pub fn disjoint<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "disjoint", .descriptor == "(Ljava/util/Collection;Ljava/util/Collection;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "disjoint\0", "(Ljava/util/Collection;Ljava/util/Collection;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addAll](https://developer.android.com/reference/java/util/Collections.html#addAll(java.util.Collection,%20java.lang.Object...))
        ///
        /// Required features: "java-lang-Object", "java-util-Collection"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-util-Collection")))]
        pub fn addAll<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Collection>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::Object, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC | VARARGS, .name == "addAll", .descriptor == "(Ljava/util/Collection;[Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "addAll\0", "(Ljava/util/Collection;[Ljava/lang/Object;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newSetFromMap](https://developer.android.com/reference/java/util/Collections.html#newSetFromMap(java.util.Map))
        ///
        /// Required features: "java-util-Map", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Map", feature = "java-util-Set")))]
        pub fn newSetFromMap<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "newSetFromMap", .descriptor == "(Ljava/util/Map;)Ljava/util/Set;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "newSetFromMap\0", "(Ljava/util/Map;)Ljava/util/Set;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [asLifoQueue](https://developer.android.com/reference/java/util/Collections.html#asLifoQueue(java.util.Deque))
        ///
        /// Required features: "java-util-Deque", "java-util-Queue"
        #[cfg(any(feature = "all", all(feature = "java-util-Deque", feature = "java-util-Queue")))]
        pub fn asLifoQueue<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Deque>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Queue>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Collections", java.flags == PUBLIC | STATIC, .name == "asLifoQueue", .descriptor == "(Ljava/util/Deque;)Ljava/util/Queue;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Collections\0", "asLifoQueue\0", "(Ljava/util/Deque;)Ljava/util/Queue;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [EMPTY_LIST](https://developer.android.com/reference/java/util/Collections.html#EMPTY_LIST)
        ///
        /// Required feature: java-util-List
        #[cfg(any(feature = "all", feature = "java-util-List"))]
        pub fn EMPTY_LIST<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/Collections\0", "EMPTY_LIST\0", "Ljava/util/List;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EMPTY_MAP](https://developer.android.com/reference/java/util/Collections.html#EMPTY_MAP)
        ///
        /// Required feature: java-util-Map
        #[cfg(any(feature = "all", feature = "java-util-Map"))]
        pub fn EMPTY_MAP<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/Collections\0", "EMPTY_MAP\0", "Ljava/util/Map;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EMPTY_SET](https://developer.android.com/reference/java/util/Collections.html#EMPTY_SET)
        ///
        /// Required feature: java-util-Set
        #[cfg(any(feature = "all", feature = "java-util-Set"))]
        pub fn EMPTY_SET<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>> {
            unsafe {
                let (class, field) = env.require_class_static_field("java/util/Collections\0", "EMPTY_SET\0", "Ljava/util/Set;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
