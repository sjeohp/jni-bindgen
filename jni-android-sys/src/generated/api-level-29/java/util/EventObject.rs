// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-EventObject"))]
__jni_bindgen! {
    /// public class [EventObject](https://developer.android.com/reference/java/util/EventObject.html)
    ///
    /// Required feature: java-util-EventObject
    public class EventObject ("java/util/EventObject") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        /// [EventObject](https://developer.android.com/reference/java/util/EventObject.html#EventObject(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::EventObject>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EventObject", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/EventObject\0", "<init>\0", "(Ljava/lang/Object;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSource](https://developer.android.com/reference/java/util/EventObject.html#getSource())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn getSource<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EventObject", java.flags == PUBLIC, .name == "getSource", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/EventObject\0", "getSource\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/java/util/EventObject.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/EventObject", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/EventObject\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // /// **get** protected [source](https://developer.android.com/reference/java/util/EventObject.html#source)
        // ///
        // /// Required feature: java-lang-Object
        // #[cfg(any(feature = "all", feature = "java-lang-Object"))]
        // pub fn source<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/util/EventObject\0", "source\0", "Ljava/lang/Object;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [source](https://developer.android.com/reference/java/util/EventObject.html#source)
        // ///
        // /// Required feature: java-lang-Object
        // #[cfg(any(feature = "all", feature = "java-lang-Object"))]
        // pub fn set_source<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::Object>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("java/util/EventObject\0", "source\0", "Ljava/lang/Object;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
