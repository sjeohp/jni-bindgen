// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-Base64"))]
__jni_bindgen! {
    /// public class [Base64](https://developer.android.com/reference/java/util/Base64.html)
    ///
    /// Required feature: java-util-Base64
    public class Base64 ("java/util/Base64") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Base64](https://developer.android.com/reference/java/util/Base64.html#Base64())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::Base64>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/Base64", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/Base64\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getEncoder](https://developer.android.com/reference/java/util/Base64.html#getEncoder())
        ///
        /// Required features: "java-util-Base64_Encoder"
        #[cfg(any(feature = "all", all(feature = "java-util-Base64_Encoder")))]
        pub fn getEncoder<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Base64_Encoder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Base64", java.flags == PUBLIC | STATIC, .name == "getEncoder", .descriptor == "()Ljava/util/Base64$Encoder;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Base64\0", "getEncoder\0", "()Ljava/util/Base64$Encoder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUrlEncoder](https://developer.android.com/reference/java/util/Base64.html#getUrlEncoder())
        ///
        /// Required features: "java-util-Base64_Encoder"
        #[cfg(any(feature = "all", all(feature = "java-util-Base64_Encoder")))]
        pub fn getUrlEncoder<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Base64_Encoder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Base64", java.flags == PUBLIC | STATIC, .name == "getUrlEncoder", .descriptor == "()Ljava/util/Base64$Encoder;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Base64\0", "getUrlEncoder\0", "()Ljava/util/Base64$Encoder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMimeEncoder](https://developer.android.com/reference/java/util/Base64.html#getMimeEncoder())
        ///
        /// Required features: "java-util-Base64_Encoder"
        #[cfg(any(feature = "all", all(feature = "java-util-Base64_Encoder")))]
        pub fn getMimeEncoder<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Base64_Encoder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Base64", java.flags == PUBLIC | STATIC, .name == "getMimeEncoder", .descriptor == "()Ljava/util/Base64$Encoder;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Base64\0", "getMimeEncoder\0", "()Ljava/util/Base64$Encoder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMimeEncoder](https://developer.android.com/reference/java/util/Base64.html#getMimeEncoder(int,%20byte%5B%5D))
        ///
        /// Required features: "java-util-Base64_Encoder"
        #[cfg(any(feature = "all", all(feature = "java-util-Base64_Encoder")))]
        pub fn getMimeEncoder_int_byte_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Base64_Encoder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Base64", java.flags == PUBLIC | STATIC, .name == "getMimeEncoder", .descriptor == "(I[B)Ljava/util/Base64$Encoder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Base64\0", "getMimeEncoder\0", "(I[B)Ljava/util/Base64$Encoder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDecoder](https://developer.android.com/reference/java/util/Base64.html#getDecoder())
        ///
        /// Required features: "java-util-Base64_Decoder"
        #[cfg(any(feature = "all", all(feature = "java-util-Base64_Decoder")))]
        pub fn getDecoder<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Base64_Decoder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Base64", java.flags == PUBLIC | STATIC, .name == "getDecoder", .descriptor == "()Ljava/util/Base64$Decoder;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Base64\0", "getDecoder\0", "()Ljava/util/Base64$Decoder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUrlDecoder](https://developer.android.com/reference/java/util/Base64.html#getUrlDecoder())
        ///
        /// Required features: "java-util-Base64_Decoder"
        #[cfg(any(feature = "all", all(feature = "java-util-Base64_Decoder")))]
        pub fn getUrlDecoder<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Base64_Decoder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Base64", java.flags == PUBLIC | STATIC, .name == "getUrlDecoder", .descriptor == "()Ljava/util/Base64$Decoder;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Base64\0", "getUrlDecoder\0", "()Ljava/util/Base64$Decoder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMimeDecoder](https://developer.android.com/reference/java/util/Base64.html#getMimeDecoder())
        ///
        /// Required features: "java-util-Base64_Decoder"
        #[cfg(any(feature = "all", all(feature = "java-util-Base64_Decoder")))]
        pub fn getMimeDecoder<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Base64_Decoder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/Base64", java.flags == PUBLIC | STATIC, .name == "getMimeDecoder", .descriptor == "()Ljava/util/Base64$Decoder;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("java/util/Base64\0", "getMimeDecoder\0", "()Ljava/util/Base64$Decoder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
