// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "java-util-PropertyResourceBundle"))]
__jni_bindgen! {
    /// public class [PropertyResourceBundle](https://developer.android.com/reference/java/util/PropertyResourceBundle.html)
    ///
    /// Required feature: java-util-PropertyResourceBundle
    public class PropertyResourceBundle ("java/util/PropertyResourceBundle") extends crate::java::util::ResourceBundle {

        /// [PropertyResourceBundle](https://developer.android.com/reference/java/util/PropertyResourceBundle.html#PropertyResourceBundle(java.io.InputStream))
        ///
        /// Required features: "java-io-InputStream"
        #[cfg(any(feature = "all", all(feature = "java-io-InputStream")))]
        pub fn new_InputStream<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::InputStream>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::PropertyResourceBundle>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/PropertyResourceBundle", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/InputStream;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/PropertyResourceBundle\0", "<init>\0", "(Ljava/io/InputStream;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [PropertyResourceBundle](https://developer.android.com/reference/java/util/PropertyResourceBundle.html#PropertyResourceBundle(java.io.Reader))
        ///
        /// Required features: "java-io-Reader"
        #[cfg(any(feature = "all", all(feature = "java-io-Reader")))]
        pub fn new_Reader<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::Reader>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::java::util::PropertyResourceBundle>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/PropertyResourceBundle", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/Reader;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/PropertyResourceBundle\0", "<init>\0", "(Ljava/io/Reader;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [handleGetObject](https://developer.android.com/reference/java/util/PropertyResourceBundle.html#handleGetObject(java.lang.String))
        ///
        /// Required features: "java-lang-Object", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        pub fn handleGetObject<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/PropertyResourceBundle", java.flags == PUBLIC, .name == "handleGetObject", .descriptor == "(Ljava/lang/String;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/PropertyResourceBundle\0", "handleGetObject\0", "(Ljava/lang/String;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeys](https://developer.android.com/reference/java/util/PropertyResourceBundle.html#getKeys())
        ///
        /// Required features: "java-util-Enumeration"
        #[cfg(any(feature = "all", all(feature = "java-util-Enumeration")))]
        pub fn getKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Enumeration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "java/util/PropertyResourceBundle", java.flags == PUBLIC, .name == "getKeys", .descriptor == "()Ljava/util/Enumeration;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/PropertyResourceBundle\0", "getKeys\0", "()Ljava/util/Enumeration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [handleKeySet](https://developer.android.com/reference/java/util/PropertyResourceBundle.html#handleKeySet())
        // ///
        // /// Required features: "java-util-Set"
        // #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        // fn handleKeySet<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "java/util/PropertyResourceBundle", java.flags == PROTECTED, .name == "handleKeySet", .descriptor == "()Ljava/util/Set;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("java/util/PropertyResourceBundle\0", "handleKeySet\0", "()Ljava/util/Set;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
