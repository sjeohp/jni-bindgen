// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-json-JSONStringer"))]
__jni_bindgen! {
    /// public class [JSONStringer](https://developer.android.com/reference/org/json/JSONStringer.html)
    ///
    /// Required feature: org-json-JSONStringer
    public class JSONStringer ("org/json/JSONStringer") extends crate::java::lang::Object {

        /// [JSONStringer](https://developer.android.com/reference/org/json/JSONStringer.html#JSONStringer())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [array](https://developer.android.com/reference/org/json/JSONStringer.html#array())
        ///
        /// Required features: "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "org-json-JSONStringer")))]
        pub fn array<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "array", .descriptor == "()Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "array\0", "()Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [endArray](https://developer.android.com/reference/org/json/JSONStringer.html#endArray())
        ///
        /// Required features: "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "org-json-JSONStringer")))]
        pub fn endArray<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "endArray", .descriptor == "()Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "endArray\0", "()Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [object](https://developer.android.com/reference/org/json/JSONStringer.html#object())
        ///
        /// Required features: "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "org-json-JSONStringer")))]
        pub fn object<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "object", .descriptor == "()Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "object\0", "()Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [endObject](https://developer.android.com/reference/org/json/JSONStringer.html#endObject())
        ///
        /// Required features: "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "org-json-JSONStringer")))]
        pub fn endObject<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "endObject", .descriptor == "()Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "endObject\0", "()Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [value](https://developer.android.com/reference/org/json/JSONStringer.html#value(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "org-json-JSONStringer")))]
        pub fn value_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "value", .descriptor == "(Ljava/lang/Object;)Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "value\0", "(Ljava/lang/Object;)Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [value](https://developer.android.com/reference/org/json/JSONStringer.html#value(boolean))
        ///
        /// Required features: "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "org-json-JSONStringer")))]
        pub fn value_boolean<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "value", .descriptor == "(Z)Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "value\0", "(Z)Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [value](https://developer.android.com/reference/org/json/JSONStringer.html#value(double))
        ///
        /// Required features: "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "org-json-JSONStringer")))]
        pub fn value_double<'env>(&'env self, arg0: f64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "value", .descriptor == "(D)Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "value\0", "(D)Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [value](https://developer.android.com/reference/org/json/JSONStringer.html#value(long))
        ///
        /// Required features: "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "org-json-JSONStringer")))]
        pub fn value_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "value", .descriptor == "(J)Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "value\0", "(J)Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [key](https://developer.android.com/reference/org/json/JSONStringer.html#key(java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-json-JSONStringer"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-json-JSONStringer")))]
        pub fn key<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::json::JSONStringer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "key", .descriptor == "(Ljava/lang/String;)Lorg/json/JSONStringer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "key\0", "(Ljava/lang/String;)Lorg/json/JSONStringer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/org/json/JSONStringer.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/json/JSONStringer", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/json/JSONStringer\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
