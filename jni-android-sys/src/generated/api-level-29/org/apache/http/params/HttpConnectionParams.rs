// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-apache-http-params-HttpConnectionParams"))]
__jni_bindgen! {
    /// public final class [HttpConnectionParams](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html)
    ///
    /// Required feature: org-apache-http-params-HttpConnectionParams
    #[deprecated] public final class HttpConnectionParams ("org/apache/http/params/HttpConnectionParams") extends crate::java::lang::Object, implements crate::org::apache::http::params::CoreConnectionPNames {

        // // Not emitting: Non-public method
        // /// [HttpConnectionParams](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#HttpConnectionParams())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::apache::http::params::HttpConnectionParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpConnectionParams\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getSoTimeout](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#getSoTimeout(org.apache.http.params.HttpParams))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn getSoTimeout<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "getSoTimeout", .descriptor == "(Lorg/apache/http/params/HttpParams;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "getSoTimeout\0", "(Lorg/apache/http/params/HttpParams;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSoTimeout](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#setSoTimeout(org.apache.http.params.HttpParams,%20int))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setSoTimeout<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "setSoTimeout", .descriptor == "(Lorg/apache/http/params/HttpParams;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "setSoTimeout\0", "(Lorg/apache/http/params/HttpParams;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTcpNoDelay](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#getTcpNoDelay(org.apache.http.params.HttpParams))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn getTcpNoDelay<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "getTcpNoDelay", .descriptor == "(Lorg/apache/http/params/HttpParams;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "getTcpNoDelay\0", "(Lorg/apache/http/params/HttpParams;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTcpNoDelay](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#setTcpNoDelay(org.apache.http.params.HttpParams,%20boolean))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setTcpNoDelay<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "setTcpNoDelay", .descriptor == "(Lorg/apache/http/params/HttpParams;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "setTcpNoDelay\0", "(Lorg/apache/http/params/HttpParams;Z)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSocketBufferSize](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#getSocketBufferSize(org.apache.http.params.HttpParams))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn getSocketBufferSize<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "getSocketBufferSize", .descriptor == "(Lorg/apache/http/params/HttpParams;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "getSocketBufferSize\0", "(Lorg/apache/http/params/HttpParams;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSocketBufferSize](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#setSocketBufferSize(org.apache.http.params.HttpParams,%20int))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setSocketBufferSize<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "setSocketBufferSize", .descriptor == "(Lorg/apache/http/params/HttpParams;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "setSocketBufferSize\0", "(Lorg/apache/http/params/HttpParams;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLinger](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#getLinger(org.apache.http.params.HttpParams))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn getLinger<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "getLinger", .descriptor == "(Lorg/apache/http/params/HttpParams;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "getLinger\0", "(Lorg/apache/http/params/HttpParams;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLinger](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#setLinger(org.apache.http.params.HttpParams,%20int))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setLinger<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "setLinger", .descriptor == "(Lorg/apache/http/params/HttpParams;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "setLinger\0", "(Lorg/apache/http/params/HttpParams;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getConnectionTimeout](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#getConnectionTimeout(org.apache.http.params.HttpParams))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn getConnectionTimeout<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "getConnectionTimeout", .descriptor == "(Lorg/apache/http/params/HttpParams;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "getConnectionTimeout\0", "(Lorg/apache/http/params/HttpParams;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setConnectionTimeout](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#setConnectionTimeout(org.apache.http.params.HttpParams,%20int))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setConnectionTimeout<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "setConnectionTimeout", .descriptor == "(Lorg/apache/http/params/HttpParams;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "setConnectionTimeout\0", "(Lorg/apache/http/params/HttpParams;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isStaleCheckingEnabled](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#isStaleCheckingEnabled(org.apache.http.params.HttpParams))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn isStaleCheckingEnabled<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "isStaleCheckingEnabled", .descriptor == "(Lorg/apache/http/params/HttpParams;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "isStaleCheckingEnabled\0", "(Lorg/apache/http/params/HttpParams;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setStaleCheckingEnabled](https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html#setStaleCheckingEnabled(org.apache.http.params.HttpParams,%20boolean))
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setStaleCheckingEnabled<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::apache::http::params::HttpParams>>, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpConnectionParams", java.flags == PUBLIC | STATIC, .name == "setStaleCheckingEnabled", .descriptor == "(Lorg/apache/http/params/HttpParams;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/params/HttpConnectionParams\0", "setStaleCheckingEnabled\0", "(Lorg/apache/http/params/HttpParams;Z)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
