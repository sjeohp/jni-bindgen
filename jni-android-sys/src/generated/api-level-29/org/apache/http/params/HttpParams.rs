// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-apache-http-params-HttpParams"))]
__jni_bindgen! {
    /// public interface [HttpParams](https://developer.android.com/reference/org/apache/http/params/HttpParams.html)
    ///
    /// Required feature: org-apache-http-params-HttpParams
    #[deprecated] public interface HttpParams ("org/apache/http/params/HttpParams") extends crate::java::lang::Object {

        /// [getParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#getParameter(java.lang.String))
        ///
        /// Required features: "java-lang-Object", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        #[deprecated] pub fn getParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "getParameter", .descriptor == "(Ljava/lang/String;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "getParameter\0", "(Ljava/lang/String;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#setParameter(java.lang.String,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-lang-String", "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String", feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::apache::http::params::HttpParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "setParameter", .descriptor == "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "setParameter\0", "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [copy](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#copy())
        ///
        /// Required features: "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn copy<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::apache::http::params::HttpParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "copy", .descriptor == "()Lorg/apache/http/params/HttpParams;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "copy\0", "()Lorg/apache/http/params/HttpParams;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#removeParameter(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn removeParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "removeParameter", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "removeParameter\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLongParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#getLongParameter(java.lang.String,%20long))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getLongParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "getLongParameter", .descriptor == "(Ljava/lang/String;J)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "getLongParameter\0", "(Ljava/lang/String;J)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLongParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#setLongParameter(java.lang.String,%20long))
        ///
        /// Required features: "java-lang-String", "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setLongParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::apache::http::params::HttpParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "setLongParameter", .descriptor == "(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "setLongParameter\0", "(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#getIntParameter(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getIntParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "getIntParameter", .descriptor == "(Ljava/lang/String;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "getIntParameter\0", "(Ljava/lang/String;I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIntParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#setIntParameter(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String", "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setIntParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::apache::http::params::HttpParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "setIntParameter", .descriptor == "(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "setIntParameter\0", "(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDoubleParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#getDoubleParameter(java.lang.String,%20double))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getDoubleParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: f64) -> __jni_bindgen::std::result::Result<f64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "getDoubleParameter", .descriptor == "(Ljava/lang/String;D)D"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "getDoubleParameter\0", "(Ljava/lang/String;D)D\0");
                __jni_env.call_double_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDoubleParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#setDoubleParameter(java.lang.String,%20double))
        ///
        /// Required features: "java-lang-String", "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setDoubleParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: f64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::apache::http::params::HttpParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "setDoubleParameter", .descriptor == "(Ljava/lang/String;D)Lorg/apache/http/params/HttpParams;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "setDoubleParameter\0", "(Ljava/lang/String;D)Lorg/apache/http/params/HttpParams;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBooleanParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#getBooleanParameter(java.lang.String,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getBooleanParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "getBooleanParameter", .descriptor == "(Ljava/lang/String;Z)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "getBooleanParameter\0", "(Ljava/lang/String;Z)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBooleanParameter](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#setBooleanParameter(java.lang.String,%20boolean))
        ///
        /// Required features: "java-lang-String", "org-apache-http-params-HttpParams"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-apache-http-params-HttpParams")))]
        #[deprecated] pub fn setBooleanParameter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::apache::http::params::HttpParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "setBooleanParameter", .descriptor == "(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "setBooleanParameter\0", "(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isParameterTrue](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#isParameterTrue(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn isParameterTrue<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "isParameterTrue", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "isParameterTrue\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isParameterFalse](https://developer.android.com/reference/org/apache/http/params/HttpParams.html#isParameterFalse(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn isParameterFalse<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/params/HttpParams", java.flags == PUBLIC | ABSTRACT, .name == "isParameterFalse", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/params/HttpParams\0", "isParameterFalse\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
