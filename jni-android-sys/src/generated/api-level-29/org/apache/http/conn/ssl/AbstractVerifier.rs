// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-apache-http-conn-ssl-AbstractVerifier"))]
__jni_bindgen! {
    /// public class [AbstractVerifier](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html)
    ///
    /// Required feature: org-apache-http-conn-ssl-AbstractVerifier
    #[deprecated] public class AbstractVerifier ("org/apache/http/conn/ssl/AbstractVerifier") extends crate::java::lang::Object, implements crate::org::apache::http::conn::ssl::X509HostnameVerifier {

        /// [AbstractVerifier](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#AbstractVerifier())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::apache::http::conn::ssl::AbstractVerifier>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/conn/ssl/AbstractVerifier\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [verify](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#verify(java.lang.String,%20javax.net.ssl.SSLSocket))
        ///
        /// Required features: "java-lang-String", "javax-net-ssl-SSLSocket"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-net-ssl-SSLSocket")))]
        #[deprecated] pub fn verify_String_SSLSocket<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::net::ssl::SSLSocket>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC | FINAL, .name == "verify", .descriptor == "(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/conn/ssl/AbstractVerifier\0", "verify\0", "(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [verify](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#verify(java.lang.String,%20javax.net.ssl.SSLSession))
        ///
        /// Required features: "java-lang-String", "javax-net-ssl-SSLSession"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-net-ssl-SSLSession")))]
        #[deprecated] pub fn verify_String_SSLSession<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::net::ssl::SSLSession>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC | FINAL, .name == "verify", .descriptor == "(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/conn/ssl/AbstractVerifier\0", "verify\0", "(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [verify](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#verify(java.lang.String,%20java.security.cert.X509Certificate))
        ///
        /// Required features: "java-lang-String", "java-security-cert-X509Certificate"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-security-cert-X509Certificate")))]
        #[deprecated] pub fn verify_String_X509Certificate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::X509Certificate>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC | FINAL, .name == "verify", .descriptor == "(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/conn/ssl/AbstractVerifier\0", "verify\0", "(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [verify](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#verify(java.lang.String,%20java.lang.String%5B%5D,%20java.lang.String%5B%5D,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn verify_String_String_array_String_array_boolean<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg3: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC | FINAL, .name == "verify", .descriptor == "(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/apache/http/conn/ssl/AbstractVerifier\0", "verify\0", "(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [acceptableCountryWildcard](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#acceptableCountryWildcard(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn acceptableCountryWildcard<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC | STATIC, .name == "acceptableCountryWildcard", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/conn/ssl/AbstractVerifier\0", "acceptableCountryWildcard\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCNs](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#getCNs(java.security.cert.X509Certificate))
        ///
        /// Required features: "java-lang-String", "java-security-cert-X509Certificate"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-security-cert-X509Certificate")))]
        #[deprecated] pub fn getCNs<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::X509Certificate>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC | STATIC, .name == "getCNs", .descriptor == "(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/conn/ssl/AbstractVerifier\0", "getCNs\0", "(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDNSSubjectAlts](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#getDNSSubjectAlts(java.security.cert.X509Certificate))
        ///
        /// Required features: "java-lang-String", "java-security-cert-X509Certificate"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-security-cert-X509Certificate")))]
        #[deprecated] pub fn getDNSSubjectAlts<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::X509Certificate>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC | STATIC, .name == "getDNSSubjectAlts", .descriptor == "(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/conn/ssl/AbstractVerifier\0", "getDNSSubjectAlts\0", "(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [countDots](https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html#countDots(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn countDots<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/apache/http/conn/ssl/AbstractVerifier", java.flags == PUBLIC | STATIC, .name == "countDots", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/apache/http/conn/ssl/AbstractVerifier\0", "countDots\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
