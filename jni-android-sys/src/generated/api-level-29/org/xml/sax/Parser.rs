// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-xml-sax-Parser"))]
__jni_bindgen! {
    /// public interface [Parser](https://developer.android.com/reference/org/xml/sax/Parser.html)
    ///
    /// Required feature: org-xml-sax-Parser
    #[deprecated] public interface Parser ("org/xml/sax/Parser") extends crate::java::lang::Object {

        /// [setLocale](https://developer.android.com/reference/org/xml/sax/Parser.html#setLocale(java.util.Locale))
        ///
        /// Required features: "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-util-Locale")))]
        #[deprecated] pub fn setLocale<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/Parser", java.flags == PUBLIC | ABSTRACT, .name == "setLocale", .descriptor == "(Ljava/util/Locale;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/Parser\0", "setLocale\0", "(Ljava/util/Locale;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEntityResolver](https://developer.android.com/reference/org/xml/sax/Parser.html#setEntityResolver(org.xml.sax.EntityResolver))
        ///
        /// Required features: "org-xml-sax-EntityResolver"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-EntityResolver")))]
        #[deprecated] pub fn setEntityResolver<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::EntityResolver>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/Parser", java.flags == PUBLIC | ABSTRACT, .name == "setEntityResolver", .descriptor == "(Lorg/xml/sax/EntityResolver;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/Parser\0", "setEntityResolver\0", "(Lorg/xml/sax/EntityResolver;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDTDHandler](https://developer.android.com/reference/org/xml/sax/Parser.html#setDTDHandler(org.xml.sax.DTDHandler))
        ///
        /// Required features: "org-xml-sax-DTDHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-DTDHandler")))]
        #[deprecated] pub fn setDTDHandler<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::DTDHandler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/Parser", java.flags == PUBLIC | ABSTRACT, .name == "setDTDHandler", .descriptor == "(Lorg/xml/sax/DTDHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/Parser\0", "setDTDHandler\0", "(Lorg/xml/sax/DTDHandler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDocumentHandler](https://developer.android.com/reference/org/xml/sax/Parser.html#setDocumentHandler(org.xml.sax.DocumentHandler))
        ///
        /// Required features: "org-xml-sax-DocumentHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-DocumentHandler")))]
        #[deprecated] pub fn setDocumentHandler<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::DocumentHandler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/Parser", java.flags == PUBLIC | ABSTRACT, .name == "setDocumentHandler", .descriptor == "(Lorg/xml/sax/DocumentHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/Parser\0", "setDocumentHandler\0", "(Lorg/xml/sax/DocumentHandler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setErrorHandler](https://developer.android.com/reference/org/xml/sax/Parser.html#setErrorHandler(org.xml.sax.ErrorHandler))
        ///
        /// Required features: "org-xml-sax-ErrorHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-ErrorHandler")))]
        #[deprecated] pub fn setErrorHandler<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::ErrorHandler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/Parser", java.flags == PUBLIC | ABSTRACT, .name == "setErrorHandler", .descriptor == "(Lorg/xml/sax/ErrorHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/Parser\0", "setErrorHandler\0", "(Lorg/xml/sax/ErrorHandler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/org/xml/sax/Parser.html#parse(org.xml.sax.InputSource))
        ///
        /// Required features: "org-xml-sax-InputSource"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-InputSource")))]
        #[deprecated] pub fn parse_InputSource<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::InputSource>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/Parser", java.flags == PUBLIC | ABSTRACT, .name == "parse", .descriptor == "(Lorg/xml/sax/InputSource;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/Parser\0", "parse\0", "(Lorg/xml/sax/InputSource;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/org/xml/sax/Parser.html#parse(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn parse_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/Parser", java.flags == PUBLIC | ABSTRACT, .name == "parse", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/Parser\0", "parse\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
