// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-xml-sax-SAXParseException"))]
__jni_bindgen! {
    /// public class [SAXParseException](https://developer.android.com/reference/org/xml/sax/SAXParseException.html)
    ///
    /// Required feature: org-xml-sax-SAXParseException
    public class SAXParseException ("org/xml/sax/SAXParseException") extends crate::org::xml::sax::SAXException {

        /// [SAXParseException](https://developer.android.com/reference/org/xml/sax/SAXParseException.html#SAXParseException(java.lang.String,%20org.xml.sax.Locator))
        ///
        /// Required features: "java-lang-String", "org-xml-sax-Locator"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-xml-sax-Locator")))]
        pub fn new_String_Locator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::Locator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::xml::sax::SAXParseException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/SAXParseException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Lorg/xml/sax/Locator;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/SAXParseException\0", "<init>\0", "(Ljava/lang/String;Lorg/xml/sax/Locator;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SAXParseException](https://developer.android.com/reference/org/xml/sax/SAXParseException.html#SAXParseException(java.lang.String,%20org.xml.sax.Locator,%20java.lang.Exception))
        ///
        /// Required features: "java-lang-Exception", "java-lang-String", "org-xml-sax-Locator"
        #[cfg(any(feature = "all", all(feature = "java-lang-Exception", feature = "java-lang-String", feature = "org-xml-sax-Locator")))]
        pub fn new_String_Locator_Exception<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::Locator>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Exception>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::xml::sax::SAXParseException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/SAXParseException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Lorg/xml/sax/Locator;Ljava/lang/Exception;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/SAXParseException\0", "<init>\0", "(Ljava/lang/String;Lorg/xml/sax/Locator;Ljava/lang/Exception;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SAXParseException](https://developer.android.com/reference/org/xml/sax/SAXParseException.html#SAXParseException(java.lang.String,%20java.lang.String,%20java.lang.String,%20int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String_String_String_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::xml::sax::SAXParseException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/SAXParseException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/SAXParseException\0", "<init>\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SAXParseException](https://developer.android.com/reference/org/xml/sax/SAXParseException.html#SAXParseException(java.lang.String,%20java.lang.String,%20java.lang.String,%20int,%20int,%20java.lang.Exception))
        ///
        /// Required features: "java-lang-Exception", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Exception", feature = "java-lang-String")))]
        pub fn new_String_String_String_int_int_Exception<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: i32, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Exception>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::xml::sax::SAXParseException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/SAXParseException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Exception;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/SAXParseException\0", "<init>\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Exception;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPublicId](https://developer.android.com/reference/org/xml/sax/SAXParseException.html#getPublicId())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPublicId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/SAXParseException", java.flags == PUBLIC, .name == "getPublicId", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/SAXParseException\0", "getPublicId\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSystemId](https://developer.android.com/reference/org/xml/sax/SAXParseException.html#getSystemId())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getSystemId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/SAXParseException", java.flags == PUBLIC, .name == "getSystemId", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/SAXParseException\0", "getSystemId\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLineNumber](https://developer.android.com/reference/org/xml/sax/SAXParseException.html#getLineNumber())
        pub fn getLineNumber<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/SAXParseException", java.flags == PUBLIC, .name == "getLineNumber", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/SAXParseException\0", "getLineNumber\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getColumnNumber](https://developer.android.com/reference/org/xml/sax/SAXParseException.html#getColumnNumber())
        pub fn getColumnNumber<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/SAXParseException", java.flags == PUBLIC, .name == "getColumnNumber", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/SAXParseException\0", "getColumnNumber\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
