// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-xml-sax-ErrorHandler"))]
__jni_bindgen! {
    /// public interface [ErrorHandler](https://developer.android.com/reference/org/xml/sax/ErrorHandler.html)
    ///
    /// Required feature: org-xml-sax-ErrorHandler
    public interface ErrorHandler ("org/xml/sax/ErrorHandler") extends crate::java::lang::Object {

        /// [warning](https://developer.android.com/reference/org/xml/sax/ErrorHandler.html#warning(org.xml.sax.SAXParseException))
        ///
        /// Required features: "org-xml-sax-SAXParseException"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-SAXParseException")))]
        pub fn warning<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::SAXParseException>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/ErrorHandler", java.flags == PUBLIC | ABSTRACT, .name == "warning", .descriptor == "(Lorg/xml/sax/SAXParseException;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/ErrorHandler\0", "warning\0", "(Lorg/xml/sax/SAXParseException;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [error](https://developer.android.com/reference/org/xml/sax/ErrorHandler.html#error(org.xml.sax.SAXParseException))
        ///
        /// Required features: "org-xml-sax-SAXParseException"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-SAXParseException")))]
        pub fn error<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::SAXParseException>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/ErrorHandler", java.flags == PUBLIC | ABSTRACT, .name == "error", .descriptor == "(Lorg/xml/sax/SAXParseException;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/ErrorHandler\0", "error\0", "(Lorg/xml/sax/SAXParseException;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fatalError](https://developer.android.com/reference/org/xml/sax/ErrorHandler.html#fatalError(org.xml.sax.SAXParseException))
        ///
        /// Required features: "org-xml-sax-SAXParseException"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-SAXParseException")))]
        pub fn fatalError<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::SAXParseException>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xml/sax/ErrorHandler", java.flags == PUBLIC | ABSTRACT, .name == "fatalError", .descriptor == "(Lorg/xml/sax/SAXParseException;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xml/sax/ErrorHandler\0", "fatalError\0", "(Lorg/xml/sax/SAXParseException;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
