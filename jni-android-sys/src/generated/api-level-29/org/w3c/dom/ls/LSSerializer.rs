// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-w3c-dom-ls-LSSerializer"))]
__jni_bindgen! {
    /// public interface [LSSerializer](https://developer.android.com/reference/org/w3c/dom/ls/LSSerializer.html)
    ///
    /// Required feature: org-w3c-dom-ls-LSSerializer
    public interface LSSerializer ("org/w3c/dom/ls/LSSerializer") extends crate::java::lang::Object {

        /// [getDomConfig](https://developer.android.com/reference/org/w3c/dom/ls/LSSerializer.html#getDomConfig())
        ///
        /// Required features: "org-w3c-dom-DOMConfiguration"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-DOMConfiguration")))]
        pub fn getDomConfig<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::DOMConfiguration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSSerializer", java.flags == PUBLIC | ABSTRACT, .name == "getDomConfig", .descriptor == "()Lorg/w3c/dom/DOMConfiguration;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSSerializer\0", "getDomConfig\0", "()Lorg/w3c/dom/DOMConfiguration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNewLine](https://developer.android.com/reference/org/w3c/dom/ls/LSSerializer.html#getNewLine())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getNewLine<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSSerializer", java.flags == PUBLIC | ABSTRACT, .name == "getNewLine", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSSerializer\0", "getNewLine\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNewLine](https://developer.android.com/reference/org/w3c/dom/ls/LSSerializer.html#setNewLine(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setNewLine<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSSerializer", java.flags == PUBLIC | ABSTRACT, .name == "setNewLine", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSSerializer\0", "setNewLine\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [write](https://developer.android.com/reference/org/w3c/dom/ls/LSSerializer.html#write(org.w3c.dom.Node,%20org.w3c.dom.ls.LSOutput))
        ///
        /// Required features: "org-w3c-dom-Node", "org-w3c-dom-ls-LSOutput"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node", feature = "org-w3c-dom-ls-LSOutput")))]
        pub fn write<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::ls::LSOutput>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSSerializer", java.flags == PUBLIC | ABSTRACT, .name == "write", .descriptor == "(Lorg/w3c/dom/Node;Lorg/w3c/dom/ls/LSOutput;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSSerializer\0", "write\0", "(Lorg/w3c/dom/Node;Lorg/w3c/dom/ls/LSOutput;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToURI](https://developer.android.com/reference/org/w3c/dom/ls/LSSerializer.html#writeToURI(org.w3c.dom.Node,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-Node")))]
        pub fn writeToURI<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSSerializer", java.flags == PUBLIC | ABSTRACT, .name == "writeToURI", .descriptor == "(Lorg/w3c/dom/Node;Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSSerializer\0", "writeToURI\0", "(Lorg/w3c/dom/Node;Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToString](https://developer.android.com/reference/org/w3c/dom/ls/LSSerializer.html#writeToString(org.w3c.dom.Node))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-Node")))]
        pub fn writeToString<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSSerializer", java.flags == PUBLIC | ABSTRACT, .name == "writeToString", .descriptor == "(Lorg/w3c/dom/Node;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSSerializer\0", "writeToString\0", "(Lorg/w3c/dom/Node;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
