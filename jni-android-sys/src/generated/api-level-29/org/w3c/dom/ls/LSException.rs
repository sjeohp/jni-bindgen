// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-w3c-dom-ls-LSException"))]
__jni_bindgen! {
    /// public class [LSException](https://developer.android.com/reference/org/w3c/dom/ls/LSException.html)
    ///
    /// Required feature: org-w3c-dom-ls-LSException
    public class LSException ("org/w3c/dom/ls/LSException") extends crate::java::lang::RuntimeException {

        /// [LSException](https://developer.android.com/reference/org/w3c/dom/ls/LSException.html#LSException(short,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::w3c::dom::ls::LSException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(SLjava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSException\0", "<init>\0", "(SLjava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [PARSE_ERR](https://developer.android.com/reference/org/w3c/dom/ls/LSException.html#PARSE_ERR)
        pub const PARSE_ERR : i16 = 81;

        /// public static final [SERIALIZE_ERR](https://developer.android.com/reference/org/w3c/dom/ls/LSException.html#SERIALIZE_ERR)
        pub const SERIALIZE_ERR : i16 = 82;

        /// **get** public [code](https://developer.android.com/reference/org/w3c/dom/ls/LSException.html#code)
        pub fn code<'env>(&'env self) -> i16 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("org/w3c/dom/ls/LSException\0", "code\0", "S\0");
                env.get_short_field(class, field)
            }
        }

        /// **set** public [code](https://developer.android.com/reference/org/w3c/dom/ls/LSException.html#code)
        pub fn set_code<'env>(&'env self, value: i16) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("org/w3c/dom/ls/LSException\0", "code\0", "S\0");
                env.set_short_field(class, field, value)
            }
        }
    }
}
