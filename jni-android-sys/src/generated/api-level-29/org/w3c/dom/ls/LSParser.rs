// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-w3c-dom-ls-LSParser"))]
__jni_bindgen! {
    /// public interface [LSParser](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html)
    ///
    /// Required feature: org-w3c-dom-ls-LSParser
    public interface LSParser ("org/w3c/dom/ls/LSParser") extends crate::java::lang::Object {

        /// [getDomConfig](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#getDomConfig())
        ///
        /// Required features: "org-w3c-dom-DOMConfiguration"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-DOMConfiguration")))]
        pub fn getDomConfig<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::DOMConfiguration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "getDomConfig", .descriptor == "()Lorg/w3c/dom/DOMConfiguration;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "getDomConfig\0", "()Lorg/w3c/dom/DOMConfiguration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFilter](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#getFilter())
        ///
        /// Required features: "org-w3c-dom-ls-LSParserFilter"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-ls-LSParserFilter")))]
        pub fn getFilter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::ls::LSParserFilter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "getFilter", .descriptor == "()Lorg/w3c/dom/ls/LSParserFilter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "getFilter\0", "()Lorg/w3c/dom/ls/LSParserFilter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFilter](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#setFilter(org.w3c.dom.ls.LSParserFilter))
        ///
        /// Required features: "org-w3c-dom-ls-LSParserFilter"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-ls-LSParserFilter")))]
        pub fn setFilter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::ls::LSParserFilter>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "setFilter", .descriptor == "(Lorg/w3c/dom/ls/LSParserFilter;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "setFilter\0", "(Lorg/w3c/dom/ls/LSParserFilter;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAsync](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#getAsync())
        pub fn getAsync<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "getAsync", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "getAsync\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBusy](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#getBusy())
        pub fn getBusy<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "getBusy", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "getBusy\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#parse(org.w3c.dom.ls.LSInput))
        ///
        /// Required features: "org-w3c-dom-Document", "org-w3c-dom-ls-LSInput"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Document", feature = "org-w3c-dom-ls-LSInput")))]
        pub fn parse<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::ls::LSInput>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "parse", .descriptor == "(Lorg/w3c/dom/ls/LSInput;)Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "parse\0", "(Lorg/w3c/dom/ls/LSInput;)Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseURI](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#parseURI(java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-Document"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-Document")))]
        pub fn parseURI<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "parseURI", .descriptor == "(Ljava/lang/String;)Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "parseURI\0", "(Ljava/lang/String;)Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseWithContext](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#parseWithContext(org.w3c.dom.ls.LSInput,%20org.w3c.dom.Node,%20short))
        ///
        /// Required features: "org-w3c-dom-Node", "org-w3c-dom-ls-LSInput"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node", feature = "org-w3c-dom-ls-LSInput")))]
        pub fn parseWithContext<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::ls::LSInput>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>, arg2: i16) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "parseWithContext", .descriptor == "(Lorg/w3c/dom/ls/LSInput;Lorg/w3c/dom/Node;S)Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "parseWithContext\0", "(Lorg/w3c/dom/ls/LSInput;Lorg/w3c/dom/Node;S)Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [abort](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#abort())
        pub fn abort<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/ls/LSParser", java.flags == PUBLIC | ABSTRACT, .name == "abort", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/ls/LSParser\0", "abort\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_APPEND_AS_CHILDREN](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_APPEND_AS_CHILDREN)
        pub const ACTION_APPEND_AS_CHILDREN : i16 = 1;

        /// public static final [ACTION_INSERT_AFTER](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_INSERT_AFTER)
        pub const ACTION_INSERT_AFTER : i16 = 4;

        /// public static final [ACTION_INSERT_BEFORE](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_INSERT_BEFORE)
        pub const ACTION_INSERT_BEFORE : i16 = 3;

        /// public static final [ACTION_REPLACE](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_REPLACE)
        pub const ACTION_REPLACE : i16 = 5;

        /// public static final [ACTION_REPLACE_CHILDREN](https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_REPLACE_CHILDREN)
        pub const ACTION_REPLACE_CHILDREN : i16 = 2;
    }
}
