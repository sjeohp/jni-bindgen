// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-w3c-dom-DOMErrorHandler"))]
__jni_bindgen! {
    /// public interface [DOMErrorHandler](https://developer.android.com/reference/org/w3c/dom/DOMErrorHandler.html)
    ///
    /// Required feature: org-w3c-dom-DOMErrorHandler
    public interface DOMErrorHandler ("org/w3c/dom/DOMErrorHandler") extends crate::java::lang::Object {

        /// [handleError](https://developer.android.com/reference/org/w3c/dom/DOMErrorHandler.html#handleError(org.w3c.dom.DOMError))
        ///
        /// Required features: "org-w3c-dom-DOMError"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-DOMError")))]
        pub fn handleError<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::DOMError>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/DOMErrorHandler", java.flags == PUBLIC | ABSTRACT, .name == "handleError", .descriptor == "(Lorg/w3c/dom/DOMError;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/DOMErrorHandler\0", "handleError\0", "(Lorg/w3c/dom/DOMError;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
