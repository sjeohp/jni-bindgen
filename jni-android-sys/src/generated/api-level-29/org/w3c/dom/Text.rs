// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-w3c-dom-Text"))]
__jni_bindgen! {
    /// public interface [Text](https://developer.android.com/reference/org/w3c/dom/Text.html)
    ///
    /// Required feature: org-w3c-dom-Text
    public interface Text ("org/w3c/dom/Text") extends crate::java::lang::Object, implements crate::org::w3c::dom::CharacterData {

        /// [splitText](https://developer.android.com/reference/org/w3c/dom/Text.html#splitText(int))
        ///
        /// Required features: "org-w3c-dom-Text"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Text")))]
        pub fn splitText<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Text>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Text", java.flags == PUBLIC | ABSTRACT, .name == "splitText", .descriptor == "(I)Lorg/w3c/dom/Text;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Text\0", "splitText\0", "(I)Lorg/w3c/dom/Text;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isElementContentWhitespace](https://developer.android.com/reference/org/w3c/dom/Text.html#isElementContentWhitespace())
        pub fn isElementContentWhitespace<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Text", java.flags == PUBLIC | ABSTRACT, .name == "isElementContentWhitespace", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Text\0", "isElementContentWhitespace\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWholeText](https://developer.android.com/reference/org/w3c/dom/Text.html#getWholeText())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getWholeText<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Text", java.flags == PUBLIC | ABSTRACT, .name == "getWholeText", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Text\0", "getWholeText\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replaceWholeText](https://developer.android.com/reference/org/w3c/dom/Text.html#replaceWholeText(java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-Text"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-Text")))]
        pub fn replaceWholeText<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Text>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Text", java.flags == PUBLIC | ABSTRACT, .name == "replaceWholeText", .descriptor == "(Ljava/lang/String;)Lorg/w3c/dom/Text;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Text\0", "replaceWholeText\0", "(Ljava/lang/String;)Lorg/w3c/dom/Text;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
