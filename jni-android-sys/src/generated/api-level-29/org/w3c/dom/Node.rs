// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-w3c-dom-Node"))]
__jni_bindgen! {
    /// public interface [Node](https://developer.android.com/reference/org/w3c/dom/Node.html)
    ///
    /// Required feature: org-w3c-dom-Node
    public interface Node ("org/w3c/dom/Node") extends crate::java::lang::Object {

        /// [getNodeName](https://developer.android.com/reference/org/w3c/dom/Node.html#getNodeName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getNodeName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getNodeName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getNodeName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNodeValue](https://developer.android.com/reference/org/w3c/dom/Node.html#getNodeValue())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getNodeValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getNodeValue", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getNodeValue\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNodeValue](https://developer.android.com/reference/org/w3c/dom/Node.html#setNodeValue(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setNodeValue<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "setNodeValue", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "setNodeValue\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNodeType](https://developer.android.com/reference/org/w3c/dom/Node.html#getNodeType())
        pub fn getNodeType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getNodeType", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getNodeType\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getParentNode](https://developer.android.com/reference/org/w3c/dom/Node.html#getParentNode())
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn getParentNode<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getParentNode", .descriptor == "()Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getParentNode\0", "()Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChildNodes](https://developer.android.com/reference/org/w3c/dom/Node.html#getChildNodes())
        ///
        /// Required features: "org-w3c-dom-NodeList"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-NodeList")))]
        pub fn getChildNodes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::NodeList>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getChildNodes", .descriptor == "()Lorg/w3c/dom/NodeList;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getChildNodes\0", "()Lorg/w3c/dom/NodeList;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFirstChild](https://developer.android.com/reference/org/w3c/dom/Node.html#getFirstChild())
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn getFirstChild<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getFirstChild", .descriptor == "()Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getFirstChild\0", "()Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLastChild](https://developer.android.com/reference/org/w3c/dom/Node.html#getLastChild())
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn getLastChild<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getLastChild", .descriptor == "()Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getLastChild\0", "()Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPreviousSibling](https://developer.android.com/reference/org/w3c/dom/Node.html#getPreviousSibling())
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn getPreviousSibling<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getPreviousSibling", .descriptor == "()Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getPreviousSibling\0", "()Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNextSibling](https://developer.android.com/reference/org/w3c/dom/Node.html#getNextSibling())
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn getNextSibling<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getNextSibling", .descriptor == "()Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getNextSibling\0", "()Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAttributes](https://developer.android.com/reference/org/w3c/dom/Node.html#getAttributes())
        ///
        /// Required features: "org-w3c-dom-NamedNodeMap"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-NamedNodeMap")))]
        pub fn getAttributes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::NamedNodeMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getAttributes", .descriptor == "()Lorg/w3c/dom/NamedNodeMap;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getAttributes\0", "()Lorg/w3c/dom/NamedNodeMap;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOwnerDocument](https://developer.android.com/reference/org/w3c/dom/Node.html#getOwnerDocument())
        ///
        /// Required features: "org-w3c-dom-Document"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Document")))]
        pub fn getOwnerDocument<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getOwnerDocument", .descriptor == "()Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getOwnerDocument\0", "()Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [insertBefore](https://developer.android.com/reference/org/w3c/dom/Node.html#insertBefore(org.w3c.dom.Node,%20org.w3c.dom.Node))
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn insertBefore<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "insertBefore", .descriptor == "(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "insertBefore\0", "(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replaceChild](https://developer.android.com/reference/org/w3c/dom/Node.html#replaceChild(org.w3c.dom.Node,%20org.w3c.dom.Node))
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn replaceChild<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "replaceChild", .descriptor == "(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "replaceChild\0", "(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeChild](https://developer.android.com/reference/org/w3c/dom/Node.html#removeChild(org.w3c.dom.Node))
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn removeChild<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "removeChild", .descriptor == "(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "removeChild\0", "(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [appendChild](https://developer.android.com/reference/org/w3c/dom/Node.html#appendChild(org.w3c.dom.Node))
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn appendChild<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "appendChild", .descriptor == "(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "appendChild\0", "(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasChildNodes](https://developer.android.com/reference/org/w3c/dom/Node.html#hasChildNodes())
        pub fn hasChildNodes<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "hasChildNodes", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "hasChildNodes\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cloneNode](https://developer.android.com/reference/org/w3c/dom/Node.html#cloneNode(boolean))
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn cloneNode<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Node>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "cloneNode", .descriptor == "(Z)Lorg/w3c/dom/Node;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "cloneNode\0", "(Z)Lorg/w3c/dom/Node;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [normalize](https://developer.android.com/reference/org/w3c/dom/Node.html#normalize())
        pub fn normalize<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "normalize", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "normalize\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSupported](https://developer.android.com/reference/org/w3c/dom/Node.html#isSupported(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isSupported<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "isSupported", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "isSupported\0", "(Ljava/lang/String;Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNamespaceURI](https://developer.android.com/reference/org/w3c/dom/Node.html#getNamespaceURI())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getNamespaceURI<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getNamespaceURI", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getNamespaceURI\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPrefix](https://developer.android.com/reference/org/w3c/dom/Node.html#getPrefix())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPrefix<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getPrefix", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getPrefix\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPrefix](https://developer.android.com/reference/org/w3c/dom/Node.html#setPrefix(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setPrefix<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "setPrefix", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "setPrefix\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLocalName](https://developer.android.com/reference/org/w3c/dom/Node.html#getLocalName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getLocalName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getLocalName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getLocalName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasAttributes](https://developer.android.com/reference/org/w3c/dom/Node.html#hasAttributes())
        pub fn hasAttributes<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "hasAttributes", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "hasAttributes\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBaseURI](https://developer.android.com/reference/org/w3c/dom/Node.html#getBaseURI())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getBaseURI<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getBaseURI", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getBaseURI\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [compareDocumentPosition](https://developer.android.com/reference/org/w3c/dom/Node.html#compareDocumentPosition(org.w3c.dom.Node))
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn compareDocumentPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "compareDocumentPosition", .descriptor == "(Lorg/w3c/dom/Node;)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "compareDocumentPosition\0", "(Lorg/w3c/dom/Node;)S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTextContent](https://developer.android.com/reference/org/w3c/dom/Node.html#getTextContent())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getTextContent<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getTextContent", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getTextContent\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTextContent](https://developer.android.com/reference/org/w3c/dom/Node.html#setTextContent(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setTextContent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "setTextContent", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "setTextContent\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSameNode](https://developer.android.com/reference/org/w3c/dom/Node.html#isSameNode(org.w3c.dom.Node))
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn isSameNode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "isSameNode", .descriptor == "(Lorg/w3c/dom/Node;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "isSameNode\0", "(Lorg/w3c/dom/Node;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [lookupPrefix](https://developer.android.com/reference/org/w3c/dom/Node.html#lookupPrefix(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn lookupPrefix<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "lookupPrefix", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "lookupPrefix\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDefaultNamespace](https://developer.android.com/reference/org/w3c/dom/Node.html#isDefaultNamespace(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isDefaultNamespace<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "isDefaultNamespace", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "isDefaultNamespace\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [lookupNamespaceURI](https://developer.android.com/reference/org/w3c/dom/Node.html#lookupNamespaceURI(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn lookupNamespaceURI<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "lookupNamespaceURI", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "lookupNamespaceURI\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isEqualNode](https://developer.android.com/reference/org/w3c/dom/Node.html#isEqualNode(org.w3c.dom.Node))
        ///
        /// Required features: "org-w3c-dom-Node"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Node")))]
        pub fn isEqualNode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Node>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "isEqualNode", .descriptor == "(Lorg/w3c/dom/Node;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "isEqualNode\0", "(Lorg/w3c/dom/Node;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFeature](https://developer.android.com/reference/org/w3c/dom/Node.html#getFeature(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-Object", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        pub fn getFeature<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getFeature", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getFeature\0", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUserData](https://developer.android.com/reference/org/w3c/dom/Node.html#setUserData(java.lang.String,%20java.lang.Object,%20org.w3c.dom.UserDataHandler))
        ///
        /// Required features: "java-lang-Object", "java-lang-String", "org-w3c-dom-UserDataHandler"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String", feature = "org-w3c-dom-UserDataHandler")))]
        pub fn setUserData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::UserDataHandler>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "setUserData", .descriptor == "(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/UserDataHandler;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "setUserData\0", "(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/UserDataHandler;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUserData](https://developer.android.com/reference/org/w3c/dom/Node.html#getUserData(java.lang.String))
        ///
        /// Required features: "java-lang-Object", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        pub fn getUserData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Node", java.flags == PUBLIC | ABSTRACT, .name == "getUserData", .descriptor == "(Ljava/lang/String;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Node\0", "getUserData\0", "(Ljava/lang/String;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ATTRIBUTE_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#ATTRIBUTE_NODE)
        pub const ATTRIBUTE_NODE : i16 = 2;

        /// public static final [CDATA_SECTION_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#CDATA_SECTION_NODE)
        pub const CDATA_SECTION_NODE : i16 = 4;

        /// public static final [COMMENT_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#COMMENT_NODE)
        pub const COMMENT_NODE : i16 = 8;

        /// public static final [DOCUMENT_FRAGMENT_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_FRAGMENT_NODE)
        pub const DOCUMENT_FRAGMENT_NODE : i16 = 11;

        /// public static final [DOCUMENT_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_NODE)
        pub const DOCUMENT_NODE : i16 = 9;

        /// public static final [DOCUMENT_POSITION_CONTAINED_BY](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_POSITION_CONTAINED_BY)
        pub const DOCUMENT_POSITION_CONTAINED_BY : i16 = 16;

        /// public static final [DOCUMENT_POSITION_CONTAINS](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_POSITION_CONTAINS)
        pub const DOCUMENT_POSITION_CONTAINS : i16 = 8;

        /// public static final [DOCUMENT_POSITION_DISCONNECTED](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_POSITION_DISCONNECTED)
        pub const DOCUMENT_POSITION_DISCONNECTED : i16 = 1;

        /// public static final [DOCUMENT_POSITION_FOLLOWING](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_POSITION_FOLLOWING)
        pub const DOCUMENT_POSITION_FOLLOWING : i16 = 4;

        /// public static final [DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC)
        pub const DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC : i16 = 32;

        /// public static final [DOCUMENT_POSITION_PRECEDING](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_POSITION_PRECEDING)
        pub const DOCUMENT_POSITION_PRECEDING : i16 = 2;

        /// public static final [DOCUMENT_TYPE_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#DOCUMENT_TYPE_NODE)
        pub const DOCUMENT_TYPE_NODE : i16 = 10;

        /// public static final [ELEMENT_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#ELEMENT_NODE)
        pub const ELEMENT_NODE : i16 = 1;

        /// public static final [ENTITY_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#ENTITY_NODE)
        pub const ENTITY_NODE : i16 = 6;

        /// public static final [ENTITY_REFERENCE_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#ENTITY_REFERENCE_NODE)
        pub const ENTITY_REFERENCE_NODE : i16 = 5;

        /// public static final [NOTATION_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#NOTATION_NODE)
        pub const NOTATION_NODE : i16 = 12;

        /// public static final [PROCESSING_INSTRUCTION_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#PROCESSING_INSTRUCTION_NODE)
        pub const PROCESSING_INSTRUCTION_NODE : i16 = 7;

        /// public static final [TEXT_NODE](https://developer.android.com/reference/org/w3c/dom/Node.html#TEXT_NODE)
        pub const TEXT_NODE : i16 = 3;
    }
}
