// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-w3c-dom-Element"))]
__jni_bindgen! {
    /// public interface [Element](https://developer.android.com/reference/org/w3c/dom/Element.html)
    ///
    /// Required feature: org-w3c-dom-Element
    public interface Element ("org/w3c/dom/Element") extends crate::java::lang::Object, implements crate::org::w3c::dom::Node {

        /// [getTagName](https://developer.android.com/reference/org/w3c/dom/Element.html#getTagName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getTagName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "getTagName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "getTagName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAttribute](https://developer.android.com/reference/org/w3c/dom/Element.html#getAttribute(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "getAttribute", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "getAttribute\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAttribute](https://developer.android.com/reference/org/w3c/dom/Element.html#setAttribute(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "setAttribute", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "setAttribute\0", "(Ljava/lang/String;Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeAttribute](https://developer.android.com/reference/org/w3c/dom/Element.html#removeAttribute(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn removeAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "removeAttribute", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "removeAttribute\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAttributeNode](https://developer.android.com/reference/org/w3c/dom/Element.html#getAttributeNode(java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-Attr"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-Attr")))]
        pub fn getAttributeNode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Attr>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "getAttributeNode", .descriptor == "(Ljava/lang/String;)Lorg/w3c/dom/Attr;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "getAttributeNode\0", "(Ljava/lang/String;)Lorg/w3c/dom/Attr;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAttributeNode](https://developer.android.com/reference/org/w3c/dom/Element.html#setAttributeNode(org.w3c.dom.Attr))
        ///
        /// Required features: "org-w3c-dom-Attr"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Attr")))]
        pub fn setAttributeNode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Attr>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Attr>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "setAttributeNode", .descriptor == "(Lorg/w3c/dom/Attr;)Lorg/w3c/dom/Attr;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "setAttributeNode\0", "(Lorg/w3c/dom/Attr;)Lorg/w3c/dom/Attr;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeAttributeNode](https://developer.android.com/reference/org/w3c/dom/Element.html#removeAttributeNode(org.w3c.dom.Attr))
        ///
        /// Required features: "org-w3c-dom-Attr"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Attr")))]
        pub fn removeAttributeNode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Attr>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Attr>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "removeAttributeNode", .descriptor == "(Lorg/w3c/dom/Attr;)Lorg/w3c/dom/Attr;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "removeAttributeNode\0", "(Lorg/w3c/dom/Attr;)Lorg/w3c/dom/Attr;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getElementsByTagName](https://developer.android.com/reference/org/w3c/dom/Element.html#getElementsByTagName(java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-NodeList"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-NodeList")))]
        pub fn getElementsByTagName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::NodeList>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "getElementsByTagName", .descriptor == "(Ljava/lang/String;)Lorg/w3c/dom/NodeList;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "getElementsByTagName\0", "(Ljava/lang/String;)Lorg/w3c/dom/NodeList;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAttributeNS](https://developer.android.com/reference/org/w3c/dom/Element.html#getAttributeNS(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAttributeNS<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "getAttributeNS", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "getAttributeNS\0", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAttributeNS](https://developer.android.com/reference/org/w3c/dom/Element.html#setAttributeNS(java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setAttributeNS<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "setAttributeNS", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "setAttributeNS\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeAttributeNS](https://developer.android.com/reference/org/w3c/dom/Element.html#removeAttributeNS(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn removeAttributeNS<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "removeAttributeNS", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "removeAttributeNS\0", "(Ljava/lang/String;Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAttributeNodeNS](https://developer.android.com/reference/org/w3c/dom/Element.html#getAttributeNodeNS(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-Attr"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-Attr")))]
        pub fn getAttributeNodeNS<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Attr>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "getAttributeNodeNS", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "getAttributeNodeNS\0", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAttributeNodeNS](https://developer.android.com/reference/org/w3c/dom/Element.html#setAttributeNodeNS(org.w3c.dom.Attr))
        ///
        /// Required features: "org-w3c-dom-Attr"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Attr")))]
        pub fn setAttributeNodeNS<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Attr>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Attr>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "setAttributeNodeNS", .descriptor == "(Lorg/w3c/dom/Attr;)Lorg/w3c/dom/Attr;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "setAttributeNodeNS\0", "(Lorg/w3c/dom/Attr;)Lorg/w3c/dom/Attr;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getElementsByTagNameNS](https://developer.android.com/reference/org/w3c/dom/Element.html#getElementsByTagNameNS(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-NodeList"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-NodeList")))]
        pub fn getElementsByTagNameNS<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::NodeList>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "getElementsByTagNameNS", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/NodeList;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "getElementsByTagNameNS\0", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/NodeList;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasAttribute](https://developer.android.com/reference/org/w3c/dom/Element.html#hasAttribute(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn hasAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "hasAttribute", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "hasAttribute\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasAttributeNS](https://developer.android.com/reference/org/w3c/dom/Element.html#hasAttributeNS(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn hasAttributeNS<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "hasAttributeNS", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "hasAttributeNS\0", "(Ljava/lang/String;Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSchemaTypeInfo](https://developer.android.com/reference/org/w3c/dom/Element.html#getSchemaTypeInfo())
        ///
        /// Required features: "org-w3c-dom-TypeInfo"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-TypeInfo")))]
        pub fn getSchemaTypeInfo<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::TypeInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "getSchemaTypeInfo", .descriptor == "()Lorg/w3c/dom/TypeInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "getSchemaTypeInfo\0", "()Lorg/w3c/dom/TypeInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIdAttribute](https://developer.android.com/reference/org/w3c/dom/Element.html#setIdAttribute(java.lang.String,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setIdAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "setIdAttribute", .descriptor == "(Ljava/lang/String;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "setIdAttribute\0", "(Ljava/lang/String;Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIdAttributeNS](https://developer.android.com/reference/org/w3c/dom/Element.html#setIdAttributeNS(java.lang.String,%20java.lang.String,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setIdAttributeNS<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "setIdAttributeNS", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "setIdAttributeNS\0", "(Ljava/lang/String;Ljava/lang/String;Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIdAttributeNode](https://developer.android.com/reference/org/w3c/dom/Element.html#setIdAttributeNode(org.w3c.dom.Attr,%20boolean))
        ///
        /// Required features: "org-w3c-dom-Attr"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Attr")))]
        pub fn setIdAttributeNode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::w3c::dom::Attr>>, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/w3c/dom/Element", java.flags == PUBLIC | ABSTRACT, .name == "setIdAttributeNode", .descriptor == "(Lorg/w3c/dom/Attr;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/w3c/dom/Element\0", "setIdAttributeNode\0", "(Lorg/w3c/dom/Attr;Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
