// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-xmlpull-v1-XmlPullParserFactory"))]
__jni_bindgen! {
    /// public class [XmlPullParserFactory](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html)
    ///
    /// Required feature: org-xmlpull-v1-XmlPullParserFactory
    public class XmlPullParserFactory ("org/xmlpull/v1/XmlPullParserFactory") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [XmlPullParserFactory](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#XmlPullParserFactory())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::xmlpull::v1::XmlPullParserFactory>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [setFeature](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#setFeature(java.lang.String,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setFeature<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC, .name == "setFeature", .descriptor == "(Ljava/lang/String;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "setFeature\0", "(Ljava/lang/String;Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFeature](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#getFeature(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getFeature<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC, .name == "getFeature", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "getFeature\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNamespaceAware](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#setNamespaceAware(boolean))
        pub fn setNamespaceAware<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC, .name == "setNamespaceAware", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "setNamespaceAware\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNamespaceAware](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#isNamespaceAware())
        pub fn isNamespaceAware<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC, .name == "isNamespaceAware", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "isNamespaceAware\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setValidating](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#setValidating(boolean))
        pub fn setValidating<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC, .name == "setValidating", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "setValidating\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isValidating](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#isValidating())
        pub fn isValidating<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC, .name == "isValidating", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "isValidating\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newPullParser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#newPullParser())
        ///
        /// Required features: "org-xmlpull-v1-XmlPullParser"
        #[cfg(any(feature = "all", all(feature = "org-xmlpull-v1-XmlPullParser")))]
        pub fn newPullParser<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::xmlpull::v1::XmlPullParser>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC, .name == "newPullParser", .descriptor == "()Lorg/xmlpull/v1/XmlPullParser;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "newPullParser\0", "()Lorg/xmlpull/v1/XmlPullParser;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newSerializer](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#newSerializer())
        ///
        /// Required features: "org-xmlpull-v1-XmlSerializer"
        #[cfg(any(feature = "all", all(feature = "org-xmlpull-v1-XmlSerializer")))]
        pub fn newSerializer<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::xmlpull::v1::XmlSerializer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC, .name == "newSerializer", .descriptor == "()Lorg/xmlpull/v1/XmlSerializer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserFactory\0", "newSerializer\0", "()Lorg/xmlpull/v1/XmlSerializer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newInstance](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#newInstance())
        ///
        /// Required features: "org-xmlpull-v1-XmlPullParserFactory"
        #[cfg(any(feature = "all", all(feature = "org-xmlpull-v1-XmlPullParserFactory")))]
        pub fn newInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::xmlpull::v1::XmlPullParserFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC | STATIC, .name == "newInstance", .descriptor == "()Lorg/xmlpull/v1/XmlPullParserFactory;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/xmlpull/v1/XmlPullParserFactory\0", "newInstance\0", "()Lorg/xmlpull/v1/XmlPullParserFactory;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newInstance](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#newInstance(java.lang.String,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class", "java-lang-String", "org-xmlpull-v1-XmlPullParserFactory"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class", feature = "java-lang-String", feature = "org-xmlpull-v1-XmlPullParserFactory")))]
        pub fn newInstance_String_Class<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::xmlpull::v1::XmlPullParserFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserFactory", java.flags == PUBLIC | STATIC, .name == "newInstance", .descriptor == "(Ljava/lang/String;Ljava/lang/Class;)Lorg/xmlpull/v1/XmlPullParserFactory;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("org/xmlpull/v1/XmlPullParserFactory\0", "newInstance\0", "(Ljava/lang/String;Ljava/lang/Class;)Lorg/xmlpull/v1/XmlPullParserFactory;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [PROPERTY_NAME](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#PROPERTY_NAME)
        pub const PROPERTY_NAME : &'static str = "org.xmlpull.v1.XmlPullParserFactory";

        // // Not emitting: Non-public field
        // /// **get** protected [classNamesLocation](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#classNamesLocation)
        // ///
        // /// Required feature: java-lang-String
        // #[cfg(any(feature = "all", feature = "java-lang-String"))]
        // pub fn classNamesLocation<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserFactory\0", "classNamesLocation\0", "Ljava/lang/String;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [classNamesLocation](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#classNamesLocation)
        // ///
        // /// Required feature: java-lang-String
        // #[cfg(any(feature = "all", feature = "java-lang-String"))]
        // pub fn set_classNamesLocation<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserFactory\0", "classNamesLocation\0", "Ljava/lang/String;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [features](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#features)
        // ///
        // /// Required feature: java-util-HashMap
        // #[cfg(any(feature = "all", feature = "java-util-HashMap"))]
        // pub fn features<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::HashMap>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserFactory\0", "features\0", "Ljava/util/HashMap;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [features](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#features)
        // ///
        // /// Required feature: java-util-HashMap
        // #[cfg(any(feature = "all", feature = "java-util-HashMap"))]
        // pub fn set_features<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::util::HashMap>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserFactory\0", "features\0", "Ljava/util/HashMap;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [parserClasses](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#parserClasses)
        // ///
        // /// Required feature: java-util-ArrayList
        // #[cfg(any(feature = "all", feature = "java-util-ArrayList"))]
        // pub fn parserClasses<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::ArrayList>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserFactory\0", "parserClasses\0", "Ljava/util/ArrayList;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [parserClasses](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#parserClasses)
        // ///
        // /// Required feature: java-util-ArrayList
        // #[cfg(any(feature = "all", feature = "java-util-ArrayList"))]
        // pub fn set_parserClasses<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::util::ArrayList>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserFactory\0", "parserClasses\0", "Ljava/util/ArrayList;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [serializerClasses](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#serializerClasses)
        // ///
        // /// Required feature: java-util-ArrayList
        // #[cfg(any(feature = "all", feature = "java-util-ArrayList"))]
        // pub fn serializerClasses<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::ArrayList>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserFactory\0", "serializerClasses\0", "Ljava/util/ArrayList;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [serializerClasses](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html#serializerClasses)
        // ///
        // /// Required feature: java-util-ArrayList
        // #[cfg(any(feature = "all", feature = "java-util-ArrayList"))]
        // pub fn set_serializerClasses<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::util::ArrayList>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserFactory\0", "serializerClasses\0", "Ljava/util/ArrayList;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
