// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "org-xmlpull-v1-XmlPullParserException"))]
__jni_bindgen! {
    /// public class [XmlPullParserException](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html)
    ///
    /// Required feature: org-xmlpull-v1-XmlPullParserException
    public class XmlPullParserException ("org/xmlpull/v1/XmlPullParserException") extends crate::java::lang::Exception {

        /// [XmlPullParserException](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#XmlPullParserException(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::xmlpull::v1::XmlPullParserException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserException\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [XmlPullParserException](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#XmlPullParserException(java.lang.String,%20org.xmlpull.v1.XmlPullParser,%20java.lang.Throwable))
        ///
        /// Required features: "java-lang-String", "java-lang-Throwable", "org-xmlpull-v1-XmlPullParser"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-lang-Throwable", feature = "org-xmlpull-v1-XmlPullParser")))]
        pub fn new_String_XmlPullParser_Throwable<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xmlpull::v1::XmlPullParser>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Throwable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::org::xmlpull::v1::XmlPullParserException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/Throwable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserException\0", "<init>\0", "(Ljava/lang/String;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/Throwable;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDetail](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#getDetail())
        ///
        /// Required features: "java-lang-Throwable"
        #[cfg(any(feature = "all", all(feature = "java-lang-Throwable")))]
        pub fn getDetail<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Throwable>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserException", java.flags == PUBLIC, .name == "getDetail", .descriptor == "()Ljava/lang/Throwable;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserException\0", "getDetail\0", "()Ljava/lang/Throwable;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLineNumber](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#getLineNumber())
        pub fn getLineNumber<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserException", java.flags == PUBLIC, .name == "getLineNumber", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserException\0", "getLineNumber\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getColumnNumber](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#getColumnNumber())
        pub fn getColumnNumber<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserException", java.flags == PUBLIC, .name == "getColumnNumber", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserException\0", "getColumnNumber\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [printStackTrace](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#printStackTrace())
        pub fn printStackTrace<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "org/xmlpull/v1/XmlPullParserException", java.flags == PUBLIC, .name == "printStackTrace", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("org/xmlpull/v1/XmlPullParserException\0", "printStackTrace\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // /// **get** protected [column](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#column)
        // pub fn column<'env>(&'env self) -> i32 {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserException\0", "column\0", "I\0");
        //         env.get_int_field(class, field)
        //     }
        // }

        // /// **set** protected [column](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#column)
        // pub fn set_column<'env>(&'env self, value: i32) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserException\0", "column\0", "I\0");
        //         env.set_int_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [detail](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#detail)
        // ///
        // /// Required feature: java-lang-Throwable
        // #[cfg(any(feature = "all", feature = "java-lang-Throwable"))]
        // pub fn detail<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserException\0", "detail\0", "Ljava/lang/Throwable;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [detail](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#detail)
        // ///
        // /// Required feature: java-lang-Throwable
        // #[cfg(any(feature = "all", feature = "java-lang-Throwable"))]
        // pub fn set_detail<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::Throwable>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserException\0", "detail\0", "Ljava/lang/Throwable;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [row](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#row)
        // pub fn row<'env>(&'env self) -> i32 {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserException\0", "row\0", "I\0");
        //         env.get_int_field(class, field)
        //     }
        // }

        // /// **set** protected [row](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html#row)
        // pub fn set_row<'env>(&'env self, value: i32) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("org/xmlpull/v1/XmlPullParserException\0", "row\0", "I\0");
        //         env.set_int_field(class, field, value)
        //     }
        // }
    }
}
