// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-net-ssl-SSLContextSpi"))]
__jni_bindgen! {
    /// public class [SSLContextSpi](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html)
    ///
    /// Required feature: javax-net-ssl-SSLContextSpi
    public class SSLContextSpi ("javax/net/ssl/SSLContextSpi") extends crate::java::lang::Object {

        /// [SSLContextSpi](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#SSLContextSpi())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLContextSpi>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [engineInit](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineInit(javax.net.ssl.KeyManager%5B%5D,%20javax.net.ssl.TrustManager%5B%5D,%20java.security.SecureRandom))
        // ///
        // /// Required features: "java-security-SecureRandom", "javax-net-ssl-KeyManager", "javax-net-ssl-TrustManager"
        // #[cfg(any(feature = "all", all(feature = "java-security-SecureRandom", feature = "javax-net-ssl-KeyManager", feature = "javax-net-ssl-TrustManager")))]
        // fn engineInit<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::javax::net::ssl::KeyManager, crate::java::lang::Throwable>>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::javax::net::ssl::TrustManager, crate::java::lang::Throwable>>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::SecureRandom>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineInit", .descriptor == "([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineInit\0", "([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGetSocketFactory](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineGetSocketFactory())
        // ///
        // /// Required features: "javax-net-ssl-SSLSocketFactory"
        // #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLSocketFactory")))]
        // fn engineGetSocketFactory<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLSocketFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineGetSocketFactory", .descriptor == "()Ljavax/net/ssl/SSLSocketFactory;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineGetSocketFactory\0", "()Ljavax/net/ssl/SSLSocketFactory;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGetServerSocketFactory](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineGetServerSocketFactory())
        // ///
        // /// Required features: "javax-net-ssl-SSLServerSocketFactory"
        // #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLServerSocketFactory")))]
        // fn engineGetServerSocketFactory<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLServerSocketFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineGetServerSocketFactory", .descriptor == "()Ljavax/net/ssl/SSLServerSocketFactory;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineGetServerSocketFactory\0", "()Ljavax/net/ssl/SSLServerSocketFactory;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineCreateSSLEngine](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineCreateSSLEngine())
        // ///
        // /// Required features: "javax-net-ssl-SSLEngine"
        // #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLEngine")))]
        // fn engineCreateSSLEngine<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLEngine>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineCreateSSLEngine", .descriptor == "()Ljavax/net/ssl/SSLEngine;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineCreateSSLEngine\0", "()Ljavax/net/ssl/SSLEngine;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineCreateSSLEngine](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineCreateSSLEngine(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String", "javax-net-ssl-SSLEngine"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-net-ssl-SSLEngine")))]
        // fn engineCreateSSLEngine<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLEngine>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineCreateSSLEngine", .descriptor == "(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineCreateSSLEngine\0", "(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGetServerSessionContext](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineGetServerSessionContext())
        // ///
        // /// Required features: "javax-net-ssl-SSLSessionContext"
        // #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLSessionContext")))]
        // fn engineGetServerSessionContext<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLSessionContext>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineGetServerSessionContext", .descriptor == "()Ljavax/net/ssl/SSLSessionContext;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineGetServerSessionContext\0", "()Ljavax/net/ssl/SSLSessionContext;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGetClientSessionContext](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineGetClientSessionContext())
        // ///
        // /// Required features: "javax-net-ssl-SSLSessionContext"
        // #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLSessionContext")))]
        // fn engineGetClientSessionContext<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLSessionContext>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineGetClientSessionContext", .descriptor == "()Ljavax/net/ssl/SSLSessionContext;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineGetClientSessionContext\0", "()Ljavax/net/ssl/SSLSessionContext;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGetDefaultSSLParameters](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineGetDefaultSSLParameters())
        // ///
        // /// Required features: "javax-net-ssl-SSLParameters"
        // #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLParameters")))]
        // fn engineGetDefaultSSLParameters<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLParameters>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED, .name == "engineGetDefaultSSLParameters", .descriptor == "()Ljavax/net/ssl/SSLParameters;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineGetDefaultSSLParameters\0", "()Ljavax/net/ssl/SSLParameters;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGetSupportedSSLParameters](https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html#engineGetSupportedSSLParameters())
        // ///
        // /// Required features: "javax-net-ssl-SSLParameters"
        // #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLParameters")))]
        // fn engineGetSupportedSSLParameters<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLParameters>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/net/ssl/SSLContextSpi", java.flags == PROTECTED, .name == "engineGetSupportedSSLParameters", .descriptor == "()Ljavax/net/ssl/SSLParameters;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/SSLContextSpi\0", "engineGetSupportedSSLParameters\0", "()Ljavax/net/ssl/SSLParameters;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
