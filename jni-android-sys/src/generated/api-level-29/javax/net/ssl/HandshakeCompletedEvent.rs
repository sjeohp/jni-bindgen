// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-net-ssl-HandshakeCompletedEvent"))]
__jni_bindgen! {
    /// public class [HandshakeCompletedEvent](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html)
    ///
    /// Required feature: javax-net-ssl-HandshakeCompletedEvent
    public class HandshakeCompletedEvent ("javax/net/ssl/HandshakeCompletedEvent") extends crate::java::util::EventObject {

        /// [HandshakeCompletedEvent](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#HandshakeCompletedEvent(javax.net.ssl.SSLSocket,%20javax.net.ssl.SSLSession))
        ///
        /// Required features: "javax-net-ssl-SSLSession", "javax-net-ssl-SSLSocket"
        #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLSession", feature = "javax-net-ssl-SSLSocket")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::net::ssl::SSLSocket>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::net::ssl::SSLSession>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::net::ssl::HandshakeCompletedEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljavax/net/ssl/SSLSocket;Ljavax/net/ssl/SSLSession;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "<init>\0", "(Ljavax/net/ssl/SSLSocket;Ljavax/net/ssl/SSLSession;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSession](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getSession())
        ///
        /// Required features: "javax-net-ssl-SSLSession"
        #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLSession")))]
        pub fn getSession<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLSession>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "getSession", .descriptor == "()Ljavax/net/ssl/SSLSession;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "getSession\0", "()Ljavax/net/ssl/SSLSession;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCipherSuite](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getCipherSuite())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCipherSuite<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "getCipherSuite", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "getCipherSuite\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLocalCertificates](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getLocalCertificates())
        ///
        /// Required features: "java-security-cert-Certificate"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-Certificate")))]
        pub fn getLocalCertificates<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::security::cert::Certificate, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "getLocalCertificates", .descriptor == "()[Ljava/security/cert/Certificate;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "getLocalCertificates\0", "()[Ljava/security/cert/Certificate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPeerCertificates](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificates())
        ///
        /// Required features: "java-security-cert-Certificate"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-Certificate")))]
        pub fn getPeerCertificates<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::security::cert::Certificate, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "getPeerCertificates", .descriptor == "()[Ljava/security/cert/Certificate;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "getPeerCertificates\0", "()[Ljava/security/cert/Certificate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPeerCertificateChain](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificateChain())
        ///
        /// Required features: "javax-security-cert-X509Certificate"
        #[cfg(any(feature = "all", all(feature = "javax-security-cert-X509Certificate")))]
        pub fn getPeerCertificateChain<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::javax::security::cert::X509Certificate, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "getPeerCertificateChain", .descriptor == "()[Ljavax/security/cert/X509Certificate;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "getPeerCertificateChain\0", "()[Ljavax/security/cert/X509Certificate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPeerPrincipal](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerPrincipal())
        ///
        /// Required features: "java-security-Principal"
        #[cfg(any(feature = "all", all(feature = "java-security-Principal")))]
        pub fn getPeerPrincipal<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::Principal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "getPeerPrincipal", .descriptor == "()Ljava/security/Principal;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "getPeerPrincipal\0", "()Ljava/security/Principal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLocalPrincipal](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getLocalPrincipal())
        ///
        /// Required features: "java-security-Principal"
        #[cfg(any(feature = "all", all(feature = "java-security-Principal")))]
        pub fn getLocalPrincipal<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::Principal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "getLocalPrincipal", .descriptor == "()Ljava/security/Principal;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "getLocalPrincipal\0", "()Ljava/security/Principal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSocket](https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getSocket())
        ///
        /// Required features: "javax-net-ssl-SSLSocket"
        #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLSocket")))]
        pub fn getSocket<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::net::ssl::SSLSocket>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/net/ssl/HandshakeCompletedEvent", java.flags == PUBLIC, .name == "getSocket", .descriptor == "()Ljavax/net/ssl/SSLSocket;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/net/ssl/HandshakeCompletedEvent\0", "getSocket\0", "()Ljavax/net/ssl/SSLSocket;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
