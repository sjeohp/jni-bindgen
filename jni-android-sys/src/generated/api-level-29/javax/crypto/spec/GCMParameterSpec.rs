// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-crypto-spec-GCMParameterSpec"))]
__jni_bindgen! {
    /// public class [GCMParameterSpec](https://developer.android.com/reference/javax/crypto/spec/GCMParameterSpec.html)
    ///
    /// Required feature: javax-crypto-spec-GCMParameterSpec
    public class GCMParameterSpec ("javax/crypto/spec/GCMParameterSpec") extends crate::java::lang::Object, implements crate::java::security::spec::AlgorithmParameterSpec {

        /// [GCMParameterSpec](https://developer.android.com/reference/javax/crypto/spec/GCMParameterSpec.html#GCMParameterSpec(int,%20byte%5B%5D))
        pub fn new_int_byte_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::crypto::spec::GCMParameterSpec>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/crypto/spec/GCMParameterSpec", java.flags == PUBLIC, .name == "<init>", .descriptor == "(I[B)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/spec/GCMParameterSpec\0", "<init>\0", "(I[B)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [GCMParameterSpec](https://developer.android.com/reference/javax/crypto/spec/GCMParameterSpec.html#GCMParameterSpec(int,%20byte%5B%5D,%20int,%20int))
        pub fn new_int_byte_array_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::crypto::spec::GCMParameterSpec>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/crypto/spec/GCMParameterSpec", java.flags == PUBLIC, .name == "<init>", .descriptor == "(I[BII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/spec/GCMParameterSpec\0", "<init>\0", "(I[BII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTLen](https://developer.android.com/reference/javax/crypto/spec/GCMParameterSpec.html#getTLen())
        pub fn getTLen<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/crypto/spec/GCMParameterSpec", java.flags == PUBLIC, .name == "getTLen", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/spec/GCMParameterSpec\0", "getTLen\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIV](https://developer.android.com/reference/javax/crypto/spec/GCMParameterSpec.html#getIV())
        pub fn getIV<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/crypto/spec/GCMParameterSpec", java.flags == PUBLIC, .name == "getIV", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/spec/GCMParameterSpec\0", "getIV\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
