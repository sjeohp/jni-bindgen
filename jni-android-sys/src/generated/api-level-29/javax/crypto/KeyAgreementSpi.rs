// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-crypto-KeyAgreementSpi"))]
__jni_bindgen! {
    /// public class [KeyAgreementSpi](https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html)
    ///
    /// Required feature: javax-crypto-KeyAgreementSpi
    public class KeyAgreementSpi ("javax/crypto/KeyAgreementSpi") extends crate::java::lang::Object {

        /// [KeyAgreementSpi](https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html#KeyAgreementSpi())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::crypto::KeyAgreementSpi>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/crypto/KeyAgreementSpi", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/KeyAgreementSpi\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [engineInit](https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html#engineInit(java.security.Key,%20java.security.SecureRandom))
        // ///
        // /// Required features: "java-security-Key", "java-security-SecureRandom"
        // #[cfg(any(feature = "all", all(feature = "java-security-Key", feature = "java-security-SecureRandom")))]
        // fn engineInit<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::Key>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::SecureRandom>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/crypto/KeyAgreementSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineInit", .descriptor == "(Ljava/security/Key;Ljava/security/SecureRandom;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/KeyAgreementSpi\0", "engineInit\0", "(Ljava/security/Key;Ljava/security/SecureRandom;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineInit](https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html#engineInit(java.security.Key,%20java.security.spec.AlgorithmParameterSpec,%20java.security.SecureRandom))
        // ///
        // /// Required features: "java-security-Key", "java-security-SecureRandom", "java-security-spec-AlgorithmParameterSpec"
        // #[cfg(any(feature = "all", all(feature = "java-security-Key", feature = "java-security-SecureRandom", feature = "java-security-spec-AlgorithmParameterSpec")))]
        // fn engineInit<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::Key>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::spec::AlgorithmParameterSpec>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::SecureRandom>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/crypto/KeyAgreementSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineInit", .descriptor == "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/KeyAgreementSpi\0", "engineInit\0", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineDoPhase](https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html#engineDoPhase(java.security.Key,%20boolean))
        // ///
        // /// Required features: "java-security-Key"
        // #[cfg(any(feature = "all", all(feature = "java-security-Key")))]
        // fn engineDoPhase<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::Key>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::Key>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/crypto/KeyAgreementSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineDoPhase", .descriptor == "(Ljava/security/Key;Z)Ljava/security/Key;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/KeyAgreementSpi\0", "engineDoPhase\0", "(Ljava/security/Key;Z)Ljava/security/Key;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGenerateSecret](https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html#engineGenerateSecret())
        // fn engineGenerateSecret<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/crypto/KeyAgreementSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineGenerateSecret", .descriptor == "()[B"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/KeyAgreementSpi\0", "engineGenerateSecret\0", "()[B\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGenerateSecret](https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html#engineGenerateSecret(byte%5B%5D,%20int))
        // fn engineGenerateSecret<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/crypto/KeyAgreementSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineGenerateSecret", .descriptor == "([BI)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/KeyAgreementSpi\0", "engineGenerateSecret\0", "([BI)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [engineGenerateSecret](https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html#engineGenerateSecret(java.lang.String))
        // ///
        // /// Required features: "java-lang-String", "javax-crypto-SecretKey"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-crypto-SecretKey")))]
        // fn engineGenerateSecret<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::crypto::SecretKey>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/crypto/KeyAgreementSpi", java.flags == PROTECTED | ABSTRACT, .name == "engineGenerateSecret", .descriptor == "(Ljava/lang/String;)Ljavax/crypto/SecretKey;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/crypto/KeyAgreementSpi\0", "engineGenerateSecret\0", "(Ljava/lang/String;)Ljavax/crypto/SecretKey;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
