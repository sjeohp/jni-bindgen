// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-sql-ConnectionEventListener"))]
__jni_bindgen! {
    /// public interface [ConnectionEventListener](https://developer.android.com/reference/javax/sql/ConnectionEventListener.html)
    ///
    /// Required feature: javax-sql-ConnectionEventListener
    public interface ConnectionEventListener ("javax/sql/ConnectionEventListener") extends crate::java::lang::Object, implements crate::java::util::EventListener {

        /// [connectionClosed](https://developer.android.com/reference/javax/sql/ConnectionEventListener.html#connectionClosed(javax.sql.ConnectionEvent))
        ///
        /// Required features: "javax-sql-ConnectionEvent"
        #[cfg(any(feature = "all", all(feature = "javax-sql-ConnectionEvent")))]
        pub fn connectionClosed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::sql::ConnectionEvent>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/sql/ConnectionEventListener", java.flags == PUBLIC | ABSTRACT, .name == "connectionClosed", .descriptor == "(Ljavax/sql/ConnectionEvent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/sql/ConnectionEventListener\0", "connectionClosed\0", "(Ljavax/sql/ConnectionEvent;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [connectionErrorOccurred](https://developer.android.com/reference/javax/sql/ConnectionEventListener.html#connectionErrorOccurred(javax.sql.ConnectionEvent))
        ///
        /// Required features: "javax-sql-ConnectionEvent"
        #[cfg(any(feature = "all", all(feature = "javax-sql-ConnectionEvent")))]
        pub fn connectionErrorOccurred<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::sql::ConnectionEvent>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/sql/ConnectionEventListener", java.flags == PUBLIC | ABSTRACT, .name == "connectionErrorOccurred", .descriptor == "(Ljavax/sql/ConnectionEvent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/sql/ConnectionEventListener\0", "connectionErrorOccurred\0", "(Ljavax/sql/ConnectionEvent;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
