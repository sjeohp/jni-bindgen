// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-sql-DataSource"))]
__jni_bindgen! {
    /// public interface [DataSource](https://developer.android.com/reference/javax/sql/DataSource.html)
    ///
    /// Required feature: javax-sql-DataSource
    public interface DataSource ("javax/sql/DataSource") extends crate::java::lang::Object, implements crate::javax::sql::CommonDataSource, crate::java::sql::Wrapper {

        /// [getConnection](https://developer.android.com/reference/javax/sql/DataSource.html#getConnection())
        ///
        /// Required features: "java-sql-Connection"
        #[cfg(any(feature = "all", all(feature = "java-sql-Connection")))]
        pub fn getConnection<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Connection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/sql/DataSource", java.flags == PUBLIC | ABSTRACT, .name == "getConnection", .descriptor == "()Ljava/sql/Connection;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/sql/DataSource\0", "getConnection\0", "()Ljava/sql/Connection;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getConnection](https://developer.android.com/reference/javax/sql/DataSource.html#getConnection(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-sql-Connection"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-sql-Connection")))]
        pub fn getConnection_String_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::sql::Connection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/sql/DataSource", java.flags == PUBLIC | ABSTRACT, .name == "getConnection", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/sql/DataSource\0", "getConnection\0", "(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
