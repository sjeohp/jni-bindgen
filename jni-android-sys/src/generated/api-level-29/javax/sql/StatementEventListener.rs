// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-sql-StatementEventListener"))]
__jni_bindgen! {
    /// public interface [StatementEventListener](https://developer.android.com/reference/javax/sql/StatementEventListener.html)
    ///
    /// Required feature: javax-sql-StatementEventListener
    public interface StatementEventListener ("javax/sql/StatementEventListener") extends crate::java::lang::Object, implements crate::java::util::EventListener {

        /// [statementClosed](https://developer.android.com/reference/javax/sql/StatementEventListener.html#statementClosed(javax.sql.StatementEvent))
        ///
        /// Required features: "javax-sql-StatementEvent"
        #[cfg(any(feature = "all", all(feature = "javax-sql-StatementEvent")))]
        pub fn statementClosed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::sql::StatementEvent>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/sql/StatementEventListener", java.flags == PUBLIC | ABSTRACT, .name == "statementClosed", .descriptor == "(Ljavax/sql/StatementEvent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/sql/StatementEventListener\0", "statementClosed\0", "(Ljavax/sql/StatementEvent;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [statementErrorOccurred](https://developer.android.com/reference/javax/sql/StatementEventListener.html#statementErrorOccurred(javax.sql.StatementEvent))
        ///
        /// Required features: "javax-sql-StatementEvent"
        #[cfg(any(feature = "all", all(feature = "javax-sql-StatementEvent")))]
        pub fn statementErrorOccurred<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::sql::StatementEvent>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/sql/StatementEventListener", java.flags == PUBLIC | ABSTRACT, .name == "statementErrorOccurred", .descriptor == "(Ljavax/sql/StatementEvent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/sql/StatementEventListener\0", "statementErrorOccurred\0", "(Ljavax/sql/StatementEvent;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
