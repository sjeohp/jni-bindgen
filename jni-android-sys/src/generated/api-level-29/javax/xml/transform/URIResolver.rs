// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-xml-transform-URIResolver"))]
__jni_bindgen! {
    /// public interface [URIResolver](https://developer.android.com/reference/javax/xml/transform/URIResolver.html)
    ///
    /// Required feature: javax-xml-transform-URIResolver
    public interface URIResolver ("javax/xml/transform/URIResolver") extends crate::java::lang::Object {

        /// [resolve](https://developer.android.com/reference/javax/xml/transform/URIResolver.html#resolve(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "javax-xml-transform-Source"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-xml-transform-Source")))]
        pub fn resolve<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::transform::Source>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/URIResolver", java.flags == PUBLIC | ABSTRACT, .name == "resolve", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/transform/Source;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/URIResolver\0", "resolve\0", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/transform/Source;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
