// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-xml-transform-TransformerConfigurationException"))]
__jni_bindgen! {
    /// public class [TransformerConfigurationException](https://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html)
    ///
    /// Required feature: javax-xml-transform-TransformerConfigurationException
    public class TransformerConfigurationException ("javax/xml/transform/TransformerConfigurationException") extends crate::javax::xml::transform::TransformerException {

        /// [TransformerConfigurationException](https://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::transform::TransformerConfigurationException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/TransformerConfigurationException", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/TransformerConfigurationException\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [TransformerConfigurationException](https://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::transform::TransformerConfigurationException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/TransformerConfigurationException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/TransformerConfigurationException\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [TransformerConfigurationException](https://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.Throwable))
        ///
        /// Required features: "java-lang-Throwable"
        #[cfg(any(feature = "all", all(feature = "java-lang-Throwable")))]
        pub fn new_Throwable<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Throwable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::transform::TransformerConfigurationException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/TransformerConfigurationException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/Throwable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/TransformerConfigurationException\0", "<init>\0", "(Ljava/lang/Throwable;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [TransformerConfigurationException](https://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.String,%20java.lang.Throwable))
        ///
        /// Required features: "java-lang-String", "java-lang-Throwable"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-lang-Throwable")))]
        pub fn new_String_Throwable<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Throwable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::transform::TransformerConfigurationException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/TransformerConfigurationException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/lang/Throwable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/TransformerConfigurationException\0", "<init>\0", "(Ljava/lang/String;Ljava/lang/Throwable;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [TransformerConfigurationException](https://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.String,%20javax.xml.transform.SourceLocator))
        ///
        /// Required features: "java-lang-String", "javax-xml-transform-SourceLocator"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-xml-transform-SourceLocator")))]
        pub fn new_String_SourceLocator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::transform::SourceLocator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::transform::TransformerConfigurationException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/TransformerConfigurationException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/TransformerConfigurationException\0", "<init>\0", "(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [TransformerConfigurationException](https://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.String,%20javax.xml.transform.SourceLocator,%20java.lang.Throwable))
        ///
        /// Required features: "java-lang-String", "java-lang-Throwable", "javax-xml-transform-SourceLocator"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-lang-Throwable", feature = "javax-xml-transform-SourceLocator")))]
        pub fn new_String_SourceLocator_Throwable<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::transform::SourceLocator>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Throwable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::transform::TransformerConfigurationException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/TransformerConfigurationException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;Ljava/lang/Throwable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/TransformerConfigurationException\0", "<init>\0", "(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;Ljava/lang/Throwable;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
