// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-xml-transform-sax-SAXResult"))]
__jni_bindgen! {
    /// public class [SAXResult](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html)
    ///
    /// Required feature: javax-xml-transform-sax-SAXResult
    public class SAXResult ("javax/xml/transform/sax/SAXResult") extends crate::java::lang::Object, implements crate::javax::xml::transform::Result {

        /// [SAXResult](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#SAXResult())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::transform::sax::SAXResult>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/sax/SAXResult", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/sax/SAXResult\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SAXResult](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#SAXResult(org.xml.sax.ContentHandler))
        ///
        /// Required features: "org-xml-sax-ContentHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-ContentHandler")))]
        pub fn new_ContentHandler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::ContentHandler>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::transform::sax::SAXResult>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/sax/SAXResult", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Lorg/xml/sax/ContentHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/sax/SAXResult\0", "<init>\0", "(Lorg/xml/sax/ContentHandler;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setHandler](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#setHandler(org.xml.sax.ContentHandler))
        ///
        /// Required features: "org-xml-sax-ContentHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-ContentHandler")))]
        pub fn setHandler<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::ContentHandler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/sax/SAXResult", java.flags == PUBLIC, .name == "setHandler", .descriptor == "(Lorg/xml/sax/ContentHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/sax/SAXResult\0", "setHandler\0", "(Lorg/xml/sax/ContentHandler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHandler](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#getHandler())
        ///
        /// Required features: "org-xml-sax-ContentHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-ContentHandler")))]
        pub fn getHandler<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::xml::sax::ContentHandler>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/sax/SAXResult", java.flags == PUBLIC, .name == "getHandler", .descriptor == "()Lorg/xml/sax/ContentHandler;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/sax/SAXResult\0", "getHandler\0", "()Lorg/xml/sax/ContentHandler;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLexicalHandler](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#setLexicalHandler(org.xml.sax.ext.LexicalHandler))
        ///
        /// Required features: "org-xml-sax-ext-LexicalHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-ext-LexicalHandler")))]
        pub fn setLexicalHandler<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::ext::LexicalHandler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/sax/SAXResult", java.flags == PUBLIC, .name == "setLexicalHandler", .descriptor == "(Lorg/xml/sax/ext/LexicalHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/sax/SAXResult\0", "setLexicalHandler\0", "(Lorg/xml/sax/ext/LexicalHandler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLexicalHandler](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#getLexicalHandler())
        ///
        /// Required features: "org-xml-sax-ext-LexicalHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-ext-LexicalHandler")))]
        pub fn getLexicalHandler<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::xml::sax::ext::LexicalHandler>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/sax/SAXResult", java.flags == PUBLIC, .name == "getLexicalHandler", .descriptor == "()Lorg/xml/sax/ext/LexicalHandler;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/sax/SAXResult\0", "getLexicalHandler\0", "()Lorg/xml/sax/ext/LexicalHandler;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSystemId](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#setSystemId(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setSystemId<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/sax/SAXResult", java.flags == PUBLIC, .name == "setSystemId", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/sax/SAXResult\0", "setSystemId\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSystemId](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#getSystemId())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getSystemId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/sax/SAXResult", java.flags == PUBLIC, .name == "getSystemId", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/sax/SAXResult\0", "getSystemId\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [FEATURE](https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html#FEATURE)
        pub const FEATURE : &'static str = "http://javax.xml.transform.sax.SAXResult/feature";
    }
}
