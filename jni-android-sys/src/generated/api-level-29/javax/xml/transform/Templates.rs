// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-xml-transform-Templates"))]
__jni_bindgen! {
    /// public interface [Templates](https://developer.android.com/reference/javax/xml/transform/Templates.html)
    ///
    /// Required feature: javax-xml-transform-Templates
    public interface Templates ("javax/xml/transform/Templates") extends crate::java::lang::Object {

        /// [newTransformer](https://developer.android.com/reference/javax/xml/transform/Templates.html#newTransformer())
        ///
        /// Required features: "javax-xml-transform-Transformer"
        #[cfg(any(feature = "all", all(feature = "javax-xml-transform-Transformer")))]
        pub fn newTransformer<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::transform::Transformer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/Templates", java.flags == PUBLIC | ABSTRACT, .name == "newTransformer", .descriptor == "()Ljavax/xml/transform/Transformer;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/Templates\0", "newTransformer\0", "()Ljavax/xml/transform/Transformer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOutputProperties](https://developer.android.com/reference/javax/xml/transform/Templates.html#getOutputProperties())
        ///
        /// Required features: "java-util-Properties"
        #[cfg(any(feature = "all", all(feature = "java-util-Properties")))]
        pub fn getOutputProperties<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Properties>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/transform/Templates", java.flags == PUBLIC | ABSTRACT, .name == "getOutputProperties", .descriptor == "()Ljava/util/Properties;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/transform/Templates\0", "getOutputProperties\0", "()Ljava/util/Properties;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
