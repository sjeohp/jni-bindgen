// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-xml-datatype-DatatypeFactory"))]
__jni_bindgen! {
    /// public class [DatatypeFactory](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html)
    ///
    /// Required feature: javax-xml-datatype-DatatypeFactory
    public class DatatypeFactory ("javax/xml/datatype/DatatypeFactory") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [DatatypeFactory](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#DatatypeFactory())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::datatype::DatatypeFactory>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [newInstance](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newInstance())
        ///
        /// Required features: "javax-xml-datatype-DatatypeFactory"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-DatatypeFactory")))]
        pub fn newInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::DatatypeFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | STATIC, .name == "newInstance", .descriptor == "()Ljavax/xml/datatype/DatatypeFactory;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("javax/xml/datatype/DatatypeFactory\0", "newInstance\0", "()Ljavax/xml/datatype/DatatypeFactory;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newInstance](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newInstance(java.lang.String,%20java.lang.ClassLoader))
        ///
        /// Required features: "java-lang-ClassLoader", "java-lang-String", "javax-xml-datatype-DatatypeFactory"
        #[cfg(any(feature = "all", all(feature = "java-lang-ClassLoader", feature = "java-lang-String", feature = "javax-xml-datatype-DatatypeFactory")))]
        pub fn newInstance_String_ClassLoader<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::DatatypeFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | STATIC, .name == "newInstance", .descriptor == "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/datatype/DatatypeFactory;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("javax/xml/datatype/DatatypeFactory\0", "newInstance\0", "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/datatype/DatatypeFactory;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDuration](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDuration(java.lang.String))
        ///
        /// Required features: "java-lang-String", "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-xml-datatype-Duration")))]
        pub fn newDuration_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | ABSTRACT, .name == "newDuration", .descriptor == "(Ljava/lang/String;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDuration\0", "(Ljava/lang/String;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDuration](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDuration(long))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn newDuration_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | ABSTRACT, .name == "newDuration", .descriptor == "(J)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDuration\0", "(J)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDuration](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDuration(boolean,%20java.math.BigInteger,%20java.math.BigInteger,%20java.math.BigInteger,%20java.math.BigInteger,%20java.math.BigInteger,%20java.math.BigDecimal))
        ///
        /// Required features: "java-math-BigDecimal", "java-math-BigInteger", "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "java-math-BigDecimal", feature = "java-math-BigInteger", feature = "javax-xml-datatype-Duration")))]
        pub fn newDuration_boolean_BigInteger_BigInteger_BigInteger_BigInteger_BigInteger_BigDecimal<'env>(&'env self, arg0: bool, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigDecimal>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | ABSTRACT, .name == "newDuration", .descriptor == "(ZLjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigDecimal;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDuration\0", "(ZLjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigDecimal;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDuration](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDuration(boolean,%20int,%20int,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn newDuration_boolean_int_int_int_int_int_int<'env>(&'env self, arg0: bool, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDuration", .descriptor == "(ZIIIIII)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDuration\0", "(ZIIIIII)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDurationDayTime](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDurationDayTime(java.lang.String))
        ///
        /// Required features: "java-lang-String", "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-xml-datatype-Duration")))]
        pub fn newDurationDayTime_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDurationDayTime", .descriptor == "(Ljava/lang/String;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDurationDayTime\0", "(Ljava/lang/String;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDurationDayTime](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDurationDayTime(long))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn newDurationDayTime_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDurationDayTime", .descriptor == "(J)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDurationDayTime\0", "(J)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDurationDayTime](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDurationDayTime(boolean,%20java.math.BigInteger,%20java.math.BigInteger,%20java.math.BigInteger,%20java.math.BigInteger))
        ///
        /// Required features: "java-math-BigInteger", "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "java-math-BigInteger", feature = "javax-xml-datatype-Duration")))]
        pub fn newDurationDayTime_boolean_BigInteger_BigInteger_BigInteger_BigInteger<'env>(&'env self, arg0: bool, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDurationDayTime", .descriptor == "(ZLjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDurationDayTime\0", "(ZLjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDurationDayTime](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDurationDayTime(boolean,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn newDurationDayTime_boolean_int_int_int_int<'env>(&'env self, arg0: bool, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDurationDayTime", .descriptor == "(ZIIII)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDurationDayTime\0", "(ZIIII)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDurationYearMonth](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDurationYearMonth(java.lang.String))
        ///
        /// Required features: "java-lang-String", "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-xml-datatype-Duration")))]
        pub fn newDurationYearMonth_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDurationYearMonth", .descriptor == "(Ljava/lang/String;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDurationYearMonth\0", "(Ljava/lang/String;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDurationYearMonth](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDurationYearMonth(long))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn newDurationYearMonth_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDurationYearMonth", .descriptor == "(J)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDurationYearMonth\0", "(J)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDurationYearMonth](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDurationYearMonth(boolean,%20java.math.BigInteger,%20java.math.BigInteger))
        ///
        /// Required features: "java-math-BigInteger", "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "java-math-BigInteger", feature = "javax-xml-datatype-Duration")))]
        pub fn newDurationYearMonth_boolean_BigInteger_BigInteger<'env>(&'env self, arg0: bool, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDurationYearMonth", .descriptor == "(ZLjava/math/BigInteger;Ljava/math/BigInteger;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDurationYearMonth\0", "(ZLjava/math/BigInteger;Ljava/math/BigInteger;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDurationYearMonth](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newDurationYearMonth(boolean,%20int,%20int))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn newDurationYearMonth_boolean_int_int<'env>(&'env self, arg0: bool, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newDurationYearMonth", .descriptor == "(ZII)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newDurationYearMonth\0", "(ZII)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendar](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendar())
        ///
        /// Required features: "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendar<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | ABSTRACT, .name == "newXMLGregorianCalendar", .descriptor == "()Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendar\0", "()Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendar](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendar(java.lang.String))
        ///
        /// Required features: "java-lang-String", "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendar_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | ABSTRACT, .name == "newXMLGregorianCalendar", .descriptor == "(Ljava/lang/String;)Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendar\0", "(Ljava/lang/String;)Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendar](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendar(java.util.GregorianCalendar))
        ///
        /// Required features: "java-util-GregorianCalendar", "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "java-util-GregorianCalendar", feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendar_GregorianCalendar<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::GregorianCalendar>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | ABSTRACT, .name == "newXMLGregorianCalendar", .descriptor == "(Ljava/util/GregorianCalendar;)Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendar\0", "(Ljava/util/GregorianCalendar;)Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendar](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendar(java.math.BigInteger,%20int,%20int,%20int,%20int,%20int,%20java.math.BigDecimal,%20int))
        ///
        /// Required features: "java-math-BigDecimal", "java-math-BigInteger", "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "java-math-BigDecimal", feature = "java-math-BigInteger", feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendar_BigInteger_int_int_int_int_int_BigDecimal_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigDecimal>>, arg7: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC | ABSTRACT, .name == "newXMLGregorianCalendar", .descriptor == "(Ljava/math/BigInteger;IIIIILjava/math/BigDecimal;I)Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into()), __jni_bindgen::AsJValue::as_jvalue(&arg7)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendar\0", "(Ljava/math/BigInteger;IIIIILjava/math/BigDecimal;I)Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendar](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendar(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendar_int_int_int_int_int_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newXMLGregorianCalendar", .descriptor == "(IIIIIIII)Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendar\0", "(IIIIIIII)Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendarDate](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendarDate(int,%20int,%20int,%20int))
        ///
        /// Required features: "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendarDate<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newXMLGregorianCalendarDate", .descriptor == "(IIII)Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendarDate\0", "(IIII)Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendarTime](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendarTime(int,%20int,%20int,%20int))
        ///
        /// Required features: "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendarTime_int_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newXMLGregorianCalendarTime", .descriptor == "(IIII)Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendarTime\0", "(IIII)Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendarTime](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendarTime(int,%20int,%20int,%20java.math.BigDecimal,%20int))
        ///
        /// Required features: "java-math-BigDecimal", "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "java-math-BigDecimal", feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendarTime_int_int_int_BigDecimal_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigDecimal>>, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newXMLGregorianCalendarTime", .descriptor == "(IIILjava/math/BigDecimal;I)Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendarTime\0", "(IIILjava/math/BigDecimal;I)Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXMLGregorianCalendarTime](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#newXMLGregorianCalendarTime(int,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "javax-xml-datatype-XMLGregorianCalendar"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-XMLGregorianCalendar")))]
        pub fn newXMLGregorianCalendarTime_int_int_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::XMLGregorianCalendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/DatatypeFactory", java.flags == PUBLIC, .name == "newXMLGregorianCalendarTime", .descriptor == "(IIIII)Ljavax/xml/datatype/XMLGregorianCalendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/DatatypeFactory\0", "newXMLGregorianCalendarTime\0", "(IIIII)Ljavax/xml/datatype/XMLGregorianCalendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [DATATYPEFACTORY_IMPLEMENTATION_CLASS](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#DATATYPEFACTORY_IMPLEMENTATION_CLASS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DATATYPEFACTORY_IMPLEMENTATION_CLASS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("javax/xml/datatype/DatatypeFactory\0", "DATATYPEFACTORY_IMPLEMENTATION_CLASS\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [DATATYPEFACTORY_PROPERTY](https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html#DATATYPEFACTORY_PROPERTY)
        pub const DATATYPEFACTORY_PROPERTY : &'static str = "javax.xml.datatype.DatatypeFactory";
    }
}
