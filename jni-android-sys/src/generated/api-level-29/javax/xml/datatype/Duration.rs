// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-xml-datatype-Duration"))]
__jni_bindgen! {
    /// public class [Duration](https://developer.android.com/reference/javax/xml/datatype/Duration.html)
    ///
    /// Required feature: javax-xml-datatype-Duration
    public class Duration ("javax/xml/datatype/Duration") extends crate::java::lang::Object {

        /// [Duration](https://developer.android.com/reference/javax/xml/datatype/Duration.html#Duration())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getXMLSchemaType](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getXMLSchemaType())
        ///
        /// Required features: "javax-xml-namespace-QName"
        #[cfg(any(feature = "all", all(feature = "javax-xml-namespace-QName")))]
        pub fn getXMLSchemaType<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::namespace::QName>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getXMLSchemaType", .descriptor == "()Ljavax/xml/namespace/QName;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getXMLSchemaType\0", "()Ljavax/xml/namespace/QName;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSign](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getSign())
        pub fn getSign<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "getSign", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getSign\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getYears](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getYears())
        pub fn getYears<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getYears", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getYears\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMonths](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getMonths())
        pub fn getMonths<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getMonths", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getMonths\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDays](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getDays())
        pub fn getDays<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getDays", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getDays\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHours](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getHours())
        pub fn getHours<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getHours", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getHours\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinutes](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getMinutes())
        pub fn getMinutes<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getMinutes", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getMinutes\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSeconds](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getSeconds())
        pub fn getSeconds<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getSeconds", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getSeconds\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInMillis](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getTimeInMillis(java.util.Calendar))
        ///
        /// Required features: "java-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "java-util-Calendar")))]
        pub fn getTimeInMillis_Calendar<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Calendar>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getTimeInMillis", .descriptor == "(Ljava/util/Calendar;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getTimeInMillis\0", "(Ljava/util/Calendar;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInMillis](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getTimeInMillis(java.util.Date))
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn getTimeInMillis_Date<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "getTimeInMillis", .descriptor == "(Ljava/util/Date;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getTimeInMillis\0", "(Ljava/util/Date;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getField](https://developer.android.com/reference/javax/xml/datatype/Duration.html#getField(javax.xml.datatype.DatatypeConstants.Field))
        ///
        /// Required features: "java-lang-Number", "javax-xml-datatype-DatatypeConstants_Field"
        #[cfg(any(feature = "all", all(feature = "java-lang-Number", feature = "javax-xml-datatype-DatatypeConstants_Field")))]
        pub fn getField<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::datatype::DatatypeConstants_Field>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Number>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "getField", .descriptor == "(Ljavax/xml/datatype/DatatypeConstants$Field;)Ljava/lang/Number;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "getField\0", "(Ljavax/xml/datatype/DatatypeConstants$Field;)Ljava/lang/Number;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSet](https://developer.android.com/reference/javax/xml/datatype/Duration.html#isSet(javax.xml.datatype.DatatypeConstants.Field))
        ///
        /// Required features: "javax-xml-datatype-DatatypeConstants_Field"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-DatatypeConstants_Field")))]
        pub fn isSet<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::datatype::DatatypeConstants_Field>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "isSet", .descriptor == "(Ljavax/xml/datatype/DatatypeConstants$Field;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "isSet\0", "(Ljavax/xml/datatype/DatatypeConstants$Field;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [add](https://developer.android.com/reference/javax/xml/datatype/Duration.html#add(javax.xml.datatype.Duration))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn add<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::datatype::Duration>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "add", .descriptor == "(Ljavax/xml/datatype/Duration;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "add\0", "(Ljavax/xml/datatype/Duration;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addTo](https://developer.android.com/reference/javax/xml/datatype/Duration.html#addTo(java.util.Calendar))
        ///
        /// Required features: "java-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "java-util-Calendar")))]
        pub fn addTo_Calendar<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Calendar>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "addTo", .descriptor == "(Ljava/util/Calendar;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "addTo\0", "(Ljava/util/Calendar;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addTo](https://developer.android.com/reference/javax/xml/datatype/Duration.html#addTo(java.util.Date))
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn addTo_Date<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "addTo", .descriptor == "(Ljava/util/Date;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "addTo\0", "(Ljava/util/Date;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [subtract](https://developer.android.com/reference/javax/xml/datatype/Duration.html#subtract(javax.xml.datatype.Duration))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn subtract<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::datatype::Duration>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "subtract", .descriptor == "(Ljavax/xml/datatype/Duration;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "subtract\0", "(Ljavax/xml/datatype/Duration;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [multiply](https://developer.android.com/reference/javax/xml/datatype/Duration.html#multiply(int))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn multiply_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "multiply", .descriptor == "(I)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "multiply\0", "(I)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [multiply](https://developer.android.com/reference/javax/xml/datatype/Duration.html#multiply(java.math.BigDecimal))
        ///
        /// Required features: "java-math-BigDecimal", "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "java-math-BigDecimal", feature = "javax-xml-datatype-Duration")))]
        pub fn multiply_BigDecimal<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigDecimal>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "multiply", .descriptor == "(Ljava/math/BigDecimal;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "multiply\0", "(Ljava/math/BigDecimal;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [negate](https://developer.android.com/reference/javax/xml/datatype/Duration.html#negate())
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn negate<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "negate", .descriptor == "()Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "negate\0", "()Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [normalizeWith](https://developer.android.com/reference/javax/xml/datatype/Duration.html#normalizeWith(java.util.Calendar))
        ///
        /// Required features: "java-util-Calendar", "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "java-util-Calendar", feature = "javax-xml-datatype-Duration")))]
        pub fn normalizeWith<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Calendar>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::datatype::Duration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "normalizeWith", .descriptor == "(Ljava/util/Calendar;)Ljavax/xml/datatype/Duration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "normalizeWith\0", "(Ljava/util/Calendar;)Ljavax/xml/datatype/Duration;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [compare](https://developer.android.com/reference/javax/xml/datatype/Duration.html#compare(javax.xml.datatype.Duration))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn compare<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::datatype::Duration>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "compare", .descriptor == "(Ljavax/xml/datatype/Duration;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "compare\0", "(Ljavax/xml/datatype/Duration;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLongerThan](https://developer.android.com/reference/javax/xml/datatype/Duration.html#isLongerThan(javax.xml.datatype.Duration))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn isLongerThan<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::datatype::Duration>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "isLongerThan", .descriptor == "(Ljavax/xml/datatype/Duration;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "isLongerThan\0", "(Ljavax/xml/datatype/Duration;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isShorterThan](https://developer.android.com/reference/javax/xml/datatype/Duration.html#isShorterThan(javax.xml.datatype.Duration))
        ///
        /// Required features: "javax-xml-datatype-Duration"
        #[cfg(any(feature = "all", all(feature = "javax-xml-datatype-Duration")))]
        pub fn isShorterThan<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::datatype::Duration>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "isShorterThan", .descriptor == "(Ljavax/xml/datatype/Duration;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "isShorterThan\0", "(Ljavax/xml/datatype/Duration;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/javax/xml/datatype/Duration.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/javax/xml/datatype/Duration.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC | ABSTRACT, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/javax/xml/datatype/Duration.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/datatype/Duration", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/datatype/Duration\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
