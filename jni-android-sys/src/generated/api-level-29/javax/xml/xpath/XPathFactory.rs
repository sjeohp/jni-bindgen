// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-xml-xpath-XPathFactory"))]
__jni_bindgen! {
    /// public class [XPathFactory](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html)
    ///
    /// Required feature: javax-xml-xpath-XPathFactory
    public class XPathFactory ("javax/xml/xpath/XPathFactory") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [XPathFactory](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#XPathFactory())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::xpath::XPathFactory>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/xml/xpath/XPathFactory", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/xpath/XPathFactory\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [newInstance](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#newInstance())
        ///
        /// Required features: "javax-xml-xpath-XPathFactory"
        #[cfg(any(feature = "all", all(feature = "javax-xml-xpath-XPathFactory")))]
        pub fn newInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::xpath::XPathFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | STATIC | FINAL, .name == "newInstance", .descriptor == "()Ljavax/xml/xpath/XPathFactory;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("javax/xml/xpath/XPathFactory\0", "newInstance\0", "()Ljavax/xml/xpath/XPathFactory;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newInstance](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#newInstance(java.lang.String))
        ///
        /// Required features: "java-lang-String", "javax-xml-xpath-XPathFactory"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-xml-xpath-XPathFactory")))]
        pub fn newInstance_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::xpath::XPathFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | STATIC | FINAL, .name == "newInstance", .descriptor == "(Ljava/lang/String;)Ljavax/xml/xpath/XPathFactory;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("javax/xml/xpath/XPathFactory\0", "newInstance\0", "(Ljava/lang/String;)Ljavax/xml/xpath/XPathFactory;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newInstance](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#newInstance(java.lang.String,%20java.lang.String,%20java.lang.ClassLoader))
        ///
        /// Required features: "java-lang-ClassLoader", "java-lang-String", "javax-xml-xpath-XPathFactory"
        #[cfg(any(feature = "all", all(feature = "java-lang-ClassLoader", feature = "java-lang-String", feature = "javax-xml-xpath-XPathFactory")))]
        pub fn newInstance_String_String_ClassLoader<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::xpath::XPathFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | STATIC, .name == "newInstance", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/xpath/XPathFactory;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("javax/xml/xpath/XPathFactory\0", "newInstance\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/xpath/XPathFactory;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isObjectModelSupported](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#isObjectModelSupported(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isObjectModelSupported<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | ABSTRACT, .name == "isObjectModelSupported", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/xpath/XPathFactory\0", "isObjectModelSupported\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFeature](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#setFeature(java.lang.String,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setFeature<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | ABSTRACT, .name == "setFeature", .descriptor == "(Ljava/lang/String;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/xpath/XPathFactory\0", "setFeature\0", "(Ljava/lang/String;Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFeature](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#getFeature(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getFeature<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | ABSTRACT, .name == "getFeature", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/xpath/XPathFactory\0", "getFeature\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setXPathVariableResolver](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver))
        ///
        /// Required features: "javax-xml-xpath-XPathVariableResolver"
        #[cfg(any(feature = "all", all(feature = "javax-xml-xpath-XPathVariableResolver")))]
        pub fn setXPathVariableResolver<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::xpath::XPathVariableResolver>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | ABSTRACT, .name == "setXPathVariableResolver", .descriptor == "(Ljavax/xml/xpath/XPathVariableResolver;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/xpath/XPathFactory\0", "setXPathVariableResolver\0", "(Ljavax/xml/xpath/XPathVariableResolver;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setXPathFunctionResolver](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver))
        ///
        /// Required features: "javax-xml-xpath-XPathFunctionResolver"
        #[cfg(any(feature = "all", all(feature = "javax-xml-xpath-XPathFunctionResolver")))]
        pub fn setXPathFunctionResolver<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::xml::xpath::XPathFunctionResolver>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | ABSTRACT, .name == "setXPathFunctionResolver", .descriptor == "(Ljavax/xml/xpath/XPathFunctionResolver;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/xpath/XPathFactory\0", "setXPathFunctionResolver\0", "(Ljavax/xml/xpath/XPathFunctionResolver;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newXPath](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#newXPath())
        ///
        /// Required features: "javax-xml-xpath-XPath"
        #[cfg(any(feature = "all", all(feature = "javax-xml-xpath-XPath")))]
        pub fn newXPath<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::xpath::XPath>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/xpath/XPathFactory", java.flags == PUBLIC | ABSTRACT, .name == "newXPath", .descriptor == "()Ljavax/xml/xpath/XPath;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/xpath/XPathFactory\0", "newXPath\0", "()Ljavax/xml/xpath/XPath;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [DEFAULT_OBJECT_MODEL_URI](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#DEFAULT_OBJECT_MODEL_URI)
        pub const DEFAULT_OBJECT_MODEL_URI : &'static str = "http://java.sun.com/jaxp/xpath/dom";

        /// public static final [DEFAULT_PROPERTY_NAME](https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html#DEFAULT_PROPERTY_NAME)
        pub const DEFAULT_PROPERTY_NAME : &'static str = "javax.xml.xpath.XPathFactory";
    }
}
