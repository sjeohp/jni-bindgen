// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-xml-parsers-DocumentBuilder"))]
__jni_bindgen! {
    /// public class [DocumentBuilder](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html)
    ///
    /// Required feature: javax-xml-parsers-DocumentBuilder
    public class DocumentBuilder ("javax/xml/parsers/DocumentBuilder") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [DocumentBuilder](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#DocumentBuilder())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::xml::parsers::DocumentBuilder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [reset](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#reset())
        pub fn reset<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC, .name == "reset", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "reset\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(java.io.InputStream))
        ///
        /// Required features: "java-io-InputStream", "org-w3c-dom-Document"
        #[cfg(any(feature = "all", all(feature = "java-io-InputStream", feature = "org-w3c-dom-Document")))]
        pub fn parse_InputStream<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::InputStream>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/io/InputStream;)Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "parse\0", "(Ljava/io/InputStream;)Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(java.io.InputStream,%20java.lang.String))
        ///
        /// Required features: "java-io-InputStream", "java-lang-String", "org-w3c-dom-Document"
        #[cfg(any(feature = "all", all(feature = "java-io-InputStream", feature = "java-lang-String", feature = "org-w3c-dom-Document")))]
        pub fn parse_InputStream_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::InputStream>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/io/InputStream;Ljava/lang/String;)Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "parse\0", "(Ljava/io/InputStream;Ljava/lang/String;)Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(java.lang.String))
        ///
        /// Required features: "java-lang-String", "org-w3c-dom-Document"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "org-w3c-dom-Document")))]
        pub fn parse_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/lang/String;)Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "parse\0", "(Ljava/lang/String;)Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(java.io.File))
        ///
        /// Required features: "java-io-File", "org-w3c-dom-Document"
        #[cfg(any(feature = "all", all(feature = "java-io-File", feature = "org-w3c-dom-Document")))]
        pub fn parse_File<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/io/File;)Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "parse\0", "(Ljava/io/File;)Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(org.xml.sax.InputSource))
        ///
        /// Required features: "org-w3c-dom-Document", "org-xml-sax-InputSource"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Document", feature = "org-xml-sax-InputSource")))]
        pub fn parse_InputSource<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::InputSource>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC | ABSTRACT, .name == "parse", .descriptor == "(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "parse\0", "(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNamespaceAware](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#isNamespaceAware())
        pub fn isNamespaceAware<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC | ABSTRACT, .name == "isNamespaceAware", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "isNamespaceAware\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isValidating](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#isValidating())
        pub fn isValidating<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC | ABSTRACT, .name == "isValidating", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "isValidating\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEntityResolver](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#setEntityResolver(org.xml.sax.EntityResolver))
        ///
        /// Required features: "org-xml-sax-EntityResolver"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-EntityResolver")))]
        pub fn setEntityResolver<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::EntityResolver>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC | ABSTRACT, .name == "setEntityResolver", .descriptor == "(Lorg/xml/sax/EntityResolver;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "setEntityResolver\0", "(Lorg/xml/sax/EntityResolver;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setErrorHandler](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#setErrorHandler(org.xml.sax.ErrorHandler))
        ///
        /// Required features: "org-xml-sax-ErrorHandler"
        #[cfg(any(feature = "all", all(feature = "org-xml-sax-ErrorHandler")))]
        pub fn setErrorHandler<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xml::sax::ErrorHandler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC | ABSTRACT, .name == "setErrorHandler", .descriptor == "(Lorg/xml/sax/ErrorHandler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "setErrorHandler\0", "(Lorg/xml/sax/ErrorHandler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newDocument](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#newDocument())
        ///
        /// Required features: "org-w3c-dom-Document"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-Document")))]
        pub fn newDocument<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::Document>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC | ABSTRACT, .name == "newDocument", .descriptor == "()Lorg/w3c/dom/Document;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "newDocument\0", "()Lorg/w3c/dom/Document;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDOMImplementation](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#getDOMImplementation())
        ///
        /// Required features: "org-w3c-dom-DOMImplementation"
        #[cfg(any(feature = "all", all(feature = "org-w3c-dom-DOMImplementation")))]
        pub fn getDOMImplementation<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::org::w3c::dom::DOMImplementation>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC | ABSTRACT, .name == "getDOMImplementation", .descriptor == "()Lorg/w3c/dom/DOMImplementation;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "getDOMImplementation\0", "()Lorg/w3c/dom/DOMImplementation;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSchema](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#getSchema())
        ///
        /// Required features: "javax-xml-validation-Schema"
        #[cfg(any(feature = "all", all(feature = "javax-xml-validation-Schema")))]
        pub fn getSchema<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::xml::validation::Schema>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC, .name == "getSchema", .descriptor == "()Ljavax/xml/validation/Schema;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "getSchema\0", "()Ljavax/xml/validation/Schema;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isXIncludeAware](https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#isXIncludeAware())
        pub fn isXIncludeAware<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/xml/parsers/DocumentBuilder", java.flags == PUBLIC, .name == "isXIncludeAware", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/xml/parsers/DocumentBuilder\0", "isXIncludeAware\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
