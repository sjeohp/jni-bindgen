// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-security-auth-callback-CallbackHandler"))]
__jni_bindgen! {
    /// public interface [CallbackHandler](https://developer.android.com/reference/javax/security/auth/callback/CallbackHandler.html)
    ///
    /// Required feature: javax-security-auth-callback-CallbackHandler
    public interface CallbackHandler ("javax/security/auth/callback/CallbackHandler") extends crate::java::lang::Object {

        /// [handle](https://developer.android.com/reference/javax/security/auth/callback/CallbackHandler.html#handle(javax.security.auth.callback.Callback%5B%5D))
        ///
        /// Required features: "javax-security-auth-callback-Callback"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-callback-Callback")))]
        pub fn handle<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::javax::security::auth::callback::Callback, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/security/auth/callback/CallbackHandler", java.flags == PUBLIC | ABSTRACT, .name == "handle", .descriptor == "([Ljavax/security/auth/callback/Callback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/security/auth/callback/CallbackHandler\0", "handle\0", "([Ljavax/security/auth/callback/Callback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
