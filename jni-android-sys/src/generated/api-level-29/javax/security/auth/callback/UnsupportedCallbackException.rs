// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-security-auth-callback-UnsupportedCallbackException"))]
__jni_bindgen! {
    /// public class [UnsupportedCallbackException](https://developer.android.com/reference/javax/security/auth/callback/UnsupportedCallbackException.html)
    ///
    /// Required feature: javax-security-auth-callback-UnsupportedCallbackException
    public class UnsupportedCallbackException ("javax/security/auth/callback/UnsupportedCallbackException") extends crate::java::lang::Exception {

        /// [UnsupportedCallbackException](https://developer.android.com/reference/javax/security/auth/callback/UnsupportedCallbackException.html#UnsupportedCallbackException(javax.security.auth.callback.Callback))
        ///
        /// Required features: "javax-security-auth-callback-Callback"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-callback-Callback")))]
        pub fn new_Callback<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::security::auth::callback::Callback>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::security::auth::callback::UnsupportedCallbackException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/security/auth/callback/UnsupportedCallbackException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljavax/security/auth/callback/Callback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/security/auth/callback/UnsupportedCallbackException\0", "<init>\0", "(Ljavax/security/auth/callback/Callback;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [UnsupportedCallbackException](https://developer.android.com/reference/javax/security/auth/callback/UnsupportedCallbackException.html#UnsupportedCallbackException(javax.security.auth.callback.Callback,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "javax-security-auth-callback-Callback"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "javax-security-auth-callback-Callback")))]
        pub fn new_Callback_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::security::auth::callback::Callback>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::security::auth::callback::UnsupportedCallbackException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/security/auth/callback/UnsupportedCallbackException", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljavax/security/auth/callback/Callback;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/security/auth/callback/UnsupportedCallbackException\0", "<init>\0", "(Ljavax/security/auth/callback/Callback;Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCallback](https://developer.android.com/reference/javax/security/auth/callback/UnsupportedCallbackException.html#getCallback())
        ///
        /// Required features: "javax-security-auth-callback-Callback"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-callback-Callback")))]
        pub fn getCallback<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::security::auth::callback::Callback>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/security/auth/callback/UnsupportedCallbackException", java.flags == PUBLIC, .name == "getCallback", .descriptor == "()Ljavax/security/auth/callback/Callback;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/security/auth/callback/UnsupportedCallbackException\0", "getCallback\0", "()Ljavax/security/auth/callback/Callback;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
