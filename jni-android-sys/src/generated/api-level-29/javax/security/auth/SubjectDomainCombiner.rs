// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-security-auth-SubjectDomainCombiner"))]
__jni_bindgen! {
    /// public class [SubjectDomainCombiner](https://developer.android.com/reference/javax/security/auth/SubjectDomainCombiner.html)
    ///
    /// Required feature: javax-security-auth-SubjectDomainCombiner
    public class SubjectDomainCombiner ("javax/security/auth/SubjectDomainCombiner") extends crate::java::lang::Object, implements crate::java::security::DomainCombiner {

        /// [SubjectDomainCombiner](https://developer.android.com/reference/javax/security/auth/SubjectDomainCombiner.html#SubjectDomainCombiner(javax.security.auth.Subject))
        ///
        /// Required features: "javax-security-auth-Subject"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-Subject")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::security::auth::Subject>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::security::auth::SubjectDomainCombiner>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/security/auth/SubjectDomainCombiner", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljavax/security/auth/Subject;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/security/auth/SubjectDomainCombiner\0", "<init>\0", "(Ljavax/security/auth/Subject;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSubject](https://developer.android.com/reference/javax/security/auth/SubjectDomainCombiner.html#getSubject())
        ///
        /// Required features: "javax-security-auth-Subject"
        #[cfg(any(feature = "all", all(feature = "javax-security-auth-Subject")))]
        pub fn getSubject<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::security::auth::Subject>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/security/auth/SubjectDomainCombiner", java.flags == PUBLIC, .name == "getSubject", .descriptor == "()Ljavax/security/auth/Subject;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/security/auth/SubjectDomainCombiner\0", "getSubject\0", "()Ljavax/security/auth/Subject;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [combine](https://developer.android.com/reference/javax/security/auth/SubjectDomainCombiner.html#combine(java.security.ProtectionDomain%5B%5D,%20java.security.ProtectionDomain%5B%5D))
        ///
        /// Required features: "java-security-ProtectionDomain"
        #[cfg(any(feature = "all", all(feature = "java-security-ProtectionDomain")))]
        pub fn combine<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::security::ProtectionDomain, crate::java::lang::Throwable>>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::security::ProtectionDomain, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::security::ProtectionDomain, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/security/auth/SubjectDomainCombiner", java.flags == PUBLIC, .name == "combine", .descriptor == "([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)[Ljava/security/ProtectionDomain;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/security/auth/SubjectDomainCombiner\0", "combine\0", "([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)[Ljava/security/ProtectionDomain;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
