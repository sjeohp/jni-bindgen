// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-microedition-khronos-opengles-GL10"))]
__jni_bindgen! {
    /// public interface [GL10](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html)
    ///
    /// Required feature: javax-microedition-khronos-opengles-GL10
    public interface GL10 ("javax/microedition/khronos/opengles/GL10") extends crate::java::lang::Object, implements crate::javax::microedition::khronos::opengles::GL {

        /// [glActiveTexture](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glActiveTexture(int))
        pub fn glActiveTexture<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glActiveTexture", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glActiveTexture\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glAlphaFunc](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glAlphaFunc(int,%20float))
        pub fn glAlphaFunc<'env>(&'env self, arg0: i32, arg1: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glAlphaFunc", .descriptor == "(IF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glAlphaFunc\0", "(IF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glAlphaFuncx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glAlphaFuncx(int,%20int))
        pub fn glAlphaFuncx<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glAlphaFuncx", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glAlphaFuncx\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindTexture](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glBindTexture(int,%20int))
        pub fn glBindTexture<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glBindTexture", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glBindTexture\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBlendFunc](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glBlendFunc(int,%20int))
        pub fn glBlendFunc<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glBlendFunc", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glBlendFunc\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClear](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glClear(int))
        pub fn glClear<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glClear", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glClear\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearColor](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glClearColor(float,%20float,%20float,%20float))
        pub fn glClearColor<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32, arg3: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glClearColor", .descriptor == "(FFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glClearColor\0", "(FFFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearColorx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glClearColorx(int,%20int,%20int,%20int))
        pub fn glClearColorx<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glClearColorx", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glClearColorx\0", "(IIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearDepthf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glClearDepthf(float))
        pub fn glClearDepthf<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glClearDepthf", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glClearDepthf\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearDepthx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glClearDepthx(int))
        pub fn glClearDepthx<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glClearDepthx", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glClearDepthx\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearStencil](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glClearStencil(int))
        pub fn glClearStencil<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glClearStencil", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glClearStencil\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClientActiveTexture](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glClientActiveTexture(int))
        pub fn glClientActiveTexture<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glClientActiveTexture", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glClientActiveTexture\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glColor4f](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glColor4f(float,%20float,%20float,%20float))
        pub fn glColor4f<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32, arg3: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glColor4f", .descriptor == "(FFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glColor4f\0", "(FFFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glColor4x](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glColor4x(int,%20int,%20int,%20int))
        pub fn glColor4x<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glColor4x", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glColor4x\0", "(IIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glColorMask](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glColorMask(boolean,%20boolean,%20boolean,%20boolean))
        pub fn glColorMask<'env>(&'env self, arg0: bool, arg1: bool, arg2: bool, arg3: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glColorMask", .descriptor == "(ZZZZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glColorMask\0", "(ZZZZ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glColorPointer](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glColorPointer(int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glColorPointer<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glColorPointer", .descriptor == "(IIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glColorPointer\0", "(IIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCompressedTexImage2D](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glCompressedTexImage2D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glCompressedTexImage2D<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glCompressedTexImage2D", .descriptor == "(IIIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glCompressedTexImage2D\0", "(IIIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCompressedTexSubImage2D](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glCompressedTexSubImage2D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glCompressedTexSubImage2D<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glCompressedTexSubImage2D", .descriptor == "(IIIIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glCompressedTexSubImage2D\0", "(IIIIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCopyTexImage2D](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glCopyTexImage2D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glCopyTexImage2D<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glCopyTexImage2D", .descriptor == "(IIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glCopyTexImage2D\0", "(IIIIIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCopyTexSubImage2D](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glCopyTexSubImage2D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glCopyTexSubImage2D<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glCopyTexSubImage2D", .descriptor == "(IIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glCopyTexSubImage2D\0", "(IIIIIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCullFace](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glCullFace(int))
        pub fn glCullFace<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glCullFace", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glCullFace\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteTextures](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDeleteTextures(int,%20int%5B%5D,%20int))
        pub fn glDeleteTextures_int_int_array_int<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDeleteTextures", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDeleteTextures\0", "(I[II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteTextures](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDeleteTextures(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDeleteTextures_int_IntBuffer<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDeleteTextures", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDeleteTextures\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDepthFunc](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDepthFunc(int))
        pub fn glDepthFunc<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDepthFunc", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDepthFunc\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDepthMask](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDepthMask(boolean))
        pub fn glDepthMask<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDepthMask", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDepthMask\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDepthRangef](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDepthRangef(float,%20float))
        pub fn glDepthRangef<'env>(&'env self, arg0: f32, arg1: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDepthRangef", .descriptor == "(FF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDepthRangef\0", "(FF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDepthRangex](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDepthRangex(int,%20int))
        pub fn glDepthRangex<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDepthRangex", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDepthRangex\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDisable](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDisable(int))
        pub fn glDisable<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDisable", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDisable\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDisableClientState](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDisableClientState(int))
        pub fn glDisableClientState<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDisableClientState", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDisableClientState\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawArrays](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDrawArrays(int,%20int,%20int))
        pub fn glDrawArrays<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDrawArrays", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDrawArrays\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawElements](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glDrawElements(int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glDrawElements<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glDrawElements", .descriptor == "(IIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glDrawElements\0", "(IIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glEnable](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glEnable(int))
        pub fn glEnable<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glEnable", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glEnable\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glEnableClientState](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glEnableClientState(int))
        pub fn glEnableClientState<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glEnableClientState", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glEnableClientState\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFinish](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFinish())
        pub fn glFinish<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFinish", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFinish\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFlush](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFlush())
        pub fn glFlush<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFlush", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFlush\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFogf(int,%20float))
        pub fn glFogf<'env>(&'env self, arg0: i32, arg1: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFogf", .descriptor == "(IF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFogf\0", "(IF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFogfv(int,%20float%5B%5D,%20int))
        pub fn glFogfv_int_float_array_int<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFogfv", .descriptor == "(I[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFogfv\0", "(I[FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFogfv(int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glFogfv_int_FloatBuffer<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFogfv", .descriptor == "(ILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFogfv\0", "(ILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFogx(int,%20int))
        pub fn glFogx<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFogx", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFogx\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFogxv(int,%20int%5B%5D,%20int))
        pub fn glFogxv_int_int_array_int<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFogxv", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFogxv\0", "(I[II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFogxv(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glFogxv_int_IntBuffer<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFogxv", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFogxv\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFrontFace](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFrontFace(int))
        pub fn glFrontFace<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFrontFace", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFrontFace\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFrustumf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFrustumf(float,%20float,%20float,%20float,%20float,%20float))
        pub fn glFrustumf<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: f32, arg5: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFrustumf", .descriptor == "(FFFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFrustumf\0", "(FFFFFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFrustumx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glFrustumx(int,%20int,%20int,%20int,%20int,%20int))
        pub fn glFrustumx<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glFrustumx", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glFrustumx\0", "(IIIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenTextures](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glGenTextures(int,%20int%5B%5D,%20int))
        pub fn glGenTextures_int_int_array_int<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glGenTextures", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glGenTextures\0", "(I[II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenTextures](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glGenTextures(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGenTextures_int_IntBuffer<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glGenTextures", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glGenTextures\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetError](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glGetError())
        pub fn glGetError<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glGetError", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glGetError\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetIntegerv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glGetIntegerv(int,%20int%5B%5D,%20int))
        pub fn glGetIntegerv_int_int_array_int<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glGetIntegerv", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glGetIntegerv\0", "(I[II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetIntegerv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glGetIntegerv(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetIntegerv_int_IntBuffer<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glGetIntegerv", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glGetIntegerv\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetString](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glGetString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetString<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glGetString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glGetString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glHint](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glHint(int,%20int))
        pub fn glHint<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glHint", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glHint\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightModelf(int,%20float))
        pub fn glLightModelf<'env>(&'env self, arg0: i32, arg1: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightModelf", .descriptor == "(IF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightModelf\0", "(IF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightModelfv(int,%20float%5B%5D,%20int))
        pub fn glLightModelfv_int_float_array_int<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightModelfv", .descriptor == "(I[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightModelfv\0", "(I[FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightModelfv(int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glLightModelfv_int_FloatBuffer<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightModelfv", .descriptor == "(ILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightModelfv\0", "(ILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightModelx(int,%20int))
        pub fn glLightModelx<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightModelx", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightModelx\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightModelxv(int,%20int%5B%5D,%20int))
        pub fn glLightModelxv_int_int_array_int<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightModelxv", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightModelxv\0", "(I[II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightModelxv(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glLightModelxv_int_IntBuffer<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightModelxv", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightModelxv\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightf(int,%20int,%20float))
        pub fn glLightf<'env>(&'env self, arg0: i32, arg1: i32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightf", .descriptor == "(IIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightf\0", "(IIF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightfv(int,%20int,%20float%5B%5D,%20int))
        pub fn glLightfv_int_int_float_array_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightfv", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightfv\0", "(II[FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightfv(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glLightfv_int_int_FloatBuffer<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightfv", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightfv\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightx(int,%20int,%20int))
        pub fn glLightx<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightx", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightx\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightxv(int,%20int,%20int%5B%5D,%20int))
        pub fn glLightxv_int_int_int_array_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightxv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightxv\0", "(II[II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLightxv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glLightxv_int_int_IntBuffer<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLightxv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLightxv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLineWidth](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLineWidth(float))
        pub fn glLineWidth<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLineWidth", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLineWidth\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLineWidthx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLineWidthx(int))
        pub fn glLineWidthx<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLineWidthx", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLineWidthx\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadIdentity](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLoadIdentity())
        pub fn glLoadIdentity<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLoadIdentity", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLoadIdentity\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadMatrixf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLoadMatrixf(float%5B%5D,%20int))
        pub fn glLoadMatrixf_float_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLoadMatrixf", .descriptor == "([FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLoadMatrixf\0", "([FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadMatrixf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLoadMatrixf(java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glLoadMatrixf_FloatBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLoadMatrixf", .descriptor == "(Ljava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLoadMatrixf\0", "(Ljava/nio/FloatBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadMatrixx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLoadMatrixx(int%5B%5D,%20int))
        pub fn glLoadMatrixx_int_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLoadMatrixx", .descriptor == "([II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLoadMatrixx\0", "([II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadMatrixx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLoadMatrixx(java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glLoadMatrixx_IntBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLoadMatrixx", .descriptor == "(Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLoadMatrixx\0", "(Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLogicOp](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glLogicOp(int))
        pub fn glLogicOp<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glLogicOp", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glLogicOp\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMaterialf(int,%20int,%20float))
        pub fn glMaterialf<'env>(&'env self, arg0: i32, arg1: i32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMaterialf", .descriptor == "(IIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMaterialf\0", "(IIF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMaterialfv(int,%20int,%20float%5B%5D,%20int))
        pub fn glMaterialfv_int_int_float_array_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMaterialfv", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMaterialfv\0", "(II[FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMaterialfv(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glMaterialfv_int_int_FloatBuffer<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMaterialfv", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMaterialfv\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMaterialx(int,%20int,%20int))
        pub fn glMaterialx<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMaterialx", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMaterialx\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMaterialxv(int,%20int,%20int%5B%5D,%20int))
        pub fn glMaterialxv_int_int_int_array_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMaterialxv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMaterialxv\0", "(II[II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMaterialxv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glMaterialxv_int_int_IntBuffer<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMaterialxv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMaterialxv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMatrixMode](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMatrixMode(int))
        pub fn glMatrixMode<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMatrixMode", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMatrixMode\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultMatrixf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMultMatrixf(float%5B%5D,%20int))
        pub fn glMultMatrixf_float_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMultMatrixf", .descriptor == "([FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMultMatrixf\0", "([FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultMatrixf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMultMatrixf(java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glMultMatrixf_FloatBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMultMatrixf", .descriptor == "(Ljava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMultMatrixf\0", "(Ljava/nio/FloatBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultMatrixx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMultMatrixx(int%5B%5D,%20int))
        pub fn glMultMatrixx_int_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMultMatrixx", .descriptor == "([II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMultMatrixx\0", "([II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultMatrixx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMultMatrixx(java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glMultMatrixx_IntBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMultMatrixx", .descriptor == "(Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMultMatrixx\0", "(Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultiTexCoord4f](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMultiTexCoord4f(int,%20float,%20float,%20float,%20float))
        pub fn glMultiTexCoord4f<'env>(&'env self, arg0: i32, arg1: f32, arg2: f32, arg3: f32, arg4: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMultiTexCoord4f", .descriptor == "(IFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMultiTexCoord4f\0", "(IFFFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultiTexCoord4x](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glMultiTexCoord4x(int,%20int,%20int,%20int,%20int))
        pub fn glMultiTexCoord4x<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glMultiTexCoord4x", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glMultiTexCoord4x\0", "(IIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glNormal3f](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glNormal3f(float,%20float,%20float))
        pub fn glNormal3f<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glNormal3f", .descriptor == "(FFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glNormal3f\0", "(FFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glNormal3x](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glNormal3x(int,%20int,%20int))
        pub fn glNormal3x<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glNormal3x", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glNormal3x\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glNormalPointer](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glNormalPointer(int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glNormalPointer<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glNormalPointer", .descriptor == "(IILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glNormalPointer\0", "(IILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glOrthof](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glOrthof(float,%20float,%20float,%20float,%20float,%20float))
        pub fn glOrthof<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: f32, arg5: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glOrthof", .descriptor == "(FFFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glOrthof\0", "(FFFFFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glOrthox](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glOrthox(int,%20int,%20int,%20int,%20int,%20int))
        pub fn glOrthox<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glOrthox", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glOrthox\0", "(IIIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPixelStorei](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glPixelStorei(int,%20int))
        pub fn glPixelStorei<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glPixelStorei", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glPixelStorei\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPointSize](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glPointSize(float))
        pub fn glPointSize<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glPointSize", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glPointSize\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPointSizex](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glPointSizex(int))
        pub fn glPointSizex<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glPointSizex", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glPointSizex\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPolygonOffset](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glPolygonOffset(float,%20float))
        pub fn glPolygonOffset<'env>(&'env self, arg0: f32, arg1: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glPolygonOffset", .descriptor == "(FF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glPolygonOffset\0", "(FF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPolygonOffsetx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glPolygonOffsetx(int,%20int))
        pub fn glPolygonOffsetx<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glPolygonOffsetx", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glPolygonOffsetx\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPopMatrix](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glPopMatrix())
        pub fn glPopMatrix<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glPopMatrix", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glPopMatrix\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPushMatrix](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glPushMatrix())
        pub fn glPushMatrix<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glPushMatrix", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glPushMatrix\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glReadPixels](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glReadPixels(int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glReadPixels<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glReadPixels", .descriptor == "(IIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glReadPixels\0", "(IIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glRotatef](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glRotatef(float,%20float,%20float,%20float))
        pub fn glRotatef<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32, arg3: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glRotatef", .descriptor == "(FFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glRotatef\0", "(FFFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glRotatex](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glRotatex(int,%20int,%20int,%20int))
        pub fn glRotatex<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glRotatex", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glRotatex\0", "(IIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSampleCoverage](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glSampleCoverage(float,%20boolean))
        pub fn glSampleCoverage<'env>(&'env self, arg0: f32, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glSampleCoverage", .descriptor == "(FZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glSampleCoverage\0", "(FZ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSampleCoveragex](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glSampleCoveragex(int,%20boolean))
        pub fn glSampleCoveragex<'env>(&'env self, arg0: i32, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glSampleCoveragex", .descriptor == "(IZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glSampleCoveragex\0", "(IZ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glScalef](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glScalef(float,%20float,%20float))
        pub fn glScalef<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glScalef", .descriptor == "(FFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glScalef\0", "(FFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glScalex](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glScalex(int,%20int,%20int))
        pub fn glScalex<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glScalex", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glScalex\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glScissor](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glScissor(int,%20int,%20int,%20int))
        pub fn glScissor<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glScissor", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glScissor\0", "(IIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glShadeModel](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glShadeModel(int))
        pub fn glShadeModel<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glShadeModel", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glShadeModel\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glStencilFunc](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glStencilFunc(int,%20int,%20int))
        pub fn glStencilFunc<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glStencilFunc", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glStencilFunc\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glStencilMask](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glStencilMask(int))
        pub fn glStencilMask<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glStencilMask", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glStencilMask\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glStencilOp](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glStencilOp(int,%20int,%20int))
        pub fn glStencilOp<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glStencilOp", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glStencilOp\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexCoordPointer](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexCoordPointer(int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glTexCoordPointer<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexCoordPointer", .descriptor == "(IIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexCoordPointer\0", "(IIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexEnvf(int,%20int,%20float))
        pub fn glTexEnvf<'env>(&'env self, arg0: i32, arg1: i32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexEnvf", .descriptor == "(IIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexEnvf\0", "(IIF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexEnvfv(int,%20int,%20float%5B%5D,%20int))
        pub fn glTexEnvfv_int_int_float_array_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexEnvfv", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexEnvfv\0", "(II[FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexEnvfv(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glTexEnvfv_int_int_FloatBuffer<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexEnvfv", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexEnvfv\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexEnvx(int,%20int,%20int))
        pub fn glTexEnvx<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexEnvx", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexEnvx\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexEnvxv(int,%20int,%20int%5B%5D,%20int))
        pub fn glTexEnvxv_int_int_int_array_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexEnvxv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexEnvxv\0", "(II[II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvxv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexEnvxv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glTexEnvxv_int_int_IntBuffer<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexEnvxv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexEnvxv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexImage2D](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexImage2D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glTexImage2D<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexImage2D", .descriptor == "(IIIIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexImage2D\0", "(IIIIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexParameterf](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexParameterf(int,%20int,%20float))
        pub fn glTexParameterf<'env>(&'env self, arg0: i32, arg1: i32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexParameterf", .descriptor == "(IIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexParameterf\0", "(IIF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexParameterx](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexParameterx(int,%20int,%20int))
        pub fn glTexParameterx<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexParameterx", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexParameterx\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexSubImage2D](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTexSubImage2D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glTexSubImage2D<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTexSubImage2D", .descriptor == "(IIIIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTexSubImage2D\0", "(IIIIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTranslatef](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTranslatef(float,%20float,%20float))
        pub fn glTranslatef<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTranslatef", .descriptor == "(FFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTranslatef\0", "(FFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTranslatex](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glTranslatex(int,%20int,%20int))
        pub fn glTranslatex<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glTranslatex", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glTranslatex\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexPointer](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glVertexPointer(int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glVertexPointer<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glVertexPointer", .descriptor == "(IIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glVertexPointer\0", "(IIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glViewport](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#glViewport(int,%20int,%20int,%20int))
        pub fn glViewport<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL10", java.flags == PUBLIC | ABSTRACT, .name == "glViewport", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL10\0", "glViewport\0", "(IIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [GL_ADD](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ADD)
        pub const GL_ADD : i32 = 260;

        /// public static final [GL_ALIASED_LINE_WIDTH_RANGE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ALIASED_LINE_WIDTH_RANGE)
        pub const GL_ALIASED_LINE_WIDTH_RANGE : i32 = 33902;

        /// public static final [GL_ALIASED_POINT_SIZE_RANGE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ALIASED_POINT_SIZE_RANGE)
        pub const GL_ALIASED_POINT_SIZE_RANGE : i32 = 33901;

        /// public static final [GL_ALPHA](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ALPHA)
        pub const GL_ALPHA : i32 = 6406;

        /// public static final [GL_ALPHA_BITS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ALPHA_BITS)
        pub const GL_ALPHA_BITS : i32 = 3413;

        /// public static final [GL_ALPHA_TEST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ALPHA_TEST)
        pub const GL_ALPHA_TEST : i32 = 3008;

        /// public static final [GL_ALWAYS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ALWAYS)
        pub const GL_ALWAYS : i32 = 519;

        /// public static final [GL_AMBIENT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_AMBIENT)
        pub const GL_AMBIENT : i32 = 4608;

        /// public static final [GL_AMBIENT_AND_DIFFUSE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_AMBIENT_AND_DIFFUSE)
        pub const GL_AMBIENT_AND_DIFFUSE : i32 = 5634;

        /// public static final [GL_AND](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_AND)
        pub const GL_AND : i32 = 5377;

        /// public static final [GL_AND_INVERTED](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_AND_INVERTED)
        pub const GL_AND_INVERTED : i32 = 5380;

        /// public static final [GL_AND_REVERSE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_AND_REVERSE)
        pub const GL_AND_REVERSE : i32 = 5378;

        /// public static final [GL_BACK](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_BACK)
        pub const GL_BACK : i32 = 1029;

        /// public static final [GL_BLEND](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_BLEND)
        pub const GL_BLEND : i32 = 3042;

        /// public static final [GL_BLUE_BITS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_BLUE_BITS)
        pub const GL_BLUE_BITS : i32 = 3412;

        /// public static final [GL_BYTE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_BYTE)
        pub const GL_BYTE : i32 = 5120;

        /// public static final [GL_CCW](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_CCW)
        pub const GL_CCW : i32 = 2305;

        /// public static final [GL_CLAMP_TO_EDGE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_CLAMP_TO_EDGE)
        pub const GL_CLAMP_TO_EDGE : i32 = 33071;

        /// public static final [GL_CLEAR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_CLEAR)
        pub const GL_CLEAR : i32 = 5376;

        /// public static final [GL_COLOR_ARRAY](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_COLOR_ARRAY)
        pub const GL_COLOR_ARRAY : i32 = 32886;

        /// public static final [GL_COLOR_BUFFER_BIT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_COLOR_BUFFER_BIT)
        pub const GL_COLOR_BUFFER_BIT : i32 = 16384;

        /// public static final [GL_COLOR_LOGIC_OP](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_COLOR_LOGIC_OP)
        pub const GL_COLOR_LOGIC_OP : i32 = 3058;

        /// public static final [GL_COLOR_MATERIAL](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_COLOR_MATERIAL)
        pub const GL_COLOR_MATERIAL : i32 = 2903;

        /// public static final [GL_COMPRESSED_TEXTURE_FORMATS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_COMPRESSED_TEXTURE_FORMATS)
        pub const GL_COMPRESSED_TEXTURE_FORMATS : i32 = 34467;

        /// public static final [GL_CONSTANT_ATTENUATION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_CONSTANT_ATTENUATION)
        pub const GL_CONSTANT_ATTENUATION : i32 = 4615;

        /// public static final [GL_COPY](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_COPY)
        pub const GL_COPY : i32 = 5379;

        /// public static final [GL_COPY_INVERTED](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_COPY_INVERTED)
        pub const GL_COPY_INVERTED : i32 = 5388;

        /// public static final [GL_CULL_FACE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_CULL_FACE)
        pub const GL_CULL_FACE : i32 = 2884;

        /// public static final [GL_CW](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_CW)
        pub const GL_CW : i32 = 2304;

        /// public static final [GL_DECAL](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DECAL)
        pub const GL_DECAL : i32 = 8449;

        /// public static final [GL_DECR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DECR)
        pub const GL_DECR : i32 = 7683;

        /// public static final [GL_DEPTH_BITS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DEPTH_BITS)
        pub const GL_DEPTH_BITS : i32 = 3414;

        /// public static final [GL_DEPTH_BUFFER_BIT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DEPTH_BUFFER_BIT)
        pub const GL_DEPTH_BUFFER_BIT : i32 = 256;

        /// public static final [GL_DEPTH_TEST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DEPTH_TEST)
        pub const GL_DEPTH_TEST : i32 = 2929;

        /// public static final [GL_DIFFUSE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DIFFUSE)
        pub const GL_DIFFUSE : i32 = 4609;

        /// public static final [GL_DITHER](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DITHER)
        pub const GL_DITHER : i32 = 3024;

        /// public static final [GL_DONT_CARE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DONT_CARE)
        pub const GL_DONT_CARE : i32 = 4352;

        /// public static final [GL_DST_ALPHA](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DST_ALPHA)
        pub const GL_DST_ALPHA : i32 = 772;

        /// public static final [GL_DST_COLOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_DST_COLOR)
        pub const GL_DST_COLOR : i32 = 774;

        /// public static final [GL_EMISSION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_EMISSION)
        pub const GL_EMISSION : i32 = 5632;

        /// public static final [GL_EQUAL](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_EQUAL)
        pub const GL_EQUAL : i32 = 514;

        /// public static final [GL_EQUIV](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_EQUIV)
        pub const GL_EQUIV : i32 = 5385;

        /// public static final [GL_EXP](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_EXP)
        pub const GL_EXP : i32 = 2048;

        /// public static final [GL_EXP2](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_EXP2)
        pub const GL_EXP2 : i32 = 2049;

        /// public static final [GL_EXTENSIONS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_EXTENSIONS)
        pub const GL_EXTENSIONS : i32 = 7939;

        /// public static final [GL_FALSE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FALSE)
        pub const GL_FALSE : i32 = 0;

        /// public static final [GL_FASTEST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FASTEST)
        pub const GL_FASTEST : i32 = 4353;

        /// public static final [GL_FIXED](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FIXED)
        pub const GL_FIXED : i32 = 5132;

        /// public static final [GL_FLAT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FLAT)
        pub const GL_FLAT : i32 = 7424;

        /// public static final [GL_FLOAT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FLOAT)
        pub const GL_FLOAT : i32 = 5126;

        /// public static final [GL_FOG](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FOG)
        pub const GL_FOG : i32 = 2912;

        /// public static final [GL_FOG_COLOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FOG_COLOR)
        pub const GL_FOG_COLOR : i32 = 2918;

        /// public static final [GL_FOG_DENSITY](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FOG_DENSITY)
        pub const GL_FOG_DENSITY : i32 = 2914;

        /// public static final [GL_FOG_END](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FOG_END)
        pub const GL_FOG_END : i32 = 2916;

        /// public static final [GL_FOG_HINT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FOG_HINT)
        pub const GL_FOG_HINT : i32 = 3156;

        /// public static final [GL_FOG_MODE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FOG_MODE)
        pub const GL_FOG_MODE : i32 = 2917;

        /// public static final [GL_FOG_START](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FOG_START)
        pub const GL_FOG_START : i32 = 2915;

        /// public static final [GL_FRONT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FRONT)
        pub const GL_FRONT : i32 = 1028;

        /// public static final [GL_FRONT_AND_BACK](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_FRONT_AND_BACK)
        pub const GL_FRONT_AND_BACK : i32 = 1032;

        /// public static final [GL_GEQUAL](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_GEQUAL)
        pub const GL_GEQUAL : i32 = 518;

        /// public static final [GL_GREATER](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_GREATER)
        pub const GL_GREATER : i32 = 516;

        /// public static final [GL_GREEN_BITS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_GREEN_BITS)
        pub const GL_GREEN_BITS : i32 = 3411;

        /// public static final [GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES)
        pub const GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES : i32 = 35739;

        /// public static final [GL_IMPLEMENTATION_COLOR_READ_TYPE_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_IMPLEMENTATION_COLOR_READ_TYPE_OES)
        pub const GL_IMPLEMENTATION_COLOR_READ_TYPE_OES : i32 = 35738;

        /// public static final [GL_INCR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_INCR)
        pub const GL_INCR : i32 = 7682;

        /// public static final [GL_INVALID_ENUM](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_INVALID_ENUM)
        pub const GL_INVALID_ENUM : i32 = 1280;

        /// public static final [GL_INVALID_OPERATION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_INVALID_OPERATION)
        pub const GL_INVALID_OPERATION : i32 = 1282;

        /// public static final [GL_INVALID_VALUE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_INVALID_VALUE)
        pub const GL_INVALID_VALUE : i32 = 1281;

        /// public static final [GL_INVERT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_INVERT)
        pub const GL_INVERT : i32 = 5386;

        /// public static final [GL_KEEP](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_KEEP)
        pub const GL_KEEP : i32 = 7680;

        /// public static final [GL_LEQUAL](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LEQUAL)
        pub const GL_LEQUAL : i32 = 515;

        /// public static final [GL_LESS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LESS)
        pub const GL_LESS : i32 = 513;

        /// public static final [GL_LIGHT0](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT0)
        pub const GL_LIGHT0 : i32 = 16384;

        /// public static final [GL_LIGHT1](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT1)
        pub const GL_LIGHT1 : i32 = 16385;

        /// public static final [GL_LIGHT2](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT2)
        pub const GL_LIGHT2 : i32 = 16386;

        /// public static final [GL_LIGHT3](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT3)
        pub const GL_LIGHT3 : i32 = 16387;

        /// public static final [GL_LIGHT4](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT4)
        pub const GL_LIGHT4 : i32 = 16388;

        /// public static final [GL_LIGHT5](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT5)
        pub const GL_LIGHT5 : i32 = 16389;

        /// public static final [GL_LIGHT6](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT6)
        pub const GL_LIGHT6 : i32 = 16390;

        /// public static final [GL_LIGHT7](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT7)
        pub const GL_LIGHT7 : i32 = 16391;

        /// public static final [GL_LIGHTING](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHTING)
        pub const GL_LIGHTING : i32 = 2896;

        /// public static final [GL_LIGHT_MODEL_AMBIENT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT_MODEL_AMBIENT)
        pub const GL_LIGHT_MODEL_AMBIENT : i32 = 2899;

        /// public static final [GL_LIGHT_MODEL_TWO_SIDE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LIGHT_MODEL_TWO_SIDE)
        pub const GL_LIGHT_MODEL_TWO_SIDE : i32 = 2898;

        /// public static final [GL_LINEAR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINEAR)
        pub const GL_LINEAR : i32 = 9729;

        /// public static final [GL_LINEAR_ATTENUATION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINEAR_ATTENUATION)
        pub const GL_LINEAR_ATTENUATION : i32 = 4616;

        /// public static final [GL_LINEAR_MIPMAP_LINEAR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINEAR_MIPMAP_LINEAR)
        pub const GL_LINEAR_MIPMAP_LINEAR : i32 = 9987;

        /// public static final [GL_LINEAR_MIPMAP_NEAREST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINEAR_MIPMAP_NEAREST)
        pub const GL_LINEAR_MIPMAP_NEAREST : i32 = 9985;

        /// public static final [GL_LINES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINES)
        pub const GL_LINES : i32 = 1;

        /// public static final [GL_LINE_LOOP](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINE_LOOP)
        pub const GL_LINE_LOOP : i32 = 2;

        /// public static final [GL_LINE_SMOOTH](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINE_SMOOTH)
        pub const GL_LINE_SMOOTH : i32 = 2848;

        /// public static final [GL_LINE_SMOOTH_HINT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINE_SMOOTH_HINT)
        pub const GL_LINE_SMOOTH_HINT : i32 = 3154;

        /// public static final [GL_LINE_STRIP](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LINE_STRIP)
        pub const GL_LINE_STRIP : i32 = 3;

        /// public static final [GL_LUMINANCE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LUMINANCE)
        pub const GL_LUMINANCE : i32 = 6409;

        /// public static final [GL_LUMINANCE_ALPHA](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_LUMINANCE_ALPHA)
        pub const GL_LUMINANCE_ALPHA : i32 = 6410;

        /// public static final [GL_MAX_ELEMENTS_INDICES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_ELEMENTS_INDICES)
        pub const GL_MAX_ELEMENTS_INDICES : i32 = 33001;

        /// public static final [GL_MAX_ELEMENTS_VERTICES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_ELEMENTS_VERTICES)
        pub const GL_MAX_ELEMENTS_VERTICES : i32 = 33000;

        /// public static final [GL_MAX_LIGHTS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_LIGHTS)
        pub const GL_MAX_LIGHTS : i32 = 3377;

        /// public static final [GL_MAX_MODELVIEW_STACK_DEPTH](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_MODELVIEW_STACK_DEPTH)
        pub const GL_MAX_MODELVIEW_STACK_DEPTH : i32 = 3382;

        /// public static final [GL_MAX_PROJECTION_STACK_DEPTH](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_PROJECTION_STACK_DEPTH)
        pub const GL_MAX_PROJECTION_STACK_DEPTH : i32 = 3384;

        /// public static final [GL_MAX_TEXTURE_SIZE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_TEXTURE_SIZE)
        pub const GL_MAX_TEXTURE_SIZE : i32 = 3379;

        /// public static final [GL_MAX_TEXTURE_STACK_DEPTH](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_TEXTURE_STACK_DEPTH)
        pub const GL_MAX_TEXTURE_STACK_DEPTH : i32 = 3385;

        /// public static final [GL_MAX_TEXTURE_UNITS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_TEXTURE_UNITS)
        pub const GL_MAX_TEXTURE_UNITS : i32 = 34018;

        /// public static final [GL_MAX_VIEWPORT_DIMS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MAX_VIEWPORT_DIMS)
        pub const GL_MAX_VIEWPORT_DIMS : i32 = 3386;

        /// public static final [GL_MODELVIEW](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MODELVIEW)
        pub const GL_MODELVIEW : i32 = 5888;

        /// public static final [GL_MODULATE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MODULATE)
        pub const GL_MODULATE : i32 = 8448;

        /// public static final [GL_MULTISAMPLE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_MULTISAMPLE)
        pub const GL_MULTISAMPLE : i32 = 32925;

        /// public static final [GL_NAND](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NAND)
        pub const GL_NAND : i32 = 5390;

        /// public static final [GL_NEAREST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NEAREST)
        pub const GL_NEAREST : i32 = 9728;

        /// public static final [GL_NEAREST_MIPMAP_LINEAR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NEAREST_MIPMAP_LINEAR)
        pub const GL_NEAREST_MIPMAP_LINEAR : i32 = 9986;

        /// public static final [GL_NEAREST_MIPMAP_NEAREST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NEAREST_MIPMAP_NEAREST)
        pub const GL_NEAREST_MIPMAP_NEAREST : i32 = 9984;

        /// public static final [GL_NEVER](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NEVER)
        pub const GL_NEVER : i32 = 512;

        /// public static final [GL_NICEST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NICEST)
        pub const GL_NICEST : i32 = 4354;

        /// public static final [GL_NOOP](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NOOP)
        pub const GL_NOOP : i32 = 5381;

        /// public static final [GL_NOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NOR)
        pub const GL_NOR : i32 = 5384;

        /// public static final [GL_NORMALIZE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NORMALIZE)
        pub const GL_NORMALIZE : i32 = 2977;

        /// public static final [GL_NORMAL_ARRAY](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NORMAL_ARRAY)
        pub const GL_NORMAL_ARRAY : i32 = 32885;

        /// public static final [GL_NOTEQUAL](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NOTEQUAL)
        pub const GL_NOTEQUAL : i32 = 517;

        /// public static final [GL_NO_ERROR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NO_ERROR)
        pub const GL_NO_ERROR : i32 = 0;

        /// public static final [GL_NUM_COMPRESSED_TEXTURE_FORMATS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_NUM_COMPRESSED_TEXTURE_FORMATS)
        pub const GL_NUM_COMPRESSED_TEXTURE_FORMATS : i32 = 34466;

        /// public static final [GL_ONE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ONE)
        pub const GL_ONE : i32 = 1;

        /// public static final [GL_ONE_MINUS_DST_ALPHA](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ONE_MINUS_DST_ALPHA)
        pub const GL_ONE_MINUS_DST_ALPHA : i32 = 773;

        /// public static final [GL_ONE_MINUS_DST_COLOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ONE_MINUS_DST_COLOR)
        pub const GL_ONE_MINUS_DST_COLOR : i32 = 775;

        /// public static final [GL_ONE_MINUS_SRC_ALPHA](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ONE_MINUS_SRC_ALPHA)
        pub const GL_ONE_MINUS_SRC_ALPHA : i32 = 771;

        /// public static final [GL_ONE_MINUS_SRC_COLOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ONE_MINUS_SRC_COLOR)
        pub const GL_ONE_MINUS_SRC_COLOR : i32 = 769;

        /// public static final [GL_OR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_OR)
        pub const GL_OR : i32 = 5383;

        /// public static final [GL_OR_INVERTED](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_OR_INVERTED)
        pub const GL_OR_INVERTED : i32 = 5389;

        /// public static final [GL_OR_REVERSE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_OR_REVERSE)
        pub const GL_OR_REVERSE : i32 = 5387;

        /// public static final [GL_OUT_OF_MEMORY](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_OUT_OF_MEMORY)
        pub const GL_OUT_OF_MEMORY : i32 = 1285;

        /// public static final [GL_PACK_ALIGNMENT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PACK_ALIGNMENT)
        pub const GL_PACK_ALIGNMENT : i32 = 3333;

        /// public static final [GL_PALETTE4_R5_G6_B5_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE4_R5_G6_B5_OES)
        pub const GL_PALETTE4_R5_G6_B5_OES : i32 = 35730;

        /// public static final [GL_PALETTE4_RGB5_A1_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE4_RGB5_A1_OES)
        pub const GL_PALETTE4_RGB5_A1_OES : i32 = 35732;

        /// public static final [GL_PALETTE4_RGB8_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE4_RGB8_OES)
        pub const GL_PALETTE4_RGB8_OES : i32 = 35728;

        /// public static final [GL_PALETTE4_RGBA4_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE4_RGBA4_OES)
        pub const GL_PALETTE4_RGBA4_OES : i32 = 35731;

        /// public static final [GL_PALETTE4_RGBA8_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE4_RGBA8_OES)
        pub const GL_PALETTE4_RGBA8_OES : i32 = 35729;

        /// public static final [GL_PALETTE8_R5_G6_B5_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE8_R5_G6_B5_OES)
        pub const GL_PALETTE8_R5_G6_B5_OES : i32 = 35735;

        /// public static final [GL_PALETTE8_RGB5_A1_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE8_RGB5_A1_OES)
        pub const GL_PALETTE8_RGB5_A1_OES : i32 = 35737;

        /// public static final [GL_PALETTE8_RGB8_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE8_RGB8_OES)
        pub const GL_PALETTE8_RGB8_OES : i32 = 35733;

        /// public static final [GL_PALETTE8_RGBA4_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE8_RGBA4_OES)
        pub const GL_PALETTE8_RGBA4_OES : i32 = 35736;

        /// public static final [GL_PALETTE8_RGBA8_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PALETTE8_RGBA8_OES)
        pub const GL_PALETTE8_RGBA8_OES : i32 = 35734;

        /// public static final [GL_PERSPECTIVE_CORRECTION_HINT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PERSPECTIVE_CORRECTION_HINT)
        pub const GL_PERSPECTIVE_CORRECTION_HINT : i32 = 3152;

        /// public static final [GL_POINTS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_POINTS)
        pub const GL_POINTS : i32 = 0;

        /// public static final [GL_POINT_FADE_THRESHOLD_SIZE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_POINT_FADE_THRESHOLD_SIZE)
        pub const GL_POINT_FADE_THRESHOLD_SIZE : i32 = 33064;

        /// public static final [GL_POINT_SIZE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_POINT_SIZE)
        pub const GL_POINT_SIZE : i32 = 2833;

        /// public static final [GL_POINT_SMOOTH](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_POINT_SMOOTH)
        pub const GL_POINT_SMOOTH : i32 = 2832;

        /// public static final [GL_POINT_SMOOTH_HINT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_POINT_SMOOTH_HINT)
        pub const GL_POINT_SMOOTH_HINT : i32 = 3153;

        /// public static final [GL_POLYGON_OFFSET_FILL](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_POLYGON_OFFSET_FILL)
        pub const GL_POLYGON_OFFSET_FILL : i32 = 32823;

        /// public static final [GL_POLYGON_SMOOTH_HINT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_POLYGON_SMOOTH_HINT)
        pub const GL_POLYGON_SMOOTH_HINT : i32 = 3155;

        /// public static final [GL_POSITION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_POSITION)
        pub const GL_POSITION : i32 = 4611;

        /// public static final [GL_PROJECTION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_PROJECTION)
        pub const GL_PROJECTION : i32 = 5889;

        /// public static final [GL_QUADRATIC_ATTENUATION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_QUADRATIC_ATTENUATION)
        pub const GL_QUADRATIC_ATTENUATION : i32 = 4617;

        /// public static final [GL_RED_BITS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_RED_BITS)
        pub const GL_RED_BITS : i32 = 3410;

        /// public static final [GL_RENDERER](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_RENDERER)
        pub const GL_RENDERER : i32 = 7937;

        /// public static final [GL_REPEAT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_REPEAT)
        pub const GL_REPEAT : i32 = 10497;

        /// public static final [GL_REPLACE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_REPLACE)
        pub const GL_REPLACE : i32 = 7681;

        /// public static final [GL_RESCALE_NORMAL](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_RESCALE_NORMAL)
        pub const GL_RESCALE_NORMAL : i32 = 32826;

        /// public static final [GL_RGB](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_RGB)
        pub const GL_RGB : i32 = 6407;

        /// public static final [GL_RGBA](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_RGBA)
        pub const GL_RGBA : i32 = 6408;

        /// public static final [GL_SAMPLE_ALPHA_TO_COVERAGE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SAMPLE_ALPHA_TO_COVERAGE)
        pub const GL_SAMPLE_ALPHA_TO_COVERAGE : i32 = 32926;

        /// public static final [GL_SAMPLE_ALPHA_TO_ONE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SAMPLE_ALPHA_TO_ONE)
        pub const GL_SAMPLE_ALPHA_TO_ONE : i32 = 32927;

        /// public static final [GL_SAMPLE_COVERAGE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SAMPLE_COVERAGE)
        pub const GL_SAMPLE_COVERAGE : i32 = 32928;

        /// public static final [GL_SCISSOR_TEST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SCISSOR_TEST)
        pub const GL_SCISSOR_TEST : i32 = 3089;

        /// public static final [GL_SET](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SET)
        pub const GL_SET : i32 = 5391;

        /// public static final [GL_SHININESS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SHININESS)
        pub const GL_SHININESS : i32 = 5633;

        /// public static final [GL_SHORT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SHORT)
        pub const GL_SHORT : i32 = 5122;

        /// public static final [GL_SMOOTH](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SMOOTH)
        pub const GL_SMOOTH : i32 = 7425;

        /// public static final [GL_SMOOTH_LINE_WIDTH_RANGE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SMOOTH_LINE_WIDTH_RANGE)
        pub const GL_SMOOTH_LINE_WIDTH_RANGE : i32 = 2850;

        /// public static final [GL_SMOOTH_POINT_SIZE_RANGE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SMOOTH_POINT_SIZE_RANGE)
        pub const GL_SMOOTH_POINT_SIZE_RANGE : i32 = 2834;

        /// public static final [GL_SPECULAR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SPECULAR)
        pub const GL_SPECULAR : i32 = 4610;

        /// public static final [GL_SPOT_CUTOFF](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SPOT_CUTOFF)
        pub const GL_SPOT_CUTOFF : i32 = 4614;

        /// public static final [GL_SPOT_DIRECTION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SPOT_DIRECTION)
        pub const GL_SPOT_DIRECTION : i32 = 4612;

        /// public static final [GL_SPOT_EXPONENT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SPOT_EXPONENT)
        pub const GL_SPOT_EXPONENT : i32 = 4613;

        /// public static final [GL_SRC_ALPHA](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SRC_ALPHA)
        pub const GL_SRC_ALPHA : i32 = 770;

        /// public static final [GL_SRC_ALPHA_SATURATE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SRC_ALPHA_SATURATE)
        pub const GL_SRC_ALPHA_SATURATE : i32 = 776;

        /// public static final [GL_SRC_COLOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SRC_COLOR)
        pub const GL_SRC_COLOR : i32 = 768;

        /// public static final [GL_STACK_OVERFLOW](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_STACK_OVERFLOW)
        pub const GL_STACK_OVERFLOW : i32 = 1283;

        /// public static final [GL_STACK_UNDERFLOW](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_STACK_UNDERFLOW)
        pub const GL_STACK_UNDERFLOW : i32 = 1284;

        /// public static final [GL_STENCIL_BITS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_STENCIL_BITS)
        pub const GL_STENCIL_BITS : i32 = 3415;

        /// public static final [GL_STENCIL_BUFFER_BIT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_STENCIL_BUFFER_BIT)
        pub const GL_STENCIL_BUFFER_BIT : i32 = 1024;

        /// public static final [GL_STENCIL_TEST](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_STENCIL_TEST)
        pub const GL_STENCIL_TEST : i32 = 2960;

        /// public static final [GL_SUBPIXEL_BITS](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_SUBPIXEL_BITS)
        pub const GL_SUBPIXEL_BITS : i32 = 3408;

        /// public static final [GL_TEXTURE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE)
        pub const GL_TEXTURE : i32 = 5890;

        /// public static final [GL_TEXTURE0](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE0)
        pub const GL_TEXTURE0 : i32 = 33984;

        /// public static final [GL_TEXTURE1](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE1)
        pub const GL_TEXTURE1 : i32 = 33985;

        /// public static final [GL_TEXTURE10](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE10)
        pub const GL_TEXTURE10 : i32 = 33994;

        /// public static final [GL_TEXTURE11](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE11)
        pub const GL_TEXTURE11 : i32 = 33995;

        /// public static final [GL_TEXTURE12](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE12)
        pub const GL_TEXTURE12 : i32 = 33996;

        /// public static final [GL_TEXTURE13](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE13)
        pub const GL_TEXTURE13 : i32 = 33997;

        /// public static final [GL_TEXTURE14](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE14)
        pub const GL_TEXTURE14 : i32 = 33998;

        /// public static final [GL_TEXTURE15](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE15)
        pub const GL_TEXTURE15 : i32 = 33999;

        /// public static final [GL_TEXTURE16](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE16)
        pub const GL_TEXTURE16 : i32 = 34000;

        /// public static final [GL_TEXTURE17](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE17)
        pub const GL_TEXTURE17 : i32 = 34001;

        /// public static final [GL_TEXTURE18](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE18)
        pub const GL_TEXTURE18 : i32 = 34002;

        /// public static final [GL_TEXTURE19](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE19)
        pub const GL_TEXTURE19 : i32 = 34003;

        /// public static final [GL_TEXTURE2](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE2)
        pub const GL_TEXTURE2 : i32 = 33986;

        /// public static final [GL_TEXTURE20](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE20)
        pub const GL_TEXTURE20 : i32 = 34004;

        /// public static final [GL_TEXTURE21](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE21)
        pub const GL_TEXTURE21 : i32 = 34005;

        /// public static final [GL_TEXTURE22](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE22)
        pub const GL_TEXTURE22 : i32 = 34006;

        /// public static final [GL_TEXTURE23](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE23)
        pub const GL_TEXTURE23 : i32 = 34007;

        /// public static final [GL_TEXTURE24](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE24)
        pub const GL_TEXTURE24 : i32 = 34008;

        /// public static final [GL_TEXTURE25](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE25)
        pub const GL_TEXTURE25 : i32 = 34009;

        /// public static final [GL_TEXTURE26](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE26)
        pub const GL_TEXTURE26 : i32 = 34010;

        /// public static final [GL_TEXTURE27](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE27)
        pub const GL_TEXTURE27 : i32 = 34011;

        /// public static final [GL_TEXTURE28](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE28)
        pub const GL_TEXTURE28 : i32 = 34012;

        /// public static final [GL_TEXTURE29](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE29)
        pub const GL_TEXTURE29 : i32 = 34013;

        /// public static final [GL_TEXTURE3](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE3)
        pub const GL_TEXTURE3 : i32 = 33987;

        /// public static final [GL_TEXTURE30](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE30)
        pub const GL_TEXTURE30 : i32 = 34014;

        /// public static final [GL_TEXTURE31](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE31)
        pub const GL_TEXTURE31 : i32 = 34015;

        /// public static final [GL_TEXTURE4](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE4)
        pub const GL_TEXTURE4 : i32 = 33988;

        /// public static final [GL_TEXTURE5](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE5)
        pub const GL_TEXTURE5 : i32 = 33989;

        /// public static final [GL_TEXTURE6](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE6)
        pub const GL_TEXTURE6 : i32 = 33990;

        /// public static final [GL_TEXTURE7](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE7)
        pub const GL_TEXTURE7 : i32 = 33991;

        /// public static final [GL_TEXTURE8](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE8)
        pub const GL_TEXTURE8 : i32 = 33992;

        /// public static final [GL_TEXTURE9](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE9)
        pub const GL_TEXTURE9 : i32 = 33993;

        /// public static final [GL_TEXTURE_2D](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_2D)
        pub const GL_TEXTURE_2D : i32 = 3553;

        /// public static final [GL_TEXTURE_COORD_ARRAY](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_COORD_ARRAY)
        pub const GL_TEXTURE_COORD_ARRAY : i32 = 32888;

        /// public static final [GL_TEXTURE_ENV](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_ENV)
        pub const GL_TEXTURE_ENV : i32 = 8960;

        /// public static final [GL_TEXTURE_ENV_COLOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_ENV_COLOR)
        pub const GL_TEXTURE_ENV_COLOR : i32 = 8705;

        /// public static final [GL_TEXTURE_ENV_MODE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_ENV_MODE)
        pub const GL_TEXTURE_ENV_MODE : i32 = 8704;

        /// public static final [GL_TEXTURE_MAG_FILTER](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_MAG_FILTER)
        pub const GL_TEXTURE_MAG_FILTER : i32 = 10240;

        /// public static final [GL_TEXTURE_MIN_FILTER](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_MIN_FILTER)
        pub const GL_TEXTURE_MIN_FILTER : i32 = 10241;

        /// public static final [GL_TEXTURE_WRAP_S](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_WRAP_S)
        pub const GL_TEXTURE_WRAP_S : i32 = 10242;

        /// public static final [GL_TEXTURE_WRAP_T](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TEXTURE_WRAP_T)
        pub const GL_TEXTURE_WRAP_T : i32 = 10243;

        /// public static final [GL_TRIANGLES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TRIANGLES)
        pub const GL_TRIANGLES : i32 = 4;

        /// public static final [GL_TRIANGLE_FAN](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TRIANGLE_FAN)
        pub const GL_TRIANGLE_FAN : i32 = 6;

        /// public static final [GL_TRIANGLE_STRIP](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TRIANGLE_STRIP)
        pub const GL_TRIANGLE_STRIP : i32 = 5;

        /// public static final [GL_TRUE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_TRUE)
        pub const GL_TRUE : i32 = 1;

        /// public static final [GL_UNPACK_ALIGNMENT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_UNPACK_ALIGNMENT)
        pub const GL_UNPACK_ALIGNMENT : i32 = 3317;

        /// public static final [GL_UNSIGNED_BYTE](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_UNSIGNED_BYTE)
        pub const GL_UNSIGNED_BYTE : i32 = 5121;

        /// public static final [GL_UNSIGNED_SHORT](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_UNSIGNED_SHORT)
        pub const GL_UNSIGNED_SHORT : i32 = 5123;

        /// public static final [GL_UNSIGNED_SHORT_4_4_4_4](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_UNSIGNED_SHORT_4_4_4_4)
        pub const GL_UNSIGNED_SHORT_4_4_4_4 : i32 = 32819;

        /// public static final [GL_UNSIGNED_SHORT_5_5_5_1](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_UNSIGNED_SHORT_5_5_5_1)
        pub const GL_UNSIGNED_SHORT_5_5_5_1 : i32 = 32820;

        /// public static final [GL_UNSIGNED_SHORT_5_6_5](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_UNSIGNED_SHORT_5_6_5)
        pub const GL_UNSIGNED_SHORT_5_6_5 : i32 = 33635;

        /// public static final [GL_VENDOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_VENDOR)
        pub const GL_VENDOR : i32 = 7936;

        /// public static final [GL_VERSION](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_VERSION)
        pub const GL_VERSION : i32 = 7938;

        /// public static final [GL_VERTEX_ARRAY](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_VERTEX_ARRAY)
        pub const GL_VERTEX_ARRAY : i32 = 32884;

        /// public static final [GL_XOR](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_XOR)
        pub const GL_XOR : i32 = 5382;

        /// public static final [GL_ZERO](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html#GL_ZERO)
        pub const GL_ZERO : i32 = 0;
    }
}
