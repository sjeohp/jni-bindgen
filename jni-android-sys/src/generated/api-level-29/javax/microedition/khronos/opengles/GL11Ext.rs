// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-microedition-khronos-opengles-GL11Ext"))]
__jni_bindgen! {
    /// public interface [GL11Ext](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html)
    ///
    /// Required feature: javax-microedition-khronos-opengles-GL11Ext
    public interface GL11Ext ("javax/microedition/khronos/opengles/GL11Ext") extends crate::java::lang::Object, implements crate::javax::microedition::khronos::opengles::GL {

        /// [glTexParameterfv](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glTexParameterfv(int,%20int,%20float%5B%5D,%20int))
        pub fn glTexParameterfv<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glTexParameterfv", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glTexParameterfv\0", "(II[FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCurrentPaletteMatrixOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glCurrentPaletteMatrixOES(int))
        pub fn glCurrentPaletteMatrixOES<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glCurrentPaletteMatrixOES", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glCurrentPaletteMatrixOES\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexfOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexfOES(float,%20float,%20float,%20float,%20float))
        pub fn glDrawTexfOES<'env>(&'env self, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexfOES", .descriptor == "(FFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexfOES\0", "(FFFFF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexfvOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexfvOES(float%5B%5D,%20int))
        pub fn glDrawTexfvOES_float_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexfvOES", .descriptor == "([FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexfvOES\0", "([FI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexfvOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexfvOES(java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glDrawTexfvOES_FloatBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexfvOES", .descriptor == "(Ljava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexfvOES\0", "(Ljava/nio/FloatBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexiOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexiOES(int,%20int,%20int,%20int,%20int))
        pub fn glDrawTexiOES<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexiOES", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexiOES\0", "(IIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexivOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexivOES(int%5B%5D,%20int))
        pub fn glDrawTexivOES_int_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexivOES", .descriptor == "([II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexivOES\0", "([II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexivOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexivOES(java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDrawTexivOES_IntBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexivOES", .descriptor == "(Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexivOES\0", "(Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexsOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexsOES(short,%20short,%20short,%20short,%20short))
        pub fn glDrawTexsOES<'env>(&'env self, arg0: i16, arg1: i16, arg2: i16, arg3: i16, arg4: i16) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexsOES", .descriptor == "(SSSSS)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexsOES\0", "(SSSSS)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexsvOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexsvOES(short%5B%5D,%20int))
        pub fn glDrawTexsvOES_short_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ShortArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexsvOES", .descriptor == "([SI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexsvOES\0", "([SI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexsvOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexsvOES(java.nio.ShortBuffer))
        ///
        /// Required features: "java-nio-ShortBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-ShortBuffer")))]
        pub fn glDrawTexsvOES_ShortBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::ShortBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexsvOES", .descriptor == "(Ljava/nio/ShortBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexsvOES\0", "(Ljava/nio/ShortBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexxOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexxOES(int,%20int,%20int,%20int,%20int))
        pub fn glDrawTexxOES<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexxOES", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexxOES\0", "(IIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexxvOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexxvOES(int%5B%5D,%20int))
        pub fn glDrawTexxvOES_int_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexxvOES", .descriptor == "([II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexxvOES\0", "([II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexxvOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glDrawTexxvOES(java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDrawTexxvOES_IntBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glDrawTexxvOES", .descriptor == "(Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glDrawTexxvOES\0", "(Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glEnable](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glEnable(int))
        pub fn glEnable<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glEnable", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glEnable\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glEnableClientState](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glEnableClientState(int))
        pub fn glEnableClientState<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glEnableClientState", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glEnableClientState\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadPaletteFromModelViewMatrixOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glLoadPaletteFromModelViewMatrixOES())
        pub fn glLoadPaletteFromModelViewMatrixOES<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glLoadPaletteFromModelViewMatrixOES", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glLoadPaletteFromModelViewMatrixOES\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMatrixIndexPointerOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glMatrixIndexPointerOES(int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glMatrixIndexPointerOES_int_int_int_Buffer<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glMatrixIndexPointerOES", .descriptor == "(IIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glMatrixIndexPointerOES\0", "(IIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMatrixIndexPointerOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glMatrixIndexPointerOES(int,%20int,%20int,%20int))
        pub fn glMatrixIndexPointerOES_int_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glMatrixIndexPointerOES", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glMatrixIndexPointerOES\0", "(IIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glWeightPointerOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glWeightPointerOES(int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glWeightPointerOES_int_int_int_Buffer<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glWeightPointerOES", .descriptor == "(IIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glWeightPointerOES\0", "(IIILjava/nio/Buffer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glWeightPointerOES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#glWeightPointerOES(int,%20int,%20int,%20int))
        pub fn glWeightPointerOES_int_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/opengles/GL11Ext", java.flags == PUBLIC | ABSTRACT, .name == "glWeightPointerOES", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/opengles/GL11Ext\0", "glWeightPointerOES\0", "(IIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES)
        pub const GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES : i32 = 35742;

        /// public static final [GL_MATRIX_INDEX_ARRAY_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MATRIX_INDEX_ARRAY_OES)
        pub const GL_MATRIX_INDEX_ARRAY_OES : i32 = 34884;

        /// public static final [GL_MATRIX_INDEX_ARRAY_POINTER_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MATRIX_INDEX_ARRAY_POINTER_OES)
        pub const GL_MATRIX_INDEX_ARRAY_POINTER_OES : i32 = 34889;

        /// public static final [GL_MATRIX_INDEX_ARRAY_SIZE_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MATRIX_INDEX_ARRAY_SIZE_OES)
        pub const GL_MATRIX_INDEX_ARRAY_SIZE_OES : i32 = 34886;

        /// public static final [GL_MATRIX_INDEX_ARRAY_STRIDE_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MATRIX_INDEX_ARRAY_STRIDE_OES)
        pub const GL_MATRIX_INDEX_ARRAY_STRIDE_OES : i32 = 34888;

        /// public static final [GL_MATRIX_INDEX_ARRAY_TYPE_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MATRIX_INDEX_ARRAY_TYPE_OES)
        pub const GL_MATRIX_INDEX_ARRAY_TYPE_OES : i32 = 34887;

        /// public static final [GL_MATRIX_PALETTE_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MATRIX_PALETTE_OES)
        pub const GL_MATRIX_PALETTE_OES : i32 = 34880;

        /// public static final [GL_MAX_PALETTE_MATRICES_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MAX_PALETTE_MATRICES_OES)
        pub const GL_MAX_PALETTE_MATRICES_OES : i32 = 34882;

        /// public static final [GL_MAX_VERTEX_UNITS_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_MAX_VERTEX_UNITS_OES)
        pub const GL_MAX_VERTEX_UNITS_OES : i32 = 34468;

        /// public static final [GL_TEXTURE_CROP_RECT_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_TEXTURE_CROP_RECT_OES)
        pub const GL_TEXTURE_CROP_RECT_OES : i32 = 35741;

        /// public static final [GL_WEIGHT_ARRAY_BUFFER_BINDING_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_WEIGHT_ARRAY_BUFFER_BINDING_OES)
        pub const GL_WEIGHT_ARRAY_BUFFER_BINDING_OES : i32 = 34974;

        /// public static final [GL_WEIGHT_ARRAY_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_WEIGHT_ARRAY_OES)
        pub const GL_WEIGHT_ARRAY_OES : i32 = 34477;

        /// public static final [GL_WEIGHT_ARRAY_POINTER_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_WEIGHT_ARRAY_POINTER_OES)
        pub const GL_WEIGHT_ARRAY_POINTER_OES : i32 = 34476;

        /// public static final [GL_WEIGHT_ARRAY_SIZE_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_WEIGHT_ARRAY_SIZE_OES)
        pub const GL_WEIGHT_ARRAY_SIZE_OES : i32 = 34475;

        /// public static final [GL_WEIGHT_ARRAY_STRIDE_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_WEIGHT_ARRAY_STRIDE_OES)
        pub const GL_WEIGHT_ARRAY_STRIDE_OES : i32 = 34474;

        /// public static final [GL_WEIGHT_ARRAY_TYPE_OES](https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html#GL_WEIGHT_ARRAY_TYPE_OES)
        pub const GL_WEIGHT_ARRAY_TYPE_OES : i32 = 34473;
    }
}
