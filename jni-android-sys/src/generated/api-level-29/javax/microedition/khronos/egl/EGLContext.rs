// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "javax-microedition-khronos-egl-EGLContext"))]
__jni_bindgen! {
    /// public class [EGLContext](https://developer.android.com/reference/javax/microedition/khronos/egl/EGLContext.html)
    ///
    /// Required feature: javax-microedition-khronos-egl-EGLContext
    public class EGLContext ("javax/microedition/khronos/egl/EGLContext") extends crate::java::lang::Object {

        /// [EGLContext](https://developer.android.com/reference/javax/microedition/khronos/egl/EGLContext.html#EGLContext())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::javax::microedition::khronos::egl::EGLContext>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/egl/EGLContext", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/egl/EGLContext\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEGL](https://developer.android.com/reference/javax/microedition/khronos/egl/EGLContext.html#getEGL())
        ///
        /// Required features: "javax-microedition-khronos-egl-EGL"
        #[cfg(any(feature = "all", all(feature = "javax-microedition-khronos-egl-EGL")))]
        pub fn getEGL<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::microedition::khronos::egl::EGL>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/egl/EGLContext", java.flags == PUBLIC | STATIC, .name == "getEGL", .descriptor == "()Ljavax/microedition/khronos/egl/EGL;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("javax/microedition/khronos/egl/EGLContext\0", "getEGL\0", "()Ljavax/microedition/khronos/egl/EGL;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGL](https://developer.android.com/reference/javax/microedition/khronos/egl/EGLContext.html#getGL())
        ///
        /// Required features: "javax-microedition-khronos-opengles-GL"
        #[cfg(any(feature = "all", all(feature = "javax-microedition-khronos-opengles-GL")))]
        pub fn getGL<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::javax::microedition::khronos::opengles::GL>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "javax/microedition/khronos/egl/EGLContext", java.flags == PUBLIC | ABSTRACT, .name == "getGL", .descriptor == "()Ljavax/microedition/khronos/opengles/GL;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("javax/microedition/khronos/egl/EGLContext\0", "getGL\0", "()Ljavax/microedition/khronos/opengles/GL;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
