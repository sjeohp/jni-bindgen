// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-hardware-Camera_Size"))]
__jni_bindgen! {
    /// public class [Camera.Size](https://developer.android.com/reference/android/hardware/Camera.Size.html)
    ///
    /// Required feature: android-hardware-Camera_Size
    #[deprecated] public class Camera_Size ("android/hardware/Camera$Size") extends crate::java::lang::Object {

        /// [Size](https://developer.android.com/reference/android/hardware/Camera.Size.html#Size(android.hardware.Camera,%20int,%20int))
        ///
        /// Required features: "android-hardware-Camera"
        #[cfg(any(feature = "all", all(feature = "android-hardware-Camera")))]
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::hardware::Camera>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::hardware::Camera_Size>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/Camera$Size", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/hardware/Camera;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/Camera$Size\0", "<init>\0", "(Landroid/hardware/Camera;II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/hardware/Camera.Size.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        #[deprecated] pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/Camera$Size", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/Camera$Size\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/hardware/Camera.Size.html#hashCode())
        #[deprecated] pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/Camera$Size", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/Camera$Size\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public [height](https://developer.android.com/reference/android/hardware/Camera.Size.html#height)
        #[deprecated] pub fn height<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/hardware/Camera$Size\0", "height\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [height](https://developer.android.com/reference/android/hardware/Camera.Size.html#height)
        #[deprecated] pub fn set_height<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/hardware/Camera$Size\0", "height\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [width](https://developer.android.com/reference/android/hardware/Camera.Size.html#width)
        #[deprecated] pub fn width<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/hardware/Camera$Size\0", "width\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [width](https://developer.android.com/reference/android/hardware/Camera.Size.html#width)
        #[deprecated] pub fn set_width<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/hardware/Camera$Size\0", "width\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::Camera>> { ... }
    }
}
