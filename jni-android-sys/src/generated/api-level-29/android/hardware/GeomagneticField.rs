// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-hardware-GeomagneticField"))]
__jni_bindgen! {
    /// public class [GeomagneticField](https://developer.android.com/reference/android/hardware/GeomagneticField.html)
    ///
    /// Required feature: android-hardware-GeomagneticField
    public class GeomagneticField ("android/hardware/GeomagneticField") extends crate::java::lang::Object {

        /// [GeomagneticField](https://developer.android.com/reference/android/hardware/GeomagneticField.html#GeomagneticField(float,%20float,%20float,%20long))
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::hardware::GeomagneticField>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/GeomagneticField", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFFJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/GeomagneticField\0", "<init>\0", "(FFFJ)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getX](https://developer.android.com/reference/android/hardware/GeomagneticField.html#getX())
        pub fn getX<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/GeomagneticField", java.flags == PUBLIC, .name == "getX", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/GeomagneticField\0", "getX\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getY](https://developer.android.com/reference/android/hardware/GeomagneticField.html#getY())
        pub fn getY<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/GeomagneticField", java.flags == PUBLIC, .name == "getY", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/GeomagneticField\0", "getY\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getZ](https://developer.android.com/reference/android/hardware/GeomagneticField.html#getZ())
        pub fn getZ<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/GeomagneticField", java.flags == PUBLIC, .name == "getZ", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/GeomagneticField\0", "getZ\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDeclination](https://developer.android.com/reference/android/hardware/GeomagneticField.html#getDeclination())
        pub fn getDeclination<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/GeomagneticField", java.flags == PUBLIC, .name == "getDeclination", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/GeomagneticField\0", "getDeclination\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInclination](https://developer.android.com/reference/android/hardware/GeomagneticField.html#getInclination())
        pub fn getInclination<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/GeomagneticField", java.flags == PUBLIC, .name == "getInclination", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/GeomagneticField\0", "getInclination\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHorizontalStrength](https://developer.android.com/reference/android/hardware/GeomagneticField.html#getHorizontalStrength())
        pub fn getHorizontalStrength<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/GeomagneticField", java.flags == PUBLIC, .name == "getHorizontalStrength", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/GeomagneticField\0", "getHorizontalStrength\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFieldStrength](https://developer.android.com/reference/android/hardware/GeomagneticField.html#getFieldStrength())
        pub fn getFieldStrength<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/GeomagneticField", java.flags == PUBLIC, .name == "getFieldStrength", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/GeomagneticField\0", "getFieldStrength\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
