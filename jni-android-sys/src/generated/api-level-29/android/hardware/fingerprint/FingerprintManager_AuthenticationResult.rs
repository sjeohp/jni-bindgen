// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-hardware-fingerprint-FingerprintManager_AuthenticationResult"))]
__jni_bindgen! {
    /// public class [FingerprintManager.AuthenticationResult](https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.AuthenticationResult.html)
    ///
    /// Required feature: android-hardware-fingerprint-FingerprintManager_AuthenticationResult
    #[deprecated] public class FingerprintManager_AuthenticationResult ("android/hardware/fingerprint/FingerprintManager$AuthenticationResult") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [AuthenticationResult](https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.AuthenticationResult.html#AuthenticationResult())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::hardware::fingerprint::FingerprintManager_AuthenticationResult>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/hardware/fingerprint/FingerprintManager$AuthenticationResult", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/fingerprint/FingerprintManager$AuthenticationResult\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getCryptoObject](https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.AuthenticationResult.html#getCryptoObject())
        ///
        /// Required features: "android-hardware-fingerprint-FingerprintManager_CryptoObject"
        #[cfg(any(feature = "all", all(feature = "android-hardware-fingerprint-FingerprintManager_CryptoObject")))]
        #[deprecated] pub fn getCryptoObject<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::fingerprint::FingerprintManager_CryptoObject>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/fingerprint/FingerprintManager$AuthenticationResult", java.flags == PUBLIC, .name == "getCryptoObject", .descriptor == "()Landroid/hardware/fingerprint/FingerprintManager$CryptoObject;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/fingerprint/FingerprintManager$AuthenticationResult\0", "getCryptoObject\0", "()Landroid/hardware/fingerprint/FingerprintManager$CryptoObject;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
