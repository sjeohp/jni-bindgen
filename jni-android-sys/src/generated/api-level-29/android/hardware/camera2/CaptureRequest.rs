// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest"))]
__jni_bindgen! {
    /// public final class [CaptureRequest](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html)
    ///
    /// Required feature: android-hardware-camera2-CaptureRequest
    public final class CaptureRequest ("android/hardware/camera2/CaptureRequest") extends crate::android::hardware::camera2::CameraMetadata, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [CaptureRequest](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CaptureRequest())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/hardware/camera2/CaptureRequest", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [get](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#get(android.hardware.camera2.CaptureRequest.Key))
        ///
        /// Required features: "android-hardware-camera2-CaptureRequest_Key", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "android-hardware-camera2-CaptureRequest_Key", feature = "java-lang-Object")))]
        pub fn get<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::hardware::camera2::CaptureRequest_Key>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CaptureRequest", java.flags == PUBLIC, .name == "get", .descriptor == "(Landroid/hardware/camera2/CaptureRequest$Key;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "get\0", "(Landroid/hardware/camera2/CaptureRequest$Key;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeys](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#getKeys())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CaptureRequest", java.flags == PUBLIC, .name == "getKeys", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "getKeys\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTag](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#getTag())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn getTag<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CaptureRequest", java.flags == PUBLIC, .name == "getTag", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "getTag\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isReprocess](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#isReprocess())
        pub fn isReprocess<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CaptureRequest", java.flags == PUBLIC, .name == "isReprocess", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "isReprocess\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CaptureRequest", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CaptureRequest", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CaptureRequest", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CaptureRequest", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CaptureRequest\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [BLACK_LEVEL_LOCK](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#BLACK_LEVEL_LOCK)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn BLACK_LEVEL_LOCK<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "BLACK_LEVEL_LOCK\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [COLOR_CORRECTION_ABERRATION_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#COLOR_CORRECTION_ABERRATION_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn COLOR_CORRECTION_ABERRATION_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "COLOR_CORRECTION_ABERRATION_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [COLOR_CORRECTION_GAINS](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#COLOR_CORRECTION_GAINS)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn COLOR_CORRECTION_GAINS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "COLOR_CORRECTION_GAINS\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [COLOR_CORRECTION_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#COLOR_CORRECTION_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn COLOR_CORRECTION_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "COLOR_CORRECTION_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [COLOR_CORRECTION_TRANSFORM](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#COLOR_CORRECTION_TRANSFORM)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn COLOR_CORRECTION_TRANSFORM<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "COLOR_CORRECTION_TRANSFORM\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_ANTIBANDING_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_ANTIBANDING_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AE_ANTIBANDING_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AE_ANTIBANDING_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_EXPOSURE_COMPENSATION](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_EXPOSURE_COMPENSATION)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AE_EXPOSURE_COMPENSATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AE_EXPOSURE_COMPENSATION\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_LOCK](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_LOCK)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AE_LOCK<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AE_LOCK\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AE_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AE_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_PRECAPTURE_TRIGGER](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_PRECAPTURE_TRIGGER)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AE_PRECAPTURE_TRIGGER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AE_PRECAPTURE_TRIGGER\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_REGIONS](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_REGIONS)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AE_REGIONS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AE_REGIONS\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_TARGET_FPS_RANGE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_TARGET_FPS_RANGE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AE_TARGET_FPS_RANGE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AE_TARGET_FPS_RANGE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AF_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AF_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AF_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AF_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AF_REGIONS](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AF_REGIONS)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AF_REGIONS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AF_REGIONS\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AF_TRIGGER](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AF_TRIGGER)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AF_TRIGGER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AF_TRIGGER\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AWB_LOCK](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AWB_LOCK)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AWB_LOCK<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AWB_LOCK\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AWB_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AWB_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AWB_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AWB_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AWB_REGIONS](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AWB_REGIONS)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_AWB_REGIONS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_AWB_REGIONS\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_CAPTURE_INTENT](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_CAPTURE_INTENT)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_CAPTURE_INTENT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_CAPTURE_INTENT\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_EFFECT_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_EFFECT_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_EFFECT_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_EFFECT_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_ENABLE_ZSL](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_ENABLE_ZSL)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_ENABLE_ZSL<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_ENABLE_ZSL\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_POST_RAW_SENSITIVITY_BOOST](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_POST_RAW_SENSITIVITY_BOOST)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_POST_RAW_SENSITIVITY_BOOST<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_POST_RAW_SENSITIVITY_BOOST\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_SCENE_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_SCENE_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_SCENE_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_SCENE_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_VIDEO_STABILIZATION_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_VIDEO_STABILIZATION_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn CONTROL_VIDEO_STABILIZATION_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CONTROL_VIDEO_STABILIZATION_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DISTORTION_CORRECTION_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#DISTORTION_CORRECTION_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn DISTORTION_CORRECTION_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "DISTORTION_CORRECTION_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EDGE_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#EDGE_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn EDGE_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "EDGE_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [FLASH_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#FLASH_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn FLASH_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "FLASH_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [HOT_PIXEL_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#HOT_PIXEL_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn HOT_PIXEL_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "HOT_PIXEL_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [JPEG_GPS_LOCATION](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_GPS_LOCATION)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn JPEG_GPS_LOCATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "JPEG_GPS_LOCATION\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [JPEG_ORIENTATION](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_ORIENTATION)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn JPEG_ORIENTATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "JPEG_ORIENTATION\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [JPEG_QUALITY](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_QUALITY)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn JPEG_QUALITY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "JPEG_QUALITY\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [JPEG_THUMBNAIL_QUALITY](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_THUMBNAIL_QUALITY)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn JPEG_THUMBNAIL_QUALITY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "JPEG_THUMBNAIL_QUALITY\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [JPEG_THUMBNAIL_SIZE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_THUMBNAIL_SIZE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn JPEG_THUMBNAIL_SIZE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "JPEG_THUMBNAIL_SIZE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_APERTURE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_APERTURE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn LENS_APERTURE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "LENS_APERTURE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_FILTER_DENSITY](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_FILTER_DENSITY)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn LENS_FILTER_DENSITY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "LENS_FILTER_DENSITY\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_FOCAL_LENGTH](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_FOCAL_LENGTH)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn LENS_FOCAL_LENGTH<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "LENS_FOCAL_LENGTH\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_FOCUS_DISTANCE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_FOCUS_DISTANCE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn LENS_FOCUS_DISTANCE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "LENS_FOCUS_DISTANCE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_OPTICAL_STABILIZATION_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_OPTICAL_STABILIZATION_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn LENS_OPTICAL_STABILIZATION_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "LENS_OPTICAL_STABILIZATION_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [NOISE_REDUCTION_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#NOISE_REDUCTION_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn NOISE_REDUCTION_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "NOISE_REDUCTION_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REPROCESS_EFFECTIVE_EXPOSURE_FACTOR](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#REPROCESS_EFFECTIVE_EXPOSURE_FACTOR)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn REPROCESS_EFFECTIVE_EXPOSURE_FACTOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "REPROCESS_EFFECTIVE_EXPOSURE_FACTOR\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SCALER_CROP_REGION](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SCALER_CROP_REGION)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn SCALER_CROP_REGION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "SCALER_CROP_REGION\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_EXPOSURE_TIME](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_EXPOSURE_TIME)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn SENSOR_EXPOSURE_TIME<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "SENSOR_EXPOSURE_TIME\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_FRAME_DURATION](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_FRAME_DURATION)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn SENSOR_FRAME_DURATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "SENSOR_FRAME_DURATION\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_SENSITIVITY](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_SENSITIVITY)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn SENSOR_SENSITIVITY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "SENSOR_SENSITIVITY\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_TEST_PATTERN_DATA](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_TEST_PATTERN_DATA)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn SENSOR_TEST_PATTERN_DATA<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "SENSOR_TEST_PATTERN_DATA\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_TEST_PATTERN_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_TEST_PATTERN_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn SENSOR_TEST_PATTERN_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "SENSOR_TEST_PATTERN_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SHADING_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SHADING_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn SHADING_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "SHADING_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_FACE_DETECT_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#STATISTICS_FACE_DETECT_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn STATISTICS_FACE_DETECT_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "STATISTICS_FACE_DETECT_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_HOT_PIXEL_MAP_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#STATISTICS_HOT_PIXEL_MAP_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn STATISTICS_HOT_PIXEL_MAP_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "STATISTICS_HOT_PIXEL_MAP_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_LENS_SHADING_MAP_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#STATISTICS_LENS_SHADING_MAP_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn STATISTICS_LENS_SHADING_MAP_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "STATISTICS_LENS_SHADING_MAP_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_OIS_DATA_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#STATISTICS_OIS_DATA_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn STATISTICS_OIS_DATA_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "STATISTICS_OIS_DATA_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [TONEMAP_CURVE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#TONEMAP_CURVE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn TONEMAP_CURVE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "TONEMAP_CURVE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [TONEMAP_GAMMA](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#TONEMAP_GAMMA)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn TONEMAP_GAMMA<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "TONEMAP_GAMMA\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [TONEMAP_MODE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#TONEMAP_MODE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn TONEMAP_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "TONEMAP_MODE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [TONEMAP_PRESET_CURVE](https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#TONEMAP_PRESET_CURVE)
        ///
        /// Required feature: android-hardware-camera2-CaptureRequest_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CaptureRequest_Key"))]
        pub fn TONEMAP_PRESET_CURVE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CaptureRequest_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CaptureRequest\0", "TONEMAP_PRESET_CURVE\0", "Landroid/hardware/camera2/CaptureRequest$Key;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
