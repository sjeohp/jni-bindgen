// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics"))]
__jni_bindgen! {
    /// public final class [CameraCharacteristics](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html)
    ///
    /// Required feature: android-hardware-camera2-CameraCharacteristics
    public final class CameraCharacteristics ("android/hardware/camera2/CameraCharacteristics") extends crate::android::hardware::camera2::CameraMetadata {

        // // Not emitting: Non-public method
        // /// [CameraCharacteristics](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CameraCharacteristics())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [get](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#get(android.hardware.camera2.CameraCharacteristics.Key))
        ///
        /// Required features: "android-hardware-camera2-CameraCharacteristics_Key", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "android-hardware-camera2-CameraCharacteristics_Key", feature = "java-lang-Object")))]
        pub fn get<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::hardware::camera2::CameraCharacteristics_Key>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "get", .descriptor == "(Landroid/hardware/camera2/CameraCharacteristics$Key;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "get\0", "(Landroid/hardware/camera2/CameraCharacteristics$Key;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeys](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#getKeys())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "getKeys", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "getKeys\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeysNeedingPermission](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#getKeysNeedingPermission())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getKeysNeedingPermission<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "getKeysNeedingPermission", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "getKeysNeedingPermission\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRecommendedStreamConfigurationMap](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#getRecommendedStreamConfigurationMap(int))
        ///
        /// Required features: "android-hardware-camera2-params-RecommendedStreamConfigurationMap"
        #[cfg(any(feature = "all", all(feature = "android-hardware-camera2-params-RecommendedStreamConfigurationMap")))]
        pub fn getRecommendedStreamConfigurationMap<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::params::RecommendedStreamConfigurationMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "getRecommendedStreamConfigurationMap", .descriptor == "(I)Landroid/hardware/camera2/params/RecommendedStreamConfigurationMap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "getRecommendedStreamConfigurationMap\0", "(I)Landroid/hardware/camera2/params/RecommendedStreamConfigurationMap;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableSessionKeys](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#getAvailableSessionKeys())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getAvailableSessionKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "getAvailableSessionKeys", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "getAvailableSessionKeys\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailablePhysicalCameraRequestKeys](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#getAvailablePhysicalCameraRequestKeys())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getAvailablePhysicalCameraRequestKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "getAvailablePhysicalCameraRequestKeys", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "getAvailablePhysicalCameraRequestKeys\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableCaptureRequestKeys](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#getAvailableCaptureRequestKeys())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getAvailableCaptureRequestKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "getAvailableCaptureRequestKeys", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "getAvailableCaptureRequestKeys\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableCaptureResultKeys](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#getAvailableCaptureResultKeys())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getAvailableCaptureResultKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "getAvailableCaptureResultKeys", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "getAvailableCaptureResultKeys\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPhysicalCameraIds](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#getPhysicalCameraIds())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn getPhysicalCameraIds<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/CameraCharacteristics", java.flags == PUBLIC, .name == "getPhysicalCameraIds", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/CameraCharacteristics\0", "getPhysicalCameraIds\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_AVAILABLE_ANTIBANDING_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AE_AVAILABLE_ANTIBANDING_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AE_AVAILABLE_ANTIBANDING_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AE_AVAILABLE_ANTIBANDING_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_AVAILABLE_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AE_AVAILABLE_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AE_AVAILABLE_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AE_AVAILABLE_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_COMPENSATION_RANGE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AE_COMPENSATION_RANGE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AE_COMPENSATION_RANGE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AE_COMPENSATION_RANGE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_COMPENSATION_STEP](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AE_COMPENSATION_STEP)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AE_COMPENSATION_STEP<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AE_COMPENSATION_STEP\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AE_LOCK_AVAILABLE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AE_LOCK_AVAILABLE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AE_LOCK_AVAILABLE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AE_LOCK_AVAILABLE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AF_AVAILABLE_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AF_AVAILABLE_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AF_AVAILABLE_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AF_AVAILABLE_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AVAILABLE_EFFECTS](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AVAILABLE_EFFECTS)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AVAILABLE_EFFECTS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AVAILABLE_EFFECTS\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AVAILABLE_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AVAILABLE_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AVAILABLE_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AVAILABLE_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AVAILABLE_SCENE_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AVAILABLE_SCENE_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AVAILABLE_SCENE_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AVAILABLE_SCENE_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AWB_AVAILABLE_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AWB_AVAILABLE_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AWB_AVAILABLE_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AWB_AVAILABLE_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_AWB_LOCK_AVAILABLE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_AWB_LOCK_AVAILABLE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_AWB_LOCK_AVAILABLE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_AWB_LOCK_AVAILABLE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_MAX_REGIONS_AE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_MAX_REGIONS_AE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_MAX_REGIONS_AE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_MAX_REGIONS_AE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_MAX_REGIONS_AF](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_MAX_REGIONS_AF)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_MAX_REGIONS_AF<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_MAX_REGIONS_AF\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_MAX_REGIONS_AWB](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_MAX_REGIONS_AWB)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_MAX_REGIONS_AWB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_MAX_REGIONS_AWB\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTROL_POST_RAW_SENSITIVITY_BOOST_RANGE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#CONTROL_POST_RAW_SENSITIVITY_BOOST_RANGE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn CONTROL_POST_RAW_SENSITIVITY_BOOST_RANGE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "CONTROL_POST_RAW_SENSITIVITY_BOOST_RANGE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DEPTH_DEPTH_IS_EXCLUSIVE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#DEPTH_DEPTH_IS_EXCLUSIVE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn DEPTH_DEPTH_IS_EXCLUSIVE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "DEPTH_DEPTH_IS_EXCLUSIVE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DISTORTION_CORRECTION_AVAILABLE_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#DISTORTION_CORRECTION_AVAILABLE_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn DISTORTION_CORRECTION_AVAILABLE_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "DISTORTION_CORRECTION_AVAILABLE_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EDGE_AVAILABLE_EDGE_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#EDGE_AVAILABLE_EDGE_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn EDGE_AVAILABLE_EDGE_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "EDGE_AVAILABLE_EDGE_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [FLASH_INFO_AVAILABLE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#FLASH_INFO_AVAILABLE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn FLASH_INFO_AVAILABLE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "FLASH_INFO_AVAILABLE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INFO_SUPPORTED_HARDWARE_LEVEL](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#INFO_SUPPORTED_HARDWARE_LEVEL)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn INFO_SUPPORTED_HARDWARE_LEVEL<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "INFO_SUPPORTED_HARDWARE_LEVEL\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INFO_VERSION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#INFO_VERSION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn INFO_VERSION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "INFO_VERSION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [JPEG_AVAILABLE_THUMBNAIL_SIZES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#JPEG_AVAILABLE_THUMBNAIL_SIZES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn JPEG_AVAILABLE_THUMBNAIL_SIZES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "JPEG_AVAILABLE_THUMBNAIL_SIZES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_DISTORTION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_DISTORTION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_DISTORTION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_DISTORTION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_FACING](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_FACING)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_FACING<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_FACING\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_INFO_AVAILABLE_APERTURES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_INFO_AVAILABLE_APERTURES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_INFO_AVAILABLE_APERTURES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_INFO_AVAILABLE_APERTURES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_INFO_AVAILABLE_FILTER_DENSITIES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_INFO_AVAILABLE_FILTER_DENSITIES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_INFO_AVAILABLE_FILTER_DENSITIES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_INFO_AVAILABLE_FILTER_DENSITIES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_INFO_AVAILABLE_FOCAL_LENGTHS](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_INFO_AVAILABLE_FOCAL_LENGTHS)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_INFO_AVAILABLE_FOCAL_LENGTHS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_INFO_AVAILABLE_FOCAL_LENGTHS\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_INFO_FOCUS_DISTANCE_CALIBRATION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_INFO_FOCUS_DISTANCE_CALIBRATION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_INFO_FOCUS_DISTANCE_CALIBRATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_INFO_FOCUS_DISTANCE_CALIBRATION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_INFO_HYPERFOCAL_DISTANCE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_INFO_HYPERFOCAL_DISTANCE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_INFO_HYPERFOCAL_DISTANCE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_INFO_HYPERFOCAL_DISTANCE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_INFO_MINIMUM_FOCUS_DISTANCE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_INFO_MINIMUM_FOCUS_DISTANCE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_INFO_MINIMUM_FOCUS_DISTANCE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_INFO_MINIMUM_FOCUS_DISTANCE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_INTRINSIC_CALIBRATION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_INTRINSIC_CALIBRATION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_INTRINSIC_CALIBRATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_INTRINSIC_CALIBRATION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_POSE_REFERENCE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_POSE_REFERENCE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_POSE_REFERENCE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_POSE_REFERENCE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_POSE_ROTATION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_POSE_ROTATION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_POSE_ROTATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_POSE_ROTATION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_POSE_TRANSLATION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_POSE_TRANSLATION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LENS_POSE_TRANSLATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_POSE_TRANSLATION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LENS_RADIAL_DISTORTION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LENS_RADIAL_DISTORTION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        #[deprecated] pub fn LENS_RADIAL_DISTORTION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LENS_RADIAL_DISTORTION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LOGICAL_MULTI_CAMERA_SENSOR_SYNC_TYPE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#LOGICAL_MULTI_CAMERA_SENSOR_SYNC_TYPE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn LOGICAL_MULTI_CAMERA_SENSOR_SYNC_TYPE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "LOGICAL_MULTI_CAMERA_SENSOR_SYNC_TYPE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REPROCESS_MAX_CAPTURE_STALL](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#REPROCESS_MAX_CAPTURE_STALL)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn REPROCESS_MAX_CAPTURE_STALL<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "REPROCESS_MAX_CAPTURE_STALL\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REQUEST_AVAILABLE_CAPABILITIES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#REQUEST_AVAILABLE_CAPABILITIES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn REQUEST_AVAILABLE_CAPABILITIES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "REQUEST_AVAILABLE_CAPABILITIES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REQUEST_MAX_NUM_INPUT_STREAMS](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#REQUEST_MAX_NUM_INPUT_STREAMS)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn REQUEST_MAX_NUM_INPUT_STREAMS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "REQUEST_MAX_NUM_INPUT_STREAMS\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REQUEST_MAX_NUM_OUTPUT_PROC](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#REQUEST_MAX_NUM_OUTPUT_PROC)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn REQUEST_MAX_NUM_OUTPUT_PROC<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "REQUEST_MAX_NUM_OUTPUT_PROC\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REQUEST_MAX_NUM_OUTPUT_PROC_STALLING](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#REQUEST_MAX_NUM_OUTPUT_PROC_STALLING)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn REQUEST_MAX_NUM_OUTPUT_PROC_STALLING<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "REQUEST_MAX_NUM_OUTPUT_PROC_STALLING\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REQUEST_MAX_NUM_OUTPUT_RAW](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#REQUEST_MAX_NUM_OUTPUT_RAW)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn REQUEST_MAX_NUM_OUTPUT_RAW<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "REQUEST_MAX_NUM_OUTPUT_RAW\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REQUEST_PARTIAL_RESULT_COUNT](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#REQUEST_PARTIAL_RESULT_COUNT)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn REQUEST_PARTIAL_RESULT_COUNT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "REQUEST_PARTIAL_RESULT_COUNT\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [REQUEST_PIPELINE_MAX_DEPTH](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#REQUEST_PIPELINE_MAX_DEPTH)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn REQUEST_PIPELINE_MAX_DEPTH<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "REQUEST_PIPELINE_MAX_DEPTH\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SCALER_AVAILABLE_MAX_DIGITAL_ZOOM](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SCALER_AVAILABLE_MAX_DIGITAL_ZOOM)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SCALER_AVAILABLE_MAX_DIGITAL_ZOOM<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SCALER_AVAILABLE_MAX_DIGITAL_ZOOM\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SCALER_CROPPING_TYPE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SCALER_CROPPING_TYPE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SCALER_CROPPING_TYPE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SCALER_CROPPING_TYPE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SCALER_MANDATORY_STREAM_COMBINATIONS](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SCALER_MANDATORY_STREAM_COMBINATIONS)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SCALER_MANDATORY_STREAM_COMBINATIONS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SCALER_MANDATORY_STREAM_COMBINATIONS\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SCALER_STREAM_CONFIGURATION_MAP](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SCALER_STREAM_CONFIGURATION_MAP)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SCALER_STREAM_CONFIGURATION_MAP<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SCALER_STREAM_CONFIGURATION_MAP\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_AVAILABLE_TEST_PATTERN_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_AVAILABLE_TEST_PATTERN_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_AVAILABLE_TEST_PATTERN_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_AVAILABLE_TEST_PATTERN_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_BLACK_LEVEL_PATTERN](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_BLACK_LEVEL_PATTERN)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_BLACK_LEVEL_PATTERN<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_BLACK_LEVEL_PATTERN\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_CALIBRATION_TRANSFORM1](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_CALIBRATION_TRANSFORM1)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_CALIBRATION_TRANSFORM1<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_CALIBRATION_TRANSFORM1\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_CALIBRATION_TRANSFORM2](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_CALIBRATION_TRANSFORM2)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_CALIBRATION_TRANSFORM2<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_CALIBRATION_TRANSFORM2\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_COLOR_TRANSFORM1](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_COLOR_TRANSFORM1)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_COLOR_TRANSFORM1<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_COLOR_TRANSFORM1\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_COLOR_TRANSFORM2](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_COLOR_TRANSFORM2)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_COLOR_TRANSFORM2<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_COLOR_TRANSFORM2\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_FORWARD_MATRIX1](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_FORWARD_MATRIX1)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_FORWARD_MATRIX1<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_FORWARD_MATRIX1\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_FORWARD_MATRIX2](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_FORWARD_MATRIX2)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_FORWARD_MATRIX2<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_FORWARD_MATRIX2\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_ACTIVE_ARRAY_SIZE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_ACTIVE_ARRAY_SIZE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_ACTIVE_ARRAY_SIZE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_ACTIVE_ARRAY_SIZE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_COLOR_FILTER_ARRANGEMENT](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_COLOR_FILTER_ARRANGEMENT)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_COLOR_FILTER_ARRANGEMENT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_COLOR_FILTER_ARRANGEMENT\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_EXPOSURE_TIME_RANGE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_EXPOSURE_TIME_RANGE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_EXPOSURE_TIME_RANGE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_EXPOSURE_TIME_RANGE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_LENS_SHADING_APPLIED](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_LENS_SHADING_APPLIED)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_LENS_SHADING_APPLIED<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_LENS_SHADING_APPLIED\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_MAX_FRAME_DURATION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_MAX_FRAME_DURATION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_MAX_FRAME_DURATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_MAX_FRAME_DURATION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_PHYSICAL_SIZE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_PHYSICAL_SIZE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_PHYSICAL_SIZE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_PHYSICAL_SIZE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_PIXEL_ARRAY_SIZE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_PIXEL_ARRAY_SIZE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_PIXEL_ARRAY_SIZE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_PIXEL_ARRAY_SIZE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_SENSITIVITY_RANGE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_SENSITIVITY_RANGE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_SENSITIVITY_RANGE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_SENSITIVITY_RANGE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_TIMESTAMP_SOURCE](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_TIMESTAMP_SOURCE)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_TIMESTAMP_SOURCE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_TIMESTAMP_SOURCE\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_INFO_WHITE_LEVEL](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_INFO_WHITE_LEVEL)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_INFO_WHITE_LEVEL<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_INFO_WHITE_LEVEL\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_MAX_ANALOG_SENSITIVITY](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_MAX_ANALOG_SENSITIVITY)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_MAX_ANALOG_SENSITIVITY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_MAX_ANALOG_SENSITIVITY\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_OPTICAL_BLACK_REGIONS](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_OPTICAL_BLACK_REGIONS)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_OPTICAL_BLACK_REGIONS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_OPTICAL_BLACK_REGIONS\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_ORIENTATION](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_ORIENTATION)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_ORIENTATION<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_ORIENTATION\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_REFERENCE_ILLUMINANT1](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_REFERENCE_ILLUMINANT1)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_REFERENCE_ILLUMINANT1<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_REFERENCE_ILLUMINANT1\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SENSOR_REFERENCE_ILLUMINANT2](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SENSOR_REFERENCE_ILLUMINANT2)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SENSOR_REFERENCE_ILLUMINANT2<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SENSOR_REFERENCE_ILLUMINANT2\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SHADING_AVAILABLE_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SHADING_AVAILABLE_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SHADING_AVAILABLE_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SHADING_AVAILABLE_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_INFO_AVAILABLE_LENS_SHADING_MAP_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#STATISTICS_INFO_AVAILABLE_LENS_SHADING_MAP_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn STATISTICS_INFO_AVAILABLE_LENS_SHADING_MAP_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "STATISTICS_INFO_AVAILABLE_LENS_SHADING_MAP_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_INFO_AVAILABLE_OIS_DATA_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#STATISTICS_INFO_AVAILABLE_OIS_DATA_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn STATISTICS_INFO_AVAILABLE_OIS_DATA_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "STATISTICS_INFO_AVAILABLE_OIS_DATA_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [STATISTICS_INFO_MAX_FACE_COUNT](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#STATISTICS_INFO_MAX_FACE_COUNT)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn STATISTICS_INFO_MAX_FACE_COUNT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "STATISTICS_INFO_MAX_FACE_COUNT\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SYNC_MAX_LATENCY](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#SYNC_MAX_LATENCY)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn SYNC_MAX_LATENCY<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "SYNC_MAX_LATENCY\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [TONEMAP_AVAILABLE_TONE_MAP_MODES](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#TONEMAP_AVAILABLE_TONE_MAP_MODES)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn TONEMAP_AVAILABLE_TONE_MAP_MODES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "TONEMAP_AVAILABLE_TONE_MAP_MODES\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [TONEMAP_MAX_CURVE_POINTS](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html#TONEMAP_MAX_CURVE_POINTS)
        ///
        /// Required feature: android-hardware-camera2-CameraCharacteristics_Key
        #[cfg(any(feature = "all", feature = "android-hardware-camera2-CameraCharacteristics_Key"))]
        pub fn TONEMAP_MAX_CURVE_POINTS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::CameraCharacteristics_Key>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/hardware/camera2/CameraCharacteristics\0", "TONEMAP_MAX_CURVE_POINTS\0", "Landroid/hardware/camera2/CameraCharacteristics$Key;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
