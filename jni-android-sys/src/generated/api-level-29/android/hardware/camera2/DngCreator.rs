// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-hardware-camera2-DngCreator"))]
__jni_bindgen! {
    /// public final class [DngCreator](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html)
    ///
    /// Required feature: android-hardware-camera2-DngCreator
    public final class DngCreator ("android/hardware/camera2/DngCreator") extends crate::java::lang::Object, implements crate::java::lang::AutoCloseable {

        /// [DngCreator](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#DngCreator(android.hardware.camera2.CameraCharacteristics,%20android.hardware.camera2.CaptureResult))
        ///
        /// Required features: "android-hardware-camera2-CameraCharacteristics", "android-hardware-camera2-CaptureResult"
        #[cfg(any(feature = "all", all(feature = "android-hardware-camera2-CameraCharacteristics", feature = "android-hardware-camera2-CaptureResult")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::hardware::camera2::CameraCharacteristics>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::hardware::camera2::CaptureResult>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::hardware::camera2::DngCreator>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/hardware/camera2/CameraCharacteristics;Landroid/hardware/camera2/CaptureResult;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "<init>\0", "(Landroid/hardware/camera2/CameraCharacteristics;Landroid/hardware/camera2/CaptureResult;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOrientation](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#setOrientation(int))
        ///
        /// Required features: "android-hardware-camera2-DngCreator"
        #[cfg(any(feature = "all", all(feature = "android-hardware-camera2-DngCreator")))]
        pub fn setOrientation<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::DngCreator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "setOrientation", .descriptor == "(I)Landroid/hardware/camera2/DngCreator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "setOrientation\0", "(I)Landroid/hardware/camera2/DngCreator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setThumbnail](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#setThumbnail(android.graphics.Bitmap))
        ///
        /// Required features: "android-graphics-Bitmap", "android-hardware-camera2-DngCreator"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap", feature = "android-hardware-camera2-DngCreator")))]
        pub fn setThumbnail_Bitmap<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::DngCreator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "setThumbnail", .descriptor == "(Landroid/graphics/Bitmap;)Landroid/hardware/camera2/DngCreator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "setThumbnail\0", "(Landroid/graphics/Bitmap;)Landroid/hardware/camera2/DngCreator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setThumbnail](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#setThumbnail(android.media.Image))
        ///
        /// Required features: "android-hardware-camera2-DngCreator", "android-media-Image"
        #[cfg(any(feature = "all", all(feature = "android-hardware-camera2-DngCreator", feature = "android-media-Image")))]
        pub fn setThumbnail_Image<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::Image>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::DngCreator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "setThumbnail", .descriptor == "(Landroid/media/Image;)Landroid/hardware/camera2/DngCreator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "setThumbnail\0", "(Landroid/media/Image;)Landroid/hardware/camera2/DngCreator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLocation](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#setLocation(android.location.Location))
        ///
        /// Required features: "android-hardware-camera2-DngCreator", "android-location-Location"
        #[cfg(any(feature = "all", all(feature = "android-hardware-camera2-DngCreator", feature = "android-location-Location")))]
        pub fn setLocation<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::location::Location>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::DngCreator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "setLocation", .descriptor == "(Landroid/location/Location;)Landroid/hardware/camera2/DngCreator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "setLocation\0", "(Landroid/location/Location;)Landroid/hardware/camera2/DngCreator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDescription](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#setDescription(java.lang.String))
        ///
        /// Required features: "android-hardware-camera2-DngCreator", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-hardware-camera2-DngCreator", feature = "java-lang-String")))]
        pub fn setDescription<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::camera2::DngCreator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "setDescription", .descriptor == "(Ljava/lang/String;)Landroid/hardware/camera2/DngCreator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "setDescription\0", "(Ljava/lang/String;)Landroid/hardware/camera2/DngCreator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeInputStream](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#writeInputStream(java.io.OutputStream,%20android.util.Size,%20java.io.InputStream,%20long))
        ///
        /// Required features: "android-util-Size", "java-io-InputStream", "java-io-OutputStream"
        #[cfg(any(feature = "all", all(feature = "android-util-Size", feature = "java-io-InputStream", feature = "java-io-OutputStream")))]
        pub fn writeInputStream<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::OutputStream>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::Size>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::InputStream>>, arg3: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "writeInputStream", .descriptor == "(Ljava/io/OutputStream;Landroid/util/Size;Ljava/io/InputStream;J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "writeInputStream\0", "(Ljava/io/OutputStream;Landroid/util/Size;Ljava/io/InputStream;J)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeByteBuffer](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#writeByteBuffer(java.io.OutputStream,%20android.util.Size,%20java.nio.ByteBuffer,%20long))
        ///
        /// Required features: "android-util-Size", "java-io-OutputStream", "java-nio-ByteBuffer"
        #[cfg(any(feature = "all", all(feature = "android-util-Size", feature = "java-io-OutputStream", feature = "java-nio-ByteBuffer")))]
        pub fn writeByteBuffer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::OutputStream>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::Size>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::ByteBuffer>>, arg3: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "writeByteBuffer", .descriptor == "(Ljava/io/OutputStream;Landroid/util/Size;Ljava/nio/ByteBuffer;J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "writeByteBuffer\0", "(Ljava/io/OutputStream;Landroid/util/Size;Ljava/nio/ByteBuffer;J)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeImage](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#writeImage(java.io.OutputStream,%20android.media.Image))
        ///
        /// Required features: "android-media-Image", "java-io-OutputStream"
        #[cfg(any(feature = "all", all(feature = "android-media-Image", feature = "java-io-OutputStream")))]
        pub fn writeImage<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::OutputStream>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::Image>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "writeImage", .descriptor == "(Ljava/io/OutputStream;Landroid/media/Image;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "writeImage\0", "(Ljava/io/OutputStream;Landroid/media/Image;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [close](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#close())
        pub fn close<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/camera2/DngCreator", java.flags == PUBLIC, .name == "close", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "close\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [finalize](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#finalize())
        // fn finalize<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/hardware/camera2/DngCreator", java.flags == PROTECTED, .name == "finalize", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/camera2/DngCreator\0", "finalize\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [MAX_THUMBNAIL_DIMENSION](https://developer.android.com/reference/android/hardware/camera2/DngCreator.html#MAX_THUMBNAIL_DIMENSION)
        pub const MAX_THUMBNAIL_DIMENSION : i32 = 256;
    }
}
