// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-hardware-ConsumerIrManager_CarrierFrequencyRange"))]
__jni_bindgen! {
    /// public final class [ConsumerIrManager.CarrierFrequencyRange](https://developer.android.com/reference/android/hardware/ConsumerIrManager.CarrierFrequencyRange.html)
    ///
    /// Required feature: android-hardware-ConsumerIrManager_CarrierFrequencyRange
    public final class ConsumerIrManager_CarrierFrequencyRange ("android/hardware/ConsumerIrManager$CarrierFrequencyRange") extends crate::java::lang::Object {

        /// [CarrierFrequencyRange](https://developer.android.com/reference/android/hardware/ConsumerIrManager.CarrierFrequencyRange.html#CarrierFrequencyRange(android.hardware.ConsumerIrManager,%20int,%20int))
        ///
        /// Required features: "android-hardware-ConsumerIrManager"
        #[cfg(any(feature = "all", all(feature = "android-hardware-ConsumerIrManager")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::hardware::ConsumerIrManager>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::hardware::ConsumerIrManager_CarrierFrequencyRange>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/ConsumerIrManager$CarrierFrequencyRange", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/hardware/ConsumerIrManager;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/ConsumerIrManager$CarrierFrequencyRange\0", "<init>\0", "(Landroid/hardware/ConsumerIrManager;II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinFrequency](https://developer.android.com/reference/android/hardware/ConsumerIrManager.CarrierFrequencyRange.html#getMinFrequency())
        pub fn getMinFrequency<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/ConsumerIrManager$CarrierFrequencyRange", java.flags == PUBLIC, .name == "getMinFrequency", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/ConsumerIrManager$CarrierFrequencyRange\0", "getMinFrequency\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxFrequency](https://developer.android.com/reference/android/hardware/ConsumerIrManager.CarrierFrequencyRange.html#getMaxFrequency())
        pub fn getMaxFrequency<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/ConsumerIrManager$CarrierFrequencyRange", java.flags == PUBLIC, .name == "getMaxFrequency", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/ConsumerIrManager$CarrierFrequencyRange\0", "getMaxFrequency\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::hardware::ConsumerIrManager>> { ... }
    }
}
