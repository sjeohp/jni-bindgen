// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-hardware-Camera_Area"))]
__jni_bindgen! {
    /// public class [Camera.Area](https://developer.android.com/reference/android/hardware/Camera.Area.html)
    ///
    /// Required feature: android-hardware-Camera_Area
    #[deprecated] public class Camera_Area ("android/hardware/Camera$Area") extends crate::java::lang::Object {

        /// [Area](https://developer.android.com/reference/android/hardware/Camera.Area.html#Area(android.graphics.Rect,%20int))
        ///
        /// Required features: "android-graphics-Rect"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Rect")))]
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Rect>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::hardware::Camera_Area>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/Camera$Area", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/graphics/Rect;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/Camera$Area\0", "<init>\0", "(Landroid/graphics/Rect;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/hardware/Camera.Area.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        #[deprecated] pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/hardware/Camera$Area", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/hardware/Camera$Area\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public [rect](https://developer.android.com/reference/android/hardware/Camera.Area.html#rect)
        ///
        /// Required feature: android-graphics-Rect
        #[cfg(any(feature = "all", feature = "android-graphics-Rect"))]
        #[deprecated] pub fn rect<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Rect>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/hardware/Camera$Area\0", "rect\0", "Landroid/graphics/Rect;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [rect](https://developer.android.com/reference/android/hardware/Camera.Area.html#rect)
        ///
        /// Required feature: android-graphics-Rect
        #[cfg(any(feature = "all", feature = "android-graphics-Rect"))]
        #[deprecated] pub fn set_rect<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::graphics::Rect>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/hardware/Camera$Area\0", "rect\0", "Landroid/graphics/Rect;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [weight](https://developer.android.com/reference/android/hardware/Camera.Area.html#weight)
        #[deprecated] pub fn weight<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/hardware/Camera$Area\0", "weight\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [weight](https://developer.android.com/reference/android/hardware/Camera.Area.html#weight)
        #[deprecated] pub fn set_weight<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/hardware/Camera$Area\0", "weight\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }
    }
}
