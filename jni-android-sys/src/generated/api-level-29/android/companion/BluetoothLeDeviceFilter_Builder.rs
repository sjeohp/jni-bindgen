// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-companion-BluetoothLeDeviceFilter_Builder"))]
__jni_bindgen! {
    /// public final class [BluetoothLeDeviceFilter.Builder](https://developer.android.com/reference/android/companion/BluetoothLeDeviceFilter.Builder.html)
    ///
    /// Required feature: android-companion-BluetoothLeDeviceFilter_Builder
    public final class BluetoothLeDeviceFilter_Builder ("android/companion/BluetoothLeDeviceFilter$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/companion/BluetoothLeDeviceFilter.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::companion::BluetoothLeDeviceFilter_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/BluetoothLeDeviceFilter$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/BluetoothLeDeviceFilter$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNamePattern](https://developer.android.com/reference/android/companion/BluetoothLeDeviceFilter.Builder.html#setNamePattern(java.util.regex.Pattern))
        ///
        /// Required features: "android-companion-BluetoothLeDeviceFilter_Builder", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-companion-BluetoothLeDeviceFilter_Builder", feature = "java-util-regex-Pattern")))]
        pub fn setNamePattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::companion::BluetoothLeDeviceFilter_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/BluetoothLeDeviceFilter$Builder", java.flags == PUBLIC, .name == "setNamePattern", .descriptor == "(Ljava/util/regex/Pattern;)Landroid/companion/BluetoothLeDeviceFilter$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/BluetoothLeDeviceFilter$Builder\0", "setNamePattern\0", "(Ljava/util/regex/Pattern;)Landroid/companion/BluetoothLeDeviceFilter$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setScanFilter](https://developer.android.com/reference/android/companion/BluetoothLeDeviceFilter.Builder.html#setScanFilter(android.bluetooth.le.ScanFilter))
        ///
        /// Required features: "android-bluetooth-le-ScanFilter", "android-companion-BluetoothLeDeviceFilter_Builder"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-le-ScanFilter", feature = "android-companion-BluetoothLeDeviceFilter_Builder")))]
        pub fn setScanFilter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::le::ScanFilter>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::companion::BluetoothLeDeviceFilter_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/BluetoothLeDeviceFilter$Builder", java.flags == PUBLIC, .name == "setScanFilter", .descriptor == "(Landroid/bluetooth/le/ScanFilter;)Landroid/companion/BluetoothLeDeviceFilter$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/BluetoothLeDeviceFilter$Builder\0", "setScanFilter\0", "(Landroid/bluetooth/le/ScanFilter;)Landroid/companion/BluetoothLeDeviceFilter$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRawDataFilter](https://developer.android.com/reference/android/companion/BluetoothLeDeviceFilter.Builder.html#setRawDataFilter(byte%5B%5D,%20byte%5B%5D))
        ///
        /// Required features: "android-companion-BluetoothLeDeviceFilter_Builder"
        #[cfg(any(feature = "all", all(feature = "android-companion-BluetoothLeDeviceFilter_Builder")))]
        pub fn setRawDataFilter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::companion::BluetoothLeDeviceFilter_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/BluetoothLeDeviceFilter$Builder", java.flags == PUBLIC, .name == "setRawDataFilter", .descriptor == "([B[B)Landroid/companion/BluetoothLeDeviceFilter$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/BluetoothLeDeviceFilter$Builder\0", "setRawDataFilter\0", "([B[B)Landroid/companion/BluetoothLeDeviceFilter$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRenameFromBytes](https://developer.android.com/reference/android/companion/BluetoothLeDeviceFilter.Builder.html#setRenameFromBytes(java.lang.String,%20java.lang.String,%20int,%20int,%20java.nio.ByteOrder))
        ///
        /// Required features: "android-companion-BluetoothLeDeviceFilter_Builder", "java-lang-String", "java-nio-ByteOrder"
        #[cfg(any(feature = "all", all(feature = "android-companion-BluetoothLeDeviceFilter_Builder", feature = "java-lang-String", feature = "java-nio-ByteOrder")))]
        pub fn setRenameFromBytes<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::ByteOrder>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::companion::BluetoothLeDeviceFilter_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/BluetoothLeDeviceFilter$Builder", java.flags == PUBLIC, .name == "setRenameFromBytes", .descriptor == "(Ljava/lang/String;Ljava/lang/String;IILjava/nio/ByteOrder;)Landroid/companion/BluetoothLeDeviceFilter$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/BluetoothLeDeviceFilter$Builder\0", "setRenameFromBytes\0", "(Ljava/lang/String;Ljava/lang/String;IILjava/nio/ByteOrder;)Landroid/companion/BluetoothLeDeviceFilter$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRenameFromName](https://developer.android.com/reference/android/companion/BluetoothLeDeviceFilter.Builder.html#setRenameFromName(java.lang.String,%20java.lang.String,%20int,%20int))
        ///
        /// Required features: "android-companion-BluetoothLeDeviceFilter_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-companion-BluetoothLeDeviceFilter_Builder", feature = "java-lang-String")))]
        pub fn setRenameFromName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::companion::BluetoothLeDeviceFilter_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/BluetoothLeDeviceFilter$Builder", java.flags == PUBLIC, .name == "setRenameFromName", .descriptor == "(Ljava/lang/String;Ljava/lang/String;II)Landroid/companion/BluetoothLeDeviceFilter$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/BluetoothLeDeviceFilter$Builder\0", "setRenameFromName\0", "(Ljava/lang/String;Ljava/lang/String;II)Landroid/companion/BluetoothLeDeviceFilter$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/companion/BluetoothLeDeviceFilter.Builder.html#build())
        ///
        /// Required features: "android-companion-BluetoothLeDeviceFilter"
        #[cfg(any(feature = "all", all(feature = "android-companion-BluetoothLeDeviceFilter")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::companion::BluetoothLeDeviceFilter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/BluetoothLeDeviceFilter$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/companion/BluetoothLeDeviceFilter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/BluetoothLeDeviceFilter$Builder\0", "build\0", "()Landroid/companion/BluetoothLeDeviceFilter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
