// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-companion-CompanionDeviceManager_Callback"))]
__jni_bindgen! {
    /// public class [CompanionDeviceManager.Callback](https://developer.android.com/reference/android/companion/CompanionDeviceManager.Callback.html)
    ///
    /// Required feature: android-companion-CompanionDeviceManager_Callback
    public class CompanionDeviceManager_Callback ("android/companion/CompanionDeviceManager$Callback") extends crate::java::lang::Object {

        /// [Callback](https://developer.android.com/reference/android/companion/CompanionDeviceManager.Callback.html#Callback())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::companion::CompanionDeviceManager_Callback>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/CompanionDeviceManager$Callback", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/CompanionDeviceManager$Callback\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDeviceFound](https://developer.android.com/reference/android/companion/CompanionDeviceManager.Callback.html#onDeviceFound(android.content.IntentSender))
        ///
        /// Required features: "android-content-IntentSender"
        #[cfg(any(feature = "all", all(feature = "android-content-IntentSender")))]
        pub fn onDeviceFound<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::IntentSender>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/CompanionDeviceManager$Callback", java.flags == PUBLIC | ABSTRACT, .name == "onDeviceFound", .descriptor == "(Landroid/content/IntentSender;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/CompanionDeviceManager$Callback\0", "onDeviceFound\0", "(Landroid/content/IntentSender;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFailure](https://developer.android.com/reference/android/companion/CompanionDeviceManager.Callback.html#onFailure(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn onFailure<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/CompanionDeviceManager$Callback", java.flags == PUBLIC | ABSTRACT, .name == "onFailure", .descriptor == "(Ljava/lang/CharSequence;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/CompanionDeviceManager$Callback\0", "onFailure\0", "(Ljava/lang/CharSequence;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
