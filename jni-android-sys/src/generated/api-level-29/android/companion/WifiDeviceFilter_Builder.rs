// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-companion-WifiDeviceFilter_Builder"))]
__jni_bindgen! {
    /// public final class [WifiDeviceFilter.Builder](https://developer.android.com/reference/android/companion/WifiDeviceFilter.Builder.html)
    ///
    /// Required feature: android-companion-WifiDeviceFilter_Builder
    public final class WifiDeviceFilter_Builder ("android/companion/WifiDeviceFilter$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/companion/WifiDeviceFilter.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::companion::WifiDeviceFilter_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/WifiDeviceFilter$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/WifiDeviceFilter$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNamePattern](https://developer.android.com/reference/android/companion/WifiDeviceFilter.Builder.html#setNamePattern(java.util.regex.Pattern))
        ///
        /// Required features: "android-companion-WifiDeviceFilter_Builder", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-companion-WifiDeviceFilter_Builder", feature = "java-util-regex-Pattern")))]
        pub fn setNamePattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::companion::WifiDeviceFilter_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/WifiDeviceFilter$Builder", java.flags == PUBLIC, .name == "setNamePattern", .descriptor == "(Ljava/util/regex/Pattern;)Landroid/companion/WifiDeviceFilter$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/WifiDeviceFilter$Builder\0", "setNamePattern\0", "(Ljava/util/regex/Pattern;)Landroid/companion/WifiDeviceFilter$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/companion/WifiDeviceFilter.Builder.html#build())
        ///
        /// Required features: "android-companion-WifiDeviceFilter"
        #[cfg(any(feature = "all", all(feature = "android-companion-WifiDeviceFilter")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::companion::WifiDeviceFilter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/companion/WifiDeviceFilter$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/companion/WifiDeviceFilter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/companion/WifiDeviceFilter$Builder\0", "build\0", "()Landroid/companion/WifiDeviceFilter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
