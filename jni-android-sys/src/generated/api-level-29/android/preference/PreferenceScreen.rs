// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-preference-PreferenceScreen"))]
__jni_bindgen! {
    /// public final class [PreferenceScreen](https://developer.android.com/reference/android/preference/PreferenceScreen.html)
    ///
    /// Required feature: android-preference-PreferenceScreen
    #[deprecated] public final class PreferenceScreen ("android/preference/PreferenceScreen") extends crate::android::preference::PreferenceGroup, implements crate::android::widget::AdapterView_OnItemClickListener, crate::android::content::DialogInterface_OnDismissListener {

        // // Not emitting: Non-public method
        // /// [PreferenceScreen](https://developer.android.com/reference/android/preference/PreferenceScreen.html#PreferenceScreen(android.content.Context,%20android.util.AttributeSet))
        // ///
        // /// Required features: "android-content-Context", "android-util-AttributeSet"
        // #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-util-AttributeSet")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::preference::PreferenceScreen>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/preference/PreferenceScreen", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/util/AttributeSet;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "<init>\0", "(Landroid/content/Context;Landroid/util/AttributeSet;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getRootAdapter](https://developer.android.com/reference/android/preference/PreferenceScreen.html#getRootAdapter())
        ///
        /// Required features: "android-widget-ListAdapter"
        #[cfg(any(feature = "all", all(feature = "android-widget-ListAdapter")))]
        #[deprecated] pub fn getRootAdapter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::ListAdapter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceScreen", java.flags == PUBLIC, .name == "getRootAdapter", .descriptor == "()Landroid/widget/ListAdapter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "getRootAdapter\0", "()Landroid/widget/ListAdapter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [onCreateRootAdapter](https://developer.android.com/reference/android/preference/PreferenceScreen.html#onCreateRootAdapter())
        // ///
        // /// Required features: "android-widget-ListAdapter"
        // #[cfg(any(feature = "all", all(feature = "android-widget-ListAdapter")))]
        // #[deprecated] fn onCreateRootAdapter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::ListAdapter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/preference/PreferenceScreen", java.flags == PROTECTED, .name == "onCreateRootAdapter", .descriptor == "()Landroid/widget/ListAdapter;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "onCreateRootAdapter\0", "()Landroid/widget/ListAdapter;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [bind](https://developer.android.com/reference/android/preference/PreferenceScreen.html#bind(android.widget.ListView))
        ///
        /// Required features: "android-widget-ListView"
        #[cfg(any(feature = "all", all(feature = "android-widget-ListView")))]
        #[deprecated] pub fn bind<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::ListView>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceScreen", java.flags == PUBLIC, .name == "bind", .descriptor == "(Landroid/widget/ListView;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "bind\0", "(Landroid/widget/ListView;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [onClick](https://developer.android.com/reference/android/preference/PreferenceScreen.html#onClick())
        // #[deprecated] fn onClick<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/preference/PreferenceScreen", java.flags == PROTECTED, .name == "onClick", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "onClick\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [onDismiss](https://developer.android.com/reference/android/preference/PreferenceScreen.html#onDismiss(android.content.DialogInterface))
        ///
        /// Required features: "android-content-DialogInterface"
        #[cfg(any(feature = "all", all(feature = "android-content-DialogInterface")))]
        #[deprecated] pub fn onDismiss<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceScreen", java.flags == PUBLIC, .name == "onDismiss", .descriptor == "(Landroid/content/DialogInterface;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "onDismiss\0", "(Landroid/content/DialogInterface;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDialog](https://developer.android.com/reference/android/preference/PreferenceScreen.html#getDialog())
        ///
        /// Required features: "android-app-Dialog"
        #[cfg(any(feature = "all", all(feature = "android-app-Dialog")))]
        #[deprecated] pub fn getDialog<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::Dialog>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceScreen", java.flags == PUBLIC, .name == "getDialog", .descriptor == "()Landroid/app/Dialog;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "getDialog\0", "()Landroid/app/Dialog;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onItemClick](https://developer.android.com/reference/android/preference/PreferenceScreen.html#onItemClick(android.widget.AdapterView,%20android.view.View,%20int,%20long))
        ///
        /// Required features: "android-view-View", "android-widget-AdapterView"
        #[cfg(any(feature = "all", all(feature = "android-view-View", feature = "android-widget-AdapterView")))]
        #[deprecated] pub fn onItemClick<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::AdapterView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg2: i32, arg3: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceScreen", java.flags == PUBLIC, .name == "onItemClick", .descriptor == "(Landroid/widget/AdapterView;Landroid/view/View;IJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "onItemClick\0", "(Landroid/widget/AdapterView;Landroid/view/View;IJ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [isOnSameScreenAsChildren](https://developer.android.com/reference/android/preference/PreferenceScreen.html#isOnSameScreenAsChildren())
        // #[deprecated] fn isOnSameScreenAsChildren<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/preference/PreferenceScreen", java.flags == PROTECTED, .name == "isOnSameScreenAsChildren", .descriptor == "()Z"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "isOnSameScreenAsChildren\0", "()Z\0");
        //         __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [onSaveInstanceState](https://developer.android.com/reference/android/preference/PreferenceScreen.html#onSaveInstanceState())
        // ///
        // /// Required features: "android-os-Parcelable"
        // #[cfg(any(feature = "all", all(feature = "android-os-Parcelable")))]
        // #[deprecated] fn onSaveInstanceState<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/preference/PreferenceScreen", java.flags == PROTECTED, .name == "onSaveInstanceState", .descriptor == "()Landroid/os/Parcelable;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "onSaveInstanceState\0", "()Landroid/os/Parcelable;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [onRestoreInstanceState](https://developer.android.com/reference/android/preference/PreferenceScreen.html#onRestoreInstanceState(android.os.Parcelable))
        // ///
        // /// Required features: "android-os-Parcelable"
        // #[cfg(any(feature = "all", all(feature = "android-os-Parcelable")))]
        // #[deprecated] fn onRestoreInstanceState<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcelable>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/preference/PreferenceScreen", java.flags == PROTECTED, .name == "onRestoreInstanceState", .descriptor == "(Landroid/os/Parcelable;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceScreen\0", "onRestoreInstanceState\0", "(Landroid/os/Parcelable;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
