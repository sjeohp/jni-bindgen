// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-preference-PreferenceManager"))]
__jni_bindgen! {
    /// public class [PreferenceManager](https://developer.android.com/reference/android/preference/PreferenceManager.html)
    ///
    /// Required feature: android-preference-PreferenceManager
    #[deprecated] public class PreferenceManager ("android/preference/PreferenceManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [PreferenceManager](https://developer.android.com/reference/android/preference/PreferenceManager.html#PreferenceManager(android.content.Context))
        // ///
        // /// Required features: "android-content-Context"
        // #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::preference::PreferenceManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/preference/PreferenceManager", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/content/Context;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "<init>\0", "(Landroid/content/Context;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [setPreferenceDataStore](https://developer.android.com/reference/android/preference/PreferenceManager.html#setPreferenceDataStore(android.preference.PreferenceDataStore))
        ///
        /// Required features: "android-preference-PreferenceDataStore"
        #[cfg(any(feature = "all", all(feature = "android-preference-PreferenceDataStore")))]
        #[deprecated] pub fn setPreferenceDataStore<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::preference::PreferenceDataStore>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "setPreferenceDataStore", .descriptor == "(Landroid/preference/PreferenceDataStore;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "setPreferenceDataStore\0", "(Landroid/preference/PreferenceDataStore;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPreferenceDataStore](https://developer.android.com/reference/android/preference/PreferenceManager.html#getPreferenceDataStore())
        ///
        /// Required features: "android-preference-PreferenceDataStore"
        #[cfg(any(feature = "all", all(feature = "android-preference-PreferenceDataStore")))]
        #[deprecated] pub fn getPreferenceDataStore<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::preference::PreferenceDataStore>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "getPreferenceDataStore", .descriptor == "()Landroid/preference/PreferenceDataStore;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "getPreferenceDataStore\0", "()Landroid/preference/PreferenceDataStore;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createPreferenceScreen](https://developer.android.com/reference/android/preference/PreferenceManager.html#createPreferenceScreen(android.content.Context))
        ///
        /// Required features: "android-content-Context", "android-preference-PreferenceScreen"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-preference-PreferenceScreen")))]
        #[deprecated] pub fn createPreferenceScreen<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::preference::PreferenceScreen>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "createPreferenceScreen", .descriptor == "(Landroid/content/Context;)Landroid/preference/PreferenceScreen;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "createPreferenceScreen\0", "(Landroid/content/Context;)Landroid/preference/PreferenceScreen;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSharedPreferencesName](https://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferencesName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getSharedPreferencesName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "getSharedPreferencesName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "getSharedPreferencesName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSharedPreferencesName](https://developer.android.com/reference/android/preference/PreferenceManager.html#setSharedPreferencesName(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn setSharedPreferencesName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "setSharedPreferencesName", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "setSharedPreferencesName\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSharedPreferencesMode](https://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferencesMode())
        #[deprecated] pub fn getSharedPreferencesMode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "getSharedPreferencesMode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "getSharedPreferencesMode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSharedPreferencesMode](https://developer.android.com/reference/android/preference/PreferenceManager.html#setSharedPreferencesMode(int))
        #[deprecated] pub fn setSharedPreferencesMode<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "setSharedPreferencesMode", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "setSharedPreferencesMode\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setStorageDefault](https://developer.android.com/reference/android/preference/PreferenceManager.html#setStorageDefault())
        #[deprecated] pub fn setStorageDefault<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "setStorageDefault", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "setStorageDefault\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setStorageDeviceProtected](https://developer.android.com/reference/android/preference/PreferenceManager.html#setStorageDeviceProtected())
        #[deprecated] pub fn setStorageDeviceProtected<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "setStorageDeviceProtected", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "setStorageDeviceProtected\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isStorageDefault](https://developer.android.com/reference/android/preference/PreferenceManager.html#isStorageDefault())
        #[deprecated] pub fn isStorageDefault<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "isStorageDefault", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "isStorageDefault\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isStorageDeviceProtected](https://developer.android.com/reference/android/preference/PreferenceManager.html#isStorageDeviceProtected())
        #[deprecated] pub fn isStorageDeviceProtected<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "isStorageDeviceProtected", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "isStorageDeviceProtected\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSharedPreferences](https://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferences())
        ///
        /// Required features: "android-content-SharedPreferences"
        #[cfg(any(feature = "all", all(feature = "android-content-SharedPreferences")))]
        #[deprecated] pub fn getSharedPreferences<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SharedPreferences>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "getSharedPreferences", .descriptor == "()Landroid/content/SharedPreferences;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "getSharedPreferences\0", "()Landroid/content/SharedPreferences;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultSharedPreferences](https://developer.android.com/reference/android/preference/PreferenceManager.html#getDefaultSharedPreferences(android.content.Context))
        ///
        /// Required features: "android-content-Context", "android-content-SharedPreferences"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-content-SharedPreferences")))]
        #[deprecated] pub fn getDefaultSharedPreferences<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SharedPreferences>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC | STATIC, .name == "getDefaultSharedPreferences", .descriptor == "(Landroid/content/Context;)Landroid/content/SharedPreferences;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/preference/PreferenceManager\0", "getDefaultSharedPreferences\0", "(Landroid/content/Context;)Landroid/content/SharedPreferences;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultSharedPreferencesName](https://developer.android.com/reference/android/preference/PreferenceManager.html#getDefaultSharedPreferencesName(android.content.Context))
        ///
        /// Required features: "android-content-Context", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-lang-String")))]
        #[deprecated] pub fn getDefaultSharedPreferencesName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC | STATIC, .name == "getDefaultSharedPreferencesName", .descriptor == "(Landroid/content/Context;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/preference/PreferenceManager\0", "getDefaultSharedPreferencesName\0", "(Landroid/content/Context;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [findPreference](https://developer.android.com/reference/android/preference/PreferenceManager.html#findPreference(java.lang.CharSequence))
        ///
        /// Required features: "android-preference-Preference", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-preference-Preference", feature = "java-lang-CharSequence")))]
        #[deprecated] pub fn findPreference<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::preference::Preference>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC, .name == "findPreference", .descriptor == "(Ljava/lang/CharSequence;)Landroid/preference/Preference;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/preference/PreferenceManager\0", "findPreference\0", "(Ljava/lang/CharSequence;)Landroid/preference/Preference;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDefaultValues](https://developer.android.com/reference/android/preference/PreferenceManager.html#setDefaultValues(android.content.Context,%20int,%20boolean))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        #[deprecated] pub fn setDefaultValues_Context_int_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: i32, arg2: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC | STATIC, .name == "setDefaultValues", .descriptor == "(Landroid/content/Context;IZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/preference/PreferenceManager\0", "setDefaultValues\0", "(Landroid/content/Context;IZ)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDefaultValues](https://developer.android.com/reference/android/preference/PreferenceManager.html#setDefaultValues(android.content.Context,%20java.lang.String,%20int,%20int,%20boolean))
        ///
        /// Required features: "android-content-Context", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-lang-String")))]
        #[deprecated] pub fn setDefaultValues_Context_String_int_int_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: i32, arg3: i32, arg4: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/preference/PreferenceManager", java.flags == PUBLIC | STATIC, .name == "setDefaultValues", .descriptor == "(Landroid/content/Context;Ljava/lang/String;IIZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/preference/PreferenceManager\0", "setDefaultValues\0", "(Landroid/content/Context;Ljava/lang/String;IIZ)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [KEY_HAS_SET_DEFAULT_VALUES](https://developer.android.com/reference/android/preference/PreferenceManager.html#KEY_HAS_SET_DEFAULT_VALUES)
        #[deprecated] pub const KEY_HAS_SET_DEFAULT_VALUES : &'static str = "_has_set_default_values";

        /// public static final [METADATA_KEY_PREFERENCES](https://developer.android.com/reference/android/preference/PreferenceManager.html#METADATA_KEY_PREFERENCES)
        #[deprecated] pub const METADATA_KEY_PREFERENCES : &'static str = "android.preference";
    }
}
