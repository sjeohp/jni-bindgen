// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-database-MatrixCursor"))]
__jni_bindgen! {
    /// public class [MatrixCursor](https://developer.android.com/reference/android/database/MatrixCursor.html)
    ///
    /// Required feature: android-database-MatrixCursor
    public class MatrixCursor ("android/database/MatrixCursor") extends crate::android::database::AbstractCursor {

        /// [MatrixCursor](https://developer.android.com/reference/android/database/MatrixCursor.html#MatrixCursor(java.lang.String%5B%5D,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::database::MatrixCursor>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "<init>", .descriptor == "([Ljava/lang/String;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "<init>\0", "([Ljava/lang/String;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [MatrixCursor](https://developer.android.com/reference/android/database/MatrixCursor.html#MatrixCursor(java.lang.String%5B%5D))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::database::MatrixCursor>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "<init>", .descriptor == "([Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "<init>\0", "([Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newRow](https://developer.android.com/reference/android/database/MatrixCursor.html#newRow())
        ///
        /// Required features: "android-database-MatrixCursor_RowBuilder"
        #[cfg(any(feature = "all", all(feature = "android-database-MatrixCursor_RowBuilder")))]
        pub fn newRow<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::database::MatrixCursor_RowBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "newRow", .descriptor == "()Landroid/database/MatrixCursor$RowBuilder;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "newRow\0", "()Landroid/database/MatrixCursor$RowBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addRow](https://developer.android.com/reference/android/database/MatrixCursor.html#addRow(java.lang.Object%5B%5D))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn addRow_Object_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::Object, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "addRow", .descriptor == "([Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "addRow\0", "([Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addRow](https://developer.android.com/reference/android/database/MatrixCursor.html#addRow(java.lang.Iterable))
        ///
        /// Required features: "java-lang-Iterable"
        #[cfg(any(feature = "all", all(feature = "java-lang-Iterable")))]
        pub fn addRow_Iterable<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Iterable>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "addRow", .descriptor == "(Ljava/lang/Iterable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "addRow\0", "(Ljava/lang/Iterable;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCount](https://developer.android.com/reference/android/database/MatrixCursor.html#getCount())
        pub fn getCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getColumnNames](https://developer.android.com/reference/android/database/MatrixCursor.html#getColumnNames())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getColumnNames<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getColumnNames", .descriptor == "()[Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getColumnNames\0", "()[Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getString](https://developer.android.com/reference/android/database/MatrixCursor.html#getString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getString<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getShort](https://developer.android.com/reference/android/database/MatrixCursor.html#getShort(int))
        pub fn getShort<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getShort", .descriptor == "(I)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getShort\0", "(I)S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInt](https://developer.android.com/reference/android/database/MatrixCursor.html#getInt(int))
        pub fn getInt<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getInt", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getInt\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLong](https://developer.android.com/reference/android/database/MatrixCursor.html#getLong(int))
        pub fn getLong<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getLong", .descriptor == "(I)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getLong\0", "(I)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFloat](https://developer.android.com/reference/android/database/MatrixCursor.html#getFloat(int))
        pub fn getFloat<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getFloat", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getFloat\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDouble](https://developer.android.com/reference/android/database/MatrixCursor.html#getDouble(int))
        pub fn getDouble<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getDouble", .descriptor == "(I)D"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getDouble\0", "(I)D\0");
                __jni_env.call_double_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBlob](https://developer.android.com/reference/android/database/MatrixCursor.html#getBlob(int))
        pub fn getBlob<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getBlob", .descriptor == "(I)[B"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getBlob\0", "(I)[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getType](https://developer.android.com/reference/android/database/MatrixCursor.html#getType(int))
        pub fn getType<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "getType", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "getType\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNull](https://developer.android.com/reference/android/database/MatrixCursor.html#isNull(int))
        pub fn isNull<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/MatrixCursor", java.flags == PUBLIC, .name == "isNull", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/MatrixCursor\0", "isNull\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
