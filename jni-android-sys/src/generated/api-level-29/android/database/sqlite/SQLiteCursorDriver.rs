// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-database-sqlite-SQLiteCursorDriver"))]
__jni_bindgen! {
    /// public interface [SQLiteCursorDriver](https://developer.android.com/reference/android/database/sqlite/SQLiteCursorDriver.html)
    ///
    /// Required feature: android-database-sqlite-SQLiteCursorDriver
    public interface SQLiteCursorDriver ("android/database/sqlite/SQLiteCursorDriver") extends crate::java::lang::Object {

        /// [query](https://developer.android.com/reference/android/database/sqlite/SQLiteCursorDriver.html#query(android.database.sqlite.SQLiteDatabase.CursorFactory,%20java.lang.String%5B%5D))
        ///
        /// Required features: "android-database-Cursor", "android-database-sqlite-SQLiteDatabase_CursorFactory", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-database-Cursor", feature = "android-database-sqlite-SQLiteDatabase_CursorFactory", feature = "java-lang-String")))]
        pub fn query<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::sqlite::SQLiteDatabase_CursorFactory>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::database::Cursor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/sqlite/SQLiteCursorDriver", java.flags == PUBLIC | ABSTRACT, .name == "query", .descriptor == "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;[Ljava/lang/String;)Landroid/database/Cursor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/sqlite/SQLiteCursorDriver\0", "query\0", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;[Ljava/lang/String;)Landroid/database/Cursor;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cursorDeactivated](https://developer.android.com/reference/android/database/sqlite/SQLiteCursorDriver.html#cursorDeactivated())
        pub fn cursorDeactivated<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/sqlite/SQLiteCursorDriver", java.flags == PUBLIC | ABSTRACT, .name == "cursorDeactivated", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/sqlite/SQLiteCursorDriver\0", "cursorDeactivated\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cursorRequeried](https://developer.android.com/reference/android/database/sqlite/SQLiteCursorDriver.html#cursorRequeried(android.database.Cursor))
        ///
        /// Required features: "android-database-Cursor"
        #[cfg(any(feature = "all", all(feature = "android-database-Cursor")))]
        pub fn cursorRequeried<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/sqlite/SQLiteCursorDriver", java.flags == PUBLIC | ABSTRACT, .name == "cursorRequeried", .descriptor == "(Landroid/database/Cursor;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/sqlite/SQLiteCursorDriver\0", "cursorRequeried\0", "(Landroid/database/Cursor;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cursorClosed](https://developer.android.com/reference/android/database/sqlite/SQLiteCursorDriver.html#cursorClosed())
        pub fn cursorClosed<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/sqlite/SQLiteCursorDriver", java.flags == PUBLIC | ABSTRACT, .name == "cursorClosed", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/sqlite/SQLiteCursorDriver\0", "cursorClosed\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBindArguments](https://developer.android.com/reference/android/database/sqlite/SQLiteCursorDriver.html#setBindArguments(java.lang.String%5B%5D))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setBindArguments<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/database/sqlite/SQLiteCursorDriver", java.flags == PUBLIC | ABSTRACT, .name == "setBindArguments", .descriptor == "([Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/database/sqlite/SQLiteCursorDriver\0", "setBindArguments\0", "([Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
