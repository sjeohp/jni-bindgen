// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-nfc-NdefRecord"))]
__jni_bindgen! {
    /// public final class [NdefRecord](https://developer.android.com/reference/android/nfc/NdefRecord.html)
    ///
    /// Required feature: android-nfc-NdefRecord
    public final class NdefRecord ("android/nfc/NdefRecord") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [NdefRecord](https://developer.android.com/reference/android/nfc/NdefRecord.html#NdefRecord(short,%20byte%5B%5D,%20byte%5B%5D,%20byte%5B%5D))
        pub fn new_short_byte_array_byte_array_byte_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::nfc::NdefRecord>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "<init>", .descriptor == "(S[B[B[B)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "<init>\0", "(S[B[B[B)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [NdefRecord](https://developer.android.com/reference/android/nfc/NdefRecord.html#NdefRecord(byte%5B%5D))
        #[deprecated] pub fn new_byte_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::nfc::NdefRecord>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "<init>", .descriptor == "([B)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "<init>\0", "([B)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createApplicationRecord](https://developer.android.com/reference/android/nfc/NdefRecord.html#createApplicationRecord(java.lang.String))
        ///
        /// Required features: "android-nfc-NdefRecord", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-nfc-NdefRecord", feature = "java-lang-String")))]
        pub fn createApplicationRecord<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::nfc::NdefRecord>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC | STATIC, .name == "createApplicationRecord", .descriptor == "(Ljava/lang/String;)Landroid/nfc/NdefRecord;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/nfc/NdefRecord\0", "createApplicationRecord\0", "(Ljava/lang/String;)Landroid/nfc/NdefRecord;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createUri](https://developer.android.com/reference/android/nfc/NdefRecord.html#createUri(android.net.Uri))
        ///
        /// Required features: "android-net-Uri", "android-nfc-NdefRecord"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri", feature = "android-nfc-NdefRecord")))]
        pub fn createUri_Uri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::nfc::NdefRecord>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC | STATIC, .name == "createUri", .descriptor == "(Landroid/net/Uri;)Landroid/nfc/NdefRecord;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/nfc/NdefRecord\0", "createUri\0", "(Landroid/net/Uri;)Landroid/nfc/NdefRecord;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createUri](https://developer.android.com/reference/android/nfc/NdefRecord.html#createUri(java.lang.String))
        ///
        /// Required features: "android-nfc-NdefRecord", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-nfc-NdefRecord", feature = "java-lang-String")))]
        pub fn createUri_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::nfc::NdefRecord>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC | STATIC, .name == "createUri", .descriptor == "(Ljava/lang/String;)Landroid/nfc/NdefRecord;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/nfc/NdefRecord\0", "createUri\0", "(Ljava/lang/String;)Landroid/nfc/NdefRecord;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createMime](https://developer.android.com/reference/android/nfc/NdefRecord.html#createMime(java.lang.String,%20byte%5B%5D))
        ///
        /// Required features: "android-nfc-NdefRecord", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-nfc-NdefRecord", feature = "java-lang-String")))]
        pub fn createMime<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::nfc::NdefRecord>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC | STATIC, .name == "createMime", .descriptor == "(Ljava/lang/String;[B)Landroid/nfc/NdefRecord;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/nfc/NdefRecord\0", "createMime\0", "(Ljava/lang/String;[B)Landroid/nfc/NdefRecord;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createExternal](https://developer.android.com/reference/android/nfc/NdefRecord.html#createExternal(java.lang.String,%20java.lang.String,%20byte%5B%5D))
        ///
        /// Required features: "android-nfc-NdefRecord", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-nfc-NdefRecord", feature = "java-lang-String")))]
        pub fn createExternal<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::nfc::NdefRecord>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC | STATIC, .name == "createExternal", .descriptor == "(Ljava/lang/String;Ljava/lang/String;[B)Landroid/nfc/NdefRecord;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/nfc/NdefRecord\0", "createExternal\0", "(Ljava/lang/String;Ljava/lang/String;[B)Landroid/nfc/NdefRecord;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createTextRecord](https://developer.android.com/reference/android/nfc/NdefRecord.html#createTextRecord(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-nfc-NdefRecord", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-nfc-NdefRecord", feature = "java-lang-String")))]
        pub fn createTextRecord<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::nfc::NdefRecord>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC | STATIC, .name == "createTextRecord", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Landroid/nfc/NdefRecord;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/nfc/NdefRecord\0", "createTextRecord\0", "(Ljava/lang/String;Ljava/lang/String;)Landroid/nfc/NdefRecord;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTnf](https://developer.android.com/reference/android/nfc/NdefRecord.html#getTnf())
        pub fn getTnf<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "getTnf", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "getTnf\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getType](https://developer.android.com/reference/android/nfc/NdefRecord.html#getType())
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "getType", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "getType\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getId](https://developer.android.com/reference/android/nfc/NdefRecord.html#getId())
        pub fn getId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "getId", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "getId\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPayload](https://developer.android.com/reference/android/nfc/NdefRecord.html#getPayload())
        pub fn getPayload<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "getPayload", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "getPayload\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toByteArray](https://developer.android.com/reference/android/nfc/NdefRecord.html#toByteArray())
        #[deprecated] pub fn toByteArray<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "toByteArray", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "toByteArray\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toMimeType](https://developer.android.com/reference/android/nfc/NdefRecord.html#toMimeType())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toMimeType<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "toMimeType", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "toMimeType\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toUri](https://developer.android.com/reference/android/nfc/NdefRecord.html#toUri())
        ///
        /// Required features: "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri")))]
        pub fn toUri<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "toUri", .descriptor == "()Landroid/net/Uri;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "toUri\0", "()Landroid/net/Uri;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/nfc/NdefRecord.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/nfc/NdefRecord.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/nfc/NdefRecord.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/nfc/NdefRecord.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/nfc/NdefRecord.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NdefRecord", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NdefRecord\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/nfc/NdefRecord.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/nfc/NdefRecord\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [RTD_ALTERNATIVE_CARRIER](https://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_ALTERNATIVE_CARRIER)
        pub fn RTD_ALTERNATIVE_CARRIER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/nfc/NdefRecord\0", "RTD_ALTERNATIVE_CARRIER\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [RTD_HANDOVER_CARRIER](https://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_HANDOVER_CARRIER)
        pub fn RTD_HANDOVER_CARRIER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/nfc/NdefRecord\0", "RTD_HANDOVER_CARRIER\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [RTD_HANDOVER_REQUEST](https://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_HANDOVER_REQUEST)
        pub fn RTD_HANDOVER_REQUEST<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/nfc/NdefRecord\0", "RTD_HANDOVER_REQUEST\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [RTD_HANDOVER_SELECT](https://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_HANDOVER_SELECT)
        pub fn RTD_HANDOVER_SELECT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/nfc/NdefRecord\0", "RTD_HANDOVER_SELECT\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [RTD_SMART_POSTER](https://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_SMART_POSTER)
        pub fn RTD_SMART_POSTER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/nfc/NdefRecord\0", "RTD_SMART_POSTER\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [RTD_TEXT](https://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_TEXT)
        pub fn RTD_TEXT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/nfc/NdefRecord\0", "RTD_TEXT\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [RTD_URI](https://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_URI)
        pub fn RTD_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/nfc/NdefRecord\0", "RTD_URI\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [TNF_ABSOLUTE_URI](https://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_ABSOLUTE_URI)
        pub const TNF_ABSOLUTE_URI : i16 = 3;

        /// public static final [TNF_EMPTY](https://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_EMPTY)
        pub const TNF_EMPTY : i16 = 0;

        /// public static final [TNF_EXTERNAL_TYPE](https://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_EXTERNAL_TYPE)
        pub const TNF_EXTERNAL_TYPE : i16 = 4;

        /// public static final [TNF_MIME_MEDIA](https://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_MIME_MEDIA)
        pub const TNF_MIME_MEDIA : i16 = 2;

        /// public static final [TNF_UNCHANGED](https://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_UNCHANGED)
        pub const TNF_UNCHANGED : i16 = 6;

        /// public static final [TNF_UNKNOWN](https://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_UNKNOWN)
        pub const TNF_UNKNOWN : i16 = 5;

        /// public static final [TNF_WELL_KNOWN](https://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_WELL_KNOWN)
        pub const TNF_WELL_KNOWN : i16 = 1;
    }
}
