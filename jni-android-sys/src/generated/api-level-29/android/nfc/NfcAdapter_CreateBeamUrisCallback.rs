// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-nfc-NfcAdapter_CreateBeamUrisCallback"))]
__jni_bindgen! {
    /// public interface [NfcAdapter.CreateBeamUrisCallback](https://developer.android.com/reference/android/nfc/NfcAdapter.CreateBeamUrisCallback.html)
    ///
    /// Required feature: android-nfc-NfcAdapter_CreateBeamUrisCallback
    #[deprecated] public interface NfcAdapter_CreateBeamUrisCallback ("android/nfc/NfcAdapter$CreateBeamUrisCallback") extends crate::java::lang::Object {

        /// [createBeamUris](https://developer.android.com/reference/android/nfc/NfcAdapter.CreateBeamUrisCallback.html#createBeamUris(android.nfc.NfcEvent))
        ///
        /// Required features: "android-net-Uri", "android-nfc-NfcEvent"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri", feature = "android-nfc-NfcEvent")))]
        #[deprecated] pub fn createBeamUris<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::nfc::NfcEvent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::net::Uri, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/nfc/NfcAdapter$CreateBeamUrisCallback", java.flags == PUBLIC | ABSTRACT, .name == "createBeamUris", .descriptor == "(Landroid/nfc/NfcEvent;)[Landroid/net/Uri;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/nfc/NfcAdapter$CreateBeamUrisCallback\0", "createBeamUris\0", "(Landroid/nfc/NfcEvent;)[Landroid/net/Uri;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
