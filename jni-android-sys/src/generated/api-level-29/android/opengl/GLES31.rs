// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-opengl-GLES31"))]
__jni_bindgen! {
    /// public class [GLES31](https://developer.android.com/reference/android/opengl/GLES31.html)
    ///
    /// Required feature: android-opengl-GLES31
    public class GLES31 ("android/opengl/GLES31") extends crate::android::opengl::GLES30 {

        // // Not emitting: Non-public method
        // /// [GLES31](https://developer.android.com/reference/android/opengl/GLES31.html#GLES31())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::opengl::GLES31>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/opengl/GLES31", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/opengl/GLES31\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [glDispatchCompute](https://developer.android.com/reference/android/opengl/GLES31.html#glDispatchCompute(int,%20int,%20int))
        pub fn glDispatchCompute<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDispatchCompute", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glDispatchCompute\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDispatchComputeIndirect](https://developer.android.com/reference/android/opengl/GLES31.html#glDispatchComputeIndirect(long))
        pub fn glDispatchComputeIndirect<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDispatchComputeIndirect", .descriptor == "(J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glDispatchComputeIndirect\0", "(J)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawArraysIndirect](https://developer.android.com/reference/android/opengl/GLES31.html#glDrawArraysIndirect(int,%20long))
        pub fn glDrawArraysIndirect<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawArraysIndirect", .descriptor == "(IJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glDrawArraysIndirect\0", "(IJ)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawElementsIndirect](https://developer.android.com/reference/android/opengl/GLES31.html#glDrawElementsIndirect(int,%20int,%20long))
        pub fn glDrawElementsIndirect<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawElementsIndirect", .descriptor == "(IIJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glDrawElementsIndirect\0", "(IIJ)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFramebufferParameteri](https://developer.android.com/reference/android/opengl/GLES31.html#glFramebufferParameteri(int,%20int,%20int))
        pub fn glFramebufferParameteri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFramebufferParameteri", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glFramebufferParameteri\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetFramebufferParameteriv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetFramebufferParameteriv(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetFramebufferParameteriv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetFramebufferParameteriv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetFramebufferParameteriv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetFramebufferParameteriv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetFramebufferParameteriv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetFramebufferParameteriv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetFramebufferParameteriv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetFramebufferParameteriv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramInterfaceiv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramInterfaceiv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glGetProgramInterfaceiv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramInterfaceiv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramInterfaceiv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramInterfaceiv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramInterfaceiv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetProgramInterfaceiv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramInterfaceiv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramInterfaceiv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramResourceIndex](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramResourceIndex(int,%20int,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetProgramResourceIndex<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramResourceIndex", .descriptor == "(IILjava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramResourceIndex\0", "(IILjava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramResourceName](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramResourceName(int,%20int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetProgramResourceName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramResourceName", .descriptor == "(III)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramResourceName\0", "(III)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramResourceiv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramResourceiv(int,%20int,%20int,%20int,%20int%5B%5D,%20int,%20int,%20int%5B%5D,%20int,%20int%5B%5D,%20int))
        pub fn glGetProgramResourceiv_int_int_int_int_int_array_int_int_int_array_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg5: i32, arg6: i32, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg8: i32, arg9: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg10: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramResourceiv", .descriptor == "(IIII[III[II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7.into()), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9.into()), __jni_bindgen::AsJValue::as_jvalue(&arg10)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramResourceiv\0", "(IIII[III[II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramResourceiv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramResourceiv(int,%20int,%20int,%20int,%20java.nio.IntBuffer,%20int,%20java.nio.IntBuffer,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetProgramResourceiv_int_int_int_int_IntBuffer_int_IntBuffer_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg5: i32, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramResourceiv", .descriptor == "(IIIILjava/nio/IntBuffer;ILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into()), __jni_bindgen::AsJValue::as_jvalue(&arg7.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramResourceiv\0", "(IIIILjava/nio/IntBuffer;ILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramResourceLocation](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramResourceLocation(int,%20int,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetProgramResourceLocation<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramResourceLocation", .descriptor == "(IILjava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramResourceLocation\0", "(IILjava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUseProgramStages](https://developer.android.com/reference/android/opengl/GLES31.html#glUseProgramStages(int,%20int,%20int))
        pub fn glUseProgramStages<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUseProgramStages", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glUseProgramStages\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glActiveShaderProgram](https://developer.android.com/reference/android/opengl/GLES31.html#glActiveShaderProgram(int,%20int))
        pub fn glActiveShaderProgram<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glActiveShaderProgram", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glActiveShaderProgram\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCreateShaderProgramv](https://developer.android.com/reference/android/opengl/GLES31.html#glCreateShaderProgramv(int,%20java.lang.String%5B%5D))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glCreateShaderProgramv<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCreateShaderProgramv", .descriptor == "(I[Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glCreateShaderProgramv\0", "(I[Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindProgramPipeline](https://developer.android.com/reference/android/opengl/GLES31.html#glBindProgramPipeline(int))
        pub fn glBindProgramPipeline<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindProgramPipeline", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glBindProgramPipeline\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteProgramPipelines](https://developer.android.com/reference/android/opengl/GLES31.html#glDeleteProgramPipelines(int,%20int%5B%5D,%20int))
        pub fn glDeleteProgramPipelines_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteProgramPipelines", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glDeleteProgramPipelines\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteProgramPipelines](https://developer.android.com/reference/android/opengl/GLES31.html#glDeleteProgramPipelines(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDeleteProgramPipelines_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteProgramPipelines", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glDeleteProgramPipelines\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenProgramPipelines](https://developer.android.com/reference/android/opengl/GLES31.html#glGenProgramPipelines(int,%20int%5B%5D,%20int))
        pub fn glGenProgramPipelines_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenProgramPipelines", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGenProgramPipelines\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenProgramPipelines](https://developer.android.com/reference/android/opengl/GLES31.html#glGenProgramPipelines(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGenProgramPipelines_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenProgramPipelines", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGenProgramPipelines\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glIsProgramPipeline](https://developer.android.com/reference/android/opengl/GLES31.html#glIsProgramPipeline(int))
        pub fn glIsProgramPipeline<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glIsProgramPipeline", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glIsProgramPipeline\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramPipelineiv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramPipelineiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetProgramPipelineiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramPipelineiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramPipelineiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramPipelineiv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramPipelineiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetProgramPipelineiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramPipelineiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramPipelineiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1i](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1i(int,%20int,%20int))
        pub fn glProgramUniform1i<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1i", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1i\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2i](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2i(int,%20int,%20int,%20int))
        pub fn glProgramUniform2i<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2i", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2i\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3i](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3i(int,%20int,%20int,%20int,%20int))
        pub fn glProgramUniform3i<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3i", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3i\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4i](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4i(int,%20int,%20int,%20int,%20int,%20int))
        pub fn glProgramUniform4i<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4i", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4i\0", "(IIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1ui](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1ui(int,%20int,%20int))
        pub fn glProgramUniform1ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1ui", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1ui\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2ui](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2ui(int,%20int,%20int,%20int))
        pub fn glProgramUniform2ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2ui", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2ui\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3ui](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3ui(int,%20int,%20int,%20int,%20int))
        pub fn glProgramUniform3ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3ui", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3ui\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4ui](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4ui(int,%20int,%20int,%20int,%20int,%20int))
        pub fn glProgramUniform4ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4ui", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4ui\0", "(IIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1f](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1f(int,%20int,%20float))
        pub fn glProgramUniform1f<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1f", .descriptor == "(IIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1f\0", "(IIF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2f](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2f(int,%20int,%20float,%20float))
        pub fn glProgramUniform2f<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: f32, arg3: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2f", .descriptor == "(IIFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2f\0", "(IIFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3f](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3f(int,%20int,%20float,%20float,%20float))
        pub fn glProgramUniform3f<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: f32, arg3: f32, arg4: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3f", .descriptor == "(IIFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3f\0", "(IIFFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4f](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4f(int,%20int,%20float,%20float,%20float,%20float))
        pub fn glProgramUniform4f<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: f32, arg3: f32, arg4: f32, arg5: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4f", .descriptor == "(IIFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4f\0", "(IIFFFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1iv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1iv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glProgramUniform1iv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1iv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1iv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1iv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1iv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glProgramUniform1iv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1iv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1iv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2iv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2iv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glProgramUniform2iv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2iv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2iv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2iv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2iv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glProgramUniform2iv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2iv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2iv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3iv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3iv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glProgramUniform3iv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3iv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3iv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3iv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3iv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glProgramUniform3iv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3iv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3iv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4iv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4iv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glProgramUniform4iv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4iv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4iv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4iv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4iv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glProgramUniform4iv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4iv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4iv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1uiv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1uiv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glProgramUniform1uiv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1uiv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1uiv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1uiv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1uiv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glProgramUniform1uiv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1uiv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1uiv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2uiv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2uiv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glProgramUniform2uiv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2uiv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2uiv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2uiv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2uiv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glProgramUniform2uiv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2uiv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2uiv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3uiv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3uiv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glProgramUniform3uiv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3uiv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3uiv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3uiv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3uiv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glProgramUniform3uiv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3uiv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3uiv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4uiv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4uiv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glProgramUniform4uiv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4uiv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4uiv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4uiv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4uiv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glProgramUniform4uiv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4uiv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4uiv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1fv(int,%20int,%20int,%20float%5B%5D,%20int))
        pub fn glProgramUniform1fv_int_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1fv", .descriptor == "(III[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1fv\0", "(III[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform1fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform1fv(int,%20int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniform1fv_int_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform1fv", .descriptor == "(IIILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform1fv\0", "(IIILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2fv(int,%20int,%20int,%20float%5B%5D,%20int))
        pub fn glProgramUniform2fv_int_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2fv", .descriptor == "(III[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2fv\0", "(III[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform2fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform2fv(int,%20int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniform2fv_int_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform2fv", .descriptor == "(IIILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform2fv\0", "(IIILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3fv(int,%20int,%20int,%20float%5B%5D,%20int))
        pub fn glProgramUniform3fv_int_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3fv", .descriptor == "(III[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3fv\0", "(III[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform3fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform3fv(int,%20int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniform3fv_int_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform3fv", .descriptor == "(IIILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform3fv\0", "(IIILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4fv(int,%20int,%20int,%20float%5B%5D,%20int))
        pub fn glProgramUniform4fv_int_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4fv", .descriptor == "(III[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4fv\0", "(III[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniform4fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniform4fv(int,%20int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniform4fv_int_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniform4fv", .descriptor == "(IIILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniform4fv\0", "(IIILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix2fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix2fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix2fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix2fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix2fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix2fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix2fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix2fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix2fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix2fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix3fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix3fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix3fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix3fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix3fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix3fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix3fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix3fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix3fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix3fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix4fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix4fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix4fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix4fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix4fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix4fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix4fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix4fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix4fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix4fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix2x3fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix2x3fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix2x3fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix2x3fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix2x3fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix2x3fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix2x3fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix2x3fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix2x3fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix2x3fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix3x2fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix3x2fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix3x2fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix3x2fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix3x2fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix3x2fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix3x2fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix3x2fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix3x2fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix3x2fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix2x4fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix2x4fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix2x4fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix2x4fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix2x4fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix2x4fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix2x4fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix2x4fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix2x4fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix2x4fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix4x2fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix4x2fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix4x2fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix4x2fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix4x2fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix4x2fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix4x2fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix4x2fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix4x2fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix4x2fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix3x4fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix3x4fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix3x4fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix3x4fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix3x4fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix3x4fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix3x4fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix3x4fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix3x4fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix3x4fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix4x3fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix4x3fv(int,%20int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glProgramUniformMatrix4x3fv_int_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix4x3fv", .descriptor == "(IIIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix4x3fv\0", "(IIIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramUniformMatrix4x3fv](https://developer.android.com/reference/android/opengl/GLES31.html#glProgramUniformMatrix4x3fv(int,%20int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glProgramUniformMatrix4x3fv_int_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramUniformMatrix4x3fv", .descriptor == "(IIIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glProgramUniformMatrix4x3fv\0", "(IIIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glValidateProgramPipeline](https://developer.android.com/reference/android/opengl/GLES31.html#glValidateProgramPipeline(int))
        pub fn glValidateProgramPipeline<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glValidateProgramPipeline", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glValidateProgramPipeline\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramPipelineInfoLog](https://developer.android.com/reference/android/opengl/GLES31.html#glGetProgramPipelineInfoLog(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetProgramPipelineInfoLog<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramPipelineInfoLog", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetProgramPipelineInfoLog\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindImageTexture](https://developer.android.com/reference/android/opengl/GLES31.html#glBindImageTexture(int,%20int,%20int,%20boolean,%20int,%20int,%20int))
        pub fn glBindImageTexture<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: i32, arg5: i32, arg6: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindImageTexture", .descriptor == "(IIIZIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glBindImageTexture\0", "(IIIZIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetBooleani_v](https://developer.android.com/reference/android/opengl/GLES31.html#glGetBooleani_v(int,%20int,%20bool%5B%5D,%20int))
        pub fn glGetBooleani_v_int_int_boolean_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::BooleanArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetBooleani_v", .descriptor == "(II[ZI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetBooleani_v\0", "(II[ZI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetBooleani_v](https://developer.android.com/reference/android/opengl/GLES31.html#glGetBooleani_v(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetBooleani_v_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetBooleani_v", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetBooleani_v\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMemoryBarrier](https://developer.android.com/reference/android/opengl/GLES31.html#glMemoryBarrier(int))
        pub fn glMemoryBarrier<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMemoryBarrier", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glMemoryBarrier\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMemoryBarrierByRegion](https://developer.android.com/reference/android/opengl/GLES31.html#glMemoryBarrierByRegion(int))
        pub fn glMemoryBarrierByRegion<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMemoryBarrierByRegion", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glMemoryBarrierByRegion\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexStorage2DMultisample](https://developer.android.com/reference/android/opengl/GLES31.html#glTexStorage2DMultisample(int,%20int,%20int,%20int,%20int,%20boolean))
        pub fn glTexStorage2DMultisample<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexStorage2DMultisample", .descriptor == "(IIIIIZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glTexStorage2DMultisample\0", "(IIIIIZ)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetMultisamplefv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetMultisamplefv(int,%20int,%20float%5B%5D,%20int))
        pub fn glGetMultisamplefv_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetMultisamplefv", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetMultisamplefv\0", "(II[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetMultisamplefv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetMultisamplefv(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glGetMultisamplefv_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetMultisamplefv", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetMultisamplefv\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSampleMaski](https://developer.android.com/reference/android/opengl/GLES31.html#glSampleMaski(int,%20int))
        pub fn glSampleMaski<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glSampleMaski", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glSampleMaski\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexLevelParameteriv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetTexLevelParameteriv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glGetTexLevelParameteriv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexLevelParameteriv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetTexLevelParameteriv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexLevelParameteriv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetTexLevelParameteriv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetTexLevelParameteriv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexLevelParameteriv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetTexLevelParameteriv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexLevelParameterfv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetTexLevelParameterfv(int,%20int,%20int,%20float%5B%5D,%20int))
        pub fn glGetTexLevelParameterfv_int_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexLevelParameterfv", .descriptor == "(III[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetTexLevelParameterfv\0", "(III[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexLevelParameterfv](https://developer.android.com/reference/android/opengl/GLES31.html#glGetTexLevelParameterfv(int,%20int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glGetTexLevelParameterfv_int_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexLevelParameterfv", .descriptor == "(IIILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glGetTexLevelParameterfv\0", "(IIILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindVertexBuffer](https://developer.android.com/reference/android/opengl/GLES31.html#glBindVertexBuffer(int,%20int,%20long,%20int))
        pub fn glBindVertexBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i64, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindVertexBuffer", .descriptor == "(IIJI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glBindVertexBuffer\0", "(IIJI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribFormat](https://developer.android.com/reference/android/opengl/GLES31.html#glVertexAttribFormat(int,%20int,%20int,%20boolean,%20int))
        pub fn glVertexAttribFormat<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: bool, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribFormat", .descriptor == "(IIIZI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glVertexAttribFormat\0", "(IIIZI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribIFormat](https://developer.android.com/reference/android/opengl/GLES31.html#glVertexAttribIFormat(int,%20int,%20int,%20int))
        pub fn glVertexAttribIFormat<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribIFormat", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glVertexAttribIFormat\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribBinding](https://developer.android.com/reference/android/opengl/GLES31.html#glVertexAttribBinding(int,%20int))
        pub fn glVertexAttribBinding<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribBinding", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glVertexAttribBinding\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexBindingDivisor](https://developer.android.com/reference/android/opengl/GLES31.html#glVertexBindingDivisor(int,%20int))
        pub fn glVertexBindingDivisor<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES31", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexBindingDivisor", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES31\0", "glVertexBindingDivisor\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [GL_ACTIVE_ATOMIC_COUNTER_BUFFERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ACTIVE_ATOMIC_COUNTER_BUFFERS)
        pub const GL_ACTIVE_ATOMIC_COUNTER_BUFFERS : i32 = 37593;

        /// public static final [GL_ACTIVE_PROGRAM](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ACTIVE_PROGRAM)
        pub const GL_ACTIVE_PROGRAM : i32 = 33369;

        /// public static final [GL_ACTIVE_RESOURCES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ACTIVE_RESOURCES)
        pub const GL_ACTIVE_RESOURCES : i32 = 37621;

        /// public static final [GL_ACTIVE_VARIABLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ACTIVE_VARIABLES)
        pub const GL_ACTIVE_VARIABLES : i32 = 37637;

        /// public static final [GL_ALL_BARRIER_BITS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ALL_BARRIER_BITS)
        pub const GL_ALL_BARRIER_BITS : i32 = -1;

        /// public static final [GL_ALL_SHADER_BITS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ALL_SHADER_BITS)
        pub const GL_ALL_SHADER_BITS : i32 = -1;

        /// public static final [GL_ARRAY_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ARRAY_SIZE)
        pub const GL_ARRAY_SIZE : i32 = 37627;

        /// public static final [GL_ARRAY_STRIDE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ARRAY_STRIDE)
        pub const GL_ARRAY_STRIDE : i32 = 37630;

        /// public static final [GL_ATOMIC_COUNTER_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ATOMIC_COUNTER_BARRIER_BIT)
        pub const GL_ATOMIC_COUNTER_BARRIER_BIT : i32 = 4096;

        /// public static final [GL_ATOMIC_COUNTER_BUFFER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ATOMIC_COUNTER_BUFFER)
        pub const GL_ATOMIC_COUNTER_BUFFER : i32 = 37568;

        /// public static final [GL_ATOMIC_COUNTER_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ATOMIC_COUNTER_BUFFER_BINDING)
        pub const GL_ATOMIC_COUNTER_BUFFER_BINDING : i32 = 37569;

        /// public static final [GL_ATOMIC_COUNTER_BUFFER_INDEX](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ATOMIC_COUNTER_BUFFER_INDEX)
        pub const GL_ATOMIC_COUNTER_BUFFER_INDEX : i32 = 37633;

        /// public static final [GL_ATOMIC_COUNTER_BUFFER_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ATOMIC_COUNTER_BUFFER_SIZE)
        pub const GL_ATOMIC_COUNTER_BUFFER_SIZE : i32 = 37571;

        /// public static final [GL_ATOMIC_COUNTER_BUFFER_START](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ATOMIC_COUNTER_BUFFER_START)
        pub const GL_ATOMIC_COUNTER_BUFFER_START : i32 = 37570;

        /// public static final [GL_BLOCK_INDEX](https://developer.android.com/reference/android/opengl/GLES31.html#GL_BLOCK_INDEX)
        pub const GL_BLOCK_INDEX : i32 = 37629;

        /// public static final [GL_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES31.html#GL_BUFFER_BINDING)
        pub const GL_BUFFER_BINDING : i32 = 37634;

        /// public static final [GL_BUFFER_DATA_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_BUFFER_DATA_SIZE)
        pub const GL_BUFFER_DATA_SIZE : i32 = 37635;

        /// public static final [GL_BUFFER_UPDATE_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_BUFFER_UPDATE_BARRIER_BIT)
        pub const GL_BUFFER_UPDATE_BARRIER_BIT : i32 = 512;

        /// public static final [GL_BUFFER_VARIABLE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_BUFFER_VARIABLE)
        pub const GL_BUFFER_VARIABLE : i32 = 37605;

        /// public static final [GL_COMMAND_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_COMMAND_BARRIER_BIT)
        pub const GL_COMMAND_BARRIER_BIT : i32 = 64;

        /// public static final [GL_COMPUTE_SHADER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_COMPUTE_SHADER)
        pub const GL_COMPUTE_SHADER : i32 = 37305;

        /// public static final [GL_COMPUTE_SHADER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_COMPUTE_SHADER_BIT)
        pub const GL_COMPUTE_SHADER_BIT : i32 = 32;

        /// public static final [GL_COMPUTE_WORK_GROUP_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_COMPUTE_WORK_GROUP_SIZE)
        pub const GL_COMPUTE_WORK_GROUP_SIZE : i32 = 33383;

        /// public static final [GL_DEPTH_STENCIL_TEXTURE_MODE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_DEPTH_STENCIL_TEXTURE_MODE)
        pub const GL_DEPTH_STENCIL_TEXTURE_MODE : i32 = 37098;

        /// public static final [GL_DISPATCH_INDIRECT_BUFFER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_DISPATCH_INDIRECT_BUFFER)
        pub const GL_DISPATCH_INDIRECT_BUFFER : i32 = 37102;

        /// public static final [GL_DISPATCH_INDIRECT_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES31.html#GL_DISPATCH_INDIRECT_BUFFER_BINDING)
        pub const GL_DISPATCH_INDIRECT_BUFFER_BINDING : i32 = 37103;

        /// public static final [GL_DRAW_INDIRECT_BUFFER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_DRAW_INDIRECT_BUFFER)
        pub const GL_DRAW_INDIRECT_BUFFER : i32 = 36671;

        /// public static final [GL_DRAW_INDIRECT_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES31.html#GL_DRAW_INDIRECT_BUFFER_BINDING)
        pub const GL_DRAW_INDIRECT_BUFFER_BINDING : i32 = 36675;

        /// public static final [GL_ELEMENT_ARRAY_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_ELEMENT_ARRAY_BARRIER_BIT)
        pub const GL_ELEMENT_ARRAY_BARRIER_BIT : i32 = 2;

        /// public static final [GL_FRAGMENT_SHADER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_FRAGMENT_SHADER_BIT)
        pub const GL_FRAGMENT_SHADER_BIT : i32 = 2;

        /// public static final [GL_FRAMEBUFFER_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_FRAMEBUFFER_BARRIER_BIT)
        pub const GL_FRAMEBUFFER_BARRIER_BIT : i32 = 1024;

        /// public static final [GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS)
        pub const GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS : i32 = 37652;

        /// public static final [GL_FRAMEBUFFER_DEFAULT_HEIGHT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_FRAMEBUFFER_DEFAULT_HEIGHT)
        pub const GL_FRAMEBUFFER_DEFAULT_HEIGHT : i32 = 37649;

        /// public static final [GL_FRAMEBUFFER_DEFAULT_SAMPLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_FRAMEBUFFER_DEFAULT_SAMPLES)
        pub const GL_FRAMEBUFFER_DEFAULT_SAMPLES : i32 = 37651;

        /// public static final [GL_FRAMEBUFFER_DEFAULT_WIDTH](https://developer.android.com/reference/android/opengl/GLES31.html#GL_FRAMEBUFFER_DEFAULT_WIDTH)
        pub const GL_FRAMEBUFFER_DEFAULT_WIDTH : i32 = 37648;

        /// public static final [GL_IMAGE_2D](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_2D)
        pub const GL_IMAGE_2D : i32 = 36941;

        /// public static final [GL_IMAGE_2D_ARRAY](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_2D_ARRAY)
        pub const GL_IMAGE_2D_ARRAY : i32 = 36947;

        /// public static final [GL_IMAGE_3D](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_3D)
        pub const GL_IMAGE_3D : i32 = 36942;

        /// public static final [GL_IMAGE_BINDING_ACCESS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_BINDING_ACCESS)
        pub const GL_IMAGE_BINDING_ACCESS : i32 = 36670;

        /// public static final [GL_IMAGE_BINDING_FORMAT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_BINDING_FORMAT)
        pub const GL_IMAGE_BINDING_FORMAT : i32 = 36974;

        /// public static final [GL_IMAGE_BINDING_LAYER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_BINDING_LAYER)
        pub const GL_IMAGE_BINDING_LAYER : i32 = 36669;

        /// public static final [GL_IMAGE_BINDING_LAYERED](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_BINDING_LAYERED)
        pub const GL_IMAGE_BINDING_LAYERED : i32 = 36668;

        /// public static final [GL_IMAGE_BINDING_LEVEL](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_BINDING_LEVEL)
        pub const GL_IMAGE_BINDING_LEVEL : i32 = 36667;

        /// public static final [GL_IMAGE_BINDING_NAME](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_BINDING_NAME)
        pub const GL_IMAGE_BINDING_NAME : i32 = 36666;

        /// public static final [GL_IMAGE_CUBE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_CUBE)
        pub const GL_IMAGE_CUBE : i32 = 36944;

        /// public static final [GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS)
        pub const GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS : i32 = 37065;

        /// public static final [GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE)
        pub const GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE : i32 = 37064;

        /// public static final [GL_IMAGE_FORMAT_COMPATIBILITY_TYPE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IMAGE_FORMAT_COMPATIBILITY_TYPE)
        pub const GL_IMAGE_FORMAT_COMPATIBILITY_TYPE : i32 = 37063;

        /// public static final [GL_INT_IMAGE_2D](https://developer.android.com/reference/android/opengl/GLES31.html#GL_INT_IMAGE_2D)
        pub const GL_INT_IMAGE_2D : i32 = 36952;

        /// public static final [GL_INT_IMAGE_2D_ARRAY](https://developer.android.com/reference/android/opengl/GLES31.html#GL_INT_IMAGE_2D_ARRAY)
        pub const GL_INT_IMAGE_2D_ARRAY : i32 = 36958;

        /// public static final [GL_INT_IMAGE_3D](https://developer.android.com/reference/android/opengl/GLES31.html#GL_INT_IMAGE_3D)
        pub const GL_INT_IMAGE_3D : i32 = 36953;

        /// public static final [GL_INT_IMAGE_CUBE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_INT_IMAGE_CUBE)
        pub const GL_INT_IMAGE_CUBE : i32 = 36955;

        /// public static final [GL_INT_SAMPLER_2D_MULTISAMPLE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_INT_SAMPLER_2D_MULTISAMPLE)
        pub const GL_INT_SAMPLER_2D_MULTISAMPLE : i32 = 37129;

        /// public static final [GL_IS_ROW_MAJOR](https://developer.android.com/reference/android/opengl/GLES31.html#GL_IS_ROW_MAJOR)
        pub const GL_IS_ROW_MAJOR : i32 = 37632;

        /// public static final [GL_LOCATION](https://developer.android.com/reference/android/opengl/GLES31.html#GL_LOCATION)
        pub const GL_LOCATION : i32 = 37646;

        /// public static final [GL_MATRIX_STRIDE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MATRIX_STRIDE)
        pub const GL_MATRIX_STRIDE : i32 = 37631;

        /// public static final [GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS)
        pub const GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS : i32 = 37596;

        /// public static final [GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE)
        pub const GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE : i32 = 37592;

        /// public static final [GL_MAX_COLOR_TEXTURE_SAMPLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COLOR_TEXTURE_SAMPLES)
        pub const GL_MAX_COLOR_TEXTURE_SAMPLES : i32 = 37134;

        /// public static final [GL_MAX_COMBINED_ATOMIC_COUNTERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMBINED_ATOMIC_COUNTERS)
        pub const GL_MAX_COMBINED_ATOMIC_COUNTERS : i32 = 37591;

        /// public static final [GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS)
        pub const GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS : i32 = 37585;

        /// public static final [GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS)
        pub const GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS : i32 = 33382;

        /// public static final [GL_MAX_COMBINED_IMAGE_UNIFORMS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMBINED_IMAGE_UNIFORMS)
        pub const GL_MAX_COMBINED_IMAGE_UNIFORMS : i32 = 37071;

        /// public static final [GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES)
        pub const GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES : i32 = 36665;

        /// public static final [GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS)
        pub const GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS : i32 = 37084;

        /// public static final [GL_MAX_COMPUTE_ATOMIC_COUNTERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_ATOMIC_COUNTERS)
        pub const GL_MAX_COMPUTE_ATOMIC_COUNTERS : i32 = 33381;

        /// public static final [GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS)
        pub const GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS : i32 = 33380;

        /// public static final [GL_MAX_COMPUTE_IMAGE_UNIFORMS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_IMAGE_UNIFORMS)
        pub const GL_MAX_COMPUTE_IMAGE_UNIFORMS : i32 = 37309;

        /// public static final [GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS)
        pub const GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS : i32 = 37083;

        /// public static final [GL_MAX_COMPUTE_SHARED_MEMORY_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_SHARED_MEMORY_SIZE)
        pub const GL_MAX_COMPUTE_SHARED_MEMORY_SIZE : i32 = 33378;

        /// public static final [GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS)
        pub const GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS : i32 = 37308;

        /// public static final [GL_MAX_COMPUTE_UNIFORM_BLOCKS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_UNIFORM_BLOCKS)
        pub const GL_MAX_COMPUTE_UNIFORM_BLOCKS : i32 = 37307;

        /// public static final [GL_MAX_COMPUTE_UNIFORM_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_UNIFORM_COMPONENTS)
        pub const GL_MAX_COMPUTE_UNIFORM_COMPONENTS : i32 = 33379;

        /// public static final [GL_MAX_COMPUTE_WORK_GROUP_COUNT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_WORK_GROUP_COUNT)
        pub const GL_MAX_COMPUTE_WORK_GROUP_COUNT : i32 = 37310;

        /// public static final [GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS)
        pub const GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS : i32 = 37099;

        /// public static final [GL_MAX_COMPUTE_WORK_GROUP_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_COMPUTE_WORK_GROUP_SIZE)
        pub const GL_MAX_COMPUTE_WORK_GROUP_SIZE : i32 = 37311;

        /// public static final [GL_MAX_DEPTH_TEXTURE_SAMPLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_DEPTH_TEXTURE_SAMPLES)
        pub const GL_MAX_DEPTH_TEXTURE_SAMPLES : i32 = 37135;

        /// public static final [GL_MAX_FRAGMENT_ATOMIC_COUNTERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_FRAGMENT_ATOMIC_COUNTERS)
        pub const GL_MAX_FRAGMENT_ATOMIC_COUNTERS : i32 = 37590;

        /// public static final [GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS)
        pub const GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS : i32 = 37584;

        /// public static final [GL_MAX_FRAGMENT_IMAGE_UNIFORMS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_FRAGMENT_IMAGE_UNIFORMS)
        pub const GL_MAX_FRAGMENT_IMAGE_UNIFORMS : i32 = 37070;

        /// public static final [GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS)
        pub const GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS : i32 = 37082;

        /// public static final [GL_MAX_FRAMEBUFFER_HEIGHT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_FRAMEBUFFER_HEIGHT)
        pub const GL_MAX_FRAMEBUFFER_HEIGHT : i32 = 37654;

        /// public static final [GL_MAX_FRAMEBUFFER_SAMPLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_FRAMEBUFFER_SAMPLES)
        pub const GL_MAX_FRAMEBUFFER_SAMPLES : i32 = 37656;

        /// public static final [GL_MAX_FRAMEBUFFER_WIDTH](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_FRAMEBUFFER_WIDTH)
        pub const GL_MAX_FRAMEBUFFER_WIDTH : i32 = 37653;

        /// public static final [GL_MAX_IMAGE_UNITS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_IMAGE_UNITS)
        pub const GL_MAX_IMAGE_UNITS : i32 = 36664;

        /// public static final [GL_MAX_INTEGER_SAMPLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_INTEGER_SAMPLES)
        pub const GL_MAX_INTEGER_SAMPLES : i32 = 37136;

        /// public static final [GL_MAX_NAME_LENGTH](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_NAME_LENGTH)
        pub const GL_MAX_NAME_LENGTH : i32 = 37622;

        /// public static final [GL_MAX_NUM_ACTIVE_VARIABLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_NUM_ACTIVE_VARIABLES)
        pub const GL_MAX_NUM_ACTIVE_VARIABLES : i32 = 37623;

        /// public static final [GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET)
        pub const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET : i32 = 36447;

        /// public static final [GL_MAX_SAMPLE_MASK_WORDS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_SAMPLE_MASK_WORDS)
        pub const GL_MAX_SAMPLE_MASK_WORDS : i32 = 36441;

        /// public static final [GL_MAX_SHADER_STORAGE_BLOCK_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_SHADER_STORAGE_BLOCK_SIZE)
        pub const GL_MAX_SHADER_STORAGE_BLOCK_SIZE : i32 = 37086;

        /// public static final [GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS)
        pub const GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS : i32 = 37085;

        /// public static final [GL_MAX_UNIFORM_LOCATIONS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_UNIFORM_LOCATIONS)
        pub const GL_MAX_UNIFORM_LOCATIONS : i32 = 33390;

        /// public static final [GL_MAX_VERTEX_ATOMIC_COUNTERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_VERTEX_ATOMIC_COUNTERS)
        pub const GL_MAX_VERTEX_ATOMIC_COUNTERS : i32 = 37586;

        /// public static final [GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS)
        pub const GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS : i32 = 37580;

        /// public static final [GL_MAX_VERTEX_ATTRIB_BINDINGS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_VERTEX_ATTRIB_BINDINGS)
        pub const GL_MAX_VERTEX_ATTRIB_BINDINGS : i32 = 33498;

        /// public static final [GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET)
        pub const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET : i32 = 33497;

        /// public static final [GL_MAX_VERTEX_ATTRIB_STRIDE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_VERTEX_ATTRIB_STRIDE)
        pub const GL_MAX_VERTEX_ATTRIB_STRIDE : i32 = 33509;

        /// public static final [GL_MAX_VERTEX_IMAGE_UNIFORMS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_VERTEX_IMAGE_UNIFORMS)
        pub const GL_MAX_VERTEX_IMAGE_UNIFORMS : i32 = 37066;

        /// public static final [GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS)
        pub const GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS : i32 = 37078;

        /// public static final [GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET](https://developer.android.com/reference/android/opengl/GLES31.html#GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET)
        pub const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET : i32 = 36446;

        /// public static final [GL_NAME_LENGTH](https://developer.android.com/reference/android/opengl/GLES31.html#GL_NAME_LENGTH)
        pub const GL_NAME_LENGTH : i32 = 37625;

        /// public static final [GL_NUM_ACTIVE_VARIABLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_NUM_ACTIVE_VARIABLES)
        pub const GL_NUM_ACTIVE_VARIABLES : i32 = 37636;

        /// public static final [GL_OFFSET](https://developer.android.com/reference/android/opengl/GLES31.html#GL_OFFSET)
        pub const GL_OFFSET : i32 = 37628;

        /// public static final [GL_PIXEL_BUFFER_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_PIXEL_BUFFER_BARRIER_BIT)
        pub const GL_PIXEL_BUFFER_BARRIER_BIT : i32 = 128;

        /// public static final [GL_PROGRAM_INPUT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_PROGRAM_INPUT)
        pub const GL_PROGRAM_INPUT : i32 = 37603;

        /// public static final [GL_PROGRAM_OUTPUT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_PROGRAM_OUTPUT)
        pub const GL_PROGRAM_OUTPUT : i32 = 37604;

        /// public static final [GL_PROGRAM_PIPELINE_BINDING](https://developer.android.com/reference/android/opengl/GLES31.html#GL_PROGRAM_PIPELINE_BINDING)
        pub const GL_PROGRAM_PIPELINE_BINDING : i32 = 33370;

        /// public static final [GL_PROGRAM_SEPARABLE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_PROGRAM_SEPARABLE)
        pub const GL_PROGRAM_SEPARABLE : i32 = 33368;

        /// public static final [GL_READ_ONLY](https://developer.android.com/reference/android/opengl/GLES31.html#GL_READ_ONLY)
        pub const GL_READ_ONLY : i32 = 35000;

        /// public static final [GL_READ_WRITE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_READ_WRITE)
        pub const GL_READ_WRITE : i32 = 35002;

        /// public static final [GL_REFERENCED_BY_COMPUTE_SHADER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_REFERENCED_BY_COMPUTE_SHADER)
        pub const GL_REFERENCED_BY_COMPUTE_SHADER : i32 = 37643;

        /// public static final [GL_REFERENCED_BY_FRAGMENT_SHADER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_REFERENCED_BY_FRAGMENT_SHADER)
        pub const GL_REFERENCED_BY_FRAGMENT_SHADER : i32 = 37642;

        /// public static final [GL_REFERENCED_BY_VERTEX_SHADER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_REFERENCED_BY_VERTEX_SHADER)
        pub const GL_REFERENCED_BY_VERTEX_SHADER : i32 = 37638;

        /// public static final [GL_SAMPLER_2D_MULTISAMPLE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SAMPLER_2D_MULTISAMPLE)
        pub const GL_SAMPLER_2D_MULTISAMPLE : i32 = 37128;

        /// public static final [GL_SAMPLE_MASK](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SAMPLE_MASK)
        pub const GL_SAMPLE_MASK : i32 = 36433;

        /// public static final [GL_SAMPLE_MASK_VALUE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SAMPLE_MASK_VALUE)
        pub const GL_SAMPLE_MASK_VALUE : i32 = 36434;

        /// public static final [GL_SAMPLE_POSITION](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SAMPLE_POSITION)
        pub const GL_SAMPLE_POSITION : i32 = 36432;

        /// public static final [GL_SHADER_IMAGE_ACCESS_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)
        pub const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT : i32 = 32;

        /// public static final [GL_SHADER_STORAGE_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SHADER_STORAGE_BARRIER_BIT)
        pub const GL_SHADER_STORAGE_BARRIER_BIT : i32 = 8192;

        /// public static final [GL_SHADER_STORAGE_BLOCK](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SHADER_STORAGE_BLOCK)
        pub const GL_SHADER_STORAGE_BLOCK : i32 = 37606;

        /// public static final [GL_SHADER_STORAGE_BUFFER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SHADER_STORAGE_BUFFER)
        pub const GL_SHADER_STORAGE_BUFFER : i32 = 37074;

        /// public static final [GL_SHADER_STORAGE_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SHADER_STORAGE_BUFFER_BINDING)
        pub const GL_SHADER_STORAGE_BUFFER_BINDING : i32 = 37075;

        /// public static final [GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT)
        pub const GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT : i32 = 37087;

        /// public static final [GL_SHADER_STORAGE_BUFFER_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SHADER_STORAGE_BUFFER_SIZE)
        pub const GL_SHADER_STORAGE_BUFFER_SIZE : i32 = 37077;

        /// public static final [GL_SHADER_STORAGE_BUFFER_START](https://developer.android.com/reference/android/opengl/GLES31.html#GL_SHADER_STORAGE_BUFFER_START)
        pub const GL_SHADER_STORAGE_BUFFER_START : i32 = 37076;

        /// public static final [GL_STENCIL_INDEX](https://developer.android.com/reference/android/opengl/GLES31.html#GL_STENCIL_INDEX)
        pub const GL_STENCIL_INDEX : i32 = 6401;

        /// public static final [GL_TEXTURE_2D_MULTISAMPLE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_2D_MULTISAMPLE)
        pub const GL_TEXTURE_2D_MULTISAMPLE : i32 = 37120;

        /// public static final [GL_TEXTURE_ALPHA_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_ALPHA_SIZE)
        pub const GL_TEXTURE_ALPHA_SIZE : i32 = 32863;

        /// public static final [GL_TEXTURE_ALPHA_TYPE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_ALPHA_TYPE)
        pub const GL_TEXTURE_ALPHA_TYPE : i32 = 35859;

        /// public static final [GL_TEXTURE_BINDING_2D_MULTISAMPLE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_BINDING_2D_MULTISAMPLE)
        pub const GL_TEXTURE_BINDING_2D_MULTISAMPLE : i32 = 37124;

        /// public static final [GL_TEXTURE_BLUE_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_BLUE_SIZE)
        pub const GL_TEXTURE_BLUE_SIZE : i32 = 32862;

        /// public static final [GL_TEXTURE_BLUE_TYPE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_BLUE_TYPE)
        pub const GL_TEXTURE_BLUE_TYPE : i32 = 35858;

        /// public static final [GL_TEXTURE_COMPRESSED](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_COMPRESSED)
        pub const GL_TEXTURE_COMPRESSED : i32 = 34465;

        /// public static final [GL_TEXTURE_DEPTH](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_DEPTH)
        pub const GL_TEXTURE_DEPTH : i32 = 32881;

        /// public static final [GL_TEXTURE_DEPTH_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_DEPTH_SIZE)
        pub const GL_TEXTURE_DEPTH_SIZE : i32 = 34890;

        /// public static final [GL_TEXTURE_DEPTH_TYPE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_DEPTH_TYPE)
        pub const GL_TEXTURE_DEPTH_TYPE : i32 = 35862;

        /// public static final [GL_TEXTURE_FETCH_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_FETCH_BARRIER_BIT)
        pub const GL_TEXTURE_FETCH_BARRIER_BIT : i32 = 8;

        /// public static final [GL_TEXTURE_FIXED_SAMPLE_LOCATIONS](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_FIXED_SAMPLE_LOCATIONS)
        pub const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS : i32 = 37127;

        /// public static final [GL_TEXTURE_GREEN_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_GREEN_SIZE)
        pub const GL_TEXTURE_GREEN_SIZE : i32 = 32861;

        /// public static final [GL_TEXTURE_GREEN_TYPE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_GREEN_TYPE)
        pub const GL_TEXTURE_GREEN_TYPE : i32 = 35857;

        /// public static final [GL_TEXTURE_HEIGHT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_HEIGHT)
        pub const GL_TEXTURE_HEIGHT : i32 = 4097;

        /// public static final [GL_TEXTURE_INTERNAL_FORMAT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_INTERNAL_FORMAT)
        pub const GL_TEXTURE_INTERNAL_FORMAT : i32 = 4099;

        /// public static final [GL_TEXTURE_RED_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_RED_SIZE)
        pub const GL_TEXTURE_RED_SIZE : i32 = 32860;

        /// public static final [GL_TEXTURE_RED_TYPE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_RED_TYPE)
        pub const GL_TEXTURE_RED_TYPE : i32 = 35856;

        /// public static final [GL_TEXTURE_SAMPLES](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_SAMPLES)
        pub const GL_TEXTURE_SAMPLES : i32 = 37126;

        /// public static final [GL_TEXTURE_SHARED_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_SHARED_SIZE)
        pub const GL_TEXTURE_SHARED_SIZE : i32 = 35903;

        /// public static final [GL_TEXTURE_STENCIL_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_STENCIL_SIZE)
        pub const GL_TEXTURE_STENCIL_SIZE : i32 = 35057;

        /// public static final [GL_TEXTURE_UPDATE_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_UPDATE_BARRIER_BIT)
        pub const GL_TEXTURE_UPDATE_BARRIER_BIT : i32 = 256;

        /// public static final [GL_TEXTURE_WIDTH](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TEXTURE_WIDTH)
        pub const GL_TEXTURE_WIDTH : i32 = 4096;

        /// public static final [GL_TOP_LEVEL_ARRAY_SIZE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TOP_LEVEL_ARRAY_SIZE)
        pub const GL_TOP_LEVEL_ARRAY_SIZE : i32 = 37644;

        /// public static final [GL_TOP_LEVEL_ARRAY_STRIDE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TOP_LEVEL_ARRAY_STRIDE)
        pub const GL_TOP_LEVEL_ARRAY_STRIDE : i32 = 37645;

        /// public static final [GL_TRANSFORM_FEEDBACK_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TRANSFORM_FEEDBACK_BARRIER_BIT)
        pub const GL_TRANSFORM_FEEDBACK_BARRIER_BIT : i32 = 2048;

        /// public static final [GL_TRANSFORM_FEEDBACK_VARYING](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TRANSFORM_FEEDBACK_VARYING)
        pub const GL_TRANSFORM_FEEDBACK_VARYING : i32 = 37620;

        /// public static final [GL_TYPE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_TYPE)
        pub const GL_TYPE : i32 = 37626;

        /// public static final [GL_UNIFORM](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNIFORM)
        pub const GL_UNIFORM : i32 = 37601;

        /// public static final [GL_UNIFORM_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNIFORM_BARRIER_BIT)
        pub const GL_UNIFORM_BARRIER_BIT : i32 = 4;

        /// public static final [GL_UNIFORM_BLOCK](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNIFORM_BLOCK)
        pub const GL_UNIFORM_BLOCK : i32 = 37602;

        /// public static final [GL_UNSIGNED_INT_ATOMIC_COUNTER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNSIGNED_INT_ATOMIC_COUNTER)
        pub const GL_UNSIGNED_INT_ATOMIC_COUNTER : i32 = 37595;

        /// public static final [GL_UNSIGNED_INT_IMAGE_2D](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNSIGNED_INT_IMAGE_2D)
        pub const GL_UNSIGNED_INT_IMAGE_2D : i32 = 36963;

        /// public static final [GL_UNSIGNED_INT_IMAGE_2D_ARRAY](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNSIGNED_INT_IMAGE_2D_ARRAY)
        pub const GL_UNSIGNED_INT_IMAGE_2D_ARRAY : i32 = 36969;

        /// public static final [GL_UNSIGNED_INT_IMAGE_3D](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNSIGNED_INT_IMAGE_3D)
        pub const GL_UNSIGNED_INT_IMAGE_3D : i32 = 36964;

        /// public static final [GL_UNSIGNED_INT_IMAGE_CUBE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNSIGNED_INT_IMAGE_CUBE)
        pub const GL_UNSIGNED_INT_IMAGE_CUBE : i32 = 36966;

        /// public static final [GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE)
        pub const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE : i32 = 37130;

        /// public static final [GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT)
        pub const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT : i32 = 1;

        /// public static final [GL_VERTEX_ATTRIB_BINDING](https://developer.android.com/reference/android/opengl/GLES31.html#GL_VERTEX_ATTRIB_BINDING)
        pub const GL_VERTEX_ATTRIB_BINDING : i32 = 33492;

        /// public static final [GL_VERTEX_ATTRIB_RELATIVE_OFFSET](https://developer.android.com/reference/android/opengl/GLES31.html#GL_VERTEX_ATTRIB_RELATIVE_OFFSET)
        pub const GL_VERTEX_ATTRIB_RELATIVE_OFFSET : i32 = 33493;

        /// public static final [GL_VERTEX_BINDING_BUFFER](https://developer.android.com/reference/android/opengl/GLES31.html#GL_VERTEX_BINDING_BUFFER)
        pub const GL_VERTEX_BINDING_BUFFER : i32 = 36687;

        /// public static final [GL_VERTEX_BINDING_DIVISOR](https://developer.android.com/reference/android/opengl/GLES31.html#GL_VERTEX_BINDING_DIVISOR)
        pub const GL_VERTEX_BINDING_DIVISOR : i32 = 33494;

        /// public static final [GL_VERTEX_BINDING_OFFSET](https://developer.android.com/reference/android/opengl/GLES31.html#GL_VERTEX_BINDING_OFFSET)
        pub const GL_VERTEX_BINDING_OFFSET : i32 = 33495;

        /// public static final [GL_VERTEX_BINDING_STRIDE](https://developer.android.com/reference/android/opengl/GLES31.html#GL_VERTEX_BINDING_STRIDE)
        pub const GL_VERTEX_BINDING_STRIDE : i32 = 33496;

        /// public static final [GL_VERTEX_SHADER_BIT](https://developer.android.com/reference/android/opengl/GLES31.html#GL_VERTEX_SHADER_BIT)
        pub const GL_VERTEX_SHADER_BIT : i32 = 1;

        /// public static final [GL_WRITE_ONLY](https://developer.android.com/reference/android/opengl/GLES31.html#GL_WRITE_ONLY)
        pub const GL_WRITE_ONLY : i32 = 35001;
    }
}
