// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-opengl-GLES30"))]
__jni_bindgen! {
    /// public class [GLES30](https://developer.android.com/reference/android/opengl/GLES30.html)
    ///
    /// Required feature: android-opengl-GLES30
    public class GLES30 ("android/opengl/GLES30") extends crate::android::opengl::GLES20 {

        /// [GLES30](https://developer.android.com/reference/android/opengl/GLES30.html#GLES30())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::opengl::GLES30>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/opengl/GLES30\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glReadBuffer](https://developer.android.com/reference/android/opengl/GLES30.html#glReadBuffer(int))
        pub fn glReadBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glReadBuffer", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glReadBuffer\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawRangeElements](https://developer.android.com/reference/android/opengl/GLES30.html#glDrawRangeElements(int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glDrawRangeElements_int_int_int_int_int_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawRangeElements", .descriptor == "(IIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDrawRangeElements\0", "(IIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawRangeElements](https://developer.android.com/reference/android/opengl/GLES30.html#glDrawRangeElements(int,%20int,%20int,%20int,%20int,%20int))
        pub fn glDrawRangeElements_int_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawRangeElements", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDrawRangeElements\0", "(IIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glTexImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glTexImage3D_int_int_int_int_int_int_int_int_int_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32, arg9: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexImage3D", .descriptor == "(IIIIIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glTexImage3D\0", "(IIIIIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glTexImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glTexImage3D_int_int_int_int_int_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32, arg9: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexImage3D", .descriptor == "(IIIIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glTexImage3D\0", "(IIIIIIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexSubImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glTexSubImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glTexSubImage3D_int_int_int_int_int_int_int_int_int_int_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32, arg9: i32, arg10: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexSubImage3D", .descriptor == "(IIIIIIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glTexSubImage3D\0", "(IIIIIIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexSubImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glTexSubImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glTexSubImage3D_int_int_int_int_int_int_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32, arg9: i32, arg10: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexSubImage3D", .descriptor == "(IIIIIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glTexSubImage3D\0", "(IIIIIIIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCopyTexSubImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glCopyTexSubImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glCopyTexSubImage3D<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCopyTexSubImage3D", .descriptor == "(IIIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glCopyTexSubImage3D\0", "(IIIIIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCompressedTexImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glCompressedTexImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glCompressedTexImage3D_int_int_int_int_int_int_int_int_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCompressedTexImage3D", .descriptor == "(IIIIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glCompressedTexImage3D\0", "(IIIIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCompressedTexImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glCompressedTexImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glCompressedTexImage3D_int_int_int_int_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCompressedTexImage3D", .descriptor == "(IIIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glCompressedTexImage3D\0", "(IIIIIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCompressedTexSubImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glCompressedTexSubImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glCompressedTexSubImage3D_int_int_int_int_int_int_int_int_int_int_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32, arg9: i32, arg10: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCompressedTexSubImage3D", .descriptor == "(IIIIIIIIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glCompressedTexSubImage3D\0", "(IIIIIIIIIILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCompressedTexSubImage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glCompressedTexSubImage3D(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glCompressedTexSubImage3D_int_int_int_int_int_int_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32, arg9: i32, arg10: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCompressedTexSubImage3D", .descriptor == "(IIIIIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glCompressedTexSubImage3D\0", "(IIIIIIIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenQueries](https://developer.android.com/reference/android/opengl/GLES30.html#glGenQueries(int,%20int%5B%5D,%20int))
        pub fn glGenQueries_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenQueries", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGenQueries\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenQueries](https://developer.android.com/reference/android/opengl/GLES30.html#glGenQueries(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGenQueries_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenQueries", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGenQueries\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteQueries](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteQueries(int,%20int%5B%5D,%20int))
        pub fn glDeleteQueries_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteQueries", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteQueries\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteQueries](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteQueries(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDeleteQueries_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteQueries", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteQueries\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glIsQuery](https://developer.android.com/reference/android/opengl/GLES30.html#glIsQuery(int))
        pub fn glIsQuery<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glIsQuery", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glIsQuery\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBeginQuery](https://developer.android.com/reference/android/opengl/GLES30.html#glBeginQuery(int,%20int))
        pub fn glBeginQuery<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBeginQuery", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glBeginQuery\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glEndQuery](https://developer.android.com/reference/android/opengl/GLES30.html#glEndQuery(int))
        pub fn glEndQuery<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glEndQuery", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glEndQuery\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetQueryiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetQueryiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetQueryiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetQueryiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetQueryiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetQueryiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetQueryiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetQueryiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetQueryiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetQueryiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetQueryObjectuiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetQueryObjectuiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetQueryObjectuiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetQueryObjectuiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetQueryObjectuiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetQueryObjectuiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetQueryObjectuiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetQueryObjectuiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetQueryObjectuiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetQueryObjectuiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUnmapBuffer](https://developer.android.com/reference/android/opengl/GLES30.html#glUnmapBuffer(int))
        pub fn glUnmapBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUnmapBuffer", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUnmapBuffer\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetBufferPointerv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetBufferPointerv(int,%20int))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glGetBufferPointerv<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::Buffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetBufferPointerv", .descriptor == "(II)Ljava/nio/Buffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetBufferPointerv\0", "(II)Ljava/nio/Buffer;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawBuffers](https://developer.android.com/reference/android/opengl/GLES30.html#glDrawBuffers(int,%20int%5B%5D,%20int))
        pub fn glDrawBuffers_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawBuffers", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDrawBuffers\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawBuffers](https://developer.android.com/reference/android/opengl/GLES30.html#glDrawBuffers(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDrawBuffers_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawBuffers", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDrawBuffers\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix2x3fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix2x3fv(int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glUniformMatrix2x3fv_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix2x3fv", .descriptor == "(IIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix2x3fv\0", "(IIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix2x3fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix2x3fv(int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glUniformMatrix2x3fv_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix2x3fv", .descriptor == "(IIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix2x3fv\0", "(IIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix3x2fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix3x2fv(int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glUniformMatrix3x2fv_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix3x2fv", .descriptor == "(IIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix3x2fv\0", "(IIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix3x2fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix3x2fv(int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glUniformMatrix3x2fv_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix3x2fv", .descriptor == "(IIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix3x2fv\0", "(IIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix2x4fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix2x4fv(int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glUniformMatrix2x4fv_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix2x4fv", .descriptor == "(IIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix2x4fv\0", "(IIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix2x4fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix2x4fv(int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glUniformMatrix2x4fv_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix2x4fv", .descriptor == "(IIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix2x4fv\0", "(IIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix4x2fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix4x2fv(int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glUniformMatrix4x2fv_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix4x2fv", .descriptor == "(IIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix4x2fv\0", "(IIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix4x2fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix4x2fv(int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glUniformMatrix4x2fv_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix4x2fv", .descriptor == "(IIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix4x2fv\0", "(IIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix3x4fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix3x4fv(int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glUniformMatrix3x4fv_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix3x4fv", .descriptor == "(IIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix3x4fv\0", "(IIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix3x4fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix3x4fv(int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glUniformMatrix3x4fv_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix3x4fv", .descriptor == "(IIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix3x4fv\0", "(IIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix4x3fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix4x3fv(int,%20int,%20boolean,%20float%5B%5D,%20int))
        pub fn glUniformMatrix4x3fv_int_int_boolean_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix4x3fv", .descriptor == "(IIZ[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix4x3fv\0", "(IIZ[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformMatrix4x3fv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformMatrix4x3fv(int,%20int,%20boolean,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glUniformMatrix4x3fv_int_int_boolean_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformMatrix4x3fv", .descriptor == "(IIZLjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformMatrix4x3fv\0", "(IIZLjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBlitFramebuffer](https://developer.android.com/reference/android/opengl/GLES30.html#glBlitFramebuffer(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glBlitFramebuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32, arg9: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBlitFramebuffer", .descriptor == "(IIIIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glBlitFramebuffer\0", "(IIIIIIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glRenderbufferStorageMultisample](https://developer.android.com/reference/android/opengl/GLES30.html#glRenderbufferStorageMultisample(int,%20int,%20int,%20int,%20int))
        pub fn glRenderbufferStorageMultisample<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glRenderbufferStorageMultisample", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glRenderbufferStorageMultisample\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFramebufferTextureLayer](https://developer.android.com/reference/android/opengl/GLES30.html#glFramebufferTextureLayer(int,%20int,%20int,%20int,%20int))
        pub fn glFramebufferTextureLayer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFramebufferTextureLayer", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glFramebufferTextureLayer\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMapBufferRange](https://developer.android.com/reference/android/opengl/GLES30.html#glMapBufferRange(int,%20int,%20int,%20int))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glMapBufferRange<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::nio::Buffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMapBufferRange", .descriptor == "(IIII)Ljava/nio/Buffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glMapBufferRange\0", "(IIII)Ljava/nio/Buffer;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFlushMappedBufferRange](https://developer.android.com/reference/android/opengl/GLES30.html#glFlushMappedBufferRange(int,%20int,%20int))
        pub fn glFlushMappedBufferRange<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFlushMappedBufferRange", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glFlushMappedBufferRange\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindVertexArray](https://developer.android.com/reference/android/opengl/GLES30.html#glBindVertexArray(int))
        pub fn glBindVertexArray<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindVertexArray", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glBindVertexArray\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteVertexArrays](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteVertexArrays(int,%20int%5B%5D,%20int))
        pub fn glDeleteVertexArrays_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteVertexArrays", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteVertexArrays\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteVertexArrays](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteVertexArrays(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDeleteVertexArrays_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteVertexArrays", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteVertexArrays\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenVertexArrays](https://developer.android.com/reference/android/opengl/GLES30.html#glGenVertexArrays(int,%20int%5B%5D,%20int))
        pub fn glGenVertexArrays_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenVertexArrays", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGenVertexArrays\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenVertexArrays](https://developer.android.com/reference/android/opengl/GLES30.html#glGenVertexArrays(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGenVertexArrays_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenVertexArrays", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGenVertexArrays\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glIsVertexArray](https://developer.android.com/reference/android/opengl/GLES30.html#glIsVertexArray(int))
        pub fn glIsVertexArray<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glIsVertexArray", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glIsVertexArray\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetIntegeri_v](https://developer.android.com/reference/android/opengl/GLES30.html#glGetIntegeri_v(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetIntegeri_v_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetIntegeri_v", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetIntegeri_v\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetIntegeri_v](https://developer.android.com/reference/android/opengl/GLES30.html#glGetIntegeri_v(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetIntegeri_v_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetIntegeri_v", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetIntegeri_v\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBeginTransformFeedback](https://developer.android.com/reference/android/opengl/GLES30.html#glBeginTransformFeedback(int))
        pub fn glBeginTransformFeedback<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBeginTransformFeedback", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glBeginTransformFeedback\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glEndTransformFeedback](https://developer.android.com/reference/android/opengl/GLES30.html#glEndTransformFeedback())
        pub fn glEndTransformFeedback<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glEndTransformFeedback", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glEndTransformFeedback\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindBufferRange](https://developer.android.com/reference/android/opengl/GLES30.html#glBindBufferRange(int,%20int,%20int,%20int,%20int))
        pub fn glBindBufferRange<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindBufferRange", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glBindBufferRange\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindBufferBase](https://developer.android.com/reference/android/opengl/GLES30.html#glBindBufferBase(int,%20int,%20int))
        pub fn glBindBufferBase<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindBufferBase", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glBindBufferBase\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTransformFeedbackVaryings](https://developer.android.com/reference/android/opengl/GLES30.html#glTransformFeedbackVaryings(int,%20java.lang.String%5B%5D,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glTransformFeedbackVaryings<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTransformFeedbackVaryings", .descriptor == "(I[Ljava/lang/String;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glTransformFeedbackVaryings\0", "(I[Ljava/lang/String;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTransformFeedbackVarying](https://developer.android.com/reference/android/opengl/GLES30.html#glGetTransformFeedbackVarying(int,%20int,%20int,%20int%5B%5D,%20int,%20int%5B%5D,%20int,%20int%5B%5D,%20int,%20byte%5B%5D,%20int))
        pub fn glGetTransformFeedbackVarying_int_int_int_int_array_int_int_array_int_int_array_int_byte_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg6: i32, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg8: i32, arg9: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg10: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTransformFeedbackVarying", .descriptor == "(III[II[II[II[BI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7.into()), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9.into()), __jni_bindgen::AsJValue::as_jvalue(&arg10)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetTransformFeedbackVarying\0", "(III[II[II[II[BI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTransformFeedbackVarying](https://developer.android.com/reference/android/opengl/GLES30.html#glGetTransformFeedbackVarying(int,%20int,%20int,%20java.nio.IntBuffer,%20java.nio.IntBuffer,%20java.nio.IntBuffer,%20byte))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        #[deprecated] pub fn glGetTransformFeedbackVarying_int_int_int_IntBuffer_IntBuffer_IntBuffer_byte<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg6: i8) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTransformFeedbackVarying", .descriptor == "(IIILjava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;B)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetTransformFeedbackVarying\0", "(IIILjava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;B)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTransformFeedbackVarying](https://developer.android.com/reference/android/opengl/GLES30.html#glGetTransformFeedbackVarying(int,%20int,%20int,%20java.nio.IntBuffer,%20java.nio.IntBuffer,%20java.nio.IntBuffer,%20java.nio.ByteBuffer))
        ///
        /// Required features: "java-nio-ByteBuffer", "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-ByteBuffer", feature = "java-nio-IntBuffer")))]
        pub fn glGetTransformFeedbackVarying_int_int_int_IntBuffer_IntBuffer_IntBuffer_ByteBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::ByteBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTransformFeedbackVarying", .descriptor == "(IIILjava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/ByteBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetTransformFeedbackVarying\0", "(IIILjava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/ByteBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTransformFeedbackVarying](https://developer.android.com/reference/android/opengl/GLES30.html#glGetTransformFeedbackVarying(int,%20int,%20int%5B%5D,%20int,%20int%5B%5D,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetTransformFeedbackVarying_int_int_int_array_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTransformFeedbackVarying", .descriptor == "(II[II[II)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetTransformFeedbackVarying\0", "(II[II[II)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTransformFeedbackVarying](https://developer.android.com/reference/android/opengl/GLES30.html#glGetTransformFeedbackVarying(int,%20int,%20java.nio.IntBuffer,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-lang-String", "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-nio-IntBuffer")))]
        pub fn glGetTransformFeedbackVarying_int_int_IntBuffer_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTransformFeedbackVarying", .descriptor == "(IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetTransformFeedbackVarying\0", "(IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribIPointer](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribIPointer(int,%20int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glVertexAttribIPointer_int_int_int_int_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC, .name == "glVertexAttribIPointer", .descriptor == "(IIIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribIPointer\0", "(IIIILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribIPointer](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribIPointer(int,%20int,%20int,%20int,%20int))
        pub fn glVertexAttribIPointer_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribIPointer", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribIPointer\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetVertexAttribIiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetVertexAttribIiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetVertexAttribIiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetVertexAttribIiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetVertexAttribIiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetVertexAttribIiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetVertexAttribIiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetVertexAttribIiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetVertexAttribIiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetVertexAttribIiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetVertexAttribIuiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetVertexAttribIuiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetVertexAttribIuiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetVertexAttribIuiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetVertexAttribIuiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetVertexAttribIuiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetVertexAttribIuiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetVertexAttribIuiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetVertexAttribIuiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetVertexAttribIuiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribI4i](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribI4i(int,%20int,%20int,%20int,%20int))
        pub fn glVertexAttribI4i<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribI4i", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribI4i\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribI4ui](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribI4ui(int,%20int,%20int,%20int,%20int))
        pub fn glVertexAttribI4ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribI4ui", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribI4ui\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribI4iv](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribI4iv(int,%20int%5B%5D,%20int))
        pub fn glVertexAttribI4iv_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribI4iv", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribI4iv\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribI4iv](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribI4iv(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glVertexAttribI4iv_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribI4iv", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribI4iv\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribI4uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribI4uiv(int,%20int%5B%5D,%20int))
        pub fn glVertexAttribI4uiv_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribI4uiv", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribI4uiv\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribI4uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribI4uiv(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glVertexAttribI4uiv_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribI4uiv", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribI4uiv\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetUniformuiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetUniformuiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetUniformuiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetUniformuiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetUniformuiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetUniformuiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetUniformuiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetUniformuiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetUniformuiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetUniformuiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetFragDataLocation](https://developer.android.com/reference/android/opengl/GLES30.html#glGetFragDataLocation(int,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetFragDataLocation<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetFragDataLocation", .descriptor == "(ILjava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetFragDataLocation\0", "(ILjava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform1ui](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform1ui(int,%20int))
        pub fn glUniform1ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform1ui", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform1ui\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform2ui](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform2ui(int,%20int,%20int))
        pub fn glUniform2ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform2ui", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform2ui\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform3ui](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform3ui(int,%20int,%20int,%20int))
        pub fn glUniform3ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform3ui", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform3ui\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform4ui](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform4ui(int,%20int,%20int,%20int,%20int))
        pub fn glUniform4ui<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform4ui", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform4ui\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform1uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform1uiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glUniform1uiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform1uiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform1uiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform1uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform1uiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glUniform1uiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform1uiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform1uiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform2uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform2uiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glUniform2uiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform2uiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform2uiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform2uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform2uiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glUniform2uiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform2uiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform2uiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform3uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform3uiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glUniform3uiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform3uiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform3uiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform3uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform3uiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glUniform3uiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform3uiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform3uiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform4uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform4uiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glUniform4uiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform4uiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform4uiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniform4uiv](https://developer.android.com/reference/android/opengl/GLES30.html#glUniform4uiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glUniform4uiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniform4uiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniform4uiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearBufferiv](https://developer.android.com/reference/android/opengl/GLES30.html#glClearBufferiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glClearBufferiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearBufferiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glClearBufferiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearBufferiv](https://developer.android.com/reference/android/opengl/GLES30.html#glClearBufferiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glClearBufferiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearBufferiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glClearBufferiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearBufferuiv](https://developer.android.com/reference/android/opengl/GLES30.html#glClearBufferuiv(int,%20int,%20int%5B%5D,%20int))
        pub fn glClearBufferuiv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearBufferuiv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glClearBufferuiv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearBufferuiv](https://developer.android.com/reference/android/opengl/GLES30.html#glClearBufferuiv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glClearBufferuiv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearBufferuiv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glClearBufferuiv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearBufferfv](https://developer.android.com/reference/android/opengl/GLES30.html#glClearBufferfv(int,%20int,%20float%5B%5D,%20int))
        pub fn glClearBufferfv_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearBufferfv", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glClearBufferfv\0", "(II[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearBufferfv](https://developer.android.com/reference/android/opengl/GLES30.html#glClearBufferfv(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glClearBufferfv_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearBufferfv", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glClearBufferfv\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearBufferfi](https://developer.android.com/reference/android/opengl/GLES30.html#glClearBufferfi(int,%20int,%20float,%20int))
        pub fn glClearBufferfi<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: f32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearBufferfi", .descriptor == "(IIFI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glClearBufferfi\0", "(IIFI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetStringi](https://developer.android.com/reference/android/opengl/GLES30.html#glGetStringi(int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetStringi<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetStringi", .descriptor == "(II)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetStringi\0", "(II)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCopyBufferSubData](https://developer.android.com/reference/android/opengl/GLES30.html#glCopyBufferSubData(int,%20int,%20int,%20int,%20int))
        pub fn glCopyBufferSubData<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCopyBufferSubData", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glCopyBufferSubData\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetUniformIndices](https://developer.android.com/reference/android/opengl/GLES30.html#glGetUniformIndices(int,%20java.lang.String%5B%5D,%20int%5B%5D,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetUniformIndices_int_String_array_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetUniformIndices", .descriptor == "(I[Ljava/lang/String;[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetUniformIndices\0", "(I[Ljava/lang/String;[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetUniformIndices](https://developer.android.com/reference/android/opengl/GLES30.html#glGetUniformIndices(int,%20java.lang.String%5B%5D,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-lang-String", "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-nio-IntBuffer")))]
        pub fn glGetUniformIndices_int_String_array_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetUniformIndices", .descriptor == "(I[Ljava/lang/String;Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetUniformIndices\0", "(I[Ljava/lang/String;Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetActiveUniformsiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetActiveUniformsiv(int,%20int,%20int%5B%5D,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glGetActiveUniformsiv_int_int_int_array_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg6: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetActiveUniformsiv", .descriptor == "(II[III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetActiveUniformsiv\0", "(II[III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetActiveUniformsiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetActiveUniformsiv(int,%20int,%20java.nio.IntBuffer,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetActiveUniformsiv_int_int_IntBuffer_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetActiveUniformsiv", .descriptor == "(IILjava/nio/IntBuffer;ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetActiveUniformsiv\0", "(IILjava/nio/IntBuffer;ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetUniformBlockIndex](https://developer.android.com/reference/android/opengl/GLES30.html#glGetUniformBlockIndex(int,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetUniformBlockIndex<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetUniformBlockIndex", .descriptor == "(ILjava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetUniformBlockIndex\0", "(ILjava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetActiveUniformBlockiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetActiveUniformBlockiv(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glGetActiveUniformBlockiv_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetActiveUniformBlockiv", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetActiveUniformBlockiv\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetActiveUniformBlockiv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetActiveUniformBlockiv(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetActiveUniformBlockiv_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetActiveUniformBlockiv", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetActiveUniformBlockiv\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetActiveUniformBlockName](https://developer.android.com/reference/android/opengl/GLES30.html#glGetActiveUniformBlockName(int,%20int,%20int,%20int%5B%5D,%20int,%20byte%5B%5D,%20int))
        pub fn glGetActiveUniformBlockName_int_int_int_int_array_int_byte_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg6: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetActiveUniformBlockName", .descriptor == "(III[II[BI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetActiveUniformBlockName\0", "(III[II[BI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetActiveUniformBlockName](https://developer.android.com/reference/android/opengl/GLES30.html#glGetActiveUniformBlockName(int,%20int,%20java.nio.Buffer,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glGetActiveUniformBlockName_int_int_Buffer_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetActiveUniformBlockName", .descriptor == "(IILjava/nio/Buffer;Ljava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetActiveUniformBlockName\0", "(IILjava/nio/Buffer;Ljava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetActiveUniformBlockName](https://developer.android.com/reference/android/opengl/GLES30.html#glGetActiveUniformBlockName(int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn glGetActiveUniformBlockName_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetActiveUniformBlockName", .descriptor == "(II)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetActiveUniformBlockName\0", "(II)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glUniformBlockBinding](https://developer.android.com/reference/android/opengl/GLES30.html#glUniformBlockBinding(int,%20int,%20int))
        pub fn glUniformBlockBinding<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glUniformBlockBinding", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glUniformBlockBinding\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawArraysInstanced](https://developer.android.com/reference/android/opengl/GLES30.html#glDrawArraysInstanced(int,%20int,%20int,%20int))
        pub fn glDrawArraysInstanced<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawArraysInstanced", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDrawArraysInstanced\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawElementsInstanced](https://developer.android.com/reference/android/opengl/GLES30.html#glDrawElementsInstanced(int,%20int,%20int,%20java.nio.Buffer,%20int))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glDrawElementsInstanced_int_int_int_Buffer_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawElementsInstanced", .descriptor == "(IIILjava/nio/Buffer;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDrawElementsInstanced\0", "(IIILjava/nio/Buffer;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawElementsInstanced](https://developer.android.com/reference/android/opengl/GLES30.html#glDrawElementsInstanced(int,%20int,%20int,%20int,%20int))
        pub fn glDrawElementsInstanced_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawElementsInstanced", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDrawElementsInstanced\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFenceSync](https://developer.android.com/reference/android/opengl/GLES30.html#glFenceSync(int,%20int))
        pub fn glFenceSync<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFenceSync", .descriptor == "(II)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glFenceSync\0", "(II)J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glIsSync](https://developer.android.com/reference/android/opengl/GLES30.html#glIsSync(long))
        pub fn glIsSync<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glIsSync", .descriptor == "(J)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glIsSync\0", "(J)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteSync](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteSync(long))
        pub fn glDeleteSync<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteSync", .descriptor == "(J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteSync\0", "(J)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClientWaitSync](https://developer.android.com/reference/android/opengl/GLES30.html#glClientWaitSync(long,%20int,%20long))
        pub fn glClientWaitSync<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32, arg2: i64) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClientWaitSync", .descriptor == "(JIJ)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glClientWaitSync\0", "(JIJ)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glWaitSync](https://developer.android.com/reference/android/opengl/GLES30.html#glWaitSync(long,%20int,%20long))
        pub fn glWaitSync<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32, arg2: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glWaitSync", .descriptor == "(JIJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glWaitSync\0", "(JIJ)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetInteger64v](https://developer.android.com/reference/android/opengl/GLES30.html#glGetInteger64v(int,%20long%5B%5D,%20int))
        pub fn glGetInteger64v_int_long_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::LongArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetInteger64v", .descriptor == "(I[JI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetInteger64v\0", "(I[JI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetInteger64v](https://developer.android.com/reference/android/opengl/GLES30.html#glGetInteger64v(int,%20java.nio.LongBuffer))
        ///
        /// Required features: "java-nio-LongBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-LongBuffer")))]
        pub fn glGetInteger64v_int_LongBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::LongBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetInteger64v", .descriptor == "(ILjava/nio/LongBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetInteger64v\0", "(ILjava/nio/LongBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetSynciv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetSynciv(long,%20int,%20int,%20int%5B%5D,%20int,%20int%5B%5D,%20int))
        pub fn glGetSynciv_long_int_int_int_array_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg6: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetSynciv", .descriptor == "(JII[II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetSynciv\0", "(JII[II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetSynciv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetSynciv(long,%20int,%20int,%20java.nio.IntBuffer,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetSynciv_long_int_int_IntBuffer_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetSynciv", .descriptor == "(JIILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetSynciv\0", "(JIILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetInteger64i_v](https://developer.android.com/reference/android/opengl/GLES30.html#glGetInteger64i_v(int,%20int,%20long%5B%5D,%20int))
        pub fn glGetInteger64i_v_int_int_long_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::LongArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetInteger64i_v", .descriptor == "(II[JI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetInteger64i_v\0", "(II[JI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetInteger64i_v](https://developer.android.com/reference/android/opengl/GLES30.html#glGetInteger64i_v(int,%20int,%20java.nio.LongBuffer))
        ///
        /// Required features: "java-nio-LongBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-LongBuffer")))]
        pub fn glGetInteger64i_v_int_int_LongBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::LongBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetInteger64i_v", .descriptor == "(IILjava/nio/LongBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetInteger64i_v\0", "(IILjava/nio/LongBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetBufferParameteri64v](https://developer.android.com/reference/android/opengl/GLES30.html#glGetBufferParameteri64v(int,%20int,%20long%5B%5D,%20int))
        pub fn glGetBufferParameteri64v_int_int_long_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::LongArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetBufferParameteri64v", .descriptor == "(II[JI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetBufferParameteri64v\0", "(II[JI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetBufferParameteri64v](https://developer.android.com/reference/android/opengl/GLES30.html#glGetBufferParameteri64v(int,%20int,%20java.nio.LongBuffer))
        ///
        /// Required features: "java-nio-LongBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-LongBuffer")))]
        pub fn glGetBufferParameteri64v_int_int_LongBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::LongBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetBufferParameteri64v", .descriptor == "(IILjava/nio/LongBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetBufferParameteri64v\0", "(IILjava/nio/LongBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenSamplers](https://developer.android.com/reference/android/opengl/GLES30.html#glGenSamplers(int,%20int%5B%5D,%20int))
        pub fn glGenSamplers_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenSamplers", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGenSamplers\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenSamplers](https://developer.android.com/reference/android/opengl/GLES30.html#glGenSamplers(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGenSamplers_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenSamplers", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGenSamplers\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteSamplers](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteSamplers(int,%20int%5B%5D,%20int))
        pub fn glDeleteSamplers_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteSamplers", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteSamplers\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteSamplers](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteSamplers(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDeleteSamplers_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteSamplers", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteSamplers\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glIsSampler](https://developer.android.com/reference/android/opengl/GLES30.html#glIsSampler(int))
        pub fn glIsSampler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glIsSampler", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glIsSampler\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindSampler](https://developer.android.com/reference/android/opengl/GLES30.html#glBindSampler(int,%20int))
        pub fn glBindSampler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindSampler", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glBindSampler\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSamplerParameteri](https://developer.android.com/reference/android/opengl/GLES30.html#glSamplerParameteri(int,%20int,%20int))
        pub fn glSamplerParameteri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glSamplerParameteri", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glSamplerParameteri\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSamplerParameteriv](https://developer.android.com/reference/android/opengl/GLES30.html#glSamplerParameteriv(int,%20int,%20int%5B%5D,%20int))
        pub fn glSamplerParameteriv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glSamplerParameteriv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glSamplerParameteriv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSamplerParameteriv](https://developer.android.com/reference/android/opengl/GLES30.html#glSamplerParameteriv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glSamplerParameteriv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glSamplerParameteriv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glSamplerParameteriv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSamplerParameterf](https://developer.android.com/reference/android/opengl/GLES30.html#glSamplerParameterf(int,%20int,%20float))
        pub fn glSamplerParameterf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glSamplerParameterf", .descriptor == "(IIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glSamplerParameterf\0", "(IIF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSamplerParameterfv](https://developer.android.com/reference/android/opengl/GLES30.html#glSamplerParameterfv(int,%20int,%20float%5B%5D,%20int))
        pub fn glSamplerParameterfv_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glSamplerParameterfv", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glSamplerParameterfv\0", "(II[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSamplerParameterfv](https://developer.android.com/reference/android/opengl/GLES30.html#glSamplerParameterfv(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glSamplerParameterfv_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glSamplerParameterfv", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glSamplerParameterfv\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetSamplerParameteriv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetSamplerParameteriv(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetSamplerParameteriv_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetSamplerParameteriv", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetSamplerParameteriv\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetSamplerParameteriv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetSamplerParameteriv(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetSamplerParameteriv_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetSamplerParameteriv", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetSamplerParameteriv\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetSamplerParameterfv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetSamplerParameterfv(int,%20int,%20float%5B%5D,%20int))
        pub fn glGetSamplerParameterfv_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetSamplerParameterfv", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetSamplerParameterfv\0", "(II[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetSamplerParameterfv](https://developer.android.com/reference/android/opengl/GLES30.html#glGetSamplerParameterfv(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glGetSamplerParameterfv_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetSamplerParameterfv", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetSamplerParameterfv\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glVertexAttribDivisor](https://developer.android.com/reference/android/opengl/GLES30.html#glVertexAttribDivisor(int,%20int))
        pub fn glVertexAttribDivisor<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glVertexAttribDivisor", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glVertexAttribDivisor\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindTransformFeedback](https://developer.android.com/reference/android/opengl/GLES30.html#glBindTransformFeedback(int,%20int))
        pub fn glBindTransformFeedback<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindTransformFeedback", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glBindTransformFeedback\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteTransformFeedbacks](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteTransformFeedbacks(int,%20int%5B%5D,%20int))
        pub fn glDeleteTransformFeedbacks_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteTransformFeedbacks", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteTransformFeedbacks\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteTransformFeedbacks](https://developer.android.com/reference/android/opengl/GLES30.html#glDeleteTransformFeedbacks(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDeleteTransformFeedbacks_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteTransformFeedbacks", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glDeleteTransformFeedbacks\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenTransformFeedbacks](https://developer.android.com/reference/android/opengl/GLES30.html#glGenTransformFeedbacks(int,%20int%5B%5D,%20int))
        pub fn glGenTransformFeedbacks_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenTransformFeedbacks", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGenTransformFeedbacks\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenTransformFeedbacks](https://developer.android.com/reference/android/opengl/GLES30.html#glGenTransformFeedbacks(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGenTransformFeedbacks_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenTransformFeedbacks", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGenTransformFeedbacks\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glIsTransformFeedback](https://developer.android.com/reference/android/opengl/GLES30.html#glIsTransformFeedback(int))
        pub fn glIsTransformFeedback<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glIsTransformFeedback", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glIsTransformFeedback\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPauseTransformFeedback](https://developer.android.com/reference/android/opengl/GLES30.html#glPauseTransformFeedback())
        pub fn glPauseTransformFeedback<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glPauseTransformFeedback", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glPauseTransformFeedback\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glResumeTransformFeedback](https://developer.android.com/reference/android/opengl/GLES30.html#glResumeTransformFeedback())
        pub fn glResumeTransformFeedback<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glResumeTransformFeedback", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glResumeTransformFeedback\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramBinary](https://developer.android.com/reference/android/opengl/GLES30.html#glGetProgramBinary(int,%20int,%20int%5B%5D,%20int,%20int%5B%5D,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glGetProgramBinary_int_int_int_array_int_int_array_int_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg5: i32, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramBinary", .descriptor == "(II[II[IILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetProgramBinary\0", "(II[II[IILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetProgramBinary](https://developer.android.com/reference/android/opengl/GLES30.html#glGetProgramBinary(int,%20int,%20java.nio.IntBuffer,%20java.nio.IntBuffer,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer", "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer", feature = "java-nio-IntBuffer")))]
        pub fn glGetProgramBinary_int_int_IntBuffer_IntBuffer_Buffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetProgramBinary", .descriptor == "(IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetProgramBinary\0", "(IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramBinary](https://developer.android.com/reference/android/opengl/GLES30.html#glProgramBinary(int,%20int,%20java.nio.Buffer,%20int))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glProgramBinary<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramBinary", .descriptor == "(IILjava/nio/Buffer;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glProgramBinary\0", "(IILjava/nio/Buffer;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glProgramParameteri](https://developer.android.com/reference/android/opengl/GLES30.html#glProgramParameteri(int,%20int,%20int))
        pub fn glProgramParameteri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glProgramParameteri", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glProgramParameteri\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glInvalidateFramebuffer](https://developer.android.com/reference/android/opengl/GLES30.html#glInvalidateFramebuffer(int,%20int,%20int%5B%5D,%20int))
        pub fn glInvalidateFramebuffer_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glInvalidateFramebuffer", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glInvalidateFramebuffer\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glInvalidateFramebuffer](https://developer.android.com/reference/android/opengl/GLES30.html#glInvalidateFramebuffer(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glInvalidateFramebuffer_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glInvalidateFramebuffer", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glInvalidateFramebuffer\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glInvalidateSubFramebuffer](https://developer.android.com/reference/android/opengl/GLES30.html#glInvalidateSubFramebuffer(int,%20int,%20int%5B%5D,%20int,%20int,%20int,%20int,%20int))
        pub fn glInvalidateSubFramebuffer_int_int_int_array_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glInvalidateSubFramebuffer", .descriptor == "(II[IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glInvalidateSubFramebuffer\0", "(II[IIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glInvalidateSubFramebuffer](https://developer.android.com/reference/android/opengl/GLES30.html#glInvalidateSubFramebuffer(int,%20int,%20java.nio.IntBuffer,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glInvalidateSubFramebuffer_int_int_IntBuffer_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>, arg3: i32, arg4: i32, arg5: i32, arg6: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glInvalidateSubFramebuffer", .descriptor == "(IILjava/nio/IntBuffer;IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glInvalidateSubFramebuffer\0", "(IILjava/nio/IntBuffer;IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexStorage2D](https://developer.android.com/reference/android/opengl/GLES30.html#glTexStorage2D(int,%20int,%20int,%20int,%20int))
        pub fn glTexStorage2D<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexStorage2D", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glTexStorage2D\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexStorage3D](https://developer.android.com/reference/android/opengl/GLES30.html#glTexStorage3D(int,%20int,%20int,%20int,%20int,%20int))
        pub fn glTexStorage3D<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexStorage3D", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glTexStorage3D\0", "(IIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetInternalformativ](https://developer.android.com/reference/android/opengl/GLES30.html#glGetInternalformativ(int,%20int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glGetInternalformativ_int_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetInternalformativ", .descriptor == "(IIII[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetInternalformativ\0", "(IIII[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetInternalformativ](https://developer.android.com/reference/android/opengl/GLES30.html#glGetInternalformativ(int,%20int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetInternalformativ_int_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetInternalformativ", .descriptor == "(IIIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glGetInternalformativ\0", "(IIIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glReadPixels](https://developer.android.com/reference/android/opengl/GLES30.html#glReadPixels(int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn glReadPixels<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES30", java.flags == PUBLIC | STATIC | NATIVE, .name == "glReadPixels", .descriptor == "(IIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES30\0", "glReadPixels\0", "(IIIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [GL_ACTIVE_UNIFORM_BLOCKS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_ACTIVE_UNIFORM_BLOCKS)
        pub const GL_ACTIVE_UNIFORM_BLOCKS : i32 = 35382;

        /// public static final [GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)
        pub const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH : i32 = 35381;

        /// public static final [GL_ALREADY_SIGNALED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_ALREADY_SIGNALED)
        pub const GL_ALREADY_SIGNALED : i32 = 37146;

        /// public static final [GL_ANY_SAMPLES_PASSED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_ANY_SAMPLES_PASSED)
        pub const GL_ANY_SAMPLES_PASSED : i32 = 35887;

        /// public static final [GL_ANY_SAMPLES_PASSED_CONSERVATIVE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_ANY_SAMPLES_PASSED_CONSERVATIVE)
        pub const GL_ANY_SAMPLES_PASSED_CONSERVATIVE : i32 = 36202;

        /// public static final [GL_BLUE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_BLUE)
        pub const GL_BLUE : i32 = 6405;

        /// public static final [GL_BUFFER_ACCESS_FLAGS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_BUFFER_ACCESS_FLAGS)
        pub const GL_BUFFER_ACCESS_FLAGS : i32 = 37151;

        /// public static final [GL_BUFFER_MAPPED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_BUFFER_MAPPED)
        pub const GL_BUFFER_MAPPED : i32 = 35004;

        /// public static final [GL_BUFFER_MAP_LENGTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_BUFFER_MAP_LENGTH)
        pub const GL_BUFFER_MAP_LENGTH : i32 = 37152;

        /// public static final [GL_BUFFER_MAP_OFFSET](https://developer.android.com/reference/android/opengl/GLES30.html#GL_BUFFER_MAP_OFFSET)
        pub const GL_BUFFER_MAP_OFFSET : i32 = 37153;

        /// public static final [GL_BUFFER_MAP_POINTER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_BUFFER_MAP_POINTER)
        pub const GL_BUFFER_MAP_POINTER : i32 = 35005;

        /// public static final [GL_COLOR](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR)
        pub const GL_COLOR : i32 = 6144;

        /// public static final [GL_COLOR_ATTACHMENT1](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT1)
        pub const GL_COLOR_ATTACHMENT1 : i32 = 36065;

        /// public static final [GL_COLOR_ATTACHMENT10](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT10)
        pub const GL_COLOR_ATTACHMENT10 : i32 = 36074;

        /// public static final [GL_COLOR_ATTACHMENT11](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT11)
        pub const GL_COLOR_ATTACHMENT11 : i32 = 36075;

        /// public static final [GL_COLOR_ATTACHMENT12](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT12)
        pub const GL_COLOR_ATTACHMENT12 : i32 = 36076;

        /// public static final [GL_COLOR_ATTACHMENT13](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT13)
        pub const GL_COLOR_ATTACHMENT13 : i32 = 36077;

        /// public static final [GL_COLOR_ATTACHMENT14](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT14)
        pub const GL_COLOR_ATTACHMENT14 : i32 = 36078;

        /// public static final [GL_COLOR_ATTACHMENT15](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT15)
        pub const GL_COLOR_ATTACHMENT15 : i32 = 36079;

        /// public static final [GL_COLOR_ATTACHMENT2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT2)
        pub const GL_COLOR_ATTACHMENT2 : i32 = 36066;

        /// public static final [GL_COLOR_ATTACHMENT3](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT3)
        pub const GL_COLOR_ATTACHMENT3 : i32 = 36067;

        /// public static final [GL_COLOR_ATTACHMENT4](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT4)
        pub const GL_COLOR_ATTACHMENT4 : i32 = 36068;

        /// public static final [GL_COLOR_ATTACHMENT5](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT5)
        pub const GL_COLOR_ATTACHMENT5 : i32 = 36069;

        /// public static final [GL_COLOR_ATTACHMENT6](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT6)
        pub const GL_COLOR_ATTACHMENT6 : i32 = 36070;

        /// public static final [GL_COLOR_ATTACHMENT7](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT7)
        pub const GL_COLOR_ATTACHMENT7 : i32 = 36071;

        /// public static final [GL_COLOR_ATTACHMENT8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT8)
        pub const GL_COLOR_ATTACHMENT8 : i32 = 36072;

        /// public static final [GL_COLOR_ATTACHMENT9](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COLOR_ATTACHMENT9)
        pub const GL_COLOR_ATTACHMENT9 : i32 = 36073;

        /// public static final [GL_COMPARE_REF_TO_TEXTURE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPARE_REF_TO_TEXTURE)
        pub const GL_COMPARE_REF_TO_TEXTURE : i32 = 34894;

        /// public static final [GL_COMPRESSED_R11_EAC](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_R11_EAC)
        pub const GL_COMPRESSED_R11_EAC : i32 = 37488;

        /// public static final [GL_COMPRESSED_RG11_EAC](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_RG11_EAC)
        pub const GL_COMPRESSED_RG11_EAC : i32 = 37490;

        /// public static final [GL_COMPRESSED_RGB8_ETC2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_RGB8_ETC2)
        pub const GL_COMPRESSED_RGB8_ETC2 : i32 = 37492;

        /// public static final [GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2)
        pub const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 : i32 = 37494;

        /// public static final [GL_COMPRESSED_RGBA8_ETC2_EAC](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_RGBA8_ETC2_EAC)
        pub const GL_COMPRESSED_RGBA8_ETC2_EAC : i32 = 37496;

        /// public static final [GL_COMPRESSED_SIGNED_R11_EAC](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_SIGNED_R11_EAC)
        pub const GL_COMPRESSED_SIGNED_R11_EAC : i32 = 37489;

        /// public static final [GL_COMPRESSED_SIGNED_RG11_EAC](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_SIGNED_RG11_EAC)
        pub const GL_COMPRESSED_SIGNED_RG11_EAC : i32 = 37491;

        /// public static final [GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC)
        pub const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : i32 = 37497;

        /// public static final [GL_COMPRESSED_SRGB8_ETC2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_SRGB8_ETC2)
        pub const GL_COMPRESSED_SRGB8_ETC2 : i32 = 37493;

        /// public static final [GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2)
        pub const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 : i32 = 37495;

        /// public static final [GL_CONDITION_SATISFIED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_CONDITION_SATISFIED)
        pub const GL_CONDITION_SATISFIED : i32 = 37148;

        /// public static final [GL_COPY_READ_BUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COPY_READ_BUFFER)
        pub const GL_COPY_READ_BUFFER : i32 = 36662;

        /// public static final [GL_COPY_READ_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COPY_READ_BUFFER_BINDING)
        pub const GL_COPY_READ_BUFFER_BINDING : i32 = 36662;

        /// public static final [GL_COPY_WRITE_BUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COPY_WRITE_BUFFER)
        pub const GL_COPY_WRITE_BUFFER : i32 = 36663;

        /// public static final [GL_COPY_WRITE_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_COPY_WRITE_BUFFER_BINDING)
        pub const GL_COPY_WRITE_BUFFER_BINDING : i32 = 36663;

        /// public static final [GL_CURRENT_QUERY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_CURRENT_QUERY)
        pub const GL_CURRENT_QUERY : i32 = 34917;

        /// public static final [GL_DEPTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DEPTH)
        pub const GL_DEPTH : i32 = 6145;

        /// public static final [GL_DEPTH24_STENCIL8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DEPTH24_STENCIL8)
        pub const GL_DEPTH24_STENCIL8 : i32 = 35056;

        /// public static final [GL_DEPTH32F_STENCIL8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DEPTH32F_STENCIL8)
        pub const GL_DEPTH32F_STENCIL8 : i32 = 36013;

        /// public static final [GL_DEPTH_COMPONENT24](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DEPTH_COMPONENT24)
        pub const GL_DEPTH_COMPONENT24 : i32 = 33190;

        /// public static final [GL_DEPTH_COMPONENT32F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DEPTH_COMPONENT32F)
        pub const GL_DEPTH_COMPONENT32F : i32 = 36012;

        /// public static final [GL_DEPTH_STENCIL](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DEPTH_STENCIL)
        pub const GL_DEPTH_STENCIL : i32 = 34041;

        /// public static final [GL_DEPTH_STENCIL_ATTACHMENT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DEPTH_STENCIL_ATTACHMENT)
        pub const GL_DEPTH_STENCIL_ATTACHMENT : i32 = 33306;

        /// public static final [GL_DRAW_BUFFER0](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER0)
        pub const GL_DRAW_BUFFER0 : i32 = 34853;

        /// public static final [GL_DRAW_BUFFER1](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER1)
        pub const GL_DRAW_BUFFER1 : i32 = 34854;

        /// public static final [GL_DRAW_BUFFER10](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER10)
        pub const GL_DRAW_BUFFER10 : i32 = 34863;

        /// public static final [GL_DRAW_BUFFER11](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER11)
        pub const GL_DRAW_BUFFER11 : i32 = 34864;

        /// public static final [GL_DRAW_BUFFER12](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER12)
        pub const GL_DRAW_BUFFER12 : i32 = 34865;

        /// public static final [GL_DRAW_BUFFER13](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER13)
        pub const GL_DRAW_BUFFER13 : i32 = 34866;

        /// public static final [GL_DRAW_BUFFER14](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER14)
        pub const GL_DRAW_BUFFER14 : i32 = 34867;

        /// public static final [GL_DRAW_BUFFER15](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER15)
        pub const GL_DRAW_BUFFER15 : i32 = 34868;

        /// public static final [GL_DRAW_BUFFER2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER2)
        pub const GL_DRAW_BUFFER2 : i32 = 34855;

        /// public static final [GL_DRAW_BUFFER3](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER3)
        pub const GL_DRAW_BUFFER3 : i32 = 34856;

        /// public static final [GL_DRAW_BUFFER4](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER4)
        pub const GL_DRAW_BUFFER4 : i32 = 34857;

        /// public static final [GL_DRAW_BUFFER5](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER5)
        pub const GL_DRAW_BUFFER5 : i32 = 34858;

        /// public static final [GL_DRAW_BUFFER6](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER6)
        pub const GL_DRAW_BUFFER6 : i32 = 34859;

        /// public static final [GL_DRAW_BUFFER7](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER7)
        pub const GL_DRAW_BUFFER7 : i32 = 34860;

        /// public static final [GL_DRAW_BUFFER8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER8)
        pub const GL_DRAW_BUFFER8 : i32 = 34861;

        /// public static final [GL_DRAW_BUFFER9](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_BUFFER9)
        pub const GL_DRAW_BUFFER9 : i32 = 34862;

        /// public static final [GL_DRAW_FRAMEBUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_FRAMEBUFFER)
        pub const GL_DRAW_FRAMEBUFFER : i32 = 36009;

        /// public static final [GL_DRAW_FRAMEBUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DRAW_FRAMEBUFFER_BINDING)
        pub const GL_DRAW_FRAMEBUFFER_BINDING : i32 = 36006;

        /// public static final [GL_DYNAMIC_COPY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DYNAMIC_COPY)
        pub const GL_DYNAMIC_COPY : i32 = 35050;

        /// public static final [GL_DYNAMIC_READ](https://developer.android.com/reference/android/opengl/GLES30.html#GL_DYNAMIC_READ)
        pub const GL_DYNAMIC_READ : i32 = 35049;

        /// public static final [GL_FLOAT_32_UNSIGNED_INT_24_8_REV](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FLOAT_32_UNSIGNED_INT_24_8_REV)
        pub const GL_FLOAT_32_UNSIGNED_INT_24_8_REV : i32 = 36269;

        /// public static final [GL_FLOAT_MAT2x3](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FLOAT_MAT2x3)
        pub const GL_FLOAT_MAT2x3 : i32 = 35685;

        /// public static final [GL_FLOAT_MAT2x4](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FLOAT_MAT2x4)
        pub const GL_FLOAT_MAT2x4 : i32 = 35686;

        /// public static final [GL_FLOAT_MAT3x2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FLOAT_MAT3x2)
        pub const GL_FLOAT_MAT3x2 : i32 = 35687;

        /// public static final [GL_FLOAT_MAT3x4](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FLOAT_MAT3x4)
        pub const GL_FLOAT_MAT3x4 : i32 = 35688;

        /// public static final [GL_FLOAT_MAT4x2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FLOAT_MAT4x2)
        pub const GL_FLOAT_MAT4x2 : i32 = 35689;

        /// public static final [GL_FLOAT_MAT4x3](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FLOAT_MAT4x3)
        pub const GL_FLOAT_MAT4x3 : i32 = 35690;

        /// public static final [GL_FRAGMENT_SHADER_DERIVATIVE_HINT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAGMENT_SHADER_DERIVATIVE_HINT)
        pub const GL_FRAGMENT_SHADER_DERIVATIVE_HINT : i32 = 35723;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE)
        pub const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE : i32 = 33301;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE)
        pub const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE : i32 = 33300;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING)
        pub const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING : i32 = 33296;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE)
        pub const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE : i32 = 33297;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE)
        pub const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE : i32 = 33302;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE)
        pub const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE : i32 = 33299;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE)
        pub const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE : i32 = 33298;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE)
        pub const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE : i32 = 33303;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER)
        pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER : i32 = 36052;

        /// public static final [GL_FRAMEBUFFER_DEFAULT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_DEFAULT)
        pub const GL_FRAMEBUFFER_DEFAULT : i32 = 33304;

        /// public static final [GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE)
        pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE : i32 = 36182;

        /// public static final [GL_FRAMEBUFFER_UNDEFINED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_FRAMEBUFFER_UNDEFINED)
        pub const GL_FRAMEBUFFER_UNDEFINED : i32 = 33305;

        /// public static final [GL_GREEN](https://developer.android.com/reference/android/opengl/GLES30.html#GL_GREEN)
        pub const GL_GREEN : i32 = 6404;

        /// public static final [GL_HALF_FLOAT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_HALF_FLOAT)
        pub const GL_HALF_FLOAT : i32 = 5131;

        /// public static final [GL_INTERLEAVED_ATTRIBS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_INTERLEAVED_ATTRIBS)
        pub const GL_INTERLEAVED_ATTRIBS : i32 = 35980;

        /// public static final [GL_INT_2_10_10_10_REV](https://developer.android.com/reference/android/opengl/GLES30.html#GL_INT_2_10_10_10_REV)
        pub const GL_INT_2_10_10_10_REV : i32 = 36255;

        /// public static final [GL_INT_SAMPLER_2D](https://developer.android.com/reference/android/opengl/GLES30.html#GL_INT_SAMPLER_2D)
        pub const GL_INT_SAMPLER_2D : i32 = 36298;

        /// public static final [GL_INT_SAMPLER_2D_ARRAY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_INT_SAMPLER_2D_ARRAY)
        pub const GL_INT_SAMPLER_2D_ARRAY : i32 = 36303;

        /// public static final [GL_INT_SAMPLER_3D](https://developer.android.com/reference/android/opengl/GLES30.html#GL_INT_SAMPLER_3D)
        pub const GL_INT_SAMPLER_3D : i32 = 36299;

        /// public static final [GL_INT_SAMPLER_CUBE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_INT_SAMPLER_CUBE)
        pub const GL_INT_SAMPLER_CUBE : i32 = 36300;

        /// public static final [GL_INVALID_INDEX](https://developer.android.com/reference/android/opengl/GLES30.html#GL_INVALID_INDEX)
        pub const GL_INVALID_INDEX : i32 = -1;

        /// public static final [GL_MAJOR_VERSION](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAJOR_VERSION)
        pub const GL_MAJOR_VERSION : i32 = 33307;

        /// public static final [GL_MAP_FLUSH_EXPLICIT_BIT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAP_FLUSH_EXPLICIT_BIT)
        pub const GL_MAP_FLUSH_EXPLICIT_BIT : i32 = 16;

        /// public static final [GL_MAP_INVALIDATE_BUFFER_BIT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAP_INVALIDATE_BUFFER_BIT)
        pub const GL_MAP_INVALIDATE_BUFFER_BIT : i32 = 8;

        /// public static final [GL_MAP_INVALIDATE_RANGE_BIT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAP_INVALIDATE_RANGE_BIT)
        pub const GL_MAP_INVALIDATE_RANGE_BIT : i32 = 4;

        /// public static final [GL_MAP_READ_BIT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAP_READ_BIT)
        pub const GL_MAP_READ_BIT : i32 = 1;

        /// public static final [GL_MAP_UNSYNCHRONIZED_BIT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAP_UNSYNCHRONIZED_BIT)
        pub const GL_MAP_UNSYNCHRONIZED_BIT : i32 = 32;

        /// public static final [GL_MAP_WRITE_BIT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAP_WRITE_BIT)
        pub const GL_MAP_WRITE_BIT : i32 = 2;

        /// public static final [GL_MAX](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX)
        pub const GL_MAX : i32 = 32776;

        /// public static final [GL_MAX_3D_TEXTURE_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_3D_TEXTURE_SIZE)
        pub const GL_MAX_3D_TEXTURE_SIZE : i32 = 32883;

        /// public static final [GL_MAX_ARRAY_TEXTURE_LAYERS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_ARRAY_TEXTURE_LAYERS)
        pub const GL_MAX_ARRAY_TEXTURE_LAYERS : i32 = 35071;

        /// public static final [GL_MAX_COLOR_ATTACHMENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_COLOR_ATTACHMENTS)
        pub const GL_MAX_COLOR_ATTACHMENTS : i32 = 36063;

        /// public static final [GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)
        pub const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS : i32 = 35379;

        /// public static final [GL_MAX_COMBINED_UNIFORM_BLOCKS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_COMBINED_UNIFORM_BLOCKS)
        pub const GL_MAX_COMBINED_UNIFORM_BLOCKS : i32 = 35374;

        /// public static final [GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)
        pub const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS : i32 = 35377;

        /// public static final [GL_MAX_DRAW_BUFFERS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_DRAW_BUFFERS)
        pub const GL_MAX_DRAW_BUFFERS : i32 = 34852;

        /// public static final [GL_MAX_ELEMENTS_INDICES](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_ELEMENTS_INDICES)
        pub const GL_MAX_ELEMENTS_INDICES : i32 = 33001;

        /// public static final [GL_MAX_ELEMENTS_VERTICES](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_ELEMENTS_VERTICES)
        pub const GL_MAX_ELEMENTS_VERTICES : i32 = 33000;

        /// public static final [GL_MAX_ELEMENT_INDEX](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_ELEMENT_INDEX)
        pub const GL_MAX_ELEMENT_INDEX : i32 = 36203;

        /// public static final [GL_MAX_FRAGMENT_INPUT_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_FRAGMENT_INPUT_COMPONENTS)
        pub const GL_MAX_FRAGMENT_INPUT_COMPONENTS : i32 = 37157;

        /// public static final [GL_MAX_FRAGMENT_UNIFORM_BLOCKS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_FRAGMENT_UNIFORM_BLOCKS)
        pub const GL_MAX_FRAGMENT_UNIFORM_BLOCKS : i32 = 35373;

        /// public static final [GL_MAX_FRAGMENT_UNIFORM_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_FRAGMENT_UNIFORM_COMPONENTS)
        pub const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS : i32 = 35657;

        /// public static final [GL_MAX_PROGRAM_TEXEL_OFFSET](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_PROGRAM_TEXEL_OFFSET)
        pub const GL_MAX_PROGRAM_TEXEL_OFFSET : i32 = 35077;

        /// public static final [GL_MAX_SAMPLES](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_SAMPLES)
        pub const GL_MAX_SAMPLES : i32 = 36183;

        /// public static final [GL_MAX_SERVER_WAIT_TIMEOUT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_SERVER_WAIT_TIMEOUT)
        pub const GL_MAX_SERVER_WAIT_TIMEOUT : i32 = 37137;

        /// public static final [GL_MAX_TEXTURE_LOD_BIAS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_TEXTURE_LOD_BIAS)
        pub const GL_MAX_TEXTURE_LOD_BIAS : i32 = 34045;

        /// public static final [GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)
        pub const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS : i32 = 35978;

        /// public static final [GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)
        pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS : i32 = 35979;

        /// public static final [GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS)
        pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS : i32 = 35968;

        /// public static final [GL_MAX_UNIFORM_BLOCK_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_UNIFORM_BLOCK_SIZE)
        pub const GL_MAX_UNIFORM_BLOCK_SIZE : i32 = 35376;

        /// public static final [GL_MAX_UNIFORM_BUFFER_BINDINGS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_UNIFORM_BUFFER_BINDINGS)
        pub const GL_MAX_UNIFORM_BUFFER_BINDINGS : i32 = 35375;

        /// public static final [GL_MAX_VARYING_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_VARYING_COMPONENTS)
        pub const GL_MAX_VARYING_COMPONENTS : i32 = 35659;

        /// public static final [GL_MAX_VERTEX_OUTPUT_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_VERTEX_OUTPUT_COMPONENTS)
        pub const GL_MAX_VERTEX_OUTPUT_COMPONENTS : i32 = 37154;

        /// public static final [GL_MAX_VERTEX_UNIFORM_BLOCKS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_VERTEX_UNIFORM_BLOCKS)
        pub const GL_MAX_VERTEX_UNIFORM_BLOCKS : i32 = 35371;

        /// public static final [GL_MAX_VERTEX_UNIFORM_COMPONENTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MAX_VERTEX_UNIFORM_COMPONENTS)
        pub const GL_MAX_VERTEX_UNIFORM_COMPONENTS : i32 = 35658;

        /// public static final [GL_MIN](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MIN)
        pub const GL_MIN : i32 = 32775;

        /// public static final [GL_MINOR_VERSION](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MINOR_VERSION)
        pub const GL_MINOR_VERSION : i32 = 33308;

        /// public static final [GL_MIN_PROGRAM_TEXEL_OFFSET](https://developer.android.com/reference/android/opengl/GLES30.html#GL_MIN_PROGRAM_TEXEL_OFFSET)
        pub const GL_MIN_PROGRAM_TEXEL_OFFSET : i32 = 35076;

        /// public static final [GL_NUM_EXTENSIONS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_NUM_EXTENSIONS)
        pub const GL_NUM_EXTENSIONS : i32 = 33309;

        /// public static final [GL_NUM_PROGRAM_BINARY_FORMATS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_NUM_PROGRAM_BINARY_FORMATS)
        pub const GL_NUM_PROGRAM_BINARY_FORMATS : i32 = 34814;

        /// public static final [GL_NUM_SAMPLE_COUNTS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_NUM_SAMPLE_COUNTS)
        pub const GL_NUM_SAMPLE_COUNTS : i32 = 37760;

        /// public static final [GL_OBJECT_TYPE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_OBJECT_TYPE)
        pub const GL_OBJECT_TYPE : i32 = 37138;

        /// public static final [GL_PACK_ROW_LENGTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PACK_ROW_LENGTH)
        pub const GL_PACK_ROW_LENGTH : i32 = 3330;

        /// public static final [GL_PACK_SKIP_PIXELS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PACK_SKIP_PIXELS)
        pub const GL_PACK_SKIP_PIXELS : i32 = 3332;

        /// public static final [GL_PACK_SKIP_ROWS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PACK_SKIP_ROWS)
        pub const GL_PACK_SKIP_ROWS : i32 = 3331;

        /// public static final [GL_PIXEL_PACK_BUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PIXEL_PACK_BUFFER)
        pub const GL_PIXEL_PACK_BUFFER : i32 = 35051;

        /// public static final [GL_PIXEL_PACK_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PIXEL_PACK_BUFFER_BINDING)
        pub const GL_PIXEL_PACK_BUFFER_BINDING : i32 = 35053;

        /// public static final [GL_PIXEL_UNPACK_BUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PIXEL_UNPACK_BUFFER)
        pub const GL_PIXEL_UNPACK_BUFFER : i32 = 35052;

        /// public static final [GL_PIXEL_UNPACK_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PIXEL_UNPACK_BUFFER_BINDING)
        pub const GL_PIXEL_UNPACK_BUFFER_BINDING : i32 = 35055;

        /// public static final [GL_PRIMITIVE_RESTART_FIXED_INDEX](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PRIMITIVE_RESTART_FIXED_INDEX)
        pub const GL_PRIMITIVE_RESTART_FIXED_INDEX : i32 = 36201;

        /// public static final [GL_PROGRAM_BINARY_FORMATS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PROGRAM_BINARY_FORMATS)
        pub const GL_PROGRAM_BINARY_FORMATS : i32 = 34815;

        /// public static final [GL_PROGRAM_BINARY_LENGTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PROGRAM_BINARY_LENGTH)
        pub const GL_PROGRAM_BINARY_LENGTH : i32 = 34625;

        /// public static final [GL_PROGRAM_BINARY_RETRIEVABLE_HINT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_PROGRAM_BINARY_RETRIEVABLE_HINT)
        pub const GL_PROGRAM_BINARY_RETRIEVABLE_HINT : i32 = 33367;

        /// public static final [GL_QUERY_RESULT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_QUERY_RESULT)
        pub const GL_QUERY_RESULT : i32 = 34918;

        /// public static final [GL_QUERY_RESULT_AVAILABLE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_QUERY_RESULT_AVAILABLE)
        pub const GL_QUERY_RESULT_AVAILABLE : i32 = 34919;

        /// public static final [GL_R11F_G11F_B10F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R11F_G11F_B10F)
        pub const GL_R11F_G11F_B10F : i32 = 35898;

        /// public static final [GL_R16F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R16F)
        pub const GL_R16F : i32 = 33325;

        /// public static final [GL_R16I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R16I)
        pub const GL_R16I : i32 = 33331;

        /// public static final [GL_R16UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R16UI)
        pub const GL_R16UI : i32 = 33332;

        /// public static final [GL_R32F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R32F)
        pub const GL_R32F : i32 = 33326;

        /// public static final [GL_R32I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R32I)
        pub const GL_R32I : i32 = 33333;

        /// public static final [GL_R32UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R32UI)
        pub const GL_R32UI : i32 = 33334;

        /// public static final [GL_R8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R8)
        pub const GL_R8 : i32 = 33321;

        /// public static final [GL_R8I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R8I)
        pub const GL_R8I : i32 = 33329;

        /// public static final [GL_R8UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R8UI)
        pub const GL_R8UI : i32 = 33330;

        /// public static final [GL_R8_SNORM](https://developer.android.com/reference/android/opengl/GLES30.html#GL_R8_SNORM)
        pub const GL_R8_SNORM : i32 = 36756;

        /// public static final [GL_RASTERIZER_DISCARD](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RASTERIZER_DISCARD)
        pub const GL_RASTERIZER_DISCARD : i32 = 35977;

        /// public static final [GL_READ_BUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_READ_BUFFER)
        pub const GL_READ_BUFFER : i32 = 3074;

        /// public static final [GL_READ_FRAMEBUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_READ_FRAMEBUFFER)
        pub const GL_READ_FRAMEBUFFER : i32 = 36008;

        /// public static final [GL_READ_FRAMEBUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_READ_FRAMEBUFFER_BINDING)
        pub const GL_READ_FRAMEBUFFER_BINDING : i32 = 36010;

        /// public static final [GL_RED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RED)
        pub const GL_RED : i32 = 6403;

        /// public static final [GL_RED_INTEGER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RED_INTEGER)
        pub const GL_RED_INTEGER : i32 = 36244;

        /// public static final [GL_RENDERBUFFER_SAMPLES](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RENDERBUFFER_SAMPLES)
        pub const GL_RENDERBUFFER_SAMPLES : i32 = 36011;

        /// public static final [GL_RG](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG)
        pub const GL_RG : i32 = 33319;

        /// public static final [GL_RG16F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG16F)
        pub const GL_RG16F : i32 = 33327;

        /// public static final [GL_RG16I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG16I)
        pub const GL_RG16I : i32 = 33337;

        /// public static final [GL_RG16UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG16UI)
        pub const GL_RG16UI : i32 = 33338;

        /// public static final [GL_RG32F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG32F)
        pub const GL_RG32F : i32 = 33328;

        /// public static final [GL_RG32I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG32I)
        pub const GL_RG32I : i32 = 33339;

        /// public static final [GL_RG32UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG32UI)
        pub const GL_RG32UI : i32 = 33340;

        /// public static final [GL_RG8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG8)
        pub const GL_RG8 : i32 = 33323;

        /// public static final [GL_RG8I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG8I)
        pub const GL_RG8I : i32 = 33335;

        /// public static final [GL_RG8UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG8UI)
        pub const GL_RG8UI : i32 = 33336;

        /// public static final [GL_RG8_SNORM](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG8_SNORM)
        pub const GL_RG8_SNORM : i32 = 36757;

        /// public static final [GL_RGB10_A2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB10_A2)
        pub const GL_RGB10_A2 : i32 = 32857;

        /// public static final [GL_RGB10_A2UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB10_A2UI)
        pub const GL_RGB10_A2UI : i32 = 36975;

        /// public static final [GL_RGB16F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB16F)
        pub const GL_RGB16F : i32 = 34843;

        /// public static final [GL_RGB16I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB16I)
        pub const GL_RGB16I : i32 = 36233;

        /// public static final [GL_RGB16UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB16UI)
        pub const GL_RGB16UI : i32 = 36215;

        /// public static final [GL_RGB32F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB32F)
        pub const GL_RGB32F : i32 = 34837;

        /// public static final [GL_RGB32I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB32I)
        pub const GL_RGB32I : i32 = 36227;

        /// public static final [GL_RGB32UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB32UI)
        pub const GL_RGB32UI : i32 = 36209;

        /// public static final [GL_RGB8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB8)
        pub const GL_RGB8 : i32 = 32849;

        /// public static final [GL_RGB8I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB8I)
        pub const GL_RGB8I : i32 = 36239;

        /// public static final [GL_RGB8UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB8UI)
        pub const GL_RGB8UI : i32 = 36221;

        /// public static final [GL_RGB8_SNORM](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB8_SNORM)
        pub const GL_RGB8_SNORM : i32 = 36758;

        /// public static final [GL_RGB9_E5](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB9_E5)
        pub const GL_RGB9_E5 : i32 = 35901;

        /// public static final [GL_RGBA16F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA16F)
        pub const GL_RGBA16F : i32 = 34842;

        /// public static final [GL_RGBA16I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA16I)
        pub const GL_RGBA16I : i32 = 36232;

        /// public static final [GL_RGBA16UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA16UI)
        pub const GL_RGBA16UI : i32 = 36214;

        /// public static final [GL_RGBA32F](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA32F)
        pub const GL_RGBA32F : i32 = 34836;

        /// public static final [GL_RGBA32I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA32I)
        pub const GL_RGBA32I : i32 = 36226;

        /// public static final [GL_RGBA32UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA32UI)
        pub const GL_RGBA32UI : i32 = 36208;

        /// public static final [GL_RGBA8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA8)
        pub const GL_RGBA8 : i32 = 32856;

        /// public static final [GL_RGBA8I](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA8I)
        pub const GL_RGBA8I : i32 = 36238;

        /// public static final [GL_RGBA8UI](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA8UI)
        pub const GL_RGBA8UI : i32 = 36220;

        /// public static final [GL_RGBA8_SNORM](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA8_SNORM)
        pub const GL_RGBA8_SNORM : i32 = 36759;

        /// public static final [GL_RGBA_INTEGER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGBA_INTEGER)
        pub const GL_RGBA_INTEGER : i32 = 36249;

        /// public static final [GL_RGB_INTEGER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RGB_INTEGER)
        pub const GL_RGB_INTEGER : i32 = 36248;

        /// public static final [GL_RG_INTEGER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_RG_INTEGER)
        pub const GL_RG_INTEGER : i32 = 33320;

        /// public static final [GL_SAMPLER_2D_ARRAY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SAMPLER_2D_ARRAY)
        pub const GL_SAMPLER_2D_ARRAY : i32 = 36289;

        /// public static final [GL_SAMPLER_2D_ARRAY_SHADOW](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SAMPLER_2D_ARRAY_SHADOW)
        pub const GL_SAMPLER_2D_ARRAY_SHADOW : i32 = 36292;

        /// public static final [GL_SAMPLER_2D_SHADOW](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SAMPLER_2D_SHADOW)
        pub const GL_SAMPLER_2D_SHADOW : i32 = 35682;

        /// public static final [GL_SAMPLER_3D](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SAMPLER_3D)
        pub const GL_SAMPLER_3D : i32 = 35679;

        /// public static final [GL_SAMPLER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SAMPLER_BINDING)
        pub const GL_SAMPLER_BINDING : i32 = 35097;

        /// public static final [GL_SAMPLER_CUBE_SHADOW](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SAMPLER_CUBE_SHADOW)
        pub const GL_SAMPLER_CUBE_SHADOW : i32 = 36293;

        /// public static final [GL_SEPARATE_ATTRIBS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SEPARATE_ATTRIBS)
        pub const GL_SEPARATE_ATTRIBS : i32 = 35981;

        /// public static final [GL_SIGNALED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SIGNALED)
        pub const GL_SIGNALED : i32 = 37145;

        /// public static final [GL_SIGNED_NORMALIZED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SIGNED_NORMALIZED)
        pub const GL_SIGNED_NORMALIZED : i32 = 36764;

        /// public static final [GL_SRGB](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SRGB)
        pub const GL_SRGB : i32 = 35904;

        /// public static final [GL_SRGB8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SRGB8)
        pub const GL_SRGB8 : i32 = 35905;

        /// public static final [GL_SRGB8_ALPHA8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SRGB8_ALPHA8)
        pub const GL_SRGB8_ALPHA8 : i32 = 35907;

        /// public static final [GL_STATIC_COPY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_STATIC_COPY)
        pub const GL_STATIC_COPY : i32 = 35046;

        /// public static final [GL_STATIC_READ](https://developer.android.com/reference/android/opengl/GLES30.html#GL_STATIC_READ)
        pub const GL_STATIC_READ : i32 = 35045;

        /// public static final [GL_STENCIL](https://developer.android.com/reference/android/opengl/GLES30.html#GL_STENCIL)
        pub const GL_STENCIL : i32 = 6146;

        /// public static final [GL_STREAM_COPY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_STREAM_COPY)
        pub const GL_STREAM_COPY : i32 = 35042;

        /// public static final [GL_STREAM_READ](https://developer.android.com/reference/android/opengl/GLES30.html#GL_STREAM_READ)
        pub const GL_STREAM_READ : i32 = 35041;

        /// public static final [GL_SYNC_CONDITION](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SYNC_CONDITION)
        pub const GL_SYNC_CONDITION : i32 = 37139;

        /// public static final [GL_SYNC_FENCE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SYNC_FENCE)
        pub const GL_SYNC_FENCE : i32 = 37142;

        /// public static final [GL_SYNC_FLAGS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SYNC_FLAGS)
        pub const GL_SYNC_FLAGS : i32 = 37141;

        /// public static final [GL_SYNC_FLUSH_COMMANDS_BIT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SYNC_FLUSH_COMMANDS_BIT)
        pub const GL_SYNC_FLUSH_COMMANDS_BIT : i32 = 1;

        /// public static final [GL_SYNC_GPU_COMMANDS_COMPLETE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SYNC_GPU_COMMANDS_COMPLETE)
        pub const GL_SYNC_GPU_COMMANDS_COMPLETE : i32 = 37143;

        /// public static final [GL_SYNC_STATUS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_SYNC_STATUS)
        pub const GL_SYNC_STATUS : i32 = 37140;

        /// public static final [GL_TEXTURE_2D_ARRAY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_2D_ARRAY)
        pub const GL_TEXTURE_2D_ARRAY : i32 = 35866;

        /// public static final [GL_TEXTURE_3D](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_3D)
        pub const GL_TEXTURE_3D : i32 = 32879;

        /// public static final [GL_TEXTURE_BASE_LEVEL](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_BASE_LEVEL)
        pub const GL_TEXTURE_BASE_LEVEL : i32 = 33084;

        /// public static final [GL_TEXTURE_BINDING_2D_ARRAY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_BINDING_2D_ARRAY)
        pub const GL_TEXTURE_BINDING_2D_ARRAY : i32 = 35869;

        /// public static final [GL_TEXTURE_BINDING_3D](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_BINDING_3D)
        pub const GL_TEXTURE_BINDING_3D : i32 = 32874;

        /// public static final [GL_TEXTURE_COMPARE_FUNC](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_COMPARE_FUNC)
        pub const GL_TEXTURE_COMPARE_FUNC : i32 = 34893;

        /// public static final [GL_TEXTURE_COMPARE_MODE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_COMPARE_MODE)
        pub const GL_TEXTURE_COMPARE_MODE : i32 = 34892;

        /// public static final [GL_TEXTURE_IMMUTABLE_FORMAT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_IMMUTABLE_FORMAT)
        pub const GL_TEXTURE_IMMUTABLE_FORMAT : i32 = 37167;

        /// public static final [GL_TEXTURE_IMMUTABLE_LEVELS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_IMMUTABLE_LEVELS)
        pub const GL_TEXTURE_IMMUTABLE_LEVELS : i32 = 33503;

        /// public static final [GL_TEXTURE_MAX_LEVEL](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_MAX_LEVEL)
        pub const GL_TEXTURE_MAX_LEVEL : i32 = 33085;

        /// public static final [GL_TEXTURE_MAX_LOD](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_MAX_LOD)
        pub const GL_TEXTURE_MAX_LOD : i32 = 33083;

        /// public static final [GL_TEXTURE_MIN_LOD](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_MIN_LOD)
        pub const GL_TEXTURE_MIN_LOD : i32 = 33082;

        /// public static final [GL_TEXTURE_SWIZZLE_A](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_SWIZZLE_A)
        pub const GL_TEXTURE_SWIZZLE_A : i32 = 36421;

        /// public static final [GL_TEXTURE_SWIZZLE_B](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_SWIZZLE_B)
        pub const GL_TEXTURE_SWIZZLE_B : i32 = 36420;

        /// public static final [GL_TEXTURE_SWIZZLE_G](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_SWIZZLE_G)
        pub const GL_TEXTURE_SWIZZLE_G : i32 = 36419;

        /// public static final [GL_TEXTURE_SWIZZLE_R](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_SWIZZLE_R)
        pub const GL_TEXTURE_SWIZZLE_R : i32 = 36418;

        /// public static final [GL_TEXTURE_WRAP_R](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TEXTURE_WRAP_R)
        pub const GL_TEXTURE_WRAP_R : i32 = 32882;

        /// public static final [GL_TIMEOUT_EXPIRED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TIMEOUT_EXPIRED)
        pub const GL_TIMEOUT_EXPIRED : i32 = 37147;

        /// public static final [GL_TIMEOUT_IGNORED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TIMEOUT_IGNORED)
        pub const GL_TIMEOUT_IGNORED : i64 = -1i64;

        /// public static final [GL_TRANSFORM_FEEDBACK](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK)
        pub const GL_TRANSFORM_FEEDBACK : i32 = 36386;

        /// public static final [GL_TRANSFORM_FEEDBACK_ACTIVE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_ACTIVE)
        pub const GL_TRANSFORM_FEEDBACK_ACTIVE : i32 = 36388;

        /// public static final [GL_TRANSFORM_FEEDBACK_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_BINDING)
        pub const GL_TRANSFORM_FEEDBACK_BINDING : i32 = 36389;

        /// public static final [GL_TRANSFORM_FEEDBACK_BUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_BUFFER)
        pub const GL_TRANSFORM_FEEDBACK_BUFFER : i32 = 35982;

        /// public static final [GL_TRANSFORM_FEEDBACK_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_BUFFER_BINDING)
        pub const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING : i32 = 35983;

        /// public static final [GL_TRANSFORM_FEEDBACK_BUFFER_MODE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_BUFFER_MODE)
        pub const GL_TRANSFORM_FEEDBACK_BUFFER_MODE : i32 = 35967;

        /// public static final [GL_TRANSFORM_FEEDBACK_BUFFER_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_BUFFER_SIZE)
        pub const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE : i32 = 35973;

        /// public static final [GL_TRANSFORM_FEEDBACK_BUFFER_START](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_BUFFER_START)
        pub const GL_TRANSFORM_FEEDBACK_BUFFER_START : i32 = 35972;

        /// public static final [GL_TRANSFORM_FEEDBACK_PAUSED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_PAUSED)
        pub const GL_TRANSFORM_FEEDBACK_PAUSED : i32 = 36387;

        /// public static final [GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN)
        pub const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN : i32 = 35976;

        /// public static final [GL_TRANSFORM_FEEDBACK_VARYINGS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_VARYINGS)
        pub const GL_TRANSFORM_FEEDBACK_VARYINGS : i32 = 35971;

        /// public static final [GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH)
        pub const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH : i32 = 35958;

        /// public static final [GL_UNIFORM_ARRAY_STRIDE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_ARRAY_STRIDE)
        pub const GL_UNIFORM_ARRAY_STRIDE : i32 = 35388;

        /// public static final [GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS)
        pub const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS : i32 = 35394;

        /// public static final [GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)
        pub const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES : i32 = 35395;

        /// public static final [GL_UNIFORM_BLOCK_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BLOCK_BINDING)
        pub const GL_UNIFORM_BLOCK_BINDING : i32 = 35391;

        /// public static final [GL_UNIFORM_BLOCK_DATA_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BLOCK_DATA_SIZE)
        pub const GL_UNIFORM_BLOCK_DATA_SIZE : i32 = 35392;

        /// public static final [GL_UNIFORM_BLOCK_INDEX](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BLOCK_INDEX)
        pub const GL_UNIFORM_BLOCK_INDEX : i32 = 35386;

        /// public static final [GL_UNIFORM_BLOCK_NAME_LENGTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BLOCK_NAME_LENGTH)
        pub const GL_UNIFORM_BLOCK_NAME_LENGTH : i32 = 35393;

        /// public static final [GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER)
        pub const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER : i32 = 35398;

        /// public static final [GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER)
        pub const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER : i32 = 35396;

        /// public static final [GL_UNIFORM_BUFFER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BUFFER)
        pub const GL_UNIFORM_BUFFER : i32 = 35345;

        /// public static final [GL_UNIFORM_BUFFER_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BUFFER_BINDING)
        pub const GL_UNIFORM_BUFFER_BINDING : i32 = 35368;

        /// public static final [GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT)
        pub const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT : i32 = 35380;

        /// public static final [GL_UNIFORM_BUFFER_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BUFFER_SIZE)
        pub const GL_UNIFORM_BUFFER_SIZE : i32 = 35370;

        /// public static final [GL_UNIFORM_BUFFER_START](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_BUFFER_START)
        pub const GL_UNIFORM_BUFFER_START : i32 = 35369;

        /// public static final [GL_UNIFORM_IS_ROW_MAJOR](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_IS_ROW_MAJOR)
        pub const GL_UNIFORM_IS_ROW_MAJOR : i32 = 35390;

        /// public static final [GL_UNIFORM_MATRIX_STRIDE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_MATRIX_STRIDE)
        pub const GL_UNIFORM_MATRIX_STRIDE : i32 = 35389;

        /// public static final [GL_UNIFORM_NAME_LENGTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_NAME_LENGTH)
        pub const GL_UNIFORM_NAME_LENGTH : i32 = 35385;

        /// public static final [GL_UNIFORM_OFFSET](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_OFFSET)
        pub const GL_UNIFORM_OFFSET : i32 = 35387;

        /// public static final [GL_UNIFORM_SIZE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_SIZE)
        pub const GL_UNIFORM_SIZE : i32 = 35384;

        /// public static final [GL_UNIFORM_TYPE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNIFORM_TYPE)
        pub const GL_UNIFORM_TYPE : i32 = 35383;

        /// public static final [GL_UNPACK_IMAGE_HEIGHT](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNPACK_IMAGE_HEIGHT)
        pub const GL_UNPACK_IMAGE_HEIGHT : i32 = 32878;

        /// public static final [GL_UNPACK_ROW_LENGTH](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNPACK_ROW_LENGTH)
        pub const GL_UNPACK_ROW_LENGTH : i32 = 3314;

        /// public static final [GL_UNPACK_SKIP_IMAGES](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNPACK_SKIP_IMAGES)
        pub const GL_UNPACK_SKIP_IMAGES : i32 = 32877;

        /// public static final [GL_UNPACK_SKIP_PIXELS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNPACK_SKIP_PIXELS)
        pub const GL_UNPACK_SKIP_PIXELS : i32 = 3316;

        /// public static final [GL_UNPACK_SKIP_ROWS](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNPACK_SKIP_ROWS)
        pub const GL_UNPACK_SKIP_ROWS : i32 = 3315;

        /// public static final [GL_UNSIGNALED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNALED)
        pub const GL_UNSIGNALED : i32 = 37144;

        /// public static final [GL_UNSIGNED_INT_10F_11F_11F_REV](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_10F_11F_11F_REV)
        pub const GL_UNSIGNED_INT_10F_11F_11F_REV : i32 = 35899;

        /// public static final [GL_UNSIGNED_INT_24_8](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_24_8)
        pub const GL_UNSIGNED_INT_24_8 : i32 = 34042;

        /// public static final [GL_UNSIGNED_INT_2_10_10_10_REV](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_2_10_10_10_REV)
        pub const GL_UNSIGNED_INT_2_10_10_10_REV : i32 = 33640;

        /// public static final [GL_UNSIGNED_INT_5_9_9_9_REV](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_5_9_9_9_REV)
        pub const GL_UNSIGNED_INT_5_9_9_9_REV : i32 = 35902;

        /// public static final [GL_UNSIGNED_INT_SAMPLER_2D](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_SAMPLER_2D)
        pub const GL_UNSIGNED_INT_SAMPLER_2D : i32 = 36306;

        /// public static final [GL_UNSIGNED_INT_SAMPLER_2D_ARRAY](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_SAMPLER_2D_ARRAY)
        pub const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY : i32 = 36311;

        /// public static final [GL_UNSIGNED_INT_SAMPLER_3D](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_SAMPLER_3D)
        pub const GL_UNSIGNED_INT_SAMPLER_3D : i32 = 36307;

        /// public static final [GL_UNSIGNED_INT_SAMPLER_CUBE](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_SAMPLER_CUBE)
        pub const GL_UNSIGNED_INT_SAMPLER_CUBE : i32 = 36308;

        /// public static final [GL_UNSIGNED_INT_VEC2](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_VEC2)
        pub const GL_UNSIGNED_INT_VEC2 : i32 = 36294;

        /// public static final [GL_UNSIGNED_INT_VEC3](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_VEC3)
        pub const GL_UNSIGNED_INT_VEC3 : i32 = 36295;

        /// public static final [GL_UNSIGNED_INT_VEC4](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_INT_VEC4)
        pub const GL_UNSIGNED_INT_VEC4 : i32 = 36296;

        /// public static final [GL_UNSIGNED_NORMALIZED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_UNSIGNED_NORMALIZED)
        pub const GL_UNSIGNED_NORMALIZED : i32 = 35863;

        /// public static final [GL_VERTEX_ARRAY_BINDING](https://developer.android.com/reference/android/opengl/GLES30.html#GL_VERTEX_ARRAY_BINDING)
        pub const GL_VERTEX_ARRAY_BINDING : i32 = 34229;

        /// public static final [GL_VERTEX_ATTRIB_ARRAY_DIVISOR](https://developer.android.com/reference/android/opengl/GLES30.html#GL_VERTEX_ATTRIB_ARRAY_DIVISOR)
        pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR : i32 = 35070;

        /// public static final [GL_VERTEX_ATTRIB_ARRAY_INTEGER](https://developer.android.com/reference/android/opengl/GLES30.html#GL_VERTEX_ATTRIB_ARRAY_INTEGER)
        pub const GL_VERTEX_ATTRIB_ARRAY_INTEGER : i32 = 35069;

        /// public static final [GL_WAIT_FAILED](https://developer.android.com/reference/android/opengl/GLES30.html#GL_WAIT_FAILED)
        pub const GL_WAIT_FAILED : i32 = 37149;
    }
}
