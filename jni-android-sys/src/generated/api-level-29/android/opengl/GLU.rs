// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-opengl-GLU"))]
__jni_bindgen! {
    /// public class [GLU](https://developer.android.com/reference/android/opengl/GLU.html)
    ///
    /// Required feature: android-opengl-GLU
    public class GLU ("android/opengl/GLU") extends crate::java::lang::Object {

        /// [GLU](https://developer.android.com/reference/android/opengl/GLU.html#GLU())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::opengl::GLU>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLU", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/opengl/GLU\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [gluErrorString](https://developer.android.com/reference/android/opengl/GLU.html#gluErrorString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn gluErrorString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLU", java.flags == PUBLIC | STATIC, .name == "gluErrorString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLU\0", "gluErrorString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [gluLookAt](https://developer.android.com/reference/android/opengl/GLU.html#gluLookAt(javax.microedition.khronos.opengles.GL10,%20float,%20float,%20float,%20float,%20float,%20float,%20float,%20float,%20float))
        ///
        /// Required features: "javax-microedition-khronos-opengles-GL10"
        #[cfg(any(feature = "all", all(feature = "javax-microedition-khronos-opengles-GL10")))]
        pub fn gluLookAt<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::microedition::khronos::opengles::GL10>>, arg1: f32, arg2: f32, arg3: f32, arg4: f32, arg5: f32, arg6: f32, arg7: f32, arg8: f32, arg9: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLU", java.flags == PUBLIC | STATIC, .name == "gluLookAt", .descriptor == "(Ljavax/microedition/khronos/opengles/GL10;FFFFFFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLU\0", "gluLookAt\0", "(Ljavax/microedition/khronos/opengles/GL10;FFFFFFFFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [gluOrtho2D](https://developer.android.com/reference/android/opengl/GLU.html#gluOrtho2D(javax.microedition.khronos.opengles.GL10,%20float,%20float,%20float,%20float))
        ///
        /// Required features: "javax-microedition-khronos-opengles-GL10"
        #[cfg(any(feature = "all", all(feature = "javax-microedition-khronos-opengles-GL10")))]
        pub fn gluOrtho2D<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::microedition::khronos::opengles::GL10>>, arg1: f32, arg2: f32, arg3: f32, arg4: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLU", java.flags == PUBLIC | STATIC, .name == "gluOrtho2D", .descriptor == "(Ljavax/microedition/khronos/opengles/GL10;FFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLU\0", "gluOrtho2D\0", "(Ljavax/microedition/khronos/opengles/GL10;FFFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [gluPerspective](https://developer.android.com/reference/android/opengl/GLU.html#gluPerspective(javax.microedition.khronos.opengles.GL10,%20float,%20float,%20float,%20float))
        ///
        /// Required features: "javax-microedition-khronos-opengles-GL10"
        #[cfg(any(feature = "all", all(feature = "javax-microedition-khronos-opengles-GL10")))]
        pub fn gluPerspective<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::microedition::khronos::opengles::GL10>>, arg1: f32, arg2: f32, arg3: f32, arg4: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLU", java.flags == PUBLIC | STATIC, .name == "gluPerspective", .descriptor == "(Ljavax/microedition/khronos/opengles/GL10;FFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLU\0", "gluPerspective\0", "(Ljavax/microedition/khronos/opengles/GL10;FFFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [gluProject](https://developer.android.com/reference/android/opengl/GLU.html#gluProject(float,%20float,%20float,%20float%5B%5D,%20int,%20float%5B%5D,%20int,%20int%5B%5D,%20int,%20float%5B%5D,%20int))
        pub fn gluProject<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg6: i32, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg8: i32, arg9: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg10: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLU", java.flags == PUBLIC | STATIC, .name == "gluProject", .descriptor == "(FFF[FI[FI[II[FI)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7.into()), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9.into()), __jni_bindgen::AsJValue::as_jvalue(&arg10)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLU\0", "gluProject\0", "(FFF[FI[FI[II[FI)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [gluUnProject](https://developer.android.com/reference/android/opengl/GLU.html#gluUnProject(float,%20float,%20float,%20float%5B%5D,%20int,%20float%5B%5D,%20int,%20int%5B%5D,%20int,%20float%5B%5D,%20int))
        pub fn gluUnProject<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg6: i32, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg8: i32, arg9: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg10: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLU", java.flags == PUBLIC | STATIC, .name == "gluUnProject", .descriptor == "(FFF[FI[FI[II[FI)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7.into()), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9.into()), __jni_bindgen::AsJValue::as_jvalue(&arg10)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLU\0", "gluUnProject\0", "(FFF[FI[FI[II[FI)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
