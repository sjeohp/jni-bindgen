// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-opengl-GLES11Ext"))]
__jni_bindgen! {
    /// public class [GLES11Ext](https://developer.android.com/reference/android/opengl/GLES11Ext.html)
    ///
    /// Required feature: android-opengl-GLES11Ext
    public class GLES11Ext ("android/opengl/GLES11Ext") extends crate::java::lang::Object {

        /// [GLES11Ext](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GLES11Ext())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::opengl::GLES11Ext>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/opengl/GLES11Ext\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBlendEquationSeparateOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glBlendEquationSeparateOES(int,%20int))
        pub fn glBlendEquationSeparateOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBlendEquationSeparateOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glBlendEquationSeparateOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBlendFuncSeparateOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glBlendFuncSeparateOES(int,%20int,%20int,%20int))
        pub fn glBlendFuncSeparateOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBlendFuncSeparateOES", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glBlendFuncSeparateOES\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBlendEquationOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glBlendEquationOES(int))
        pub fn glBlendEquationOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBlendEquationOES", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glBlendEquationOES\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexsOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexsOES(short,%20short,%20short,%20short,%20short))
        pub fn glDrawTexsOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16, arg2: i16, arg3: i16, arg4: i16) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexsOES", .descriptor == "(SSSSS)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexsOES\0", "(SSSSS)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexiOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexiOES(int,%20int,%20int,%20int,%20int))
        pub fn glDrawTexiOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexiOES", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexiOES\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexxOES(int,%20int,%20int,%20int,%20int))
        pub fn glDrawTexxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexxOES", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexxOES\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexsvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexsvOES(short%5B%5D,%20int))
        pub fn glDrawTexsvOES_short_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ShortArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexsvOES", .descriptor == "([SI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexsvOES\0", "([SI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexsvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexsvOES(java.nio.ShortBuffer))
        ///
        /// Required features: "java-nio-ShortBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-ShortBuffer")))]
        pub fn glDrawTexsvOES_ShortBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::ShortBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexsvOES", .descriptor == "(Ljava/nio/ShortBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexsvOES\0", "(Ljava/nio/ShortBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexivOES(int%5B%5D,%20int))
        pub fn glDrawTexivOES_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexivOES", .descriptor == "([II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexivOES\0", "([II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexivOES(java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDrawTexivOES_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexivOES", .descriptor == "(Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexivOES\0", "(Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexxvOES(int%5B%5D,%20int))
        pub fn glDrawTexxvOES_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexxvOES", .descriptor == "([II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexxvOES\0", "([II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexxvOES(java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDrawTexxvOES_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexxvOES", .descriptor == "(Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexxvOES\0", "(Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexfOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexfOES(float,%20float,%20float,%20float,%20float))
        pub fn glDrawTexfOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexfOES", .descriptor == "(FFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexfOES\0", "(FFFFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexfvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexfvOES(float%5B%5D,%20int))
        pub fn glDrawTexfvOES_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexfvOES", .descriptor == "([FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexfvOES\0", "([FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDrawTexfvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDrawTexfvOES(java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glDrawTexfvOES_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDrawTexfvOES", .descriptor == "(Ljava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDrawTexfvOES\0", "(Ljava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glEGLImageTargetTexture2DOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glEGLImageTargetTexture2DOES(int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glEGLImageTargetTexture2DOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glEGLImageTargetTexture2DOES", .descriptor == "(ILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glEGLImageTargetTexture2DOES\0", "(ILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glEGLImageTargetRenderbufferStorageOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glEGLImageTargetRenderbufferStorageOES(int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glEGLImageTargetRenderbufferStorageOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glEGLImageTargetRenderbufferStorageOES", .descriptor == "(ILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glEGLImageTargetRenderbufferStorageOES\0", "(ILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glAlphaFuncxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glAlphaFuncxOES(int,%20int))
        pub fn glAlphaFuncxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glAlphaFuncxOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glAlphaFuncxOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearColorxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glClearColorxOES(int,%20int,%20int,%20int))
        pub fn glClearColorxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearColorxOES", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glClearColorxOES\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearDepthxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glClearDepthxOES(int))
        pub fn glClearDepthxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearDepthxOES", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glClearDepthxOES\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClipPlanexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glClipPlanexOES(int,%20int%5B%5D,%20int))
        pub fn glClipPlanexOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClipPlanexOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glClipPlanexOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClipPlanexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glClipPlanexOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glClipPlanexOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClipPlanexOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glClipPlanexOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glColor4xOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glColor4xOES(int,%20int,%20int,%20int))
        pub fn glColor4xOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glColor4xOES", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glColor4xOES\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDepthRangexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDepthRangexOES(int,%20int))
        pub fn glDepthRangexOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDepthRangexOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDepthRangexOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glFogxOES(int,%20int))
        pub fn glFogxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFogxOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glFogxOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glFogxvOES(int,%20int%5B%5D,%20int))
        pub fn glFogxvOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFogxvOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glFogxvOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFogxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glFogxvOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glFogxvOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFogxvOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glFogxvOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFrustumxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glFrustumxOES(int,%20int,%20int,%20int,%20int,%20int))
        pub fn glFrustumxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFrustumxOES", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glFrustumxOES\0", "(IIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetClipPlanexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetClipPlanexOES(int,%20int%5B%5D,%20int))
        pub fn glGetClipPlanexOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetClipPlanexOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetClipPlanexOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetClipPlanexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetClipPlanexOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetClipPlanexOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetClipPlanexOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetClipPlanexOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetFixedvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetFixedvOES(int,%20int%5B%5D,%20int))
        pub fn glGetFixedvOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetFixedvOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetFixedvOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetFixedvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetFixedvOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetFixedvOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetFixedvOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetFixedvOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetLightxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetLightxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetLightxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetLightxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetLightxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetLightxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetLightxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetLightxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetLightxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetLightxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetMaterialxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetMaterialxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetMaterialxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetMaterialxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetMaterialxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetMaterialxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetMaterialxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetMaterialxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetMaterialxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetMaterialxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexEnvxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexEnvxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetTexEnvxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexEnvxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexEnvxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexEnvxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexEnvxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetTexEnvxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexEnvxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexEnvxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexParameterxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexParameterxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetTexParameterxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexParameterxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexParameterxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexParameterxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexParameterxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetTexParameterxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexParameterxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexParameterxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLightModelxOES(int,%20int))
        pub fn glLightModelxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLightModelxOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLightModelxOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLightModelxvOES(int,%20int%5B%5D,%20int))
        pub fn glLightModelxvOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLightModelxvOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLightModelxvOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightModelxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLightModelxvOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glLightModelxvOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLightModelxvOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLightModelxvOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLightxOES(int,%20int,%20int))
        pub fn glLightxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLightxOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLightxOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLightxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glLightxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLightxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLightxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLightxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLightxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glLightxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLightxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLightxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLineWidthxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLineWidthxOES(int))
        pub fn glLineWidthxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLineWidthxOES", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLineWidthxOES\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadMatrixxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLoadMatrixxOES(int%5B%5D,%20int))
        pub fn glLoadMatrixxOES_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLoadMatrixxOES", .descriptor == "([II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLoadMatrixxOES\0", "([II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadMatrixxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLoadMatrixxOES(java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glLoadMatrixxOES_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLoadMatrixxOES", .descriptor == "(Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLoadMatrixxOES\0", "(Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glMaterialxOES(int,%20int,%20int))
        pub fn glMaterialxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMaterialxOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glMaterialxOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glMaterialxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glMaterialxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMaterialxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glMaterialxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMaterialxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glMaterialxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glMaterialxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMaterialxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glMaterialxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultMatrixxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glMultMatrixxOES(int%5B%5D,%20int))
        pub fn glMultMatrixxOES_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMultMatrixxOES", .descriptor == "([II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glMultMatrixxOES\0", "([II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultMatrixxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glMultMatrixxOES(java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glMultMatrixxOES_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMultMatrixxOES", .descriptor == "(Ljava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glMultMatrixxOES\0", "(Ljava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMultiTexCoord4xOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glMultiTexCoord4xOES(int,%20int,%20int,%20int,%20int))
        pub fn glMultiTexCoord4xOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glMultiTexCoord4xOES", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glMultiTexCoord4xOES\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glNormal3xOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glNormal3xOES(int,%20int,%20int))
        pub fn glNormal3xOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glNormal3xOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glNormal3xOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glOrthoxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glOrthoxOES(int,%20int,%20int,%20int,%20int,%20int))
        pub fn glOrthoxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glOrthoxOES", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glOrthoxOES\0", "(IIIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPointParameterxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glPointParameterxOES(int,%20int))
        pub fn glPointParameterxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glPointParameterxOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glPointParameterxOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPointParameterxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glPointParameterxvOES(int,%20int%5B%5D,%20int))
        pub fn glPointParameterxvOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glPointParameterxvOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glPointParameterxvOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPointParameterxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glPointParameterxvOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glPointParameterxvOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glPointParameterxvOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glPointParameterxvOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPointSizexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glPointSizexOES(int))
        pub fn glPointSizexOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glPointSizexOES", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glPointSizexOES\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glPolygonOffsetxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glPolygonOffsetxOES(int,%20int))
        pub fn glPolygonOffsetxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glPolygonOffsetxOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glPolygonOffsetxOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glRotatexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glRotatexOES(int,%20int,%20int,%20int))
        pub fn glRotatexOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glRotatexOES", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glRotatexOES\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glSampleCoveragexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glSampleCoveragexOES(int,%20boolean))
        pub fn glSampleCoveragexOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glSampleCoveragexOES", .descriptor == "(IZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glSampleCoveragexOES\0", "(IZ)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glScalexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glScalexOES(int,%20int,%20int))
        pub fn glScalexOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glScalexOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glScalexOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexEnvxOES(int,%20int,%20int))
        pub fn glTexEnvxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexEnvxOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexEnvxOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexEnvxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glTexEnvxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexEnvxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexEnvxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexEnvxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexEnvxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glTexEnvxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexEnvxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexEnvxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexParameterxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexParameterxOES(int,%20int,%20int))
        pub fn glTexParameterxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexParameterxOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexParameterxOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexParameterxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexParameterxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glTexParameterxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexParameterxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexParameterxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexParameterxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexParameterxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glTexParameterxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexParameterxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexParameterxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTranslatexOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTranslatexOES(int,%20int,%20int))
        pub fn glTranslatexOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTranslatexOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTranslatexOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glIsRenderbufferOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glIsRenderbufferOES(int))
        pub fn glIsRenderbufferOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glIsRenderbufferOES", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glIsRenderbufferOES\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindRenderbufferOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glBindRenderbufferOES(int,%20int))
        pub fn glBindRenderbufferOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindRenderbufferOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glBindRenderbufferOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteRenderbuffersOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDeleteRenderbuffersOES(int,%20int%5B%5D,%20int))
        pub fn glDeleteRenderbuffersOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteRenderbuffersOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDeleteRenderbuffersOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteRenderbuffersOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDeleteRenderbuffersOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDeleteRenderbuffersOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteRenderbuffersOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDeleteRenderbuffersOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenRenderbuffersOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGenRenderbuffersOES(int,%20int%5B%5D,%20int))
        pub fn glGenRenderbuffersOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenRenderbuffersOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGenRenderbuffersOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenRenderbuffersOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGenRenderbuffersOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGenRenderbuffersOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenRenderbuffersOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGenRenderbuffersOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glRenderbufferStorageOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glRenderbufferStorageOES(int,%20int,%20int,%20int))
        pub fn glRenderbufferStorageOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glRenderbufferStorageOES", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glRenderbufferStorageOES\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetRenderbufferParameterivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetRenderbufferParameterivOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetRenderbufferParameterivOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetRenderbufferParameterivOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetRenderbufferParameterivOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetRenderbufferParameterivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetRenderbufferParameterivOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetRenderbufferParameterivOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetRenderbufferParameterivOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetRenderbufferParameterivOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glIsFramebufferOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glIsFramebufferOES(int))
        pub fn glIsFramebufferOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glIsFramebufferOES", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glIsFramebufferOES\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glBindFramebufferOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glBindFramebufferOES(int,%20int))
        pub fn glBindFramebufferOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glBindFramebufferOES", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glBindFramebufferOES\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteFramebuffersOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDeleteFramebuffersOES(int,%20int%5B%5D,%20int))
        pub fn glDeleteFramebuffersOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteFramebuffersOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDeleteFramebuffersOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDeleteFramebuffersOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDeleteFramebuffersOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glDeleteFramebuffersOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDeleteFramebuffersOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDeleteFramebuffersOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenFramebuffersOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGenFramebuffersOES(int,%20int%5B%5D,%20int))
        pub fn glGenFramebuffersOES_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenFramebuffersOES", .descriptor == "(I[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGenFramebuffersOES\0", "(I[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenFramebuffersOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGenFramebuffersOES(int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGenFramebuffersOES_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenFramebuffersOES", .descriptor == "(ILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGenFramebuffersOES\0", "(ILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCheckFramebufferStatusOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glCheckFramebufferStatusOES(int))
        pub fn glCheckFramebufferStatusOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCheckFramebufferStatusOES", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glCheckFramebufferStatusOES\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFramebufferRenderbufferOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glFramebufferRenderbufferOES(int,%20int,%20int,%20int))
        pub fn glFramebufferRenderbufferOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFramebufferRenderbufferOES", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glFramebufferRenderbufferOES\0", "(IIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFramebufferTexture2DOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glFramebufferTexture2DOES(int,%20int,%20int,%20int,%20int))
        pub fn glFramebufferTexture2DOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFramebufferTexture2DOES", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glFramebufferTexture2DOES\0", "(IIIII)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetFramebufferAttachmentParameterivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetFramebufferAttachmentParameterivOES(int,%20int,%20int,%20int%5B%5D,%20int))
        pub fn glGetFramebufferAttachmentParameterivOES_int_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetFramebufferAttachmentParameterivOES", .descriptor == "(III[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetFramebufferAttachmentParameterivOES\0", "(III[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetFramebufferAttachmentParameterivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetFramebufferAttachmentParameterivOES(int,%20int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetFramebufferAttachmentParameterivOES_int_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetFramebufferAttachmentParameterivOES", .descriptor == "(IIILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetFramebufferAttachmentParameterivOES\0", "(IIILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGenerateMipmapOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGenerateMipmapOES(int))
        pub fn glGenerateMipmapOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGenerateMipmapOES", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGenerateMipmapOES\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glCurrentPaletteMatrixOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glCurrentPaletteMatrixOES(int))
        pub fn glCurrentPaletteMatrixOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glCurrentPaletteMatrixOES", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glCurrentPaletteMatrixOES\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glLoadPaletteFromModelViewMatrixOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glLoadPaletteFromModelViewMatrixOES())
        pub fn glLoadPaletteFromModelViewMatrixOES<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glLoadPaletteFromModelViewMatrixOES", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glLoadPaletteFromModelViewMatrixOES\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glMatrixIndexPointerOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glMatrixIndexPointerOES(int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glMatrixIndexPointerOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC, .name == "glMatrixIndexPointerOES", .descriptor == "(IIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glMatrixIndexPointerOES\0", "(IIILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glWeightPointerOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glWeightPointerOES(int,%20int,%20int,%20java.nio.Buffer))
        ///
        /// Required features: "java-nio-Buffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-Buffer")))]
        pub fn glWeightPointerOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::Buffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC, .name == "glWeightPointerOES", .descriptor == "(IIILjava/nio/Buffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glWeightPointerOES\0", "(IIILjava/nio/Buffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glDepthRangefOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glDepthRangefOES(float,%20float))
        pub fn glDepthRangefOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glDepthRangefOES", .descriptor == "(FF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glDepthRangefOES\0", "(FF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glFrustumfOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glFrustumfOES(float,%20float,%20float,%20float,%20float,%20float))
        pub fn glFrustumfOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: f32, arg5: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glFrustumfOES", .descriptor == "(FFFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glFrustumfOES\0", "(FFFFFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glOrthofOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glOrthofOES(float,%20float,%20float,%20float,%20float,%20float))
        pub fn glOrthofOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: f32, arg5: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glOrthofOES", .descriptor == "(FFFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glOrthofOES\0", "(FFFFFF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClipPlanefOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glClipPlanefOES(int,%20float%5B%5D,%20int))
        pub fn glClipPlanefOES_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClipPlanefOES", .descriptor == "(I[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glClipPlanefOES\0", "(I[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClipPlanefOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glClipPlanefOES(int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glClipPlanefOES_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClipPlanefOES", .descriptor == "(ILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glClipPlanefOES\0", "(ILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetClipPlanefOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetClipPlanefOES(int,%20float%5B%5D,%20int))
        pub fn glGetClipPlanefOES_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetClipPlanefOES", .descriptor == "(I[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetClipPlanefOES\0", "(I[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetClipPlanefOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetClipPlanefOES(int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glGetClipPlanefOES_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetClipPlanefOES", .descriptor == "(ILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetClipPlanefOES\0", "(ILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glClearDepthfOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glClearDepthfOES(float))
        pub fn glClearDepthfOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glClearDepthfOES", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glClearDepthfOES\0", "(F)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGenfOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGenfOES(int,%20int,%20float))
        pub fn glTexGenfOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGenfOES", .descriptor == "(IIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGenfOES\0", "(IIF)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGenfvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGenfvOES(int,%20int,%20float%5B%5D,%20int))
        pub fn glTexGenfvOES_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGenfvOES", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGenfvOES\0", "(II[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGenfvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGenfvOES(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glTexGenfvOES_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGenfvOES", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGenfvOES\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGeniOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGeniOES(int,%20int,%20int))
        pub fn glTexGeniOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGeniOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGeniOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGenivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGenivOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glTexGenivOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGenivOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGenivOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGenivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGenivOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glTexGenivOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGenivOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGenivOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGenxOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGenxOES(int,%20int,%20int))
        pub fn glTexGenxOES<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGenxOES", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGenxOES\0", "(III)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGenxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGenxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glTexGenxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGenxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGenxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glTexGenxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glTexGenxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glTexGenxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glTexGenxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glTexGenxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexGenfvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexGenfvOES(int,%20int,%20float%5B%5D,%20int))
        pub fn glGetTexGenfvOES_int_int_float_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexGenfvOES", .descriptor == "(II[FI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexGenfvOES\0", "(II[FI)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexGenfvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexGenfvOES(int,%20int,%20java.nio.FloatBuffer))
        ///
        /// Required features: "java-nio-FloatBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-FloatBuffer")))]
        pub fn glGetTexGenfvOES_int_int_FloatBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::FloatBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexGenfvOES", .descriptor == "(IILjava/nio/FloatBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexGenfvOES\0", "(IILjava/nio/FloatBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexGenivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexGenivOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetTexGenivOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexGenivOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexGenivOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexGenivOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexGenivOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetTexGenivOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexGenivOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexGenivOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexGenxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexGenxvOES(int,%20int,%20int%5B%5D,%20int))
        pub fn glGetTexGenxvOES_int_int_int_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexGenxvOES", .descriptor == "(II[II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexGenxvOES\0", "(II[II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [glGetTexGenxvOES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#glGetTexGenxvOES(int,%20int,%20java.nio.IntBuffer))
        ///
        /// Required features: "java-nio-IntBuffer"
        #[cfg(any(feature = "all", all(feature = "java-nio-IntBuffer")))]
        pub fn glGetTexGenxvOES_int_int_IntBuffer<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::nio::IntBuffer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/opengl/GLES11Ext", java.flags == PUBLIC | STATIC | NATIVE, .name == "glGetTexGenxvOES", .descriptor == "(IILjava/nio/IntBuffer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/opengl/GLES11Ext\0", "glGetTexGenxvOES\0", "(IILjava/nio/IntBuffer;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [GL_3DC_XY_AMD](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_3DC_XY_AMD)
        pub const GL_3DC_XY_AMD : i32 = 34810;

        /// public static final [GL_3DC_X_AMD](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_3DC_X_AMD)
        pub const GL_3DC_X_AMD : i32 = 34809;

        /// public static final [GL_ATC_RGBA_EXPLICIT_ALPHA_AMD](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_ATC_RGBA_EXPLICIT_ALPHA_AMD)
        pub const GL_ATC_RGBA_EXPLICIT_ALPHA_AMD : i32 = 35987;

        /// public static final [GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD)
        pub const GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD : i32 = 34798;

        /// public static final [GL_ATC_RGB_AMD](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_ATC_RGB_AMD)
        pub const GL_ATC_RGB_AMD : i32 = 35986;

        /// public static final [GL_BGRA](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BGRA)
        pub const GL_BGRA : i32 = 32993;

        /// public static final [GL_BLEND_DST_ALPHA_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BLEND_DST_ALPHA_OES)
        pub const GL_BLEND_DST_ALPHA_OES : i32 = 32970;

        /// public static final [GL_BLEND_DST_RGB_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BLEND_DST_RGB_OES)
        pub const GL_BLEND_DST_RGB_OES : i32 = 32968;

        /// public static final [GL_BLEND_EQUATION_ALPHA_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BLEND_EQUATION_ALPHA_OES)
        pub const GL_BLEND_EQUATION_ALPHA_OES : i32 = 34877;

        /// public static final [GL_BLEND_EQUATION_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BLEND_EQUATION_OES)
        pub const GL_BLEND_EQUATION_OES : i32 = 32777;

        /// public static final [GL_BLEND_EQUATION_RGB_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BLEND_EQUATION_RGB_OES)
        pub const GL_BLEND_EQUATION_RGB_OES : i32 = 32777;

        /// public static final [GL_BLEND_SRC_ALPHA_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BLEND_SRC_ALPHA_OES)
        pub const GL_BLEND_SRC_ALPHA_OES : i32 = 32971;

        /// public static final [GL_BLEND_SRC_RGB_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BLEND_SRC_RGB_OES)
        pub const GL_BLEND_SRC_RGB_OES : i32 = 32969;

        /// public static final [GL_BUFFER_ACCESS_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BUFFER_ACCESS_OES)
        pub const GL_BUFFER_ACCESS_OES : i32 = 35003;

        /// public static final [GL_BUFFER_MAPPED_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BUFFER_MAPPED_OES)
        pub const GL_BUFFER_MAPPED_OES : i32 = 35004;

        /// public static final [GL_BUFFER_MAP_POINTER_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_BUFFER_MAP_POINTER_OES)
        pub const GL_BUFFER_MAP_POINTER_OES : i32 = 35005;

        /// public static final [GL_COLOR_ATTACHMENT0_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_COLOR_ATTACHMENT0_OES)
        pub const GL_COLOR_ATTACHMENT0_OES : i32 = 36064;

        /// public static final [GL_CURRENT_PALETTE_MATRIX_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_CURRENT_PALETTE_MATRIX_OES)
        pub const GL_CURRENT_PALETTE_MATRIX_OES : i32 = 34883;

        /// public static final [GL_DECR_WRAP_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_DECR_WRAP_OES)
        pub const GL_DECR_WRAP_OES : i32 = 34056;

        /// public static final [GL_DEPTH24_STENCIL8_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_DEPTH24_STENCIL8_OES)
        pub const GL_DEPTH24_STENCIL8_OES : i32 = 35056;

        /// public static final [GL_DEPTH_ATTACHMENT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_DEPTH_ATTACHMENT_OES)
        pub const GL_DEPTH_ATTACHMENT_OES : i32 = 36096;

        /// public static final [GL_DEPTH_COMPONENT16_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_DEPTH_COMPONENT16_OES)
        pub const GL_DEPTH_COMPONENT16_OES : i32 = 33189;

        /// public static final [GL_DEPTH_COMPONENT24_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_DEPTH_COMPONENT24_OES)
        pub const GL_DEPTH_COMPONENT24_OES : i32 = 33190;

        /// public static final [GL_DEPTH_COMPONENT32_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_DEPTH_COMPONENT32_OES)
        pub const GL_DEPTH_COMPONENT32_OES : i32 = 33191;

        /// public static final [GL_DEPTH_STENCIL_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_DEPTH_STENCIL_OES)
        pub const GL_DEPTH_STENCIL_OES : i32 = 34041;

        /// public static final [GL_ETC1_RGB8_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_ETC1_RGB8_OES)
        pub const GL_ETC1_RGB8_OES : i32 = 36196;

        /// public static final [GL_FIXED_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FIXED_OES)
        pub const GL_FIXED_OES : i32 = 5132;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES)
        pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES : i32 = 36049;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES)
        pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES : i32 = 36048;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES)
        pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES : i32 = 36051;

        /// public static final [GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES)
        pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES : i32 = 36050;

        /// public static final [GL_FRAMEBUFFER_BINDING_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_BINDING_OES)
        pub const GL_FRAMEBUFFER_BINDING_OES : i32 = 36006;

        /// public static final [GL_FRAMEBUFFER_COMPLETE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_COMPLETE_OES)
        pub const GL_FRAMEBUFFER_COMPLETE_OES : i32 = 36053;

        /// public static final [GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES)
        pub const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES : i32 = 36054;

        /// public static final [GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES)
        pub const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES : i32 = 36057;

        /// public static final [GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES)
        pub const GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES : i32 = 36058;

        /// public static final [GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES)
        pub const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES : i32 = 36055;

        /// public static final [GL_FRAMEBUFFER_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_OES)
        pub const GL_FRAMEBUFFER_OES : i32 = 36160;

        /// public static final [GL_FRAMEBUFFER_UNSUPPORTED_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FRAMEBUFFER_UNSUPPORTED_OES)
        pub const GL_FRAMEBUFFER_UNSUPPORTED_OES : i32 = 36061;

        /// public static final [GL_FUNC_ADD_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FUNC_ADD_OES)
        pub const GL_FUNC_ADD_OES : i32 = 32774;

        /// public static final [GL_FUNC_REVERSE_SUBTRACT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FUNC_REVERSE_SUBTRACT_OES)
        pub const GL_FUNC_REVERSE_SUBTRACT_OES : i32 = 32779;

        /// public static final [GL_FUNC_SUBTRACT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_FUNC_SUBTRACT_OES)
        pub const GL_FUNC_SUBTRACT_OES : i32 = 32778;

        /// public static final [GL_INCR_WRAP_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_INCR_WRAP_OES)
        pub const GL_INCR_WRAP_OES : i32 = 34055;

        /// public static final [GL_INVALID_FRAMEBUFFER_OPERATION_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_INVALID_FRAMEBUFFER_OPERATION_OES)
        pub const GL_INVALID_FRAMEBUFFER_OPERATION_OES : i32 = 1286;

        /// public static final [GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES)
        pub const GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES : i32 = 35742;

        /// public static final [GL_MATRIX_INDEX_ARRAY_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MATRIX_INDEX_ARRAY_OES)
        pub const GL_MATRIX_INDEX_ARRAY_OES : i32 = 34884;

        /// public static final [GL_MATRIX_INDEX_ARRAY_POINTER_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MATRIX_INDEX_ARRAY_POINTER_OES)
        pub const GL_MATRIX_INDEX_ARRAY_POINTER_OES : i32 = 34889;

        /// public static final [GL_MATRIX_INDEX_ARRAY_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MATRIX_INDEX_ARRAY_SIZE_OES)
        pub const GL_MATRIX_INDEX_ARRAY_SIZE_OES : i32 = 34886;

        /// public static final [GL_MATRIX_INDEX_ARRAY_STRIDE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MATRIX_INDEX_ARRAY_STRIDE_OES)
        pub const GL_MATRIX_INDEX_ARRAY_STRIDE_OES : i32 = 34888;

        /// public static final [GL_MATRIX_INDEX_ARRAY_TYPE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MATRIX_INDEX_ARRAY_TYPE_OES)
        pub const GL_MATRIX_INDEX_ARRAY_TYPE_OES : i32 = 34887;

        /// public static final [GL_MATRIX_PALETTE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MATRIX_PALETTE_OES)
        pub const GL_MATRIX_PALETTE_OES : i32 = 34880;

        /// public static final [GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES)
        pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES : i32 = 34076;

        /// public static final [GL_MAX_PALETTE_MATRICES_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MAX_PALETTE_MATRICES_OES)
        pub const GL_MAX_PALETTE_MATRICES_OES : i32 = 34882;

        /// public static final [GL_MAX_RENDERBUFFER_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MAX_RENDERBUFFER_SIZE_OES)
        pub const GL_MAX_RENDERBUFFER_SIZE_OES : i32 = 34024;

        /// public static final [GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT)
        pub const GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT : i32 = 34047;

        /// public static final [GL_MAX_VERTEX_UNITS_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MAX_VERTEX_UNITS_OES)
        pub const GL_MAX_VERTEX_UNITS_OES : i32 = 34468;

        /// public static final [GL_MIRRORED_REPEAT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MIRRORED_REPEAT_OES)
        pub const GL_MIRRORED_REPEAT_OES : i32 = 33648;

        /// public static final [GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES)
        pub const GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES : i32 = 35213;

        /// public static final [GL_NONE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_NONE_OES)
        pub const GL_NONE_OES : i32 = 0;

        /// public static final [GL_NORMAL_MAP_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_NORMAL_MAP_OES)
        pub const GL_NORMAL_MAP_OES : i32 = 34065;

        /// public static final [GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES)
        pub const GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES : i32 = 35214;

        /// public static final [GL_REFLECTION_MAP_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_REFLECTION_MAP_OES)
        pub const GL_REFLECTION_MAP_OES : i32 = 34066;

        /// public static final [GL_RENDERBUFFER_ALPHA_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_ALPHA_SIZE_OES)
        pub const GL_RENDERBUFFER_ALPHA_SIZE_OES : i32 = 36179;

        /// public static final [GL_RENDERBUFFER_BINDING_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_BINDING_OES)
        pub const GL_RENDERBUFFER_BINDING_OES : i32 = 36007;

        /// public static final [GL_RENDERBUFFER_BLUE_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_BLUE_SIZE_OES)
        pub const GL_RENDERBUFFER_BLUE_SIZE_OES : i32 = 36178;

        /// public static final [GL_RENDERBUFFER_DEPTH_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_DEPTH_SIZE_OES)
        pub const GL_RENDERBUFFER_DEPTH_SIZE_OES : i32 = 36180;

        /// public static final [GL_RENDERBUFFER_GREEN_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_GREEN_SIZE_OES)
        pub const GL_RENDERBUFFER_GREEN_SIZE_OES : i32 = 36177;

        /// public static final [GL_RENDERBUFFER_HEIGHT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_HEIGHT_OES)
        pub const GL_RENDERBUFFER_HEIGHT_OES : i32 = 36163;

        /// public static final [GL_RENDERBUFFER_INTERNAL_FORMAT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_INTERNAL_FORMAT_OES)
        pub const GL_RENDERBUFFER_INTERNAL_FORMAT_OES : i32 = 36164;

        /// public static final [GL_RENDERBUFFER_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_OES)
        pub const GL_RENDERBUFFER_OES : i32 = 36161;

        /// public static final [GL_RENDERBUFFER_RED_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_RED_SIZE_OES)
        pub const GL_RENDERBUFFER_RED_SIZE_OES : i32 = 36176;

        /// public static final [GL_RENDERBUFFER_STENCIL_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_STENCIL_SIZE_OES)
        pub const GL_RENDERBUFFER_STENCIL_SIZE_OES : i32 = 36181;

        /// public static final [GL_RENDERBUFFER_WIDTH_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RENDERBUFFER_WIDTH_OES)
        pub const GL_RENDERBUFFER_WIDTH_OES : i32 = 36162;

        /// public static final [GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES)
        pub const GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES : i32 = 36200;

        /// public static final [GL_RGB565_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RGB565_OES)
        pub const GL_RGB565_OES : i32 = 36194;

        /// public static final [GL_RGB5_A1_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RGB5_A1_OES)
        pub const GL_RGB5_A1_OES : i32 = 32855;

        /// public static final [GL_RGB8_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RGB8_OES)
        pub const GL_RGB8_OES : i32 = 32849;

        /// public static final [GL_RGBA4_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RGBA4_OES)
        pub const GL_RGBA4_OES : i32 = 32854;

        /// public static final [GL_RGBA8_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_RGBA8_OES)
        pub const GL_RGBA8_OES : i32 = 32856;

        /// public static final [GL_SAMPLER_EXTERNAL_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_SAMPLER_EXTERNAL_OES)
        pub const GL_SAMPLER_EXTERNAL_OES : i32 = 36198;

        /// public static final [GL_STENCIL_ATTACHMENT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_STENCIL_ATTACHMENT_OES)
        pub const GL_STENCIL_ATTACHMENT_OES : i32 = 36128;

        /// public static final [GL_STENCIL_INDEX1_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_STENCIL_INDEX1_OES)
        pub const GL_STENCIL_INDEX1_OES : i32 = 36166;

        /// public static final [GL_STENCIL_INDEX4_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_STENCIL_INDEX4_OES)
        pub const GL_STENCIL_INDEX4_OES : i32 = 36167;

        /// public static final [GL_STENCIL_INDEX8_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_STENCIL_INDEX8_OES)
        pub const GL_STENCIL_INDEX8_OES : i32 = 36168;

        /// public static final [GL_TEXTURE_BINDING_CUBE_MAP_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_BINDING_CUBE_MAP_OES)
        pub const GL_TEXTURE_BINDING_CUBE_MAP_OES : i32 = 34068;

        /// public static final [GL_TEXTURE_BINDING_EXTERNAL_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_BINDING_EXTERNAL_OES)
        pub const GL_TEXTURE_BINDING_EXTERNAL_OES : i32 = 36199;

        /// public static final [GL_TEXTURE_CROP_RECT_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_CROP_RECT_OES)
        pub const GL_TEXTURE_CROP_RECT_OES : i32 = 35741;

        /// public static final [GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES)
        pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES : i32 = 34070;

        /// public static final [GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES)
        pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES : i32 = 34072;

        /// public static final [GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES)
        pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES : i32 = 34074;

        /// public static final [GL_TEXTURE_CUBE_MAP_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_CUBE_MAP_OES)
        pub const GL_TEXTURE_CUBE_MAP_OES : i32 = 34067;

        /// public static final [GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES)
        pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES : i32 = 34069;

        /// public static final [GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES)
        pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES : i32 = 34071;

        /// public static final [GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES)
        pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES : i32 = 34073;

        /// public static final [GL_TEXTURE_EXTERNAL_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_EXTERNAL_OES)
        pub const GL_TEXTURE_EXTERNAL_OES : i32 = 36197;

        /// public static final [GL_TEXTURE_GEN_MODE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_GEN_MODE_OES)
        pub const GL_TEXTURE_GEN_MODE_OES : i32 = 9472;

        /// public static final [GL_TEXTURE_GEN_STR_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_GEN_STR_OES)
        pub const GL_TEXTURE_GEN_STR_OES : i32 = 36192;

        /// public static final [GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES)
        pub const GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES : i32 = 35215;

        /// public static final [GL_TEXTURE_MAX_ANISOTROPY_EXT](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_TEXTURE_MAX_ANISOTROPY_EXT)
        pub const GL_TEXTURE_MAX_ANISOTROPY_EXT : i32 = 34046;

        /// public static final [GL_UNSIGNED_INT_24_8_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_UNSIGNED_INT_24_8_OES)
        pub const GL_UNSIGNED_INT_24_8_OES : i32 = 34042;

        /// public static final [GL_WEIGHT_ARRAY_BUFFER_BINDING_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_WEIGHT_ARRAY_BUFFER_BINDING_OES)
        pub const GL_WEIGHT_ARRAY_BUFFER_BINDING_OES : i32 = 34974;

        /// public static final [GL_WEIGHT_ARRAY_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_WEIGHT_ARRAY_OES)
        pub const GL_WEIGHT_ARRAY_OES : i32 = 34477;

        /// public static final [GL_WEIGHT_ARRAY_POINTER_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_WEIGHT_ARRAY_POINTER_OES)
        pub const GL_WEIGHT_ARRAY_POINTER_OES : i32 = 34476;

        /// public static final [GL_WEIGHT_ARRAY_SIZE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_WEIGHT_ARRAY_SIZE_OES)
        pub const GL_WEIGHT_ARRAY_SIZE_OES : i32 = 34475;

        /// public static final [GL_WEIGHT_ARRAY_STRIDE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_WEIGHT_ARRAY_STRIDE_OES)
        pub const GL_WEIGHT_ARRAY_STRIDE_OES : i32 = 34474;

        /// public static final [GL_WEIGHT_ARRAY_TYPE_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_WEIGHT_ARRAY_TYPE_OES)
        pub const GL_WEIGHT_ARRAY_TYPE_OES : i32 = 34473;

        /// public static final [GL_WRITE_ONLY_OES](https://developer.android.com/reference/android/opengl/GLES11Ext.html#GL_WRITE_ONLY_OES)
        pub const GL_WRITE_ONLY_OES : i32 = 35001;
    }
}
