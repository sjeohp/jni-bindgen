// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-gesture-GesturePoint"))]
__jni_bindgen! {
    /// public class [GesturePoint](https://developer.android.com/reference/android/gesture/GesturePoint.html)
    ///
    /// Required feature: android-gesture-GesturePoint
    public class GesturePoint ("android/gesture/GesturePoint") extends crate::java::lang::Object {

        /// [GesturePoint](https://developer.android.com/reference/android/gesture/GesturePoint.html#GesturePoint(float,%20float,%20long))
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::gesture::GesturePoint>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/gesture/GesturePoint", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/gesture/GesturePoint\0", "<init>\0", "(FFJ)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/android/gesture/GesturePoint.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/gesture/GesturePoint", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/gesture/GesturePoint\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public final [timestamp](https://developer.android.com/reference/android/gesture/GesturePoint.html#timestamp)
        pub fn timestamp<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/gesture/GesturePoint\0", "timestamp\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **get** public final [x](https://developer.android.com/reference/android/gesture/GesturePoint.html#x)
        pub fn x<'env>(&'env self) -> f32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/gesture/GesturePoint\0", "x\0", "F\0");
                env.get_float_field(class, field)
            }
        }

        /// **get** public final [y](https://developer.android.com/reference/android/gesture/GesturePoint.html#y)
        pub fn y<'env>(&'env self) -> f32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/gesture/GesturePoint\0", "y\0", "F\0");
                env.get_float_field(class, field)
            }
        }
    }
}
