// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-sip-SipProfile_Builder"))]
__jni_bindgen! {
    /// public class [SipProfile.Builder](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html)
    ///
    /// Required feature: android-net-sip-SipProfile_Builder
    public class SipProfile_Builder ("android/net/sip/SipProfile$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#Builder(android.net.sip.SipProfile))
        ///
        /// Required features: "android-net-sip-SipProfile"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile")))]
        pub fn new_SipProfile<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::sip::SipProfile>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/net/sip/SipProfile;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "<init>\0", "(Landroid/net/sip/SipProfile;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#Builder(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#Builder(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "<init>\0", "(Ljava/lang/String;Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAuthUserName](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setAuthUserName(java.lang.String))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder", feature = "java-lang-String")))]
        pub fn setAuthUserName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setAuthUserName", .descriptor == "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setAuthUserName\0", "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setProfileName](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setProfileName(java.lang.String))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder", feature = "java-lang-String")))]
        pub fn setProfileName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setProfileName", .descriptor == "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setProfileName\0", "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPassword](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setPassword(java.lang.String))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder", feature = "java-lang-String")))]
        pub fn setPassword<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setPassword", .descriptor == "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setPassword\0", "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPort](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setPort(int))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder")))]
        pub fn setPort<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setPort", .descriptor == "(I)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setPort\0", "(I)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setProtocol](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setProtocol(java.lang.String))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder", feature = "java-lang-String")))]
        pub fn setProtocol<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setProtocol", .descriptor == "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setProtocol\0", "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOutboundProxy](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setOutboundProxy(java.lang.String))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder", feature = "java-lang-String")))]
        pub fn setOutboundProxy<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setOutboundProxy", .descriptor == "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setOutboundProxy\0", "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDisplayName](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setDisplayName(java.lang.String))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder", feature = "java-lang-String")))]
        pub fn setDisplayName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setDisplayName", .descriptor == "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setDisplayName\0", "(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSendKeepAlive](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setSendKeepAlive(boolean))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder")))]
        pub fn setSendKeepAlive<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setSendKeepAlive", .descriptor == "(Z)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setSendKeepAlive\0", "(Z)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAutoRegistration](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#setAutoRegistration(boolean))
        ///
        /// Required features: "android-net-sip-SipProfile_Builder"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile_Builder")))]
        pub fn setAutoRegistration<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "setAutoRegistration", .descriptor == "(Z)Landroid/net/sip/SipProfile$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "setAutoRegistration\0", "(Z)Landroid/net/sip/SipProfile$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html#build())
        ///
        /// Required features: "android-net-sip-SipProfile"
        #[cfg(any(feature = "all", all(feature = "android-net-sip-SipProfile")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::sip::SipProfile>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/sip/SipProfile$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/net/sip/SipProfile;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/sip/SipProfile$Builder\0", "build\0", "()Landroid/net/sip/SipProfile;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
