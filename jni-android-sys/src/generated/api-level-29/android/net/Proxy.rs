// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-Proxy"))]
__jni_bindgen! {
    /// public final class [Proxy](https://developer.android.com/reference/android/net/Proxy.html)
    ///
    /// Required feature: android-net-Proxy
    public final class Proxy ("android/net/Proxy") extends crate::java::lang::Object {

        /// [Proxy](https://developer.android.com/reference/android/net/Proxy.html#Proxy())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::Proxy>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/Proxy", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/Proxy\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHost](https://developer.android.com/reference/android/net/Proxy.html#getHost(android.content.Context))
        ///
        /// Required features: "android-content-Context", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-lang-String")))]
        #[deprecated] pub fn getHost<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/Proxy", java.flags == PUBLIC | STATIC, .name == "getHost", .descriptor == "(Landroid/content/Context;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/Proxy\0", "getHost\0", "(Landroid/content/Context;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPort](https://developer.android.com/reference/android/net/Proxy.html#getPort(android.content.Context))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        #[deprecated] pub fn getPort<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/Proxy", java.flags == PUBLIC | STATIC, .name == "getPort", .descriptor == "(Landroid/content/Context;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/Proxy\0", "getPort\0", "(Landroid/content/Context;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultHost](https://developer.android.com/reference/android/net/Proxy.html#getDefaultHost())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getDefaultHost<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/Proxy", java.flags == PUBLIC | STATIC, .name == "getDefaultHost", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/Proxy\0", "getDefaultHost\0", "()Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultPort](https://developer.android.com/reference/android/net/Proxy.html#getDefaultPort())
        #[deprecated] pub fn getDefaultPort<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/Proxy", java.flags == PUBLIC | STATIC, .name == "getDefaultPort", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/Proxy\0", "getDefaultPort\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [EXTRA_PROXY_INFO](https://developer.android.com/reference/android/net/Proxy.html#EXTRA_PROXY_INFO)
        #[deprecated] pub const EXTRA_PROXY_INFO : &'static str = "android.intent.extra.PROXY_INFO";

        /// public static final [PROXY_CHANGE_ACTION](https://developer.android.com/reference/android/net/Proxy.html#PROXY_CHANGE_ACTION)
        pub const PROXY_CHANGE_ACTION : &'static str = "android.intent.action.PROXY_CHANGE";
    }
}
