// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-rtp-AudioCodec"))]
__jni_bindgen! {
    /// public class [AudioCodec](https://developer.android.com/reference/android/net/rtp/AudioCodec.html)
    ///
    /// Required feature: android-net-rtp-AudioCodec
    public class AudioCodec ("android/net/rtp/AudioCodec") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [AudioCodec](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#AudioCodec(int,%20java.lang.String,%20java.lang.String))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::rtp::AudioCodec>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/net/rtp/AudioCodec", java.flags == (empty), .name == "<init>", .descriptor == "(ILjava/lang/String;Ljava/lang/String;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/rtp/AudioCodec\0", "<init>\0", "(ILjava/lang/String;Ljava/lang/String;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getCodecs](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#getCodecs())
        ///
        /// Required features: "android-net-rtp-AudioCodec"
        #[cfg(any(feature = "all", all(feature = "android-net-rtp-AudioCodec")))]
        pub fn getCodecs<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::net::rtp::AudioCodec, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/rtp/AudioCodec", java.flags == PUBLIC | STATIC, .name == "getCodecs", .descriptor == "()[Landroid/net/rtp/AudioCodec;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/rtp/AudioCodec\0", "getCodecs\0", "()[Landroid/net/rtp/AudioCodec;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCodec](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#getCodec(int,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-net-rtp-AudioCodec", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-rtp-AudioCodec", feature = "java-lang-String")))]
        pub fn getCodec<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::rtp::AudioCodec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/rtp/AudioCodec", java.flags == PUBLIC | STATIC, .name == "getCodec", .descriptor == "(ILjava/lang/String;Ljava/lang/String;)Landroid/net/rtp/AudioCodec;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/rtp/AudioCodec\0", "getCodec\0", "(ILjava/lang/String;Ljava/lang/String;)Landroid/net/rtp/AudioCodec;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [AMR](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#AMR)
        ///
        /// Required feature: android-net-rtp-AudioCodec
        #[cfg(any(feature = "all", feature = "android-net-rtp-AudioCodec"))]
        pub fn AMR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::rtp::AudioCodec>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/rtp/AudioCodec\0", "AMR\0", "Landroid/net/rtp/AudioCodec;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [GSM](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#GSM)
        ///
        /// Required feature: android-net-rtp-AudioCodec
        #[cfg(any(feature = "all", feature = "android-net-rtp-AudioCodec"))]
        pub fn GSM<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::rtp::AudioCodec>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/rtp/AudioCodec\0", "GSM\0", "Landroid/net/rtp/AudioCodec;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [GSM_EFR](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#GSM_EFR)
        ///
        /// Required feature: android-net-rtp-AudioCodec
        #[cfg(any(feature = "all", feature = "android-net-rtp-AudioCodec"))]
        pub fn GSM_EFR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::rtp::AudioCodec>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/rtp/AudioCodec\0", "GSM_EFR\0", "Landroid/net/rtp/AudioCodec;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [PCMA](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#PCMA)
        ///
        /// Required feature: android-net-rtp-AudioCodec
        #[cfg(any(feature = "all", feature = "android-net-rtp-AudioCodec"))]
        pub fn PCMA<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::rtp::AudioCodec>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/rtp/AudioCodec\0", "PCMA\0", "Landroid/net/rtp/AudioCodec;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [PCMU](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#PCMU)
        ///
        /// Required feature: android-net-rtp-AudioCodec
        #[cfg(any(feature = "all", feature = "android-net-rtp-AudioCodec"))]
        pub fn PCMU<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::rtp::AudioCodec>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/rtp/AudioCodec\0", "PCMU\0", "Landroid/net/rtp/AudioCodec;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public final [fmtp](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#fmtp)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn fmtp<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/net/rtp/AudioCodec\0", "fmtp\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **get** public final [rtpmap](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#rtpmap)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn rtpmap<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/net/rtp/AudioCodec\0", "rtpmap\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **get** public final [type](https://developer.android.com/reference/android/net/rtp/AudioCodec.html#type)
        pub fn r#type<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/net/rtp/AudioCodec\0", "type\0", "I\0");
                env.get_int_field(class, field)
            }
        }
    }
}
