// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-http-SslCertificate"))]
__jni_bindgen! {
    /// public class [SslCertificate](https://developer.android.com/reference/android/net/http/SslCertificate.html)
    ///
    /// Required feature: android-net-http-SslCertificate
    public class SslCertificate ("android/net/http/SslCertificate") extends crate::java::lang::Object {

        /// [SslCertificate](https://developer.android.com/reference/android/net/http/SslCertificate.html#SslCertificate(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn new_String_String_String_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::http::SslCertificate>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "<init>\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SslCertificate](https://developer.android.com/reference/android/net/http/SslCertificate.html#SslCertificate(java.lang.String,%20java.lang.String,%20java.util.Date,%20java.util.Date))
        ///
        /// Required features: "java-lang-String", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Date")))]
        #[deprecated] pub fn new_String_String_Date_Date<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::http::SslCertificate>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "<init>\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SslCertificate](https://developer.android.com/reference/android/net/http/SslCertificate.html#SslCertificate(java.security.cert.X509Certificate))
        ///
        /// Required features: "java-security-cert-X509Certificate"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-X509Certificate")))]
        pub fn new_X509Certificate<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::cert::X509Certificate>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::http::SslCertificate>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/security/cert/X509Certificate;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "<init>\0", "(Ljava/security/cert/X509Certificate;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [saveState](https://developer.android.com/reference/android/net/http/SslCertificate.html#saveState(android.net.http.SslCertificate))
        ///
        /// Required features: "android-net-http-SslCertificate", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-net-http-SslCertificate", feature = "android-os-Bundle")))]
        pub fn saveState<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::http::SslCertificate>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC | STATIC, .name == "saveState", .descriptor == "(Landroid/net/http/SslCertificate;)Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/http/SslCertificate\0", "saveState\0", "(Landroid/net/http/SslCertificate;)Landroid/os/Bundle;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [restoreState](https://developer.android.com/reference/android/net/http/SslCertificate.html#restoreState(android.os.Bundle))
        ///
        /// Required features: "android-net-http-SslCertificate", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-net-http-SslCertificate", feature = "android-os-Bundle")))]
        pub fn restoreState<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::http::SslCertificate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC | STATIC, .name == "restoreState", .descriptor == "(Landroid/os/Bundle;)Landroid/net/http/SslCertificate;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/http/SslCertificate\0", "restoreState\0", "(Landroid/os/Bundle;)Landroid/net/http/SslCertificate;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getValidNotBeforeDate](https://developer.android.com/reference/android/net/http/SslCertificate.html#getValidNotBeforeDate())
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn getValidNotBeforeDate<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "getValidNotBeforeDate", .descriptor == "()Ljava/util/Date;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "getValidNotBeforeDate\0", "()Ljava/util/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getValidNotBefore](https://developer.android.com/reference/android/net/http/SslCertificate.html#getValidNotBefore())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getValidNotBefore<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "getValidNotBefore", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "getValidNotBefore\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getValidNotAfterDate](https://developer.android.com/reference/android/net/http/SslCertificate.html#getValidNotAfterDate())
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn getValidNotAfterDate<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "getValidNotAfterDate", .descriptor == "()Ljava/util/Date;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "getValidNotAfterDate\0", "()Ljava/util/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getValidNotAfter](https://developer.android.com/reference/android/net/http/SslCertificate.html#getValidNotAfter())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getValidNotAfter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "getValidNotAfter", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "getValidNotAfter\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIssuedTo](https://developer.android.com/reference/android/net/http/SslCertificate.html#getIssuedTo())
        ///
        /// Required features: "android-net-http-SslCertificate_DName"
        #[cfg(any(feature = "all", all(feature = "android-net-http-SslCertificate_DName")))]
        pub fn getIssuedTo<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::http::SslCertificate_DName>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "getIssuedTo", .descriptor == "()Landroid/net/http/SslCertificate$DName;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "getIssuedTo\0", "()Landroid/net/http/SslCertificate$DName;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIssuedBy](https://developer.android.com/reference/android/net/http/SslCertificate.html#getIssuedBy())
        ///
        /// Required features: "android-net-http-SslCertificate_DName"
        #[cfg(any(feature = "all", all(feature = "android-net-http-SslCertificate_DName")))]
        pub fn getIssuedBy<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::http::SslCertificate_DName>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "getIssuedBy", .descriptor == "()Landroid/net/http/SslCertificate$DName;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "getIssuedBy\0", "()Landroid/net/http/SslCertificate$DName;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getX509Certificate](https://developer.android.com/reference/android/net/http/SslCertificate.html#getX509Certificate())
        ///
        /// Required features: "java-security-cert-X509Certificate"
        #[cfg(any(feature = "all", all(feature = "java-security-cert-X509Certificate")))]
        pub fn getX509Certificate<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::cert::X509Certificate>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "getX509Certificate", .descriptor == "()Ljava/security/cert/X509Certificate;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "getX509Certificate\0", "()Ljava/security/cert/X509Certificate;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/net/http/SslCertificate.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/http/SslCertificate", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/http/SslCertificate\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
