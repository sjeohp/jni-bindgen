// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-ssl-SSLEngines"))]
__jni_bindgen! {
    /// public class [SSLEngines](https://developer.android.com/reference/android/net/ssl/SSLEngines.html)
    ///
    /// Required feature: android-net-ssl-SSLEngines
    public class SSLEngines ("android/net/ssl/SSLEngines") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [SSLEngines](https://developer.android.com/reference/android/net/ssl/SSLEngines.html#SSLEngines())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::ssl::SSLEngines>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/net/ssl/SSLEngines", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/ssl/SSLEngines\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [isSupportedEngine](https://developer.android.com/reference/android/net/ssl/SSLEngines.html#isSupportedEngine(javax.net.ssl.SSLEngine))
        ///
        /// Required features: "javax-net-ssl-SSLEngine"
        #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLEngine")))]
        pub fn isSupportedEngine<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::net::ssl::SSLEngine>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/ssl/SSLEngines", java.flags == PUBLIC | STATIC, .name == "isSupportedEngine", .descriptor == "(Ljavax/net/ssl/SSLEngine;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/ssl/SSLEngines\0", "isSupportedEngine\0", "(Ljavax/net/ssl/SSLEngine;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUseSessionTickets](https://developer.android.com/reference/android/net/ssl/SSLEngines.html#setUseSessionTickets(javax.net.ssl.SSLEngine,%20boolean))
        ///
        /// Required features: "javax-net-ssl-SSLEngine"
        #[cfg(any(feature = "all", all(feature = "javax-net-ssl-SSLEngine")))]
        pub fn setUseSessionTickets<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::net::ssl::SSLEngine>>, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/ssl/SSLEngines", java.flags == PUBLIC | STATIC, .name == "setUseSessionTickets", .descriptor == "(Ljavax/net/ssl/SSLEngine;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/ssl/SSLEngines\0", "setUseSessionTickets\0", "(Ljavax/net/ssl/SSLEngine;Z)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
