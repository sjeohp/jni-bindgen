// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-wifi-aware-WifiAwareSession"))]
__jni_bindgen! {
    /// public class [WifiAwareSession](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession.html)
    ///
    /// Required feature: android-net-wifi-aware-WifiAwareSession
    public class WifiAwareSession ("android/net/wifi/aware/WifiAwareSession") extends crate::java::lang::Object, implements crate::java::lang::AutoCloseable {

        // // Not emitting: Non-public method
        // /// [WifiAwareSession](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession.html#WifiAwareSession(android.net.wifi.aware.WifiAwareManager,%20android.os.Binder,%20int))
        // ///
        // /// Required features: "android-net-wifi-aware-WifiAwareManager", "android-os-Binder"
        // #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-WifiAwareManager", feature = "android-os-Binder")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::aware::WifiAwareManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Binder>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::wifi::aware::WifiAwareSession>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/net/wifi/aware/WifiAwareSession", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/net/wifi/aware/WifiAwareManager;Landroid/os/Binder;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareSession\0", "<init>\0", "(Landroid/net/wifi/aware/WifiAwareManager;Landroid/os/Binder;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [close](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession.html#close())
        pub fn close<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareSession", java.flags == PUBLIC, .name == "close", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareSession\0", "close\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [finalize](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession.html#finalize())
        // fn finalize<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/net/wifi/aware/WifiAwareSession", java.flags == PROTECTED, .name == "finalize", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareSession\0", "finalize\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [publish](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession.html#publish(android.net.wifi.aware.PublishConfig,%20android.net.wifi.aware.DiscoverySessionCallback,%20android.os.Handler))
        ///
        /// Required features: "android-net-wifi-aware-DiscoverySessionCallback", "android-net-wifi-aware-PublishConfig", "android-os-Handler"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-DiscoverySessionCallback", feature = "android-net-wifi-aware-PublishConfig", feature = "android-os-Handler")))]
        pub fn publish<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::aware::PublishConfig>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::aware::DiscoverySessionCallback>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareSession", java.flags == PUBLIC, .name == "publish", .descriptor == "(Landroid/net/wifi/aware/PublishConfig;Landroid/net/wifi/aware/DiscoverySessionCallback;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareSession\0", "publish\0", "(Landroid/net/wifi/aware/PublishConfig;Landroid/net/wifi/aware/DiscoverySessionCallback;Landroid/os/Handler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [subscribe](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession.html#subscribe(android.net.wifi.aware.SubscribeConfig,%20android.net.wifi.aware.DiscoverySessionCallback,%20android.os.Handler))
        ///
        /// Required features: "android-net-wifi-aware-DiscoverySessionCallback", "android-net-wifi-aware-SubscribeConfig", "android-os-Handler"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-DiscoverySessionCallback", feature = "android-net-wifi-aware-SubscribeConfig", feature = "android-os-Handler")))]
        pub fn subscribe<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::aware::SubscribeConfig>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::aware::DiscoverySessionCallback>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareSession", java.flags == PUBLIC, .name == "subscribe", .descriptor == "(Landroid/net/wifi/aware/SubscribeConfig;Landroid/net/wifi/aware/DiscoverySessionCallback;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareSession\0", "subscribe\0", "(Landroid/net/wifi/aware/SubscribeConfig;Landroid/net/wifi/aware/DiscoverySessionCallback;Landroid/os/Handler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createNetworkSpecifierOpen](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession.html#createNetworkSpecifierOpen(int,%20byte%5B%5D))
        ///
        /// Required features: "android-net-NetworkSpecifier"
        #[cfg(any(feature = "all", all(feature = "android-net-NetworkSpecifier")))]
        pub fn createNetworkSpecifierOpen<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::NetworkSpecifier>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareSession", java.flags == PUBLIC, .name == "createNetworkSpecifierOpen", .descriptor == "(I[B)Landroid/net/NetworkSpecifier;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareSession\0", "createNetworkSpecifierOpen\0", "(I[B)Landroid/net/NetworkSpecifier;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createNetworkSpecifierPassphrase](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession.html#createNetworkSpecifierPassphrase(int,%20byte%5B%5D,%20java.lang.String))
        ///
        /// Required features: "android-net-NetworkSpecifier", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-NetworkSpecifier", feature = "java-lang-String")))]
        pub fn createNetworkSpecifierPassphrase<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::NetworkSpecifier>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareSession", java.flags == PUBLIC, .name == "createNetworkSpecifierPassphrase", .descriptor == "(I[BLjava/lang/String;)Landroid/net/NetworkSpecifier;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareSession\0", "createNetworkSpecifierPassphrase\0", "(I[BLjava/lang/String;)Landroid/net/NetworkSpecifier;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
