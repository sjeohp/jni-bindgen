// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-wifi-aware-WifiAwareNetworkSpecifier_Builder"))]
__jni_bindgen! {
    /// public final class [WifiAwareNetworkSpecifier.Builder](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html)
    ///
    /// Required feature: android-net-wifi-aware-WifiAwareNetworkSpecifier_Builder
    public final class WifiAwareNetworkSpecifier_Builder ("android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#Builder(android.net.wifi.aware.DiscoverySession,%20android.net.wifi.aware.PeerHandle))
        ///
        /// Required features: "android-net-wifi-aware-DiscoverySession", "android-net-wifi-aware-PeerHandle"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-DiscoverySession", feature = "android-net-wifi-aware-PeerHandle")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::aware::DiscoverySession>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::aware::PeerHandle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/net/wifi/aware/DiscoverySession;Landroid/net/wifi/aware/PeerHandle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder\0", "<init>\0", "(Landroid/net/wifi/aware/DiscoverySession;Landroid/net/wifi/aware/PeerHandle;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPskPassphrase](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setPskPassphrase(java.lang.String))
        ///
        /// Required features: "android-net-wifi-aware-WifiAwareNetworkSpecifier_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-WifiAwareNetworkSpecifier_Builder", feature = "java-lang-String")))]
        pub fn setPskPassphrase<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder", java.flags == PUBLIC, .name == "setPskPassphrase", .descriptor == "(Ljava/lang/String;)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder\0", "setPskPassphrase\0", "(Ljava/lang/String;)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPort](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setPort(int))
        ///
        /// Required features: "android-net-wifi-aware-WifiAwareNetworkSpecifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-WifiAwareNetworkSpecifier_Builder")))]
        pub fn setPort<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder", java.flags == PUBLIC, .name == "setPort", .descriptor == "(I)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder\0", "setPort\0", "(I)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTransportProtocol](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setTransportProtocol(int))
        ///
        /// Required features: "android-net-wifi-aware-WifiAwareNetworkSpecifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-WifiAwareNetworkSpecifier_Builder")))]
        pub fn setTransportProtocol<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder", java.flags == PUBLIC, .name == "setTransportProtocol", .descriptor == "(I)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder\0", "setTransportProtocol\0", "(I)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#build())
        ///
        /// Required features: "android-net-wifi-aware-WifiAwareNetworkSpecifier"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-WifiAwareNetworkSpecifier")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::aware::WifiAwareNetworkSpecifier>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/net/wifi/aware/WifiAwareNetworkSpecifier;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder\0", "build\0", "()Landroid/net/wifi/aware/WifiAwareNetworkSpecifier;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
