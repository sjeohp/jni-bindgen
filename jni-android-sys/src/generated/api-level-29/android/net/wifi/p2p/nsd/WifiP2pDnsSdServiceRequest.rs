// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-wifi-p2p-nsd-WifiP2pDnsSdServiceRequest"))]
__jni_bindgen! {
    /// public class [WifiP2pDnsSdServiceRequest](https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html)
    ///
    /// Required feature: android-net-wifi-p2p-nsd-WifiP2pDnsSdServiceRequest
    public class WifiP2pDnsSdServiceRequest ("android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest") extends crate::android::net::wifi::p2p::nsd::WifiP2pServiceRequest {

        // // Not emitting: Non-public method
        // /// [WifiP2pDnsSdServiceRequest](https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html#WifiP2pDnsSdServiceRequest())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::wifi::p2p::nsd::WifiP2pDnsSdServiceRequest>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [newInstance](https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html#newInstance())
        ///
        /// Required features: "android-net-wifi-p2p-nsd-WifiP2pDnsSdServiceRequest"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-p2p-nsd-WifiP2pDnsSdServiceRequest")))]
        pub fn newInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::p2p::nsd::WifiP2pDnsSdServiceRequest>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest", java.flags == PUBLIC | STATIC, .name == "newInstance", .descriptor == "()Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest\0", "newInstance\0", "()Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newInstance](https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html#newInstance(java.lang.String))
        ///
        /// Required features: "android-net-wifi-p2p-nsd-WifiP2pDnsSdServiceRequest", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-p2p-nsd-WifiP2pDnsSdServiceRequest", feature = "java-lang-String")))]
        pub fn newInstance_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::p2p::nsd::WifiP2pDnsSdServiceRequest>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest", java.flags == PUBLIC | STATIC, .name == "newInstance", .descriptor == "(Ljava/lang/String;)Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest\0", "newInstance\0", "(Ljava/lang/String;)Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newInstance](https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html#newInstance(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-net-wifi-p2p-nsd-WifiP2pDnsSdServiceRequest", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-p2p-nsd-WifiP2pDnsSdServiceRequest", feature = "java-lang-String")))]
        pub fn newInstance_String_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::p2p::nsd::WifiP2pDnsSdServiceRequest>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest", java.flags == PUBLIC | STATIC, .name == "newInstance", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest\0", "newInstance\0", "(Ljava/lang/String;Ljava/lang/String;)Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
