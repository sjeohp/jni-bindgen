// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
__jni_bindgen! {
    /// public enum [SupplicantState](https://developer.android.com/reference/android/net/wifi/SupplicantState.html)
    ///
    /// Required feature: android-net-wifi-SupplicantState
    public enum SupplicantState ("android/net/wifi/SupplicantState") extends crate::java::lang::Enum, implements crate::android::os::Parcelable {

        /// [values](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#values())
        ///
        /// Required features: "android-net-wifi-SupplicantState"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-SupplicantState")))]
        pub fn values<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::net::wifi::SupplicantState, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/SupplicantState", java.flags == PUBLIC | STATIC, .name == "values", .descriptor == "()[Landroid/net/wifi/SupplicantState;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/wifi/SupplicantState\0", "values\0", "()[Landroid/net/wifi/SupplicantState;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [valueOf](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#valueOf(java.lang.String))
        ///
        /// Required features: "android-net-wifi-SupplicantState", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-SupplicantState", feature = "java-lang-String")))]
        pub fn valueOf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/SupplicantState", java.flags == PUBLIC | STATIC, .name == "valueOf", .descriptor == "(Ljava/lang/String;)Landroid/net/wifi/SupplicantState;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/wifi/SupplicantState\0", "valueOf\0", "(Ljava/lang/String;)Landroid/net/wifi/SupplicantState;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [SupplicantState](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#SupplicantState(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/net/wifi/SupplicantState", java.flags == PRIVATE, .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/SupplicantState\0", "<init>\0", "(Ljava/lang/String;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [isValidState](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#isValidState(android.net.wifi.SupplicantState))
        ///
        /// Required features: "android-net-wifi-SupplicantState"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-SupplicantState")))]
        pub fn isValidState<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::SupplicantState>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/SupplicantState", java.flags == PUBLIC | STATIC, .name == "isValidState", .descriptor == "(Landroid/net/wifi/SupplicantState;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/net/wifi/SupplicantState\0", "isValidState\0", "(Landroid/net/wifi/SupplicantState;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/SupplicantState", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/SupplicantState\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/SupplicantState", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/SupplicantState\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [DISCONNECTED](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#DISCONNECTED)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn DISCONNECTED<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "DISCONNECTED\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INTERFACE_DISABLED](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#INTERFACE_DISABLED)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn INTERFACE_DISABLED<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "INTERFACE_DISABLED\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INACTIVE](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#INACTIVE)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn INACTIVE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "INACTIVE\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SCANNING](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#SCANNING)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn SCANNING<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "SCANNING\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [AUTHENTICATING](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#AUTHENTICATING)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn AUTHENTICATING<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "AUTHENTICATING\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ASSOCIATING](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#ASSOCIATING)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn ASSOCIATING<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "ASSOCIATING\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ASSOCIATED](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#ASSOCIATED)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn ASSOCIATED<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "ASSOCIATED\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [FOUR_WAY_HANDSHAKE](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#FOUR_WAY_HANDSHAKE)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn FOUR_WAY_HANDSHAKE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "FOUR_WAY_HANDSHAKE\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [GROUP_HANDSHAKE](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#GROUP_HANDSHAKE)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn GROUP_HANDSHAKE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "GROUP_HANDSHAKE\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [COMPLETED](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#COMPLETED)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn COMPLETED<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "COMPLETED\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DORMANT](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#DORMANT)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn DORMANT<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "DORMANT\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [UNINITIALIZED](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#UNINITIALIZED)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn UNINITIALIZED<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "UNINITIALIZED\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [INVALID](https://developer.android.com/reference/android/net/wifi/SupplicantState.html#INVALID)
        ///
        /// Required feature: android-net-wifi-SupplicantState
        #[cfg(any(feature = "all", feature = "android-net-wifi-SupplicantState"))]
        pub fn INVALID<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::SupplicantState>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/net/wifi/SupplicantState\0", "INVALID\0", "Landroid/net/wifi/SupplicantState;\0");
                env.get_static_object_field(class, field)
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: enum $VALUES
        // pub fn get_"$VALUES"<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::net::wifi::SupplicantState, crate::java::lang::Throwable>>> { ... }
    }
}
