// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-wifi-rtt-RangingRequest_Builder"))]
__jni_bindgen! {
    /// public final class [RangingRequest.Builder](https://developer.android.com/reference/android/net/wifi/rtt/RangingRequest.Builder.html)
    ///
    /// Required feature: android-net-wifi-rtt-RangingRequest_Builder
    public final class RangingRequest_Builder ("android/net/wifi/rtt/RangingRequest$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/net/wifi/rtt/RangingRequest.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::wifi::rtt::RangingRequest_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/rtt/RangingRequest$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/RangingRequest$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addAccessPoint](https://developer.android.com/reference/android/net/wifi/rtt/RangingRequest.Builder.html#addAccessPoint(android.net.wifi.ScanResult))
        ///
        /// Required features: "android-net-wifi-ScanResult", "android-net-wifi-rtt-RangingRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-ScanResult", feature = "android-net-wifi-rtt-RangingRequest_Builder")))]
        pub fn addAccessPoint<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::ScanResult>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::rtt::RangingRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/rtt/RangingRequest$Builder", java.flags == PUBLIC, .name == "addAccessPoint", .descriptor == "(Landroid/net/wifi/ScanResult;)Landroid/net/wifi/rtt/RangingRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/RangingRequest$Builder\0", "addAccessPoint\0", "(Landroid/net/wifi/ScanResult;)Landroid/net/wifi/rtt/RangingRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addAccessPoints](https://developer.android.com/reference/android/net/wifi/rtt/RangingRequest.Builder.html#addAccessPoints(java.util.List))
        ///
        /// Required features: "android-net-wifi-rtt-RangingRequest_Builder", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-rtt-RangingRequest_Builder", feature = "java-util-List")))]
        pub fn addAccessPoints<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::rtt::RangingRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/rtt/RangingRequest$Builder", java.flags == PUBLIC, .name == "addAccessPoints", .descriptor == "(Ljava/util/List;)Landroid/net/wifi/rtt/RangingRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/RangingRequest$Builder\0", "addAccessPoints\0", "(Ljava/util/List;)Landroid/net/wifi/rtt/RangingRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addWifiAwarePeer](https://developer.android.com/reference/android/net/wifi/rtt/RangingRequest.Builder.html#addWifiAwarePeer(android.net.MacAddress))
        ///
        /// Required features: "android-net-MacAddress", "android-net-wifi-rtt-RangingRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-net-MacAddress", feature = "android-net-wifi-rtt-RangingRequest_Builder")))]
        pub fn addWifiAwarePeer_MacAddress<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::MacAddress>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::rtt::RangingRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/rtt/RangingRequest$Builder", java.flags == PUBLIC, .name == "addWifiAwarePeer", .descriptor == "(Landroid/net/MacAddress;)Landroid/net/wifi/rtt/RangingRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/RangingRequest$Builder\0", "addWifiAwarePeer\0", "(Landroid/net/MacAddress;)Landroid/net/wifi/rtt/RangingRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addWifiAwarePeer](https://developer.android.com/reference/android/net/wifi/rtt/RangingRequest.Builder.html#addWifiAwarePeer(android.net.wifi.aware.PeerHandle))
        ///
        /// Required features: "android-net-wifi-aware-PeerHandle", "android-net-wifi-rtt-RangingRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-aware-PeerHandle", feature = "android-net-wifi-rtt-RangingRequest_Builder")))]
        pub fn addWifiAwarePeer_PeerHandle<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::aware::PeerHandle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::rtt::RangingRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/rtt/RangingRequest$Builder", java.flags == PUBLIC, .name == "addWifiAwarePeer", .descriptor == "(Landroid/net/wifi/aware/PeerHandle;)Landroid/net/wifi/rtt/RangingRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/RangingRequest$Builder\0", "addWifiAwarePeer\0", "(Landroid/net/wifi/aware/PeerHandle;)Landroid/net/wifi/rtt/RangingRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/net/wifi/rtt/RangingRequest.Builder.html#build())
        ///
        /// Required features: "android-net-wifi-rtt-RangingRequest"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-rtt-RangingRequest")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::wifi::rtt::RangingRequest>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/rtt/RangingRequest$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/net/wifi/rtt/RangingRequest;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/RangingRequest$Builder\0", "build\0", "()Landroid/net/wifi/rtt/RangingRequest;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
