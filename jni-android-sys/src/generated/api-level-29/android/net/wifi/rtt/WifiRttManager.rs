// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-wifi-rtt-WifiRttManager"))]
__jni_bindgen! {
    /// public class [WifiRttManager](https://developer.android.com/reference/android/net/wifi/rtt/WifiRttManager.html)
    ///
    /// Required feature: android-net-wifi-rtt-WifiRttManager
    public class WifiRttManager ("android/net/wifi/rtt/WifiRttManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [WifiRttManager](https://developer.android.com/reference/android/net/wifi/rtt/WifiRttManager.html#WifiRttManager())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::wifi::rtt::WifiRttManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/net/wifi/rtt/WifiRttManager", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/WifiRttManager\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [isAvailable](https://developer.android.com/reference/android/net/wifi/rtt/WifiRttManager.html#isAvailable())
        pub fn isAvailable<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/rtt/WifiRttManager", java.flags == PUBLIC, .name == "isAvailable", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/WifiRttManager\0", "isAvailable\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startRanging](https://developer.android.com/reference/android/net/wifi/rtt/WifiRttManager.html#startRanging(android.net.wifi.rtt.RangingRequest,%20java.util.concurrent.Executor,%20android.net.wifi.rtt.RangingResultCallback))
        ///
        /// Required features: "android-net-wifi-rtt-RangingRequest", "android-net-wifi-rtt-RangingResultCallback", "java-util-concurrent-Executor"
        #[cfg(any(feature = "all", all(feature = "android-net-wifi-rtt-RangingRequest", feature = "android-net-wifi-rtt-RangingResultCallback", feature = "java-util-concurrent-Executor")))]
        pub fn startRanging<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::rtt::RangingRequest>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::Executor>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::wifi::rtt::RangingResultCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/wifi/rtt/WifiRttManager", java.flags == PUBLIC, .name == "startRanging", .descriptor == "(Landroid/net/wifi/rtt/RangingRequest;Ljava/util/concurrent/Executor;Landroid/net/wifi/rtt/RangingResultCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/wifi/rtt/WifiRttManager\0", "startRanging\0", "(Landroid/net/wifi/rtt/RangingRequest;Ljava/util/concurrent/Executor;Landroid/net/wifi/rtt/RangingResultCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_WIFI_RTT_STATE_CHANGED](https://developer.android.com/reference/android/net/wifi/rtt/WifiRttManager.html#ACTION_WIFI_RTT_STATE_CHANGED)
        pub const ACTION_WIFI_RTT_STATE_CHANGED : &'static str = "android.net.wifi.rtt.action.WIFI_RTT_STATE_CHANGED";
    }
}
