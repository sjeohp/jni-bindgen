// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-SocketKeepalive"))]
__jni_bindgen! {
    /// public class [SocketKeepalive](https://developer.android.com/reference/android/net/SocketKeepalive.html)
    ///
    /// Required feature: android-net-SocketKeepalive
    public class SocketKeepalive ("android/net/SocketKeepalive") extends crate::java::lang::Object, implements crate::java::lang::AutoCloseable {

        // // Not emitting: Non-public method
        // /// [SocketKeepalive](https://developer.android.com/reference/android/net/SocketKeepalive.html#SocketKeepalive())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::net::SocketKeepalive>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/net/SocketKeepalive", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/SocketKeepalive\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [start](https://developer.android.com/reference/android/net/SocketKeepalive.html#start(int))
        pub fn start<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/SocketKeepalive", java.flags == PUBLIC | FINAL, .name == "start", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/SocketKeepalive\0", "start\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [stop](https://developer.android.com/reference/android/net/SocketKeepalive.html#stop())
        pub fn stop<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/SocketKeepalive", java.flags == PUBLIC | FINAL, .name == "stop", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/SocketKeepalive\0", "stop\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [close](https://developer.android.com/reference/android/net/SocketKeepalive.html#close())
        pub fn close<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/SocketKeepalive", java.flags == PUBLIC | FINAL, .name == "close", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/SocketKeepalive\0", "close\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ERROR_HARDWARE_ERROR](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_HARDWARE_ERROR)
        pub const ERROR_HARDWARE_ERROR : i32 = -31;

        /// public static final [ERROR_INSUFFICIENT_RESOURCES](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_INSUFFICIENT_RESOURCES)
        pub const ERROR_INSUFFICIENT_RESOURCES : i32 = -32;

        /// public static final [ERROR_INVALID_INTERVAL](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_INVALID_INTERVAL)
        pub const ERROR_INVALID_INTERVAL : i32 = -24;

        /// public static final [ERROR_INVALID_IP_ADDRESS](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_INVALID_IP_ADDRESS)
        pub const ERROR_INVALID_IP_ADDRESS : i32 = -21;

        /// public static final [ERROR_INVALID_LENGTH](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_INVALID_LENGTH)
        pub const ERROR_INVALID_LENGTH : i32 = -23;

        /// public static final [ERROR_INVALID_NETWORK](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_INVALID_NETWORK)
        pub const ERROR_INVALID_NETWORK : i32 = -20;

        /// public static final [ERROR_INVALID_PORT](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_INVALID_PORT)
        pub const ERROR_INVALID_PORT : i32 = -22;

        /// public static final [ERROR_INVALID_SOCKET](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_INVALID_SOCKET)
        pub const ERROR_INVALID_SOCKET : i32 = -25;

        /// public static final [ERROR_SOCKET_NOT_IDLE](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_SOCKET_NOT_IDLE)
        pub const ERROR_SOCKET_NOT_IDLE : i32 = -26;

        /// public static final [ERROR_UNSUPPORTED](https://developer.android.com/reference/android/net/SocketKeepalive.html#ERROR_UNSUPPORTED)
        pub const ERROR_UNSUPPORTED : i32 = -30;
    }
}
