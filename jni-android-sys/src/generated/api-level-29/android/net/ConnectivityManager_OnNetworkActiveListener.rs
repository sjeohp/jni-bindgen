// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-net-ConnectivityManager_OnNetworkActiveListener"))]
__jni_bindgen! {
    /// public interface [ConnectivityManager.OnNetworkActiveListener](https://developer.android.com/reference/android/net/ConnectivityManager.OnNetworkActiveListener.html)
    ///
    /// Required feature: android-net-ConnectivityManager_OnNetworkActiveListener
    public interface ConnectivityManager_OnNetworkActiveListener ("android/net/ConnectivityManager$OnNetworkActiveListener") extends crate::java::lang::Object {

        /// [onNetworkActive](https://developer.android.com/reference/android/net/ConnectivityManager.OnNetworkActiveListener.html#onNetworkActive())
        pub fn onNetworkActive<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/net/ConnectivityManager$OnNetworkActiveListener", java.flags == PUBLIC | ABSTRACT, .name == "onNetworkActive", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/net/ConnectivityManager$OnNetworkActiveListener\0", "onNetworkActive\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
