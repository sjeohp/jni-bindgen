// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-telecom-Connection_VideoProvider"))]
__jni_bindgen! {
    /// public class [Connection.VideoProvider](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html)
    ///
    /// Required feature: android-telecom-Connection_VideoProvider
    public class Connection_VideoProvider ("android/telecom/Connection$VideoProvider") extends crate::java::lang::Object {

        /// [VideoProvider](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#VideoProvider())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::telecom::Connection_VideoProvider>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSetCamera](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onSetCamera(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn onSetCamera<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onSetCamera", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onSetCamera\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSetPreviewSurface](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onSetPreviewSurface(android.view.Surface))
        ///
        /// Required features: "android-view-Surface"
        #[cfg(any(feature = "all", all(feature = "android-view-Surface")))]
        pub fn onSetPreviewSurface<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Surface>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onSetPreviewSurface", .descriptor == "(Landroid/view/Surface;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onSetPreviewSurface\0", "(Landroid/view/Surface;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSetDisplaySurface](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onSetDisplaySurface(android.view.Surface))
        ///
        /// Required features: "android-view-Surface"
        #[cfg(any(feature = "all", all(feature = "android-view-Surface")))]
        pub fn onSetDisplaySurface<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Surface>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onSetDisplaySurface", .descriptor == "(Landroid/view/Surface;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onSetDisplaySurface\0", "(Landroid/view/Surface;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSetDeviceOrientation](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onSetDeviceOrientation(int))
        pub fn onSetDeviceOrientation<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onSetDeviceOrientation", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onSetDeviceOrientation\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSetZoom](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onSetZoom(float))
        pub fn onSetZoom<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onSetZoom", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onSetZoom\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSendSessionModifyRequest](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onSendSessionModifyRequest(android.telecom.VideoProfile,%20android.telecom.VideoProfile))
        ///
        /// Required features: "android-telecom-VideoProfile"
        #[cfg(any(feature = "all", all(feature = "android-telecom-VideoProfile")))]
        pub fn onSendSessionModifyRequest<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::VideoProfile>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::VideoProfile>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onSendSessionModifyRequest", .descriptor == "(Landroid/telecom/VideoProfile;Landroid/telecom/VideoProfile;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onSendSessionModifyRequest\0", "(Landroid/telecom/VideoProfile;Landroid/telecom/VideoProfile;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSendSessionModifyResponse](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onSendSessionModifyResponse(android.telecom.VideoProfile))
        ///
        /// Required features: "android-telecom-VideoProfile"
        #[cfg(any(feature = "all", all(feature = "android-telecom-VideoProfile")))]
        pub fn onSendSessionModifyResponse<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::VideoProfile>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onSendSessionModifyResponse", .descriptor == "(Landroid/telecom/VideoProfile;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onSendSessionModifyResponse\0", "(Landroid/telecom/VideoProfile;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRequestCameraCapabilities](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onRequestCameraCapabilities())
        pub fn onRequestCameraCapabilities<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onRequestCameraCapabilities", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onRequestCameraCapabilities\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRequestConnectionDataUsage](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onRequestConnectionDataUsage())
        pub fn onRequestConnectionDataUsage<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onRequestConnectionDataUsage", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onRequestConnectionDataUsage\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSetPauseImage](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#onSetPauseImage(android.net.Uri))
        ///
        /// Required features: "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri")))]
        pub fn onSetPauseImage<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC | ABSTRACT, .name == "onSetPauseImage", .descriptor == "(Landroid/net/Uri;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "onSetPauseImage\0", "(Landroid/net/Uri;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [receiveSessionModifyRequest](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#receiveSessionModifyRequest(android.telecom.VideoProfile))
        ///
        /// Required features: "android-telecom-VideoProfile"
        #[cfg(any(feature = "all", all(feature = "android-telecom-VideoProfile")))]
        pub fn receiveSessionModifyRequest<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::VideoProfile>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC, .name == "receiveSessionModifyRequest", .descriptor == "(Landroid/telecom/VideoProfile;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "receiveSessionModifyRequest\0", "(Landroid/telecom/VideoProfile;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [receiveSessionModifyResponse](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#receiveSessionModifyResponse(int,%20android.telecom.VideoProfile,%20android.telecom.VideoProfile))
        ///
        /// Required features: "android-telecom-VideoProfile"
        #[cfg(any(feature = "all", all(feature = "android-telecom-VideoProfile")))]
        pub fn receiveSessionModifyResponse<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::VideoProfile>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::VideoProfile>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC, .name == "receiveSessionModifyResponse", .descriptor == "(ILandroid/telecom/VideoProfile;Landroid/telecom/VideoProfile;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "receiveSessionModifyResponse\0", "(ILandroid/telecom/VideoProfile;Landroid/telecom/VideoProfile;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [handleCallSessionEvent](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#handleCallSessionEvent(int))
        pub fn handleCallSessionEvent<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC, .name == "handleCallSessionEvent", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "handleCallSessionEvent\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [changePeerDimensions](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#changePeerDimensions(int,%20int))
        pub fn changePeerDimensions<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC, .name == "changePeerDimensions", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "changePeerDimensions\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCallDataUsage](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#setCallDataUsage(long))
        pub fn setCallDataUsage<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC, .name == "setCallDataUsage", .descriptor == "(J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "setCallDataUsage\0", "(J)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [changeCameraCapabilities](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#changeCameraCapabilities(android.telecom.VideoProfile.CameraCapabilities))
        ///
        /// Required features: "android-telecom-VideoProfile_CameraCapabilities"
        #[cfg(any(feature = "all", all(feature = "android-telecom-VideoProfile_CameraCapabilities")))]
        pub fn changeCameraCapabilities<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::VideoProfile_CameraCapabilities>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC, .name == "changeCameraCapabilities", .descriptor == "(Landroid/telecom/VideoProfile$CameraCapabilities;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "changeCameraCapabilities\0", "(Landroid/telecom/VideoProfile$CameraCapabilities;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [changeVideoQuality](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#changeVideoQuality(int))
        pub fn changeVideoQuality<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Connection$VideoProvider", java.flags == PUBLIC, .name == "changeVideoQuality", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Connection$VideoProvider\0", "changeVideoQuality\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [SESSION_EVENT_CAMERA_FAILURE](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_EVENT_CAMERA_FAILURE)
        pub const SESSION_EVENT_CAMERA_FAILURE : i32 = 5;

        /// public static final [SESSION_EVENT_CAMERA_PERMISSION_ERROR](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_EVENT_CAMERA_PERMISSION_ERROR)
        pub const SESSION_EVENT_CAMERA_PERMISSION_ERROR : i32 = 7;

        /// public static final [SESSION_EVENT_CAMERA_READY](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_EVENT_CAMERA_READY)
        pub const SESSION_EVENT_CAMERA_READY : i32 = 6;

        /// public static final [SESSION_EVENT_RX_PAUSE](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_EVENT_RX_PAUSE)
        pub const SESSION_EVENT_RX_PAUSE : i32 = 1;

        /// public static final [SESSION_EVENT_RX_RESUME](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_EVENT_RX_RESUME)
        pub const SESSION_EVENT_RX_RESUME : i32 = 2;

        /// public static final [SESSION_EVENT_TX_START](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_EVENT_TX_START)
        pub const SESSION_EVENT_TX_START : i32 = 3;

        /// public static final [SESSION_EVENT_TX_STOP](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_EVENT_TX_STOP)
        pub const SESSION_EVENT_TX_STOP : i32 = 4;

        /// public static final [SESSION_MODIFY_REQUEST_FAIL](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_MODIFY_REQUEST_FAIL)
        pub const SESSION_MODIFY_REQUEST_FAIL : i32 = 2;

        /// public static final [SESSION_MODIFY_REQUEST_INVALID](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_MODIFY_REQUEST_INVALID)
        pub const SESSION_MODIFY_REQUEST_INVALID : i32 = 3;

        /// public static final [SESSION_MODIFY_REQUEST_REJECTED_BY_REMOTE](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_MODIFY_REQUEST_REJECTED_BY_REMOTE)
        pub const SESSION_MODIFY_REQUEST_REJECTED_BY_REMOTE : i32 = 5;

        /// public static final [SESSION_MODIFY_REQUEST_SUCCESS](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_MODIFY_REQUEST_SUCCESS)
        pub const SESSION_MODIFY_REQUEST_SUCCESS : i32 = 1;

        /// public static final [SESSION_MODIFY_REQUEST_TIMED_OUT](https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html#SESSION_MODIFY_REQUEST_TIMED_OUT)
        pub const SESSION_MODIFY_REQUEST_TIMED_OUT : i32 = 4;
    }
}
