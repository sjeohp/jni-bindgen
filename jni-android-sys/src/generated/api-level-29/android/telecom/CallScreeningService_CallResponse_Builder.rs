// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-telecom-CallScreeningService_CallResponse_Builder"))]
__jni_bindgen! {
    /// public class [CallScreeningService.CallResponse.Builder](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html)
    ///
    /// Required feature: android-telecom-CallScreeningService_CallResponse_Builder
    public class CallScreeningService_CallResponse_Builder ("android/telecom/CallScreeningService$CallResponse$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService_CallResponse_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDisallowCall](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html#setDisallowCall(boolean))
        ///
        /// Required features: "android-telecom-CallScreeningService_CallResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-telecom-CallScreeningService_CallResponse_Builder")))]
        pub fn setDisallowCall<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService_CallResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse$Builder", java.flags == PUBLIC, .name == "setDisallowCall", .descriptor == "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse$Builder\0", "setDisallowCall\0", "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRejectCall](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html#setRejectCall(boolean))
        ///
        /// Required features: "android-telecom-CallScreeningService_CallResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-telecom-CallScreeningService_CallResponse_Builder")))]
        pub fn setRejectCall<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService_CallResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse$Builder", java.flags == PUBLIC, .name == "setRejectCall", .descriptor == "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse$Builder\0", "setRejectCall\0", "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSilenceCall](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html#setSilenceCall(boolean))
        ///
        /// Required features: "android-telecom-CallScreeningService_CallResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-telecom-CallScreeningService_CallResponse_Builder")))]
        pub fn setSilenceCall<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService_CallResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse$Builder", java.flags == PUBLIC, .name == "setSilenceCall", .descriptor == "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse$Builder\0", "setSilenceCall\0", "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSkipCallLog](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html#setSkipCallLog(boolean))
        ///
        /// Required features: "android-telecom-CallScreeningService_CallResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-telecom-CallScreeningService_CallResponse_Builder")))]
        pub fn setSkipCallLog<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService_CallResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse$Builder", java.flags == PUBLIC, .name == "setSkipCallLog", .descriptor == "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse$Builder\0", "setSkipCallLog\0", "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSkipNotification](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html#setSkipNotification(boolean))
        ///
        /// Required features: "android-telecom-CallScreeningService_CallResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-telecom-CallScreeningService_CallResponse_Builder")))]
        pub fn setSkipNotification<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService_CallResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse$Builder", java.flags == PUBLIC, .name == "setSkipNotification", .descriptor == "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse$Builder\0", "setSkipNotification\0", "(Z)Landroid/telecom/CallScreeningService$CallResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html#build())
        ///
        /// Required features: "android-telecom-CallScreeningService_CallResponse"
        #[cfg(any(feature = "all", all(feature = "android-telecom-CallScreeningService_CallResponse")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService_CallResponse>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/telecom/CallScreeningService$CallResponse;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse$Builder\0", "build\0", "()Landroid/telecom/CallScreeningService$CallResponse;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
