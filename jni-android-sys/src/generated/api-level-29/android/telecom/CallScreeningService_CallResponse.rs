// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-telecom-CallScreeningService_CallResponse"))]
__jni_bindgen! {
    /// public class [CallScreeningService.CallResponse](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html)
    ///
    /// Required feature: android-telecom-CallScreeningService_CallResponse
    public class CallScreeningService_CallResponse ("android/telecom/CallScreeningService$CallResponse") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [CallResponse](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html#CallResponse(boolean,%20boolean,%20boolean,%20boolean,%20boolean))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: bool, arg1: bool, arg2: bool, arg3: bool, arg4: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService_CallResponse>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/telecom/CallScreeningService$CallResponse", java.flags == (empty), .name == "<init>", .descriptor == "(ZZZZZ)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse\0", "<init>\0", "(ZZZZZ)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getDisallowCall](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html#getDisallowCall())
        pub fn getDisallowCall<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse", java.flags == PUBLIC, .name == "getDisallowCall", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse\0", "getDisallowCall\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRejectCall](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html#getRejectCall())
        pub fn getRejectCall<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse", java.flags == PUBLIC, .name == "getRejectCall", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse\0", "getRejectCall\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSilenceCall](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html#getSilenceCall())
        pub fn getSilenceCall<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse", java.flags == PUBLIC, .name == "getSilenceCall", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse\0", "getSilenceCall\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSkipCallLog](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html#getSkipCallLog())
        pub fn getSkipCallLog<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse", java.flags == PUBLIC, .name == "getSkipCallLog", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse\0", "getSkipCallLog\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSkipNotification](https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html#getSkipNotification())
        pub fn getSkipNotification<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService$CallResponse", java.flags == PUBLIC, .name == "getSkipNotification", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService$CallResponse\0", "getSkipNotification\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
