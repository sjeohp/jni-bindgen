// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-telecom-PhoneAccount"))]
__jni_bindgen! {
    /// public final class [PhoneAccount](https://developer.android.com/reference/android/telecom/PhoneAccount.html)
    ///
    /// Required feature: android-telecom-PhoneAccount
    public final class PhoneAccount ("android/telecom/PhoneAccount") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [PhoneAccount](https://developer.android.com/reference/android/telecom/PhoneAccount.html#PhoneAccount(android.os.Parcel))
        // ///
        // /// Required features: "android-os-Parcel"
        // #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::telecom::PhoneAccount>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/telecom/PhoneAccount", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/os/Parcel;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "<init>\0", "(Landroid/os/Parcel;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [equals](https://developer.android.com/reference/android/telecom/PhoneAccount.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/telecom/PhoneAccount.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [builder](https://developer.android.com/reference/android/telecom/PhoneAccount.html#builder(android.telecom.PhoneAccountHandle,%20java.lang.CharSequence))
        ///
        /// Required features: "android-telecom-PhoneAccountHandle", "android-telecom-PhoneAccount_Builder", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-telecom-PhoneAccountHandle", feature = "android-telecom-PhoneAccount_Builder", feature = "java-lang-CharSequence")))]
        pub fn builder<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::PhoneAccountHandle>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::PhoneAccount_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC | STATIC, .name == "builder", .descriptor == "(Landroid/telecom/PhoneAccountHandle;Ljava/lang/CharSequence;)Landroid/telecom/PhoneAccount$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telecom/PhoneAccount\0", "builder\0", "(Landroid/telecom/PhoneAccountHandle;Ljava/lang/CharSequence;)Landroid/telecom/PhoneAccount$Builder;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toBuilder](https://developer.android.com/reference/android/telecom/PhoneAccount.html#toBuilder())
        ///
        /// Required features: "android-telecom-PhoneAccount_Builder"
        #[cfg(any(feature = "all", all(feature = "android-telecom-PhoneAccount_Builder")))]
        pub fn toBuilder<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::PhoneAccount_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "toBuilder", .descriptor == "()Landroid/telecom/PhoneAccount$Builder;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "toBuilder\0", "()Landroid/telecom/PhoneAccount$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAccountHandle](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getAccountHandle())
        ///
        /// Required features: "android-telecom-PhoneAccountHandle"
        #[cfg(any(feature = "all", all(feature = "android-telecom-PhoneAccountHandle")))]
        pub fn getAccountHandle<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::PhoneAccountHandle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getAccountHandle", .descriptor == "()Landroid/telecom/PhoneAccountHandle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getAccountHandle\0", "()Landroid/telecom/PhoneAccountHandle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAddress](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getAddress())
        ///
        /// Required features: "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri")))]
        pub fn getAddress<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getAddress", .descriptor == "()Landroid/net/Uri;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getAddress\0", "()Landroid/net/Uri;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSubscriptionAddress](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getSubscriptionAddress())
        ///
        /// Required features: "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri")))]
        pub fn getSubscriptionAddress<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getSubscriptionAddress", .descriptor == "()Landroid/net/Uri;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getSubscriptionAddress\0", "()Landroid/net/Uri;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCapabilities](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getCapabilities())
        pub fn getCapabilities<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getCapabilities", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getCapabilities\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasCapabilities](https://developer.android.com/reference/android/telecom/PhoneAccount.html#hasCapabilities(int))
        pub fn hasCapabilities<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "hasCapabilities", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "hasCapabilities\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLabel](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getLabel())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getLabel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getLabel", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getLabel\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getShortDescription](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getShortDescription())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getShortDescription<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getShortDescription", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getShortDescription\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSupportedUriSchemes](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getSupportedUriSchemes())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getSupportedUriSchemes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getSupportedUriSchemes", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getSupportedUriSchemes\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtras](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIcon](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getIcon())
        ///
        /// Required features: "android-graphics-drawable-Icon"
        #[cfg(any(feature = "all", all(feature = "android-graphics-drawable-Icon")))]
        pub fn getIcon<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::drawable::Icon>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getIcon", .descriptor == "()Landroid/graphics/drawable/Icon;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getIcon\0", "()Landroid/graphics/drawable/Icon;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isEnabled](https://developer.android.com/reference/android/telecom/PhoneAccount.html#isEnabled())
        pub fn isEnabled<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "isEnabled", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "isEnabled\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsUriScheme](https://developer.android.com/reference/android/telecom/PhoneAccount.html#supportsUriScheme(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn supportsUriScheme<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "supportsUriScheme", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "supportsUriScheme\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHighlightColor](https://developer.android.com/reference/android/telecom/PhoneAccount.html#getHighlightColor())
        pub fn getHighlightColor<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "getHighlightColor", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "getHighlightColor\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/telecom/PhoneAccount.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/telecom/PhoneAccount.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/telecom/PhoneAccount.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/PhoneAccount", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/PhoneAccount\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CAPABILITY_CALL_PROVIDER](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_CALL_PROVIDER)
        pub const CAPABILITY_CALL_PROVIDER : i32 = 2;

        /// public static final [CAPABILITY_CALL_SUBJECT](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_CALL_SUBJECT)
        pub const CAPABILITY_CALL_SUBJECT : i32 = 64;

        /// public static final [CAPABILITY_CONNECTION_MANAGER](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_CONNECTION_MANAGER)
        pub const CAPABILITY_CONNECTION_MANAGER : i32 = 1;

        /// public static final [CAPABILITY_PLACE_EMERGENCY_CALLS](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_PLACE_EMERGENCY_CALLS)
        pub const CAPABILITY_PLACE_EMERGENCY_CALLS : i32 = 16;

        /// public static final [CAPABILITY_RTT](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_RTT)
        pub const CAPABILITY_RTT : i32 = 4096;

        /// public static final [CAPABILITY_SELF_MANAGED](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_SELF_MANAGED)
        pub const CAPABILITY_SELF_MANAGED : i32 = 2048;

        /// public static final [CAPABILITY_SIM_SUBSCRIPTION](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_SIM_SUBSCRIPTION)
        pub const CAPABILITY_SIM_SUBSCRIPTION : i32 = 4;

        /// public static final [CAPABILITY_SUPPORTS_VIDEO_CALLING](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_SUPPORTS_VIDEO_CALLING)
        pub const CAPABILITY_SUPPORTS_VIDEO_CALLING : i32 = 1024;

        /// public static final [CAPABILITY_VIDEO_CALLING](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_VIDEO_CALLING)
        pub const CAPABILITY_VIDEO_CALLING : i32 = 8;

        /// public static final [CAPABILITY_VIDEO_CALLING_RELIES_ON_PRESENCE](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CAPABILITY_VIDEO_CALLING_RELIES_ON_PRESENCE)
        pub const CAPABILITY_VIDEO_CALLING_RELIES_ON_PRESENCE : i32 = 256;

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/telecom/PhoneAccount.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/telecom/PhoneAccount\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [EXTRA_CALL_SUBJECT_CHARACTER_ENCODING](https://developer.android.com/reference/android/telecom/PhoneAccount.html#EXTRA_CALL_SUBJECT_CHARACTER_ENCODING)
        pub const EXTRA_CALL_SUBJECT_CHARACTER_ENCODING : &'static str = "android.telecom.extra.CALL_SUBJECT_CHARACTER_ENCODING";

        /// public static final [EXTRA_CALL_SUBJECT_MAX_LENGTH](https://developer.android.com/reference/android/telecom/PhoneAccount.html#EXTRA_CALL_SUBJECT_MAX_LENGTH)
        pub const EXTRA_CALL_SUBJECT_MAX_LENGTH : &'static str = "android.telecom.extra.CALL_SUBJECT_MAX_LENGTH";

        /// public static final [EXTRA_LOG_SELF_MANAGED_CALLS](https://developer.android.com/reference/android/telecom/PhoneAccount.html#EXTRA_LOG_SELF_MANAGED_CALLS)
        pub const EXTRA_LOG_SELF_MANAGED_CALLS : &'static str = "android.telecom.extra.LOG_SELF_MANAGED_CALLS";

        /// public static final [EXTRA_SUPPORTS_HANDOVER_FROM](https://developer.android.com/reference/android/telecom/PhoneAccount.html#EXTRA_SUPPORTS_HANDOVER_FROM)
        pub const EXTRA_SUPPORTS_HANDOVER_FROM : &'static str = "android.telecom.extra.SUPPORTS_HANDOVER_FROM";

        /// public static final [EXTRA_SUPPORTS_HANDOVER_TO](https://developer.android.com/reference/android/telecom/PhoneAccount.html#EXTRA_SUPPORTS_HANDOVER_TO)
        pub const EXTRA_SUPPORTS_HANDOVER_TO : &'static str = "android.telecom.extra.SUPPORTS_HANDOVER_TO";

        /// public static final [NO_HIGHLIGHT_COLOR](https://developer.android.com/reference/android/telecom/PhoneAccount.html#NO_HIGHLIGHT_COLOR)
        pub const NO_HIGHLIGHT_COLOR : i32 = 0;

        /// public static final [NO_RESOURCE_ID](https://developer.android.com/reference/android/telecom/PhoneAccount.html#NO_RESOURCE_ID)
        pub const NO_RESOURCE_ID : i32 = -1;

        /// public static final [SCHEME_SIP](https://developer.android.com/reference/android/telecom/PhoneAccount.html#SCHEME_SIP)
        pub const SCHEME_SIP : &'static str = "sip";

        /// public static final [SCHEME_TEL](https://developer.android.com/reference/android/telecom/PhoneAccount.html#SCHEME_TEL)
        pub const SCHEME_TEL : &'static str = "tel";

        /// public static final [SCHEME_VOICEMAIL](https://developer.android.com/reference/android/telecom/PhoneAccount.html#SCHEME_VOICEMAIL)
        pub const SCHEME_VOICEMAIL : &'static str = "voicemail";
    }
}
