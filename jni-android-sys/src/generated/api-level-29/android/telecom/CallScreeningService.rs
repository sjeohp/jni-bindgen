// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-telecom-CallScreeningService"))]
__jni_bindgen! {
    /// public class [CallScreeningService](https://developer.android.com/reference/android/telecom/CallScreeningService.html)
    ///
    /// Required feature: android-telecom-CallScreeningService
    public class CallScreeningService ("android/telecom/CallScreeningService") extends crate::android::app::Service {

        /// [CallScreeningService](https://developer.android.com/reference/android/telecom/CallScreeningService.html#CallScreeningService())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::telecom::CallScreeningService>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onBind](https://developer.android.com/reference/android/telecom/CallScreeningService.html#onBind(android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-os-IBinder"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-IBinder")))]
        pub fn onBind<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::IBinder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService", java.flags == PUBLIC, .name == "onBind", .descriptor == "(Landroid/content/Intent;)Landroid/os/IBinder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService\0", "onBind\0", "(Landroid/content/Intent;)Landroid/os/IBinder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onUnbind](https://developer.android.com/reference/android/telecom/CallScreeningService.html#onUnbind(android.content.Intent))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn onUnbind<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService", java.flags == PUBLIC, .name == "onUnbind", .descriptor == "(Landroid/content/Intent;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService\0", "onUnbind\0", "(Landroid/content/Intent;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onScreenCall](https://developer.android.com/reference/android/telecom/CallScreeningService.html#onScreenCall(android.telecom.Call.Details))
        ///
        /// Required features: "android-telecom-Call_Details"
        #[cfg(any(feature = "all", all(feature = "android-telecom-Call_Details")))]
        pub fn onScreenCall<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::Call_Details>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService", java.flags == PUBLIC | ABSTRACT, .name == "onScreenCall", .descriptor == "(Landroid/telecom/Call$Details;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService\0", "onScreenCall\0", "(Landroid/telecom/Call$Details;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [respondToCall](https://developer.android.com/reference/android/telecom/CallScreeningService.html#respondToCall(android.telecom.Call.Details,%20android.telecom.CallScreeningService.CallResponse))
        ///
        /// Required features: "android-telecom-CallScreeningService_CallResponse", "android-telecom-Call_Details"
        #[cfg(any(feature = "all", all(feature = "android-telecom-CallScreeningService_CallResponse", feature = "android-telecom-Call_Details")))]
        pub fn respondToCall<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::Call_Details>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::CallScreeningService_CallResponse>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/CallScreeningService", java.flags == PUBLIC | FINAL, .name == "respondToCall", .descriptor == "(Landroid/telecom/Call$Details;Landroid/telecom/CallScreeningService$CallResponse;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/CallScreeningService\0", "respondToCall\0", "(Landroid/telecom/Call$Details;Landroid/telecom/CallScreeningService$CallResponse;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [SERVICE_INTERFACE](https://developer.android.com/reference/android/telecom/CallScreeningService.html#SERVICE_INTERFACE)
        pub const SERVICE_INTERFACE : &'static str = "android.telecom.CallScreeningService";
    }
}
