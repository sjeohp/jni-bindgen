// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-telecom-Call_Details"))]
__jni_bindgen! {
    /// public class [Call.Details](https://developer.android.com/reference/android/telecom/Call.Details.html)
    ///
    /// Required feature: android-telecom-Call_Details
    public class Call_Details ("android/telecom/Call$Details") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Details](https://developer.android.com/reference/android/telecom/Call.Details.html#Details(java.lang.String,%20android.net.Uri,%20int,%20java.lang.String,%20int,%20android.telecom.PhoneAccountHandle,%20int,%20int,%20android.telecom.DisconnectCause,%20long,%20android.telecom.GatewayInfo,%20int,%20android.telecom.StatusHints,%20android.os.Bundle,%20android.os.Bundle,%20long,%20int))
        // ///
        // /// Required features: "android-net-Uri", "android-os-Bundle", "android-telecom-DisconnectCause", "android-telecom-GatewayInfo", "android-telecom-PhoneAccountHandle", "android-telecom-StatusHints", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-net-Uri", feature = "android-os-Bundle", feature = "android-telecom-DisconnectCause", feature = "android-telecom-GatewayInfo", feature = "android-telecom-PhoneAccountHandle", feature = "android-telecom-StatusHints", feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::PhoneAccountHandle>>, arg6: i32, arg7: i32, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::DisconnectCause>>, arg9: i64, arg10: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::GatewayInfo>>, arg11: i32, arg12: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telecom::StatusHints>>, arg13: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>, arg14: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>, arg15: i64, arg16: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::telecom::Call_Details>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/telecom/Call$Details", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/String;Landroid/net/Uri;ILjava/lang/String;ILandroid/telecom/PhoneAccountHandle;IILandroid/telecom/DisconnectCause;JLandroid/telecom/GatewayInfo;ILandroid/telecom/StatusHints;Landroid/os/Bundle;Landroid/os/Bundle;JI)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8.into()), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10.into()), __jni_bindgen::AsJValue::as_jvalue(&arg11), __jni_bindgen::AsJValue::as_jvalue(&arg12.into()), __jni_bindgen::AsJValue::as_jvalue(&arg13.into()), __jni_bindgen::AsJValue::as_jvalue(&arg14.into()), __jni_bindgen::AsJValue::as_jvalue(&arg15), __jni_bindgen::AsJValue::as_jvalue(&arg16)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "<init>\0", "(Ljava/lang/String;Landroid/net/Uri;ILjava/lang/String;ILandroid/telecom/PhoneAccountHandle;IILandroid/telecom/DisconnectCause;JLandroid/telecom/GatewayInfo;ILandroid/telecom/StatusHints;Landroid/os/Bundle;Landroid/os/Bundle;JI)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [can](https://developer.android.com/reference/android/telecom/Call.Details.html#can(int,%20int))
        pub fn can_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC | STATIC, .name == "can", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telecom/Call$Details\0", "can\0", "(II)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [can](https://developer.android.com/reference/android/telecom/Call.Details.html#can(int))
        pub fn can_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "can", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "can\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [capabilitiesToString](https://developer.android.com/reference/android/telecom/Call.Details.html#capabilitiesToString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn capabilitiesToString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC | STATIC, .name == "capabilitiesToString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telecom/Call$Details\0", "capabilitiesToString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasProperty](https://developer.android.com/reference/android/telecom/Call.Details.html#hasProperty(int,%20int))
        pub fn hasProperty_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC | STATIC, .name == "hasProperty", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telecom/Call$Details\0", "hasProperty\0", "(II)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasProperty](https://developer.android.com/reference/android/telecom/Call.Details.html#hasProperty(int))
        pub fn hasProperty_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "hasProperty", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "hasProperty\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [propertiesToString](https://developer.android.com/reference/android/telecom/Call.Details.html#propertiesToString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn propertiesToString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC | STATIC, .name == "propertiesToString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telecom/Call$Details\0", "propertiesToString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHandle](https://developer.android.com/reference/android/telecom/Call.Details.html#getHandle())
        ///
        /// Required features: "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri")))]
        pub fn getHandle<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getHandle", .descriptor == "()Landroid/net/Uri;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getHandle\0", "()Landroid/net/Uri;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHandlePresentation](https://developer.android.com/reference/android/telecom/Call.Details.html#getHandlePresentation())
        pub fn getHandlePresentation<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getHandlePresentation", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getHandlePresentation\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCallerDisplayName](https://developer.android.com/reference/android/telecom/Call.Details.html#getCallerDisplayName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCallerDisplayName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getCallerDisplayName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getCallerDisplayName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCallerDisplayNamePresentation](https://developer.android.com/reference/android/telecom/Call.Details.html#getCallerDisplayNamePresentation())
        pub fn getCallerDisplayNamePresentation<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getCallerDisplayNamePresentation", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getCallerDisplayNamePresentation\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAccountHandle](https://developer.android.com/reference/android/telecom/Call.Details.html#getAccountHandle())
        ///
        /// Required features: "android-telecom-PhoneAccountHandle"
        #[cfg(any(feature = "all", all(feature = "android-telecom-PhoneAccountHandle")))]
        pub fn getAccountHandle<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::PhoneAccountHandle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getAccountHandle", .descriptor == "()Landroid/telecom/PhoneAccountHandle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getAccountHandle\0", "()Landroid/telecom/PhoneAccountHandle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCallCapabilities](https://developer.android.com/reference/android/telecom/Call.Details.html#getCallCapabilities())
        pub fn getCallCapabilities<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getCallCapabilities", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getCallCapabilities\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCallProperties](https://developer.android.com/reference/android/telecom/Call.Details.html#getCallProperties())
        pub fn getCallProperties<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getCallProperties", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getCallProperties\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisconnectCause](https://developer.android.com/reference/android/telecom/Call.Details.html#getDisconnectCause())
        ///
        /// Required features: "android-telecom-DisconnectCause"
        #[cfg(any(feature = "all", all(feature = "android-telecom-DisconnectCause")))]
        pub fn getDisconnectCause<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::DisconnectCause>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getDisconnectCause", .descriptor == "()Landroid/telecom/DisconnectCause;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getDisconnectCause\0", "()Landroid/telecom/DisconnectCause;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getConnectTimeMillis](https://developer.android.com/reference/android/telecom/Call.Details.html#getConnectTimeMillis())
        pub fn getConnectTimeMillis<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC | FINAL, .name == "getConnectTimeMillis", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getConnectTimeMillis\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGatewayInfo](https://developer.android.com/reference/android/telecom/Call.Details.html#getGatewayInfo())
        ///
        /// Required features: "android-telecom-GatewayInfo"
        #[cfg(any(feature = "all", all(feature = "android-telecom-GatewayInfo")))]
        pub fn getGatewayInfo<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::GatewayInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getGatewayInfo", .descriptor == "()Landroid/telecom/GatewayInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getGatewayInfo\0", "()Landroid/telecom/GatewayInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getVideoState](https://developer.android.com/reference/android/telecom/Call.Details.html#getVideoState())
        pub fn getVideoState<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getVideoState", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getVideoState\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStatusHints](https://developer.android.com/reference/android/telecom/Call.Details.html#getStatusHints())
        ///
        /// Required features: "android-telecom-StatusHints"
        #[cfg(any(feature = "all", all(feature = "android-telecom-StatusHints")))]
        pub fn getStatusHints<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telecom::StatusHints>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getStatusHints", .descriptor == "()Landroid/telecom/StatusHints;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getStatusHints\0", "()Landroid/telecom/StatusHints;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtras](https://developer.android.com/reference/android/telecom/Call.Details.html#getExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntentExtras](https://developer.android.com/reference/android/telecom/Call.Details.html#getIntentExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getIntentExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getIntentExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getIntentExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCreationTimeMillis](https://developer.android.com/reference/android/telecom/Call.Details.html#getCreationTimeMillis())
        pub fn getCreationTimeMillis<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getCreationTimeMillis", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getCreationTimeMillis\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCallDirection](https://developer.android.com/reference/android/telecom/Call.Details.html#getCallDirection())
        pub fn getCallDirection<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "getCallDirection", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "getCallDirection\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/telecom/Call.Details.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/telecom/Call.Details.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/telecom/Call.Details.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telecom/Call$Details", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telecom/Call$Details\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO)
        pub const CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO : i32 = 4194304;

        /// public static final [CAPABILITY_CAN_PAUSE_VIDEO](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_CAN_PAUSE_VIDEO)
        pub const CAPABILITY_CAN_PAUSE_VIDEO : i32 = 1048576;

        /// public static final [CAPABILITY_CAN_PULL_CALL](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_CAN_PULL_CALL)
        pub const CAPABILITY_CAN_PULL_CALL : i32 = 8388608;

        /// public static final [CAPABILITY_DISCONNECT_FROM_CONFERENCE](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_DISCONNECT_FROM_CONFERENCE)
        pub const CAPABILITY_DISCONNECT_FROM_CONFERENCE : i32 = 8192;

        /// public static final [CAPABILITY_HOLD](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_HOLD)
        pub const CAPABILITY_HOLD : i32 = 1;

        /// public static final [CAPABILITY_MANAGE_CONFERENCE](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_MANAGE_CONFERENCE)
        pub const CAPABILITY_MANAGE_CONFERENCE : i32 = 128;

        /// public static final [CAPABILITY_MERGE_CONFERENCE](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_MERGE_CONFERENCE)
        pub const CAPABILITY_MERGE_CONFERENCE : i32 = 4;

        /// public static final [CAPABILITY_MUTE](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_MUTE)
        pub const CAPABILITY_MUTE : i32 = 64;

        /// public static final [CAPABILITY_RESPOND_VIA_TEXT](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_RESPOND_VIA_TEXT)
        pub const CAPABILITY_RESPOND_VIA_TEXT : i32 = 32;

        /// public static final [CAPABILITY_SEPARATE_FROM_CONFERENCE](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SEPARATE_FROM_CONFERENCE)
        pub const CAPABILITY_SEPARATE_FROM_CONFERENCE : i32 = 4096;

        /// public static final [CAPABILITY_SUPPORTS_VT_LOCAL_BIDIRECTIONAL](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SUPPORTS_VT_LOCAL_BIDIRECTIONAL)
        pub const CAPABILITY_SUPPORTS_VT_LOCAL_BIDIRECTIONAL : i32 = 768;

        /// public static final [CAPABILITY_SUPPORTS_VT_LOCAL_RX](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SUPPORTS_VT_LOCAL_RX)
        pub const CAPABILITY_SUPPORTS_VT_LOCAL_RX : i32 = 256;

        /// public static final [CAPABILITY_SUPPORTS_VT_LOCAL_TX](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SUPPORTS_VT_LOCAL_TX)
        pub const CAPABILITY_SUPPORTS_VT_LOCAL_TX : i32 = 512;

        /// public static final [CAPABILITY_SUPPORTS_VT_REMOTE_BIDIRECTIONAL](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SUPPORTS_VT_REMOTE_BIDIRECTIONAL)
        pub const CAPABILITY_SUPPORTS_VT_REMOTE_BIDIRECTIONAL : i32 = 3072;

        /// public static final [CAPABILITY_SUPPORTS_VT_REMOTE_RX](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SUPPORTS_VT_REMOTE_RX)
        pub const CAPABILITY_SUPPORTS_VT_REMOTE_RX : i32 = 1024;

        /// public static final [CAPABILITY_SUPPORTS_VT_REMOTE_TX](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SUPPORTS_VT_REMOTE_TX)
        pub const CAPABILITY_SUPPORTS_VT_REMOTE_TX : i32 = 2048;

        /// public static final [CAPABILITY_SUPPORT_DEFLECT](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SUPPORT_DEFLECT)
        pub const CAPABILITY_SUPPORT_DEFLECT : i32 = 16777216;

        /// public static final [CAPABILITY_SUPPORT_HOLD](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SUPPORT_HOLD)
        pub const CAPABILITY_SUPPORT_HOLD : i32 = 2;

        /// public static final [CAPABILITY_SWAP_CONFERENCE](https://developer.android.com/reference/android/telecom/Call.Details.html#CAPABILITY_SWAP_CONFERENCE)
        pub const CAPABILITY_SWAP_CONFERENCE : i32 = 8;

        /// public static final [DIRECTION_INCOMING](https://developer.android.com/reference/android/telecom/Call.Details.html#DIRECTION_INCOMING)
        pub const DIRECTION_INCOMING : i32 = 0;

        /// public static final [DIRECTION_OUTGOING](https://developer.android.com/reference/android/telecom/Call.Details.html#DIRECTION_OUTGOING)
        pub const DIRECTION_OUTGOING : i32 = 1;

        /// public static final [DIRECTION_UNKNOWN](https://developer.android.com/reference/android/telecom/Call.Details.html#DIRECTION_UNKNOWN)
        pub const DIRECTION_UNKNOWN : i32 = -1;

        /// public static final [PROPERTY_CONFERENCE](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_CONFERENCE)
        pub const PROPERTY_CONFERENCE : i32 = 1;

        /// public static final [PROPERTY_EMERGENCY_CALLBACK_MODE](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_EMERGENCY_CALLBACK_MODE)
        pub const PROPERTY_EMERGENCY_CALLBACK_MODE : i32 = 4;

        /// public static final [PROPERTY_ENTERPRISE_CALL](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_ENTERPRISE_CALL)
        pub const PROPERTY_ENTERPRISE_CALL : i32 = 32;

        /// public static final [PROPERTY_GENERIC_CONFERENCE](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_GENERIC_CONFERENCE)
        pub const PROPERTY_GENERIC_CONFERENCE : i32 = 2;

        /// public static final [PROPERTY_HAS_CDMA_VOICE_PRIVACY](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_HAS_CDMA_VOICE_PRIVACY)
        pub const PROPERTY_HAS_CDMA_VOICE_PRIVACY : i32 = 128;

        /// public static final [PROPERTY_HIGH_DEF_AUDIO](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_HIGH_DEF_AUDIO)
        pub const PROPERTY_HIGH_DEF_AUDIO : i32 = 16;

        /// public static final [PROPERTY_IS_EXTERNAL_CALL](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_IS_EXTERNAL_CALL)
        pub const PROPERTY_IS_EXTERNAL_CALL : i32 = 64;

        /// public static final [PROPERTY_NETWORK_IDENTIFIED_EMERGENCY_CALL](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_NETWORK_IDENTIFIED_EMERGENCY_CALL)
        pub const PROPERTY_NETWORK_IDENTIFIED_EMERGENCY_CALL : i32 = 2048;

        /// public static final [PROPERTY_RTT](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_RTT)
        pub const PROPERTY_RTT : i32 = 1024;

        /// public static final [PROPERTY_SELF_MANAGED](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_SELF_MANAGED)
        pub const PROPERTY_SELF_MANAGED : i32 = 256;

        /// public static final [PROPERTY_VOIP_AUDIO_MODE](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_VOIP_AUDIO_MODE)
        pub const PROPERTY_VOIP_AUDIO_MODE : i32 = 4096;

        /// public static final [PROPERTY_WIFI](https://developer.android.com/reference/android/telecom/Call.Details.html#PROPERTY_WIFI)
        pub const PROPERTY_WIFI : i32 = 8;
    }
}
