// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-renderscript-RenderScript_RSErrorHandler"))]
__jni_bindgen! {
    /// public class [RenderScript.RSErrorHandler](https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html)
    ///
    /// Required feature: android-renderscript-RenderScript_RSErrorHandler
    public class RenderScript_RSErrorHandler ("android/renderscript/RenderScript$RSErrorHandler") extends crate::java::lang::Object, implements crate::java::lang::Runnable {

        /// [RSErrorHandler](https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html#RSErrorHandler())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::renderscript::RenderScript_RSErrorHandler>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/renderscript/RenderScript$RSErrorHandler", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/RenderScript$RSErrorHandler\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [run](https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html#run())
        pub fn run<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/renderscript/RenderScript$RSErrorHandler", java.flags == PUBLIC, .name == "run", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/RenderScript$RSErrorHandler\0", "run\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // /// **get** protected [mErrorMessage](https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html#mErrorMessage)
        // ///
        // /// Required feature: java-lang-String
        // #[cfg(any(feature = "all", feature = "java-lang-String"))]
        // pub fn mErrorMessage<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/renderscript/RenderScript$RSErrorHandler\0", "mErrorMessage\0", "Ljava/lang/String;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [mErrorMessage](https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html#mErrorMessage)
        // ///
        // /// Required feature: java-lang-String
        // #[cfg(any(feature = "all", feature = "java-lang-String"))]
        // pub fn set_mErrorMessage<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/renderscript/RenderScript$RSErrorHandler\0", "mErrorMessage\0", "Ljava/lang/String;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [mErrorNum](https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html#mErrorNum)
        // pub fn mErrorNum<'env>(&'env self) -> i32 {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/renderscript/RenderScript$RSErrorHandler\0", "mErrorNum\0", "I\0");
        //         env.get_int_field(class, field)
        //     }
        // }

        // /// **set** protected [mErrorNum](https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html#mErrorNum)
        // pub fn set_mErrorNum<'env>(&'env self, value: i32) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/renderscript/RenderScript$RSErrorHandler\0", "mErrorNum\0", "I\0");
        //         env.set_int_field(class, field, value)
        //     }
        // }
    }
}
