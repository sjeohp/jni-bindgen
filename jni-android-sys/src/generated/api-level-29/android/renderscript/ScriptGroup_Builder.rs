// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-renderscript-ScriptGroup_Builder"))]
__jni_bindgen! {
    /// public final class [ScriptGroup.Builder](https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder.html)
    ///
    /// Required feature: android-renderscript-ScriptGroup_Builder
    #[deprecated] public final class ScriptGroup_Builder ("android/renderscript/ScriptGroup$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder.html#Builder(android.renderscript.RenderScript))
        ///
        /// Required features: "android-renderscript-RenderScript"
        #[cfg(any(feature = "all", all(feature = "android-renderscript-RenderScript")))]
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::RenderScript>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptGroup_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/renderscript/ScriptGroup$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/renderscript/RenderScript;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptGroup$Builder\0", "<init>\0", "(Landroid/renderscript/RenderScript;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addKernel](https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder.html#addKernel(android.renderscript.Script.KernelID))
        ///
        /// Required features: "android-renderscript-ScriptGroup_Builder", "android-renderscript-Script_KernelID"
        #[cfg(any(feature = "all", all(feature = "android-renderscript-ScriptGroup_Builder", feature = "android-renderscript-Script_KernelID")))]
        #[deprecated] pub fn addKernel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::Script_KernelID>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptGroup_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/renderscript/ScriptGroup$Builder", java.flags == PUBLIC, .name == "addKernel", .descriptor == "(Landroid/renderscript/Script$KernelID;)Landroid/renderscript/ScriptGroup$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptGroup$Builder\0", "addKernel\0", "(Landroid/renderscript/Script$KernelID;)Landroid/renderscript/ScriptGroup$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addConnection](https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder.html#addConnection(android.renderscript.Type,%20android.renderscript.Script.KernelID,%20android.renderscript.Script.FieldID))
        ///
        /// Required features: "android-renderscript-ScriptGroup_Builder", "android-renderscript-Script_FieldID", "android-renderscript-Script_KernelID", "android-renderscript-Type"
        #[cfg(any(feature = "all", all(feature = "android-renderscript-ScriptGroup_Builder", feature = "android-renderscript-Script_FieldID", feature = "android-renderscript-Script_KernelID", feature = "android-renderscript-Type")))]
        #[deprecated] pub fn addConnection_Type_KernelID_FieldID<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::Type>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::Script_KernelID>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::Script_FieldID>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptGroup_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/renderscript/ScriptGroup$Builder", java.flags == PUBLIC, .name == "addConnection", .descriptor == "(Landroid/renderscript/Type;Landroid/renderscript/Script$KernelID;Landroid/renderscript/Script$FieldID;)Landroid/renderscript/ScriptGroup$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptGroup$Builder\0", "addConnection\0", "(Landroid/renderscript/Type;Landroid/renderscript/Script$KernelID;Landroid/renderscript/Script$FieldID;)Landroid/renderscript/ScriptGroup$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addConnection](https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder.html#addConnection(android.renderscript.Type,%20android.renderscript.Script.KernelID,%20android.renderscript.Script.KernelID))
        ///
        /// Required features: "android-renderscript-ScriptGroup_Builder", "android-renderscript-Script_KernelID", "android-renderscript-Type"
        #[cfg(any(feature = "all", all(feature = "android-renderscript-ScriptGroup_Builder", feature = "android-renderscript-Script_KernelID", feature = "android-renderscript-Type")))]
        #[deprecated] pub fn addConnection_Type_KernelID_KernelID<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::Type>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::Script_KernelID>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::Script_KernelID>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptGroup_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/renderscript/ScriptGroup$Builder", java.flags == PUBLIC, .name == "addConnection", .descriptor == "(Landroid/renderscript/Type;Landroid/renderscript/Script$KernelID;Landroid/renderscript/Script$KernelID;)Landroid/renderscript/ScriptGroup$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptGroup$Builder\0", "addConnection\0", "(Landroid/renderscript/Type;Landroid/renderscript/Script$KernelID;Landroid/renderscript/Script$KernelID;)Landroid/renderscript/ScriptGroup$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [create](https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder.html#create())
        ///
        /// Required features: "android-renderscript-ScriptGroup"
        #[cfg(any(feature = "all", all(feature = "android-renderscript-ScriptGroup")))]
        #[deprecated] pub fn create<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptGroup>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/renderscript/ScriptGroup$Builder", java.flags == PUBLIC, .name == "create", .descriptor == "()Landroid/renderscript/ScriptGroup;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptGroup$Builder\0", "create\0", "()Landroid/renderscript/ScriptGroup;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
