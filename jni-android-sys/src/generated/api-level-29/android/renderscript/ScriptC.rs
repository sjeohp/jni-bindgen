// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-renderscript-ScriptC"))]
__jni_bindgen! {
    /// public class [ScriptC](https://developer.android.com/reference/android/renderscript/ScriptC.html)
    ///
    /// Required feature: android-renderscript-ScriptC
    public class ScriptC ("android/renderscript/ScriptC") extends crate::android::renderscript::Script {

        // // Not emitting: Non-public method
        // /// [ScriptC](https://developer.android.com/reference/android/renderscript/ScriptC.html#ScriptC(int,%20android.renderscript.RenderScript))
        // ///
        // /// Required features: "android-renderscript-RenderScript"
        // #[cfg(any(feature = "all", all(feature = "android-renderscript-RenderScript")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::RenderScript>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptC>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/renderscript/ScriptC", java.flags == PROTECTED, .name == "<init>", .descriptor == "(ILandroid/renderscript/RenderScript;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptC\0", "<init>\0", "(ILandroid/renderscript/RenderScript;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [ScriptC](https://developer.android.com/reference/android/renderscript/ScriptC.html#ScriptC(long,%20android.renderscript.RenderScript))
        // ///
        // /// Required features: "android-renderscript-RenderScript"
        // #[cfg(any(feature = "all", all(feature = "android-renderscript-RenderScript")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::RenderScript>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptC>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/renderscript/ScriptC", java.flags == PROTECTED, .name == "<init>", .descriptor == "(JLandroid/renderscript/RenderScript;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptC\0", "<init>\0", "(JLandroid/renderscript/RenderScript;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [ScriptC](https://developer.android.com/reference/android/renderscript/ScriptC.html#ScriptC(android.renderscript.RenderScript,%20android.content.res.Resources,%20int))
        // ///
        // /// Required features: "android-content-res-Resources", "android-renderscript-RenderScript"
        // #[cfg(any(feature = "all", all(feature = "android-content-res-Resources", feature = "android-renderscript-RenderScript")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::RenderScript>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::res::Resources>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptC>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/renderscript/ScriptC", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptC\0", "<init>\0", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [ScriptC](https://developer.android.com/reference/android/renderscript/ScriptC.html#ScriptC(android.renderscript.RenderScript,%20java.lang.String,%20byte%5B%5D,%20byte%5B%5D))
        // ///
        // /// Required features: "android-renderscript-RenderScript", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-renderscript-RenderScript", feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::renderscript::RenderScript>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::renderscript::ScriptC>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/renderscript/ScriptC", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Landroid/renderscript/RenderScript;Ljava/lang/String;[B[B)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/renderscript/ScriptC\0", "<init>\0", "(Landroid/renderscript/RenderScript;Ljava/lang/String;[B[B)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
