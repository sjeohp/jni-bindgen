// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-location-GnssStatus"))]
__jni_bindgen! {
    /// public final class [GnssStatus](https://developer.android.com/reference/android/location/GnssStatus.html)
    ///
    /// Required feature: android-location-GnssStatus
    public final class GnssStatus ("android/location/GnssStatus") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [GnssStatus](https://developer.android.com/reference/android/location/GnssStatus.html#GnssStatus(int,%20int%5B%5D,%20float%5B%5D,%20float%5B%5D,%20float%5B%5D,%20float%5B%5D))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::location::GnssStatus>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/location/GnssStatus", java.flags == (empty), .name == "<init>", .descriptor == "(I[I[F[F[F[F)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "<init>\0", "(I[I[F[F[F[F)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getSatelliteCount](https://developer.android.com/reference/android/location/GnssStatus.html#getSatelliteCount())
        pub fn getSatelliteCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "getSatelliteCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "getSatelliteCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getConstellationType](https://developer.android.com/reference/android/location/GnssStatus.html#getConstellationType(int))
        pub fn getConstellationType<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "getConstellationType", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "getConstellationType\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSvid](https://developer.android.com/reference/android/location/GnssStatus.html#getSvid(int))
        pub fn getSvid<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "getSvid", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "getSvid\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCn0DbHz](https://developer.android.com/reference/android/location/GnssStatus.html#getCn0DbHz(int))
        pub fn getCn0DbHz<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "getCn0DbHz", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "getCn0DbHz\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getElevationDegrees](https://developer.android.com/reference/android/location/GnssStatus.html#getElevationDegrees(int))
        pub fn getElevationDegrees<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "getElevationDegrees", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "getElevationDegrees\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAzimuthDegrees](https://developer.android.com/reference/android/location/GnssStatus.html#getAzimuthDegrees(int))
        pub fn getAzimuthDegrees<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "getAzimuthDegrees", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "getAzimuthDegrees\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasEphemerisData](https://developer.android.com/reference/android/location/GnssStatus.html#hasEphemerisData(int))
        pub fn hasEphemerisData<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "hasEphemerisData", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "hasEphemerisData\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasAlmanacData](https://developer.android.com/reference/android/location/GnssStatus.html#hasAlmanacData(int))
        pub fn hasAlmanacData<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "hasAlmanacData", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "hasAlmanacData\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [usedInFix](https://developer.android.com/reference/android/location/GnssStatus.html#usedInFix(int))
        pub fn usedInFix<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "usedInFix", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "usedInFix\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasCarrierFrequencyHz](https://developer.android.com/reference/android/location/GnssStatus.html#hasCarrierFrequencyHz(int))
        pub fn hasCarrierFrequencyHz<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "hasCarrierFrequencyHz", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "hasCarrierFrequencyHz\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCarrierFrequencyHz](https://developer.android.com/reference/android/location/GnssStatus.html#getCarrierFrequencyHz(int))
        pub fn getCarrierFrequencyHz<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/location/GnssStatus", java.flags == PUBLIC, .name == "getCarrierFrequencyHz", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/location/GnssStatus\0", "getCarrierFrequencyHz\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CONSTELLATION_BEIDOU](https://developer.android.com/reference/android/location/GnssStatus.html#CONSTELLATION_BEIDOU)
        pub const CONSTELLATION_BEIDOU : i32 = 5;

        /// public static final [CONSTELLATION_GALILEO](https://developer.android.com/reference/android/location/GnssStatus.html#CONSTELLATION_GALILEO)
        pub const CONSTELLATION_GALILEO : i32 = 6;

        /// public static final [CONSTELLATION_GLONASS](https://developer.android.com/reference/android/location/GnssStatus.html#CONSTELLATION_GLONASS)
        pub const CONSTELLATION_GLONASS : i32 = 3;

        /// public static final [CONSTELLATION_GPS](https://developer.android.com/reference/android/location/GnssStatus.html#CONSTELLATION_GPS)
        pub const CONSTELLATION_GPS : i32 = 1;

        /// public static final [CONSTELLATION_IRNSS](https://developer.android.com/reference/android/location/GnssStatus.html#CONSTELLATION_IRNSS)
        pub const CONSTELLATION_IRNSS : i32 = 7;

        /// public static final [CONSTELLATION_QZSS](https://developer.android.com/reference/android/location/GnssStatus.html#CONSTELLATION_QZSS)
        pub const CONSTELLATION_QZSS : i32 = 4;

        /// public static final [CONSTELLATION_SBAS](https://developer.android.com/reference/android/location/GnssStatus.html#CONSTELLATION_SBAS)
        pub const CONSTELLATION_SBAS : i32 = 2;

        /// public static final [CONSTELLATION_UNKNOWN](https://developer.android.com/reference/android/location/GnssStatus.html#CONSTELLATION_UNKNOWN)
        pub const CONSTELLATION_UNKNOWN : i32 = 0;
    }
}
