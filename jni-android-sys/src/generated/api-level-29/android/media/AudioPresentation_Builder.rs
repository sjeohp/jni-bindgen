// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-AudioPresentation_Builder"))]
__jni_bindgen! {
    /// public final class [AudioPresentation.Builder](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html)
    ///
    /// Required feature: android-media-AudioPresentation_Builder
    public final class AudioPresentation_Builder ("android/media/AudioPresentation$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#Builder(int))
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "<init>\0", "(I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setProgramId](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#setProgramId(int))
        ///
        /// Required features: "android-media-AudioPresentation_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioPresentation_Builder")))]
        pub fn setProgramId<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "setProgramId", .descriptor == "(I)Landroid/media/AudioPresentation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "setProgramId\0", "(I)Landroid/media/AudioPresentation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLocale](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#setLocale(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-ULocale", "android-media-AudioPresentation_Builder"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "android-media-AudioPresentation_Builder")))]
        pub fn setLocale<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "setLocale", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/media/AudioPresentation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "setLocale\0", "(Landroid/icu/util/ULocale;)Landroid/media/AudioPresentation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMasteringIndication](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#setMasteringIndication(int))
        ///
        /// Required features: "android-media-AudioPresentation_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioPresentation_Builder")))]
        pub fn setMasteringIndication<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "setMasteringIndication", .descriptor == "(I)Landroid/media/AudioPresentation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "setMasteringIndication\0", "(I)Landroid/media/AudioPresentation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLabels](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#setLabels(java.util.Map))
        ///
        /// Required features: "android-media-AudioPresentation_Builder", "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioPresentation_Builder", feature = "java-util-Map")))]
        pub fn setLabels<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "setLabels", .descriptor == "(Ljava/util/Map;)Landroid/media/AudioPresentation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "setLabels\0", "(Ljava/util/Map;)Landroid/media/AudioPresentation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setHasAudioDescription](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#setHasAudioDescription(boolean))
        ///
        /// Required features: "android-media-AudioPresentation_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioPresentation_Builder")))]
        pub fn setHasAudioDescription<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "setHasAudioDescription", .descriptor == "(Z)Landroid/media/AudioPresentation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "setHasAudioDescription\0", "(Z)Landroid/media/AudioPresentation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setHasSpokenSubtitles](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#setHasSpokenSubtitles(boolean))
        ///
        /// Required features: "android-media-AudioPresentation_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioPresentation_Builder")))]
        pub fn setHasSpokenSubtitles<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "setHasSpokenSubtitles", .descriptor == "(Z)Landroid/media/AudioPresentation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "setHasSpokenSubtitles\0", "(Z)Landroid/media/AudioPresentation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setHasDialogueEnhancement](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#setHasDialogueEnhancement(boolean))
        ///
        /// Required features: "android-media-AudioPresentation_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioPresentation_Builder")))]
        pub fn setHasDialogueEnhancement<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "setHasDialogueEnhancement", .descriptor == "(Z)Landroid/media/AudioPresentation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "setHasDialogueEnhancement\0", "(Z)Landroid/media/AudioPresentation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/media/AudioPresentation.Builder.html#build())
        ///
        /// Required features: "android-media-AudioPresentation"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioPresentation")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioPresentation>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioPresentation$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/media/AudioPresentation;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioPresentation$Builder\0", "build\0", "()Landroid/media/AudioPresentation;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
