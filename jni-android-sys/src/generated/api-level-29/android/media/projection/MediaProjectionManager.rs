// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-projection-MediaProjectionManager"))]
__jni_bindgen! {
    /// public final class [MediaProjectionManager](https://developer.android.com/reference/android/media/projection/MediaProjectionManager.html)
    ///
    /// Required feature: android-media-projection-MediaProjectionManager
    public final class MediaProjectionManager ("android/media/projection/MediaProjectionManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [MediaProjectionManager](https://developer.android.com/reference/android/media/projection/MediaProjectionManager.html#MediaProjectionManager(android.content.Context))
        // ///
        // /// Required features: "android-content-Context"
        // #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::projection::MediaProjectionManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/projection/MediaProjectionManager", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/content/Context;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/projection/MediaProjectionManager\0", "<init>\0", "(Landroid/content/Context;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [createScreenCaptureIntent](https://developer.android.com/reference/android/media/projection/MediaProjectionManager.html#createScreenCaptureIntent())
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn createScreenCaptureIntent<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/projection/MediaProjectionManager", java.flags == PUBLIC, .name == "createScreenCaptureIntent", .descriptor == "()Landroid/content/Intent;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/projection/MediaProjectionManager\0", "createScreenCaptureIntent\0", "()Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMediaProjection](https://developer.android.com/reference/android/media/projection/MediaProjectionManager.html#getMediaProjection(int,%20android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-media-projection-MediaProjection"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-media-projection-MediaProjection")))]
        pub fn getMediaProjection<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::projection::MediaProjection>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/projection/MediaProjectionManager", java.flags == PUBLIC, .name == "getMediaProjection", .descriptor == "(ILandroid/content/Intent;)Landroid/media/projection/MediaProjection;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/projection/MediaProjectionManager\0", "getMediaProjection\0", "(ILandroid/content/Intent;)Landroid/media/projection/MediaProjection;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
