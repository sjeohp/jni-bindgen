// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-FaceDetector_Face"))]
__jni_bindgen! {
    /// public class [FaceDetector.Face](https://developer.android.com/reference/android/media/FaceDetector.Face.html)
    ///
    /// Required feature: android-media-FaceDetector_Face
    public class FaceDetector_Face ("android/media/FaceDetector$Face") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Face](https://developer.android.com/reference/android/media/FaceDetector.Face.html#Face(android.media.FaceDetector))
        // ///
        // /// Required features: "android-media-FaceDetector"
        // #[cfg(any(feature = "all", all(feature = "android-media-FaceDetector")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::FaceDetector>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::FaceDetector_Face>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/FaceDetector$Face", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/media/FaceDetector;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/FaceDetector$Face\0", "<init>\0", "(Landroid/media/FaceDetector;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [confidence](https://developer.android.com/reference/android/media/FaceDetector.Face.html#confidence())
        pub fn confidence<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/FaceDetector$Face", java.flags == PUBLIC, .name == "confidence", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/FaceDetector$Face\0", "confidence\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMidPoint](https://developer.android.com/reference/android/media/FaceDetector.Face.html#getMidPoint(android.graphics.PointF))
        ///
        /// Required features: "android-graphics-PointF"
        #[cfg(any(feature = "all", all(feature = "android-graphics-PointF")))]
        pub fn getMidPoint<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::PointF>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/FaceDetector$Face", java.flags == PUBLIC, .name == "getMidPoint", .descriptor == "(Landroid/graphics/PointF;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/FaceDetector$Face\0", "getMidPoint\0", "(Landroid/graphics/PointF;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [eyesDistance](https://developer.android.com/reference/android/media/FaceDetector.Face.html#eyesDistance())
        pub fn eyesDistance<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/FaceDetector$Face", java.flags == PUBLIC, .name == "eyesDistance", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/FaceDetector$Face\0", "eyesDistance\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [pose](https://developer.android.com/reference/android/media/FaceDetector.Face.html#pose(int))
        pub fn pose<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/FaceDetector$Face", java.flags == PUBLIC, .name == "pose", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/FaceDetector$Face\0", "pose\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CONFIDENCE_THRESHOLD](https://developer.android.com/reference/android/media/FaceDetector.Face.html#CONFIDENCE_THRESHOLD)
        pub const CONFIDENCE_THRESHOLD : f32 = 0.4f32;

        /// public static final [EULER_X](https://developer.android.com/reference/android/media/FaceDetector.Face.html#EULER_X)
        pub const EULER_X : i32 = 0;

        /// public static final [EULER_Y](https://developer.android.com/reference/android/media/FaceDetector.Face.html#EULER_Y)
        pub const EULER_Y : i32 = 1;

        /// public static final [EULER_Z](https://developer.android.com/reference/android/media/FaceDetector.Face.html#EULER_Z)
        pub const EULER_Z : i32 = 2;

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::FaceDetector>> { ... }
    }
}
