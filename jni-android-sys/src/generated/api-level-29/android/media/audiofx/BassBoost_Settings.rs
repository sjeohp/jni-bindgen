// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-audiofx-BassBoost_Settings"))]
__jni_bindgen! {
    /// public class [BassBoost.Settings](https://developer.android.com/reference/android/media/audiofx/BassBoost.Settings.html)
    ///
    /// Required feature: android-media-audiofx-BassBoost_Settings
    public class BassBoost_Settings ("android/media/audiofx/BassBoost$Settings") extends crate::java::lang::Object {

        /// [Settings](https://developer.android.com/reference/android/media/audiofx/BassBoost.Settings.html#Settings())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::BassBoost_Settings>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/BassBoost$Settings", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/BassBoost$Settings\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Settings](https://developer.android.com/reference/android/media/audiofx/BassBoost.Settings.html#Settings(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::BassBoost_Settings>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/BassBoost$Settings", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/BassBoost$Settings\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/media/audiofx/BassBoost.Settings.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/BassBoost$Settings", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/BassBoost$Settings\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public [strength](https://developer.android.com/reference/android/media/audiofx/BassBoost.Settings.html#strength)
        pub fn strength<'env>(&'env self) -> i16 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/media/audiofx/BassBoost$Settings\0", "strength\0", "S\0");
                env.get_short_field(class, field)
            }
        }

        /// **set** public [strength](https://developer.android.com/reference/android/media/audiofx/BassBoost.Settings.html#strength)
        pub fn set_strength<'env>(&'env self, value: i16) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/media/audiofx/BassBoost$Settings\0", "strength\0", "S\0");
                env.set_short_field(class, field, value)
            }
        }
    }
}
