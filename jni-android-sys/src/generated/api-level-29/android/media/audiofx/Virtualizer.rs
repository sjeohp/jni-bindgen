// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-audiofx-Virtualizer"))]
__jni_bindgen! {
    /// public class [Virtualizer](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html)
    ///
    /// Required feature: android-media-audiofx-Virtualizer
    public class Virtualizer ("android/media/audiofx/Virtualizer") extends crate::android::media::audiofx::AudioEffect {

        /// [Virtualizer](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#Virtualizer(int,%20int))
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::Virtualizer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "<init>", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "<init>\0", "(II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStrengthSupported](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#getStrengthSupported())
        pub fn getStrengthSupported<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "getStrengthSupported", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "getStrengthSupported\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setStrength](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#setStrength(short))
        pub fn setStrength<'env>(&'env self, arg0: i16) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "setStrength", .descriptor == "(S)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "setStrength\0", "(S)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRoundedStrength](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#getRoundedStrength())
        pub fn getRoundedStrength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "getRoundedStrength", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "getRoundedStrength\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [canVirtualize](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#canVirtualize(int,%20int))
        pub fn canVirtualize<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "canVirtualize", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "canVirtualize\0", "(II)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSpeakerAngles](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#getSpeakerAngles(int,%20int,%20int%5B%5D))
        pub fn getSpeakerAngles<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "getSpeakerAngles", .descriptor == "(II[I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "getSpeakerAngles\0", "(II[I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [forceVirtualizationMode](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#forceVirtualizationMode(int))
        pub fn forceVirtualizationMode<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "forceVirtualizationMode", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "forceVirtualizationMode\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getVirtualizationMode](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#getVirtualizationMode())
        pub fn getVirtualizationMode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "getVirtualizationMode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "getVirtualizationMode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setParameterListener](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#setParameterListener(android.media.audiofx.Virtualizer.OnParameterChangeListener))
        ///
        /// Required features: "android-media-audiofx-Virtualizer_OnParameterChangeListener"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-Virtualizer_OnParameterChangeListener")))]
        pub fn setParameterListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::Virtualizer_OnParameterChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "setParameterListener", .descriptor == "(Landroid/media/audiofx/Virtualizer$OnParameterChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "setParameterListener\0", "(Landroid/media/audiofx/Virtualizer$OnParameterChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProperties](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#getProperties())
        ///
        /// Required features: "android-media-audiofx-Virtualizer_Settings"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-Virtualizer_Settings")))]
        pub fn getProperties<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::audiofx::Virtualizer_Settings>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "getProperties", .descriptor == "()Landroid/media/audiofx/Virtualizer$Settings;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "getProperties\0", "()Landroid/media/audiofx/Virtualizer$Settings;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setProperties](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#setProperties(android.media.audiofx.Virtualizer.Settings))
        ///
        /// Required features: "android-media-audiofx-Virtualizer_Settings"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-Virtualizer_Settings")))]
        pub fn setProperties<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::Virtualizer_Settings>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Virtualizer", java.flags == PUBLIC, .name == "setProperties", .descriptor == "(Landroid/media/audiofx/Virtualizer$Settings;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Virtualizer\0", "setProperties\0", "(Landroid/media/audiofx/Virtualizer$Settings;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [PARAM_STRENGTH](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#PARAM_STRENGTH)
        pub const PARAM_STRENGTH : i32 = 1;

        /// public static final [PARAM_STRENGTH_SUPPORTED](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#PARAM_STRENGTH_SUPPORTED)
        pub const PARAM_STRENGTH_SUPPORTED : i32 = 0;

        /// public static final [VIRTUALIZATION_MODE_AUTO](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#VIRTUALIZATION_MODE_AUTO)
        pub const VIRTUALIZATION_MODE_AUTO : i32 = 1;

        /// public static final [VIRTUALIZATION_MODE_BINAURAL](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#VIRTUALIZATION_MODE_BINAURAL)
        pub const VIRTUALIZATION_MODE_BINAURAL : i32 = 2;

        /// public static final [VIRTUALIZATION_MODE_OFF](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#VIRTUALIZATION_MODE_OFF)
        pub const VIRTUALIZATION_MODE_OFF : i32 = 0;

        /// public static final [VIRTUALIZATION_MODE_TRANSAURAL](https://developer.android.com/reference/android/media/audiofx/Virtualizer.html#VIRTUALIZATION_MODE_TRANSAURAL)
        pub const VIRTUALIZATION_MODE_TRANSAURAL : i32 = 3;
    }
}
