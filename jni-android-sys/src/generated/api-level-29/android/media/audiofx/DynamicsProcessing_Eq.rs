// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-audiofx-DynamicsProcessing_Eq"))]
__jni_bindgen! {
    /// public final class [DynamicsProcessing.Eq](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Eq.html)
    ///
    /// Required feature: android-media-audiofx-DynamicsProcessing_Eq
    public final class DynamicsProcessing_Eq ("android/media/audiofx/DynamicsProcessing$Eq") extends crate::android::media::audiofx::DynamicsProcessing_BandStage {

        /// [Eq](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Eq.html#Eq(boolean,%20boolean,%20int))
        pub fn new_boolean_boolean_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: bool, arg1: bool, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::DynamicsProcessing_Eq>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Eq", java.flags == PUBLIC, .name == "<init>", .descriptor == "(ZZI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Eq\0", "<init>\0", "(ZZI)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Eq](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Eq.html#Eq(android.media.audiofx.DynamicsProcessing.Eq))
        ///
        /// Required features: "android-media-audiofx-DynamicsProcessing_Eq"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-DynamicsProcessing_Eq")))]
        pub fn new_Eq<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::DynamicsProcessing_Eq>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::DynamicsProcessing_Eq>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Eq", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/media/audiofx/DynamicsProcessing$Eq;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Eq\0", "<init>\0", "(Landroid/media/audiofx/DynamicsProcessing$Eq;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Eq.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Eq", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Eq\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBand](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Eq.html#setBand(int,%20android.media.audiofx.DynamicsProcessing.EqBand))
        ///
        /// Required features: "android-media-audiofx-DynamicsProcessing_EqBand"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-DynamicsProcessing_EqBand")))]
        pub fn setBand<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::DynamicsProcessing_EqBand>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Eq", java.flags == PUBLIC, .name == "setBand", .descriptor == "(ILandroid/media/audiofx/DynamicsProcessing$EqBand;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Eq\0", "setBand\0", "(ILandroid/media/audiofx/DynamicsProcessing$EqBand;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBand](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Eq.html#getBand(int))
        ///
        /// Required features: "android-media-audiofx-DynamicsProcessing_EqBand"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-DynamicsProcessing_EqBand")))]
        pub fn getBand<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::audiofx::DynamicsProcessing_EqBand>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Eq", java.flags == PUBLIC, .name == "getBand", .descriptor == "(I)Landroid/media/audiofx/DynamicsProcessing$EqBand;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Eq\0", "getBand\0", "(I)Landroid/media/audiofx/DynamicsProcessing$EqBand;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
