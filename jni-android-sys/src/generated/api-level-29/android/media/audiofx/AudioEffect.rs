// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-audiofx-AudioEffect"))]
__jni_bindgen! {
    /// public class [AudioEffect](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html)
    ///
    /// Required feature: android-media-audiofx-AudioEffect
    public class AudioEffect ("android/media/audiofx/AudioEffect") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [AudioEffect](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#AudioEffect(java.util.UUID,%20java.util.UUID,%20int,%20int))
        // ///
        // /// Required features: "java-util-UUID"
        // #[cfg(any(feature = "all", all(feature = "java-util-UUID")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::UUID>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::UUID>>, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::AudioEffect>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/audiofx/AudioEffect", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/util/UUID;Ljava/util/UUID;II)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "<init>\0", "(Ljava/util/UUID;Ljava/util/UUID;II)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [release](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#release())
        pub fn release<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC, .name == "release", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "release\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [finalize](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#finalize())
        // fn finalize<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/audiofx/AudioEffect", java.flags == PROTECTED, .name == "finalize", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "finalize\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getDescriptor](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#getDescriptor())
        ///
        /// Required features: "android-media-audiofx-AudioEffect_Descriptor"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-AudioEffect_Descriptor")))]
        pub fn getDescriptor<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::audiofx::AudioEffect_Descriptor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC, .name == "getDescriptor", .descriptor == "()Landroid/media/audiofx/AudioEffect$Descriptor;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "getDescriptor\0", "()Landroid/media/audiofx/AudioEffect$Descriptor;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryEffects](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#queryEffects())
        ///
        /// Required features: "android-media-audiofx-AudioEffect_Descriptor"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-AudioEffect_Descriptor")))]
        pub fn queryEffects<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::media::audiofx::AudioEffect_Descriptor, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC | STATIC, .name == "queryEffects", .descriptor == "()[Landroid/media/audiofx/AudioEffect$Descriptor;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/media/audiofx/AudioEffect\0", "queryEffects\0", "()[Landroid/media/audiofx/AudioEffect$Descriptor;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEnabled](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#setEnabled(boolean))
        pub fn setEnabled<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC, .name == "setEnabled", .descriptor == "(Z)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "setEnabled\0", "(Z)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getId](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#getId())
        pub fn getId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC, .name == "getId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "getId\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEnabled](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#getEnabled())
        pub fn getEnabled<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC, .name == "getEnabled", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "getEnabled\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasControl](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#hasControl())
        pub fn hasControl<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC, .name == "hasControl", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "hasControl\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEnableStatusListener](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#setEnableStatusListener(android.media.audiofx.AudioEffect.OnEnableStatusChangeListener))
        ///
        /// Required features: "android-media-audiofx-AudioEffect_OnEnableStatusChangeListener"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-AudioEffect_OnEnableStatusChangeListener")))]
        pub fn setEnableStatusListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::AudioEffect_OnEnableStatusChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC, .name == "setEnableStatusListener", .descriptor == "(Landroid/media/audiofx/AudioEffect$OnEnableStatusChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "setEnableStatusListener\0", "(Landroid/media/audiofx/AudioEffect$OnEnableStatusChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setControlStatusListener](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#setControlStatusListener(android.media.audiofx.AudioEffect.OnControlStatusChangeListener))
        ///
        /// Required features: "android-media-audiofx-AudioEffect_OnControlStatusChangeListener"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-AudioEffect_OnControlStatusChangeListener")))]
        pub fn setControlStatusListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::AudioEffect_OnControlStatusChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/AudioEffect", java.flags == PUBLIC, .name == "setControlStatusListener", .descriptor == "(Landroid/media/audiofx/AudioEffect$OnControlStatusChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/AudioEffect\0", "setControlStatusListener\0", "(Landroid/media/audiofx/AudioEffect$OnControlStatusChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION)
        pub const ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION : &'static str = "android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION";

        /// public static final [ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL)
        pub const ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL : &'static str = "android.media.action.DISPLAY_AUDIO_EFFECT_CONTROL_PANEL";

        /// public static final [ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION)
        pub const ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION : &'static str = "android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION";

        /// public static final [ALREADY_EXISTS](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ALREADY_EXISTS)
        pub const ALREADY_EXISTS : i32 = -2;

        /// public static final [CONTENT_TYPE_GAME](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#CONTENT_TYPE_GAME)
        pub const CONTENT_TYPE_GAME : i32 = 2;

        /// public static final [CONTENT_TYPE_MOVIE](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#CONTENT_TYPE_MOVIE)
        pub const CONTENT_TYPE_MOVIE : i32 = 1;

        /// public static final [CONTENT_TYPE_MUSIC](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#CONTENT_TYPE_MUSIC)
        pub const CONTENT_TYPE_MUSIC : i32 = 0;

        /// public static final [CONTENT_TYPE_VOICE](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#CONTENT_TYPE_VOICE)
        pub const CONTENT_TYPE_VOICE : i32 = 3;

        /// public static final [EFFECT_AUXILIARY](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_AUXILIARY)
        pub const EFFECT_AUXILIARY : &'static str = "Auxiliary";

        /// public static final [EFFECT_INSERT](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_INSERT)
        pub const EFFECT_INSERT : &'static str = "Insert";

        /// **get** public static final [EFFECT_TYPE_AEC](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_AEC)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_AEC<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_AEC\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_AGC](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_AGC)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_AGC<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_AGC\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_BASS_BOOST](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_BASS_BOOST)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_BASS_BOOST<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_BASS_BOOST\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_DYNAMICS_PROCESSING](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_DYNAMICS_PROCESSING)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_DYNAMICS_PROCESSING<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_DYNAMICS_PROCESSING\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_ENV_REVERB](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_ENV_REVERB)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_ENV_REVERB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_ENV_REVERB\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_EQUALIZER](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_EQUALIZER)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_EQUALIZER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_EQUALIZER\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_LOUDNESS_ENHANCER](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_LOUDNESS_ENHANCER)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_LOUDNESS_ENHANCER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_LOUDNESS_ENHANCER\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_NS](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_NS)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_NS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_NS\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_PRESET_REVERB](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_PRESET_REVERB)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_PRESET_REVERB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_PRESET_REVERB\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EFFECT_TYPE_VIRTUALIZER](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_VIRTUALIZER)
        ///
        /// Required feature: java-util-UUID
        #[cfg(any(feature = "all", feature = "java-util-UUID"))]
        pub fn EFFECT_TYPE_VIRTUALIZER<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/audiofx/AudioEffect\0", "EFFECT_TYPE_VIRTUALIZER\0", "Ljava/util/UUID;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [ERROR](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR)
        pub const ERROR : i32 = -1;

        /// public static final [ERROR_BAD_VALUE](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_BAD_VALUE)
        pub const ERROR_BAD_VALUE : i32 = -4;

        /// public static final [ERROR_DEAD_OBJECT](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_DEAD_OBJECT)
        pub const ERROR_DEAD_OBJECT : i32 = -7;

        /// public static final [ERROR_INVALID_OPERATION](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_INVALID_OPERATION)
        pub const ERROR_INVALID_OPERATION : i32 = -5;

        /// public static final [ERROR_NO_INIT](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_NO_INIT)
        pub const ERROR_NO_INIT : i32 = -3;

        /// public static final [ERROR_NO_MEMORY](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_NO_MEMORY)
        pub const ERROR_NO_MEMORY : i32 = -6;

        /// public static final [EXTRA_AUDIO_SESSION](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EXTRA_AUDIO_SESSION)
        pub const EXTRA_AUDIO_SESSION : &'static str = "android.media.extra.AUDIO_SESSION";

        /// public static final [EXTRA_CONTENT_TYPE](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EXTRA_CONTENT_TYPE)
        pub const EXTRA_CONTENT_TYPE : &'static str = "android.media.extra.CONTENT_TYPE";

        /// public static final [EXTRA_PACKAGE_NAME](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EXTRA_PACKAGE_NAME)
        pub const EXTRA_PACKAGE_NAME : &'static str = "android.media.extra.PACKAGE_NAME";

        /// public static final [SUCCESS](https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#SUCCESS)
        pub const SUCCESS : i32 = 0;
    }
}
