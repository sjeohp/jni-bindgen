// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-audiofx-Equalizer"))]
__jni_bindgen! {
    /// public class [Equalizer](https://developer.android.com/reference/android/media/audiofx/Equalizer.html)
    ///
    /// Required feature: android-media-audiofx-Equalizer
    public class Equalizer ("android/media/audiofx/Equalizer") extends crate::android::media::audiofx::AudioEffect {

        /// [Equalizer](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#Equalizer(int,%20int))
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::Equalizer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "<init>", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "<init>\0", "(II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNumberOfBands](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getNumberOfBands())
        pub fn getNumberOfBands<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getNumberOfBands", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getNumberOfBands\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBandLevelRange](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getBandLevelRange())
        pub fn getBandLevelRange<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ShortArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getBandLevelRange", .descriptor == "()[S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getBandLevelRange\0", "()[S\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBandLevel](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#setBandLevel(short,%20short))
        pub fn setBandLevel<'env>(&'env self, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "setBandLevel", .descriptor == "(SS)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "setBandLevel\0", "(SS)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBandLevel](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getBandLevel(short))
        pub fn getBandLevel<'env>(&'env self, arg0: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getBandLevel", .descriptor == "(S)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getBandLevel\0", "(S)S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCenterFreq](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getCenterFreq(short))
        pub fn getCenterFreq<'env>(&'env self, arg0: i16) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getCenterFreq", .descriptor == "(S)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getCenterFreq\0", "(S)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBandFreqRange](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getBandFreqRange(short))
        pub fn getBandFreqRange<'env>(&'env self, arg0: i16) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::IntArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getBandFreqRange", .descriptor == "(S)[I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getBandFreqRange\0", "(S)[I\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBand](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getBand(int))
        pub fn getBand<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getBand", .descriptor == "(I)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getBand\0", "(I)S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCurrentPreset](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getCurrentPreset())
        pub fn getCurrentPreset<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getCurrentPreset", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getCurrentPreset\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [usePreset](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#usePreset(short))
        pub fn usePreset<'env>(&'env self, arg0: i16) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "usePreset", .descriptor == "(S)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "usePreset\0", "(S)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNumberOfPresets](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getNumberOfPresets())
        pub fn getNumberOfPresets<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getNumberOfPresets", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getNumberOfPresets\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPresetName](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getPresetName(short))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPresetName<'env>(&'env self, arg0: i16) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getPresetName", .descriptor == "(S)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getPresetName\0", "(S)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setParameterListener](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#setParameterListener(android.media.audiofx.Equalizer.OnParameterChangeListener))
        ///
        /// Required features: "android-media-audiofx-Equalizer_OnParameterChangeListener"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-Equalizer_OnParameterChangeListener")))]
        pub fn setParameterListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::Equalizer_OnParameterChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "setParameterListener", .descriptor == "(Landroid/media/audiofx/Equalizer$OnParameterChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "setParameterListener\0", "(Landroid/media/audiofx/Equalizer$OnParameterChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProperties](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#getProperties())
        ///
        /// Required features: "android-media-audiofx-Equalizer_Settings"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-Equalizer_Settings")))]
        pub fn getProperties<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::audiofx::Equalizer_Settings>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "getProperties", .descriptor == "()Landroid/media/audiofx/Equalizer$Settings;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "getProperties\0", "()Landroid/media/audiofx/Equalizer$Settings;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setProperties](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#setProperties(android.media.audiofx.Equalizer.Settings))
        ///
        /// Required features: "android-media-audiofx-Equalizer_Settings"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-Equalizer_Settings")))]
        pub fn setProperties<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::Equalizer_Settings>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/Equalizer", java.flags == PUBLIC, .name == "setProperties", .descriptor == "(Landroid/media/audiofx/Equalizer$Settings;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/Equalizer\0", "setProperties\0", "(Landroid/media/audiofx/Equalizer$Settings;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [PARAM_BAND_FREQ_RANGE](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_BAND_FREQ_RANGE)
        pub const PARAM_BAND_FREQ_RANGE : i32 = 4;

        /// public static final [PARAM_BAND_LEVEL](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_BAND_LEVEL)
        pub const PARAM_BAND_LEVEL : i32 = 2;

        /// public static final [PARAM_CENTER_FREQ](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_CENTER_FREQ)
        pub const PARAM_CENTER_FREQ : i32 = 3;

        /// public static final [PARAM_CURRENT_PRESET](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_CURRENT_PRESET)
        pub const PARAM_CURRENT_PRESET : i32 = 6;

        /// public static final [PARAM_GET_BAND](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_GET_BAND)
        pub const PARAM_GET_BAND : i32 = 5;

        /// public static final [PARAM_GET_NUM_OF_PRESETS](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_GET_NUM_OF_PRESETS)
        pub const PARAM_GET_NUM_OF_PRESETS : i32 = 7;

        /// public static final [PARAM_GET_PRESET_NAME](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_GET_PRESET_NAME)
        pub const PARAM_GET_PRESET_NAME : i32 = 8;

        /// public static final [PARAM_LEVEL_RANGE](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_LEVEL_RANGE)
        pub const PARAM_LEVEL_RANGE : i32 = 1;

        /// public static final [PARAM_NUM_BANDS](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_NUM_BANDS)
        pub const PARAM_NUM_BANDS : i32 = 0;

        /// public static final [PARAM_STRING_SIZE_MAX](https://developer.android.com/reference/android/media/audiofx/Equalizer.html#PARAM_STRING_SIZE_MAX)
        pub const PARAM_STRING_SIZE_MAX : i32 = 32;
    }
}
