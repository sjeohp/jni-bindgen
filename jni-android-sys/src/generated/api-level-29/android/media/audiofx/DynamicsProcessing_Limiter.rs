// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-audiofx-DynamicsProcessing_Limiter"))]
__jni_bindgen! {
    /// public final class [DynamicsProcessing.Limiter](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html)
    ///
    /// Required feature: android-media-audiofx-DynamicsProcessing_Limiter
    public final class DynamicsProcessing_Limiter ("android/media/audiofx/DynamicsProcessing$Limiter") extends crate::android::media::audiofx::DynamicsProcessing_Stage {

        /// [Limiter](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#Limiter(boolean,%20boolean,%20int,%20float,%20float,%20float,%20float,%20float))
        pub fn new_boolean_boolean_int_float_float_float_float_float<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: bool, arg1: bool, arg2: i32, arg3: f32, arg4: f32, arg5: f32, arg6: f32, arg7: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::DynamicsProcessing_Limiter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(ZZIFFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "<init>\0", "(ZZIFFFFF)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Limiter](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#Limiter(android.media.audiofx.DynamicsProcessing.Limiter))
        ///
        /// Required features: "android-media-audiofx-DynamicsProcessing_Limiter"
        #[cfg(any(feature = "all", all(feature = "android-media-audiofx-DynamicsProcessing_Limiter")))]
        pub fn new_Limiter<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::audiofx::DynamicsProcessing_Limiter>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::audiofx::DynamicsProcessing_Limiter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/media/audiofx/DynamicsProcessing$Limiter;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "<init>\0", "(Landroid/media/audiofx/DynamicsProcessing$Limiter;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLinkGroup](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#getLinkGroup())
        pub fn getLinkGroup<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "getLinkGroup", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "getLinkGroup\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLinkGroup](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#setLinkGroup(int))
        pub fn setLinkGroup<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "setLinkGroup", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "setLinkGroup\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAttackTime](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#getAttackTime())
        pub fn getAttackTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "getAttackTime", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "getAttackTime\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAttackTime](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#setAttackTime(float))
        pub fn setAttackTime<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "setAttackTime", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "setAttackTime\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getReleaseTime](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#getReleaseTime())
        pub fn getReleaseTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "getReleaseTime", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "getReleaseTime\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setReleaseTime](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#setReleaseTime(float))
        pub fn setReleaseTime<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "setReleaseTime", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "setReleaseTime\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRatio](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#getRatio())
        pub fn getRatio<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "getRatio", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "getRatio\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRatio](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#setRatio(float))
        pub fn setRatio<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "setRatio", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "setRatio\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThreshold](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#getThreshold())
        pub fn getThreshold<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "getThreshold", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "getThreshold\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setThreshold](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#setThreshold(float))
        pub fn setThreshold<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "setThreshold", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "setThreshold\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPostGain](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#getPostGain())
        pub fn getPostGain<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "getPostGain", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "getPostGain\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPostGain](https://developer.android.com/reference/android/media/audiofx/DynamicsProcessing.Limiter.html#setPostGain(float))
        pub fn setPostGain<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/audiofx/DynamicsProcessing$Limiter", java.flags == PUBLIC, .name == "setPostGain", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/audiofx/DynamicsProcessing$Limiter\0", "setPostGain\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
