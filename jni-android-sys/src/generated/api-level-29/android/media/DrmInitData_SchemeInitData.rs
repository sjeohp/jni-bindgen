// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-DrmInitData_SchemeInitData"))]
__jni_bindgen! {
    /// public final class [DrmInitData.SchemeInitData](https://developer.android.com/reference/android/media/DrmInitData.SchemeInitData.html)
    ///
    /// Required feature: android-media-DrmInitData_SchemeInitData
    public final class DrmInitData_SchemeInitData ("android/media/DrmInitData$SchemeInitData") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [SchemeInitData](https://developer.android.com/reference/android/media/DrmInitData.SchemeInitData.html#SchemeInitData(java.lang.String,%20byte%5B%5D))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::DrmInitData_SchemeInitData>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/DrmInitData$SchemeInitData", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/String;[B)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/DrmInitData$SchemeInitData\0", "<init>\0", "(Ljava/lang/String;[B)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [equals](https://developer.android.com/reference/android/media/DrmInitData.SchemeInitData.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/DrmInitData$SchemeInitData", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/DrmInitData$SchemeInitData\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/media/DrmInitData.SchemeInitData.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/DrmInitData$SchemeInitData", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/DrmInitData$SchemeInitData\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public final [data](https://developer.android.com/reference/android/media/DrmInitData.SchemeInitData.html#data)
        pub fn data<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/media/DrmInitData$SchemeInitData\0", "data\0", "[B\0");
                env.get_object_field(class, field)
            }
        }

        /// **get** public final [mimeType](https://developer.android.com/reference/android/media/DrmInitData.SchemeInitData.html#mimeType)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn mimeType<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/media/DrmInitData$SchemeInitData\0", "mimeType\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }
    }
}
