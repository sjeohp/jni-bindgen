// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MediaMetadataEditor"))]
__jni_bindgen! {
    /// public class [MediaMetadataEditor](https://developer.android.com/reference/android/media/MediaMetadataEditor.html)
    ///
    /// Required feature: android-media-MediaMetadataEditor
    #[deprecated] public class MediaMetadataEditor ("android/media/MediaMetadataEditor") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [MediaMetadataEditor](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#MediaMetadataEditor())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MediaMetadataEditor>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/MediaMetadataEditor", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [apply](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#apply())
        #[deprecated] pub fn apply<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | ABSTRACT, .name == "apply", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "apply\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clear](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#clear())
        #[deprecated] pub fn clear<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "clear", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "clear\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addEditableKey](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#addEditableKey(int))
        #[deprecated] pub fn addEditableKey<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "addEditableKey", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "addEditableKey\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeEditableKeys](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#removeEditableKeys())
        #[deprecated] pub fn removeEditableKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "removeEditableKeys", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "removeEditableKeys\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEditableKeys](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#getEditableKeys())
        #[deprecated] pub fn getEditableKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::IntArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "getEditableKeys", .descriptor == "()[I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "getEditableKeys\0", "()[I\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putString](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#putString(int,%20java.lang.String))
        ///
        /// Required features: "android-media-MediaMetadataEditor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaMetadataEditor", feature = "java-lang-String")))]
        #[deprecated] pub fn putString<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaMetadataEditor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "putString", .descriptor == "(ILjava/lang/String;)Landroid/media/MediaMetadataEditor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "putString\0", "(ILjava/lang/String;)Landroid/media/MediaMetadataEditor;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putLong](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#putLong(int,%20long))
        ///
        /// Required features: "android-media-MediaMetadataEditor"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaMetadataEditor")))]
        #[deprecated] pub fn putLong<'env>(&'env self, arg0: i32, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaMetadataEditor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "putLong", .descriptor == "(IJ)Landroid/media/MediaMetadataEditor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "putLong\0", "(IJ)Landroid/media/MediaMetadataEditor;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putBitmap](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#putBitmap(int,%20android.graphics.Bitmap))
        ///
        /// Required features: "android-graphics-Bitmap", "android-media-MediaMetadataEditor"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap", feature = "android-media-MediaMetadataEditor")))]
        #[deprecated] pub fn putBitmap<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaMetadataEditor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "putBitmap", .descriptor == "(ILandroid/graphics/Bitmap;)Landroid/media/MediaMetadataEditor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "putBitmap\0", "(ILandroid/graphics/Bitmap;)Landroid/media/MediaMetadataEditor;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putObject](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#putObject(int,%20java.lang.Object))
        ///
        /// Required features: "android-media-MediaMetadataEditor", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaMetadataEditor", feature = "java-lang-Object")))]
        #[deprecated] pub fn putObject<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaMetadataEditor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "putObject", .descriptor == "(ILjava/lang/Object;)Landroid/media/MediaMetadataEditor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "putObject\0", "(ILjava/lang/Object;)Landroid/media/MediaMetadataEditor;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLong](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#getLong(int,%20long))
        #[deprecated] pub fn getLong<'env>(&'env self, arg0: i32, arg1: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "getLong", .descriptor == "(IJ)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "getLong\0", "(IJ)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getString](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#getString(int,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getString<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "getString", .descriptor == "(ILjava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "getString\0", "(ILjava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBitmap](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#getBitmap(int,%20android.graphics.Bitmap))
        ///
        /// Required features: "android-graphics-Bitmap"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap")))]
        #[deprecated] pub fn getBitmap<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Bitmap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "getBitmap", .descriptor == "(ILandroid/graphics/Bitmap;)Landroid/graphics/Bitmap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "getBitmap\0", "(ILandroid/graphics/Bitmap;)Landroid/graphics/Bitmap;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getObject](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#getObject(int,%20java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        #[deprecated] pub fn getObject<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaMetadataEditor", java.flags == PUBLIC | SYNCRONIZED, .name == "getObject", .descriptor == "(ILjava/lang/Object;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaMetadataEditor\0", "getObject\0", "(ILjava/lang/Object;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [BITMAP_KEY_ARTWORK](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#BITMAP_KEY_ARTWORK)
        #[deprecated] pub const BITMAP_KEY_ARTWORK : i32 = 100;

        /// public static final [RATING_KEY_BY_OTHERS](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#RATING_KEY_BY_OTHERS)
        #[deprecated] pub const RATING_KEY_BY_OTHERS : i32 = 101;

        /// public static final [RATING_KEY_BY_USER](https://developer.android.com/reference/android/media/MediaMetadataEditor.html#RATING_KEY_BY_USER)
        #[deprecated] pub const RATING_KEY_BY_USER : i32 = 268435457;
    }
}
