// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MediaSession2_SessionCallback"))]
__jni_bindgen! {
    /// public class [MediaSession2.SessionCallback](https://developer.android.com/reference/android/media/MediaSession2.SessionCallback.html)
    ///
    /// Required feature: android-media-MediaSession2_SessionCallback
    public class MediaSession2_SessionCallback ("android/media/MediaSession2$SessionCallback") extends crate::java::lang::Object {

        /// [SessionCallback](https://developer.android.com/reference/android/media/MediaSession2.SessionCallback.html#SessionCallback())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MediaSession2_SessionCallback>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$SessionCallback", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$SessionCallback\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onConnect](https://developer.android.com/reference/android/media/MediaSession2.SessionCallback.html#onConnect(android.media.MediaSession2,%20android.media.MediaSession2.ControllerInfo))
        ///
        /// Required features: "android-media-MediaSession2", "android-media-MediaSession2_ControllerInfo", "android-media-Session2CommandGroup"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2", feature = "android-media-MediaSession2_ControllerInfo", feature = "android-media-Session2CommandGroup")))]
        pub fn onConnect<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2_ControllerInfo>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::Session2CommandGroup>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$SessionCallback", java.flags == PUBLIC, .name == "onConnect", .descriptor == "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;)Landroid/media/Session2CommandGroup;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$SessionCallback\0", "onConnect\0", "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;)Landroid/media/Session2CommandGroup;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onPostConnect](https://developer.android.com/reference/android/media/MediaSession2.SessionCallback.html#onPostConnect(android.media.MediaSession2,%20android.media.MediaSession2.ControllerInfo))
        ///
        /// Required features: "android-media-MediaSession2", "android-media-MediaSession2_ControllerInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2", feature = "android-media-MediaSession2_ControllerInfo")))]
        pub fn onPostConnect<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2_ControllerInfo>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$SessionCallback", java.flags == PUBLIC, .name == "onPostConnect", .descriptor == "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$SessionCallback\0", "onPostConnect\0", "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDisconnected](https://developer.android.com/reference/android/media/MediaSession2.SessionCallback.html#onDisconnected(android.media.MediaSession2,%20android.media.MediaSession2.ControllerInfo))
        ///
        /// Required features: "android-media-MediaSession2", "android-media-MediaSession2_ControllerInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2", feature = "android-media-MediaSession2_ControllerInfo")))]
        pub fn onDisconnected<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2_ControllerInfo>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$SessionCallback", java.flags == PUBLIC, .name == "onDisconnected", .descriptor == "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$SessionCallback\0", "onDisconnected\0", "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSessionCommand](https://developer.android.com/reference/android/media/MediaSession2.SessionCallback.html#onSessionCommand(android.media.MediaSession2,%20android.media.MediaSession2.ControllerInfo,%20android.media.Session2Command,%20android.os.Bundle))
        ///
        /// Required features: "android-media-MediaSession2", "android-media-MediaSession2_ControllerInfo", "android-media-Session2Command", "android-media-Session2Command_Result", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2", feature = "android-media-MediaSession2_ControllerInfo", feature = "android-media-Session2Command", feature = "android-media-Session2Command_Result", feature = "android-os-Bundle")))]
        pub fn onSessionCommand<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2_ControllerInfo>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::Session2Command>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::Session2Command_Result>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$SessionCallback", java.flags == PUBLIC, .name == "onSessionCommand", .descriptor == "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;Landroid/media/Session2Command;Landroid/os/Bundle;)Landroid/media/Session2Command$Result;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$SessionCallback\0", "onSessionCommand\0", "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;Landroid/media/Session2Command;Landroid/os/Bundle;)Landroid/media/Session2Command$Result;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCommandResult](https://developer.android.com/reference/android/media/MediaSession2.SessionCallback.html#onCommandResult(android.media.MediaSession2,%20android.media.MediaSession2.ControllerInfo,%20java.lang.Object,%20android.media.Session2Command,%20android.media.Session2Command.Result))
        ///
        /// Required features: "android-media-MediaSession2", "android-media-MediaSession2_ControllerInfo", "android-media-Session2Command", "android-media-Session2Command_Result", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2", feature = "android-media-MediaSession2_ControllerInfo", feature = "android-media-Session2Command", feature = "android-media-Session2Command_Result", feature = "java-lang-Object")))]
        pub fn onCommandResult<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2_ControllerInfo>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::Session2Command>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::Session2Command_Result>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$SessionCallback", java.flags == PUBLIC, .name == "onCommandResult", .descriptor == "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;Ljava/lang/Object;Landroid/media/Session2Command;Landroid/media/Session2Command$Result;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$SessionCallback\0", "onCommandResult\0", "(Landroid/media/MediaSession2;Landroid/media/MediaSession2$ControllerInfo;Ljava/lang/Object;Landroid/media/Session2Command;Landroid/media/Session2Command$Result;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
