// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MediaSyncEvent"))]
__jni_bindgen! {
    /// public class [MediaSyncEvent](https://developer.android.com/reference/android/media/MediaSyncEvent.html)
    ///
    /// Required feature: android-media-MediaSyncEvent
    public class MediaSyncEvent ("android/media/MediaSyncEvent") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [MediaSyncEvent](https://developer.android.com/reference/android/media/MediaSyncEvent.html#MediaSyncEvent(int))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MediaSyncEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/MediaSyncEvent", java.flags == (empty), .name == "<init>", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSyncEvent\0", "<init>\0", "(I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [createEvent](https://developer.android.com/reference/android/media/MediaSyncEvent.html#createEvent(int))
        ///
        /// Required features: "android-media-MediaSyncEvent"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSyncEvent")))]
        pub fn createEvent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSyncEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSyncEvent", java.flags == PUBLIC | STATIC, .name == "createEvent", .descriptor == "(I)Landroid/media/MediaSyncEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/media/MediaSyncEvent\0", "createEvent\0", "(I)Landroid/media/MediaSyncEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAudioSessionId](https://developer.android.com/reference/android/media/MediaSyncEvent.html#setAudioSessionId(int))
        ///
        /// Required features: "android-media-MediaSyncEvent"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSyncEvent")))]
        pub fn setAudioSessionId<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSyncEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSyncEvent", java.flags == PUBLIC, .name == "setAudioSessionId", .descriptor == "(I)Landroid/media/MediaSyncEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSyncEvent\0", "setAudioSessionId\0", "(I)Landroid/media/MediaSyncEvent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getType](https://developer.android.com/reference/android/media/MediaSyncEvent.html#getType())
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSyncEvent", java.flags == PUBLIC, .name == "getType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSyncEvent\0", "getType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAudioSessionId](https://developer.android.com/reference/android/media/MediaSyncEvent.html#getAudioSessionId())
        pub fn getAudioSessionId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSyncEvent", java.flags == PUBLIC, .name == "getAudioSessionId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSyncEvent\0", "getAudioSessionId\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [SYNC_EVENT_NONE](https://developer.android.com/reference/android/media/MediaSyncEvent.html#SYNC_EVENT_NONE)
        pub const SYNC_EVENT_NONE : i32 = 0;

        /// public static final [SYNC_EVENT_PRESENTATION_COMPLETE](https://developer.android.com/reference/android/media/MediaSyncEvent.html#SYNC_EVENT_PRESENTATION_COMPLETE)
        pub const SYNC_EVENT_PRESENTATION_COMPLETE : i32 = 1;
    }
}
