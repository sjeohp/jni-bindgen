// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-RemoteController"))]
__jni_bindgen! {
    /// public final class [RemoteController](https://developer.android.com/reference/android/media/RemoteController.html)
    ///
    /// Required feature: android-media-RemoteController
    #[deprecated] public final class RemoteController ("android/media/RemoteController") extends crate::java::lang::Object {

        /// [RemoteController](https://developer.android.com/reference/android/media/RemoteController.html#RemoteController(android.content.Context,%20android.media.RemoteController.OnClientUpdateListener))
        ///
        /// Required features: "android-content-Context", "android-media-RemoteController_OnClientUpdateListener"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-media-RemoteController_OnClientUpdateListener")))]
        #[deprecated] pub fn new_Context_OnClientUpdateListener<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::RemoteController_OnClientUpdateListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::RemoteController>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/media/RemoteController$OnClientUpdateListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "<init>\0", "(Landroid/content/Context;Landroid/media/RemoteController$OnClientUpdateListener;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [RemoteController](https://developer.android.com/reference/android/media/RemoteController.html#RemoteController(android.content.Context,%20android.media.RemoteController.OnClientUpdateListener,%20android.os.Looper))
        ///
        /// Required features: "android-content-Context", "android-media-RemoteController_OnClientUpdateListener", "android-os-Looper"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-media-RemoteController_OnClientUpdateListener", feature = "android-os-Looper")))]
        #[deprecated] pub fn new_Context_OnClientUpdateListener_Looper<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::RemoteController_OnClientUpdateListener>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Looper>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::RemoteController>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/media/RemoteController$OnClientUpdateListener;Landroid/os/Looper;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "<init>\0", "(Landroid/content/Context;Landroid/media/RemoteController$OnClientUpdateListener;Landroid/os/Looper;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEstimatedMediaPosition](https://developer.android.com/reference/android/media/RemoteController.html#getEstimatedMediaPosition())
        #[deprecated] pub fn getEstimatedMediaPosition<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "getEstimatedMediaPosition", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "getEstimatedMediaPosition\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [sendMediaKeyEvent](https://developer.android.com/reference/android/media/RemoteController.html#sendMediaKeyEvent(android.view.KeyEvent))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        #[deprecated] pub fn sendMediaKeyEvent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "sendMediaKeyEvent", .descriptor == "(Landroid/view/KeyEvent;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "sendMediaKeyEvent\0", "(Landroid/view/KeyEvent;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [seekTo](https://developer.android.com/reference/android/media/RemoteController.html#seekTo(long))
        #[deprecated] pub fn seekTo<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "seekTo", .descriptor == "(J)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "seekTo\0", "(J)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setArtworkConfiguration](https://developer.android.com/reference/android/media/RemoteController.html#setArtworkConfiguration(int,%20int))
        #[deprecated] pub fn setArtworkConfiguration<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "setArtworkConfiguration", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "setArtworkConfiguration\0", "(II)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearArtworkConfiguration](https://developer.android.com/reference/android/media/RemoteController.html#clearArtworkConfiguration())
        #[deprecated] pub fn clearArtworkConfiguration<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "clearArtworkConfiguration", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "clearArtworkConfiguration\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSynchronizationMode](https://developer.android.com/reference/android/media/RemoteController.html#setSynchronizationMode(int))
        #[deprecated] pub fn setSynchronizationMode<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "setSynchronizationMode", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "setSynchronizationMode\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [editMetadata](https://developer.android.com/reference/android/media/RemoteController.html#editMetadata())
        ///
        /// Required features: "android-media-RemoteController_MetadataEditor"
        #[cfg(any(feature = "all", all(feature = "android-media-RemoteController_MetadataEditor")))]
        #[deprecated] pub fn editMetadata<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::RemoteController_MetadataEditor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/RemoteController", java.flags == PUBLIC, .name == "editMetadata", .descriptor == "()Landroid/media/RemoteController$MetadataEditor;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/RemoteController\0", "editMetadata\0", "()Landroid/media/RemoteController$MetadataEditor;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [POSITION_SYNCHRONIZATION_CHECK](https://developer.android.com/reference/android/media/RemoteController.html#POSITION_SYNCHRONIZATION_CHECK)
        #[deprecated] pub const POSITION_SYNCHRONIZATION_CHECK : i32 = 1;

        /// public static final [POSITION_SYNCHRONIZATION_NONE](https://developer.android.com/reference/android/media/RemoteController.html#POSITION_SYNCHRONIZATION_NONE)
        #[deprecated] pub const POSITION_SYNCHRONIZATION_NONE : i32 = 0;
    }
}
