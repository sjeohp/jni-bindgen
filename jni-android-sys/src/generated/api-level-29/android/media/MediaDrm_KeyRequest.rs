// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MediaDrm_KeyRequest"))]
__jni_bindgen! {
    /// public final class [MediaDrm.KeyRequest](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html)
    ///
    /// Required feature: android-media-MediaDrm_KeyRequest
    public final class MediaDrm_KeyRequest ("android/media/MediaDrm$KeyRequest") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [KeyRequest](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#KeyRequest())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MediaDrm_KeyRequest>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/MediaDrm$KeyRequest", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaDrm$KeyRequest\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getData](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#getData())
        pub fn getData<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaDrm$KeyRequest", java.flags == PUBLIC, .name == "getData", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaDrm$KeyRequest\0", "getData\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultUrl](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#getDefaultUrl())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDefaultUrl<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaDrm$KeyRequest", java.flags == PUBLIC, .name == "getDefaultUrl", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaDrm$KeyRequest\0", "getDefaultUrl\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRequestType](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#getRequestType())
        pub fn getRequestType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaDrm$KeyRequest", java.flags == PUBLIC, .name == "getRequestType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaDrm$KeyRequest\0", "getRequestType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [REQUEST_TYPE_INITIAL](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#REQUEST_TYPE_INITIAL)
        pub const REQUEST_TYPE_INITIAL : i32 = 0;

        /// public static final [REQUEST_TYPE_NONE](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#REQUEST_TYPE_NONE)
        pub const REQUEST_TYPE_NONE : i32 = 3;

        /// public static final [REQUEST_TYPE_RELEASE](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#REQUEST_TYPE_RELEASE)
        pub const REQUEST_TYPE_RELEASE : i32 = 2;

        /// public static final [REQUEST_TYPE_RENEWAL](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#REQUEST_TYPE_RENEWAL)
        pub const REQUEST_TYPE_RENEWAL : i32 = 1;

        /// public static final [REQUEST_TYPE_UPDATE](https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html#REQUEST_TYPE_UPDATE)
        pub const REQUEST_TYPE_UPDATE : i32 = 4;
    }
}
