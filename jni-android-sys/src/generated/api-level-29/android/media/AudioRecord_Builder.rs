// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-AudioRecord_Builder"))]
__jni_bindgen! {
    /// public class [AudioRecord.Builder](https://developer.android.com/reference/android/media/AudioRecord.Builder.html)
    ///
    /// Required feature: android-media-AudioRecord_Builder
    public class AudioRecord_Builder ("android/media/AudioRecord$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/media/AudioRecord.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::AudioRecord_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRecord$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRecord$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAudioSource](https://developer.android.com/reference/android/media/AudioRecord.Builder.html#setAudioSource(int))
        ///
        /// Required features: "android-media-AudioRecord_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioRecord_Builder")))]
        pub fn setAudioSource<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioRecord_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRecord$Builder", java.flags == PUBLIC, .name == "setAudioSource", .descriptor == "(I)Landroid/media/AudioRecord$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRecord$Builder\0", "setAudioSource\0", "(I)Landroid/media/AudioRecord$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAudioFormat](https://developer.android.com/reference/android/media/AudioRecord.Builder.html#setAudioFormat(android.media.AudioFormat))
        ///
        /// Required features: "android-media-AudioFormat", "android-media-AudioRecord_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioFormat", feature = "android-media-AudioRecord_Builder")))]
        pub fn setAudioFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::AudioFormat>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioRecord_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRecord$Builder", java.flags == PUBLIC, .name == "setAudioFormat", .descriptor == "(Landroid/media/AudioFormat;)Landroid/media/AudioRecord$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRecord$Builder\0", "setAudioFormat\0", "(Landroid/media/AudioFormat;)Landroid/media/AudioRecord$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBufferSizeInBytes](https://developer.android.com/reference/android/media/AudioRecord.Builder.html#setBufferSizeInBytes(int))
        ///
        /// Required features: "android-media-AudioRecord_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioRecord_Builder")))]
        pub fn setBufferSizeInBytes<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioRecord_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRecord$Builder", java.flags == PUBLIC, .name == "setBufferSizeInBytes", .descriptor == "(I)Landroid/media/AudioRecord$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRecord$Builder\0", "setBufferSizeInBytes\0", "(I)Landroid/media/AudioRecord$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAudioPlaybackCaptureConfig](https://developer.android.com/reference/android/media/AudioRecord.Builder.html#setAudioPlaybackCaptureConfig(android.media.AudioPlaybackCaptureConfiguration))
        ///
        /// Required features: "android-media-AudioPlaybackCaptureConfiguration", "android-media-AudioRecord_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioPlaybackCaptureConfiguration", feature = "android-media-AudioRecord_Builder")))]
        pub fn setAudioPlaybackCaptureConfig<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::AudioPlaybackCaptureConfiguration>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioRecord_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRecord$Builder", java.flags == PUBLIC, .name == "setAudioPlaybackCaptureConfig", .descriptor == "(Landroid/media/AudioPlaybackCaptureConfiguration;)Landroid/media/AudioRecord$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRecord$Builder\0", "setAudioPlaybackCaptureConfig\0", "(Landroid/media/AudioPlaybackCaptureConfiguration;)Landroid/media/AudioRecord$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/media/AudioRecord.Builder.html#build())
        ///
        /// Required features: "android-media-AudioRecord"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioRecord")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioRecord>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRecord$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/media/AudioRecord;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRecord$Builder\0", "build\0", "()Landroid/media/AudioRecord;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
