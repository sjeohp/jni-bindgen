// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-tv-TvInputManager"))]
__jni_bindgen! {
    /// public final class [TvInputManager](https://developer.android.com/reference/android/media/tv/TvInputManager.html)
    ///
    /// Required feature: android-media-tv-TvInputManager
    public final class TvInputManager ("android/media/tv/TvInputManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [TvInputManager](https://developer.android.com/reference/android/media/tv/TvInputManager.html#TvInputManager())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::tv::TvInputManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/tv/TvInputManager", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getTvInputList](https://developer.android.com/reference/android/media/tv/TvInputManager.html#getTvInputList())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getTvInputList<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "getTvInputList", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "getTvInputList\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTvInputInfo](https://developer.android.com/reference/android/media/tv/TvInputManager.html#getTvInputInfo(java.lang.String))
        ///
        /// Required features: "android-media-tv-TvInputInfo", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-media-tv-TvInputInfo", feature = "java-lang-String")))]
        pub fn getTvInputInfo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::tv::TvInputInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "getTvInputInfo", .descriptor == "(Ljava/lang/String;)Landroid/media/tv/TvInputInfo;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "getTvInputInfo\0", "(Ljava/lang/String;)Landroid/media/tv/TvInputInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [updateTvInputInfo](https://developer.android.com/reference/android/media/tv/TvInputManager.html#updateTvInputInfo(android.media.tv.TvInputInfo))
        ///
        /// Required features: "android-media-tv-TvInputInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-tv-TvInputInfo")))]
        pub fn updateTvInputInfo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::tv::TvInputInfo>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "updateTvInputInfo", .descriptor == "(Landroid/media/tv/TvInputInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "updateTvInputInfo\0", "(Landroid/media/tv/TvInputInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInputState](https://developer.android.com/reference/android/media/tv/TvInputManager.html#getInputState(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getInputState<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "getInputState", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "getInputState\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [registerCallback](https://developer.android.com/reference/android/media/tv/TvInputManager.html#registerCallback(android.media.tv.TvInputManager.TvInputCallback,%20android.os.Handler))
        ///
        /// Required features: "android-media-tv-TvInputManager_TvInputCallback", "android-os-Handler"
        #[cfg(any(feature = "all", all(feature = "android-media-tv-TvInputManager_TvInputCallback", feature = "android-os-Handler")))]
        pub fn registerCallback<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::tv::TvInputManager_TvInputCallback>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "registerCallback", .descriptor == "(Landroid/media/tv/TvInputManager$TvInputCallback;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "registerCallback\0", "(Landroid/media/tv/TvInputManager$TvInputCallback;Landroid/os/Handler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unregisterCallback](https://developer.android.com/reference/android/media/tv/TvInputManager.html#unregisterCallback(android.media.tv.TvInputManager.TvInputCallback))
        ///
        /// Required features: "android-media-tv-TvInputManager_TvInputCallback"
        #[cfg(any(feature = "all", all(feature = "android-media-tv-TvInputManager_TvInputCallback")))]
        pub fn unregisterCallback<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::tv::TvInputManager_TvInputCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "unregisterCallback", .descriptor == "(Landroid/media/tv/TvInputManager$TvInputCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "unregisterCallback\0", "(Landroid/media/tv/TvInputManager$TvInputCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isParentalControlsEnabled](https://developer.android.com/reference/android/media/tv/TvInputManager.html#isParentalControlsEnabled())
        pub fn isParentalControlsEnabled<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "isParentalControlsEnabled", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "isParentalControlsEnabled\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isRatingBlocked](https://developer.android.com/reference/android/media/tv/TvInputManager.html#isRatingBlocked(android.media.tv.TvContentRating))
        ///
        /// Required features: "android-media-tv-TvContentRating"
        #[cfg(any(feature = "all", all(feature = "android-media-tv-TvContentRating")))]
        pub fn isRatingBlocked<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::tv::TvContentRating>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "isRatingBlocked", .descriptor == "(Landroid/media/tv/TvContentRating;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "isRatingBlocked\0", "(Landroid/media/tv/TvContentRating;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBlockedRatings](https://developer.android.com/reference/android/media/tv/TvInputManager.html#getBlockedRatings())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getBlockedRatings<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager", java.flags == PUBLIC, .name == "getBlockedRatings", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager\0", "getBlockedRatings\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_BLOCKED_RATINGS_CHANGED](https://developer.android.com/reference/android/media/tv/TvInputManager.html#ACTION_BLOCKED_RATINGS_CHANGED)
        pub const ACTION_BLOCKED_RATINGS_CHANGED : &'static str = "android.media.tv.action.BLOCKED_RATINGS_CHANGED";

        /// public static final [ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED](https://developer.android.com/reference/android/media/tv/TvInputManager.html#ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED)
        pub const ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED : &'static str = "android.media.tv.action.PARENTAL_CONTROLS_ENABLED_CHANGED";

        /// public static final [ACTION_QUERY_CONTENT_RATING_SYSTEMS](https://developer.android.com/reference/android/media/tv/TvInputManager.html#ACTION_QUERY_CONTENT_RATING_SYSTEMS)
        pub const ACTION_QUERY_CONTENT_RATING_SYSTEMS : &'static str = "android.media.tv.action.QUERY_CONTENT_RATING_SYSTEMS";

        /// public static final [ACTION_SETUP_INPUTS](https://developer.android.com/reference/android/media/tv/TvInputManager.html#ACTION_SETUP_INPUTS)
        pub const ACTION_SETUP_INPUTS : &'static str = "android.media.tv.action.SETUP_INPUTS";

        /// public static final [ACTION_VIEW_RECORDING_SCHEDULES](https://developer.android.com/reference/android/media/tv/TvInputManager.html#ACTION_VIEW_RECORDING_SCHEDULES)
        pub const ACTION_VIEW_RECORDING_SCHEDULES : &'static str = "android.media.tv.action.VIEW_RECORDING_SCHEDULES";

        /// public static final [INPUT_STATE_CONNECTED](https://developer.android.com/reference/android/media/tv/TvInputManager.html#INPUT_STATE_CONNECTED)
        pub const INPUT_STATE_CONNECTED : i32 = 0;

        /// public static final [INPUT_STATE_CONNECTED_STANDBY](https://developer.android.com/reference/android/media/tv/TvInputManager.html#INPUT_STATE_CONNECTED_STANDBY)
        pub const INPUT_STATE_CONNECTED_STANDBY : i32 = 1;

        /// public static final [INPUT_STATE_DISCONNECTED](https://developer.android.com/reference/android/media/tv/TvInputManager.html#INPUT_STATE_DISCONNECTED)
        pub const INPUT_STATE_DISCONNECTED : i32 = 2;

        /// public static final [META_DATA_CONTENT_RATING_SYSTEMS](https://developer.android.com/reference/android/media/tv/TvInputManager.html#META_DATA_CONTENT_RATING_SYSTEMS)
        pub const META_DATA_CONTENT_RATING_SYSTEMS : &'static str = "android.media.tv.metadata.CONTENT_RATING_SYSTEMS";

        /// public static final [RECORDING_ERROR_INSUFFICIENT_SPACE](https://developer.android.com/reference/android/media/tv/TvInputManager.html#RECORDING_ERROR_INSUFFICIENT_SPACE)
        pub const RECORDING_ERROR_INSUFFICIENT_SPACE : i32 = 1;

        /// public static final [RECORDING_ERROR_RESOURCE_BUSY](https://developer.android.com/reference/android/media/tv/TvInputManager.html#RECORDING_ERROR_RESOURCE_BUSY)
        pub const RECORDING_ERROR_RESOURCE_BUSY : i32 = 2;

        /// public static final [RECORDING_ERROR_UNKNOWN](https://developer.android.com/reference/android/media/tv/TvInputManager.html#RECORDING_ERROR_UNKNOWN)
        pub const RECORDING_ERROR_UNKNOWN : i32 = 0;

        /// public static final [TIME_SHIFT_INVALID_TIME](https://developer.android.com/reference/android/media/tv/TvInputManager.html#TIME_SHIFT_INVALID_TIME)
        pub const TIME_SHIFT_INVALID_TIME : i64 = -9223372036854775808i64;

        /// public static final [TIME_SHIFT_STATUS_AVAILABLE](https://developer.android.com/reference/android/media/tv/TvInputManager.html#TIME_SHIFT_STATUS_AVAILABLE)
        pub const TIME_SHIFT_STATUS_AVAILABLE : i32 = 3;

        /// public static final [TIME_SHIFT_STATUS_UNAVAILABLE](https://developer.android.com/reference/android/media/tv/TvInputManager.html#TIME_SHIFT_STATUS_UNAVAILABLE)
        pub const TIME_SHIFT_STATUS_UNAVAILABLE : i32 = 2;

        /// public static final [TIME_SHIFT_STATUS_UNKNOWN](https://developer.android.com/reference/android/media/tv/TvInputManager.html#TIME_SHIFT_STATUS_UNKNOWN)
        pub const TIME_SHIFT_STATUS_UNKNOWN : i32 = 0;

        /// public static final [TIME_SHIFT_STATUS_UNSUPPORTED](https://developer.android.com/reference/android/media/tv/TvInputManager.html#TIME_SHIFT_STATUS_UNSUPPORTED)
        pub const TIME_SHIFT_STATUS_UNSUPPORTED : i32 = 1;

        /// public static final [VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY](https://developer.android.com/reference/android/media/tv/TvInputManager.html#VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY)
        pub const VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY : i32 = 4;

        /// public static final [VIDEO_UNAVAILABLE_REASON_BUFFERING](https://developer.android.com/reference/android/media/tv/TvInputManager.html#VIDEO_UNAVAILABLE_REASON_BUFFERING)
        pub const VIDEO_UNAVAILABLE_REASON_BUFFERING : i32 = 3;

        /// public static final [VIDEO_UNAVAILABLE_REASON_TUNING](https://developer.android.com/reference/android/media/tv/TvInputManager.html#VIDEO_UNAVAILABLE_REASON_TUNING)
        pub const VIDEO_UNAVAILABLE_REASON_TUNING : i32 = 1;

        /// public static final [VIDEO_UNAVAILABLE_REASON_UNKNOWN](https://developer.android.com/reference/android/media/tv/TvInputManager.html#VIDEO_UNAVAILABLE_REASON_UNKNOWN)
        pub const VIDEO_UNAVAILABLE_REASON_UNKNOWN : i32 = 0;

        /// public static final [VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL](https://developer.android.com/reference/android/media/tv/TvInputManager.html#VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL)
        pub const VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL : i32 = 2;
    }
}
