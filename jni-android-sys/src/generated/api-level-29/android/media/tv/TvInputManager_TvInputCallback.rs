// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-tv-TvInputManager_TvInputCallback"))]
__jni_bindgen! {
    /// public class [TvInputManager.TvInputCallback](https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html)
    ///
    /// Required feature: android-media-tv-TvInputManager_TvInputCallback
    public class TvInputManager_TvInputCallback ("android/media/tv/TvInputManager$TvInputCallback") extends crate::java::lang::Object {

        /// [TvInputCallback](https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html#TvInputCallback())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::tv::TvInputManager_TvInputCallback>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager$TvInputCallback", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager$TvInputCallback\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onInputStateChanged](https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html#onInputStateChanged(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn onInputStateChanged<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager$TvInputCallback", java.flags == PUBLIC, .name == "onInputStateChanged", .descriptor == "(Ljava/lang/String;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager$TvInputCallback\0", "onInputStateChanged\0", "(Ljava/lang/String;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onInputAdded](https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html#onInputAdded(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn onInputAdded<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager$TvInputCallback", java.flags == PUBLIC, .name == "onInputAdded", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager$TvInputCallback\0", "onInputAdded\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onInputRemoved](https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html#onInputRemoved(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn onInputRemoved<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager$TvInputCallback", java.flags == PUBLIC, .name == "onInputRemoved", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager$TvInputCallback\0", "onInputRemoved\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onInputUpdated](https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html#onInputUpdated(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn onInputUpdated<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager$TvInputCallback", java.flags == PUBLIC, .name == "onInputUpdated", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager$TvInputCallback\0", "onInputUpdated\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onTvInputInfoUpdated](https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html#onTvInputInfoUpdated(android.media.tv.TvInputInfo))
        ///
        /// Required features: "android-media-tv-TvInputInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-tv-TvInputInfo")))]
        pub fn onTvInputInfoUpdated<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::tv::TvInputInfo>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputManager$TvInputCallback", java.flags == PUBLIC, .name == "onTvInputInfoUpdated", .descriptor == "(Landroid/media/tv/TvInputInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputManager$TvInputCallback\0", "onTvInputInfoUpdated\0", "(Landroid/media/tv/TvInputInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
