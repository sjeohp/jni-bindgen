// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-tv-TvInputService"))]
__jni_bindgen! {
    /// public class [TvInputService](https://developer.android.com/reference/android/media/tv/TvInputService.html)
    ///
    /// Required feature: android-media-tv-TvInputService
    public class TvInputService ("android/media/tv/TvInputService") extends crate::android::app::Service {

        /// [TvInputService](https://developer.android.com/reference/android/media/tv/TvInputService.html#TvInputService())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::tv::TvInputService>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputService", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputService\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onBind](https://developer.android.com/reference/android/media/tv/TvInputService.html#onBind(android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-os-IBinder"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-IBinder")))]
        pub fn onBind<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::IBinder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputService", java.flags == PUBLIC | FINAL, .name == "onBind", .descriptor == "(Landroid/content/Intent;)Landroid/os/IBinder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputService\0", "onBind\0", "(Landroid/content/Intent;)Landroid/os/IBinder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCreateSession](https://developer.android.com/reference/android/media/tv/TvInputService.html#onCreateSession(java.lang.String))
        ///
        /// Required features: "android-media-tv-TvInputService_Session", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-media-tv-TvInputService_Session", feature = "java-lang-String")))]
        pub fn onCreateSession<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::tv::TvInputService_Session>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputService", java.flags == PUBLIC | ABSTRACT, .name == "onCreateSession", .descriptor == "(Ljava/lang/String;)Landroid/media/tv/TvInputService$Session;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputService\0", "onCreateSession\0", "(Ljava/lang/String;)Landroid/media/tv/TvInputService$Session;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCreateRecordingSession](https://developer.android.com/reference/android/media/tv/TvInputService.html#onCreateRecordingSession(java.lang.String))
        ///
        /// Required features: "android-media-tv-TvInputService_RecordingSession", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-media-tv-TvInputService_RecordingSession", feature = "java-lang-String")))]
        pub fn onCreateRecordingSession<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::tv::TvInputService_RecordingSession>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/tv/TvInputService", java.flags == PUBLIC, .name == "onCreateRecordingSession", .descriptor == "(Ljava/lang/String;)Landroid/media/tv/TvInputService$RecordingSession;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/tv/TvInputService\0", "onCreateRecordingSession\0", "(Ljava/lang/String;)Landroid/media/tv/TvInputService$RecordingSession;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [SERVICE_INTERFACE](https://developer.android.com/reference/android/media/tv/TvInputService.html#SERVICE_INTERFACE)
        pub const SERVICE_INTERFACE : &'static str = "android.media.tv.TvInputService";

        /// public static final [SERVICE_META_DATA](https://developer.android.com/reference/android/media/tv/TvInputService.html#SERVICE_META_DATA)
        pub const SERVICE_META_DATA : &'static str = "android.media.tv.input";
    }
}
