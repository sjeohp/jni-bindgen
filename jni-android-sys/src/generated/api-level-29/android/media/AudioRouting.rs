// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-AudioRouting"))]
__jni_bindgen! {
    /// public interface [AudioRouting](https://developer.android.com/reference/android/media/AudioRouting.html)
    ///
    /// Required feature: android-media-AudioRouting
    public interface AudioRouting ("android/media/AudioRouting") extends crate::java::lang::Object {

        /// [setPreferredDevice](https://developer.android.com/reference/android/media/AudioRouting.html#setPreferredDevice(android.media.AudioDeviceInfo))
        ///
        /// Required features: "android-media-AudioDeviceInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioDeviceInfo")))]
        pub fn setPreferredDevice<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::AudioDeviceInfo>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRouting", java.flags == PUBLIC | ABSTRACT, .name == "setPreferredDevice", .descriptor == "(Landroid/media/AudioDeviceInfo;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRouting\0", "setPreferredDevice\0", "(Landroid/media/AudioDeviceInfo;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPreferredDevice](https://developer.android.com/reference/android/media/AudioRouting.html#getPreferredDevice())
        ///
        /// Required features: "android-media-AudioDeviceInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioDeviceInfo")))]
        pub fn getPreferredDevice<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioDeviceInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRouting", java.flags == PUBLIC | ABSTRACT, .name == "getPreferredDevice", .descriptor == "()Landroid/media/AudioDeviceInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRouting\0", "getPreferredDevice\0", "()Landroid/media/AudioDeviceInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRoutedDevice](https://developer.android.com/reference/android/media/AudioRouting.html#getRoutedDevice())
        ///
        /// Required features: "android-media-AudioDeviceInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioDeviceInfo")))]
        pub fn getRoutedDevice<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioDeviceInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRouting", java.flags == PUBLIC | ABSTRACT, .name == "getRoutedDevice", .descriptor == "()Landroid/media/AudioDeviceInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRouting\0", "getRoutedDevice\0", "()Landroid/media/AudioDeviceInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addOnRoutingChangedListener](https://developer.android.com/reference/android/media/AudioRouting.html#addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener,%20android.os.Handler))
        ///
        /// Required features: "android-media-AudioRouting_OnRoutingChangedListener", "android-os-Handler"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioRouting_OnRoutingChangedListener", feature = "android-os-Handler")))]
        pub fn addOnRoutingChangedListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::AudioRouting_OnRoutingChangedListener>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRouting", java.flags == PUBLIC | ABSTRACT, .name == "addOnRoutingChangedListener", .descriptor == "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRouting\0", "addOnRoutingChangedListener\0", "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeOnRoutingChangedListener](https://developer.android.com/reference/android/media/AudioRouting.html#removeOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener))
        ///
        /// Required features: "android-media-AudioRouting_OnRoutingChangedListener"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioRouting_OnRoutingChangedListener")))]
        pub fn removeOnRoutingChangedListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::AudioRouting_OnRoutingChangedListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioRouting", java.flags == PUBLIC | ABSTRACT, .name == "removeOnRoutingChangedListener", .descriptor == "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioRouting\0", "removeOnRoutingChangedListener\0", "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
