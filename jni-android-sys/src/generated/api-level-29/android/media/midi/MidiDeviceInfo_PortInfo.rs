// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-midi-MidiDeviceInfo_PortInfo"))]
__jni_bindgen! {
    /// public final class [MidiDeviceInfo.PortInfo](https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html)
    ///
    /// Required feature: android-media-midi-MidiDeviceInfo_PortInfo
    public final class MidiDeviceInfo_PortInfo ("android/media/midi/MidiDeviceInfo$PortInfo") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [PortInfo](https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html#PortInfo(int,%20int,%20java.lang.String))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::midi::MidiDeviceInfo_PortInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/midi/MidiDeviceInfo$PortInfo", java.flags == (empty), .name == "<init>", .descriptor == "(IILjava/lang/String;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/midi/MidiDeviceInfo$PortInfo\0", "<init>\0", "(IILjava/lang/String;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getType](https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html#getType())
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/midi/MidiDeviceInfo$PortInfo", java.flags == PUBLIC, .name == "getType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/midi/MidiDeviceInfo$PortInfo\0", "getType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPortNumber](https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html#getPortNumber())
        pub fn getPortNumber<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/midi/MidiDeviceInfo$PortInfo", java.flags == PUBLIC, .name == "getPortNumber", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/midi/MidiDeviceInfo$PortInfo\0", "getPortNumber\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getName](https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html#getName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/midi/MidiDeviceInfo$PortInfo", java.flags == PUBLIC, .name == "getName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/midi/MidiDeviceInfo$PortInfo\0", "getName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [TYPE_INPUT](https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html#TYPE_INPUT)
        pub const TYPE_INPUT : i32 = 1;

        /// public static final [TYPE_OUTPUT](https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html#TYPE_OUTPUT)
        pub const TYPE_OUTPUT : i32 = 2;
    }
}
