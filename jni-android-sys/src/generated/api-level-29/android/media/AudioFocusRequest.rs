// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-AudioFocusRequest"))]
__jni_bindgen! {
    /// public final class [AudioFocusRequest](https://developer.android.com/reference/android/media/AudioFocusRequest.html)
    ///
    /// Required feature: android-media-AudioFocusRequest
    public final class AudioFocusRequest ("android/media/AudioFocusRequest") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [AudioFocusRequest](https://developer.android.com/reference/android/media/AudioFocusRequest.html#AudioFocusRequest(android.media.AudioManager.OnAudioFocusChangeListener,%20android.os.Handler,%20android.media.AudioAttributes,%20int,%20int))
        // ///
        // /// Required features: "android-media-AudioAttributes", "android-media-AudioManager_OnAudioFocusChangeListener", "android-os-Handler"
        // #[cfg(any(feature = "all", all(feature = "android-media-AudioAttributes", feature = "android-media-AudioManager_OnAudioFocusChangeListener", feature = "android-os-Handler")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::AudioManager_OnAudioFocusChangeListener>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::AudioAttributes>>, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::AudioFocusRequest>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/AudioFocusRequest", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/media/AudioManager$OnAudioFocusChangeListener;Landroid/os/Handler;Landroid/media/AudioAttributes;II)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioFocusRequest\0", "<init>\0", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;Landroid/os/Handler;Landroid/media/AudioAttributes;II)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getAudioAttributes](https://developer.android.com/reference/android/media/AudioFocusRequest.html#getAudioAttributes())
        ///
        /// Required features: "android-media-AudioAttributes"
        #[cfg(any(feature = "all", all(feature = "android-media-AudioAttributes")))]
        pub fn getAudioAttributes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::AudioAttributes>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioFocusRequest", java.flags == PUBLIC, .name == "getAudioAttributes", .descriptor == "()Landroid/media/AudioAttributes;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioFocusRequest\0", "getAudioAttributes\0", "()Landroid/media/AudioAttributes;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFocusGain](https://developer.android.com/reference/android/media/AudioFocusRequest.html#getFocusGain())
        pub fn getFocusGain<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioFocusRequest", java.flags == PUBLIC, .name == "getFocusGain", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioFocusRequest\0", "getFocusGain\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [willPauseWhenDucked](https://developer.android.com/reference/android/media/AudioFocusRequest.html#willPauseWhenDucked())
        pub fn willPauseWhenDucked<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioFocusRequest", java.flags == PUBLIC, .name == "willPauseWhenDucked", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioFocusRequest\0", "willPauseWhenDucked\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [acceptsDelayedFocusGain](https://developer.android.com/reference/android/media/AudioFocusRequest.html#acceptsDelayedFocusGain())
        pub fn acceptsDelayedFocusGain<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/AudioFocusRequest", java.flags == PUBLIC, .name == "acceptsDelayedFocusGain", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/AudioFocusRequest\0", "acceptsDelayedFocusGain\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
