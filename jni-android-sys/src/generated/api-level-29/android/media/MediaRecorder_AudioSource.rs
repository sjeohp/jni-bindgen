// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MediaRecorder_AudioSource"))]
__jni_bindgen! {
    /// public final class [MediaRecorder.AudioSource](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html)
    ///
    /// Required feature: android-media-MediaRecorder_AudioSource
    public final class MediaRecorder_AudioSource ("android/media/MediaRecorder$AudioSource") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [AudioSource](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#AudioSource(android.media.MediaRecorder))
        // ///
        // /// Required features: "android-media-MediaRecorder"
        // #[cfg(any(feature = "all", all(feature = "android-media-MediaRecorder")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaRecorder>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MediaRecorder_AudioSource>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/MediaRecorder$AudioSource", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/media/MediaRecorder;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaRecorder$AudioSource\0", "<init>\0", "(Landroid/media/MediaRecorder;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [CAMCORDER](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#CAMCORDER)
        pub const CAMCORDER : i32 = 5;

        /// public static final [DEFAULT](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#DEFAULT)
        pub const DEFAULT : i32 = 0;

        /// public static final [MIC](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#MIC)
        pub const MIC : i32 = 1;

        /// public static final [REMOTE_SUBMIX](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#REMOTE_SUBMIX)
        pub const REMOTE_SUBMIX : i32 = 8;

        /// public static final [UNPROCESSED](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#UNPROCESSED)
        pub const UNPROCESSED : i32 = 9;

        /// public static final [VOICE_CALL](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#VOICE_CALL)
        pub const VOICE_CALL : i32 = 4;

        /// public static final [VOICE_COMMUNICATION](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#VOICE_COMMUNICATION)
        pub const VOICE_COMMUNICATION : i32 = 7;

        /// public static final [VOICE_DOWNLINK](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#VOICE_DOWNLINK)
        pub const VOICE_DOWNLINK : i32 = 3;

        /// public static final [VOICE_PERFORMANCE](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#VOICE_PERFORMANCE)
        pub const VOICE_PERFORMANCE : i32 = 10;

        /// public static final [VOICE_RECOGNITION](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#VOICE_RECOGNITION)
        pub const VOICE_RECOGNITION : i32 = 6;

        /// public static final [VOICE_UPLINK](https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html#VOICE_UPLINK)
        pub const VOICE_UPLINK : i32 = 2;

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaRecorder>> { ... }
    }
}
