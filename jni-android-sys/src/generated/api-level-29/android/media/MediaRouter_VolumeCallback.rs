// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MediaRouter_VolumeCallback"))]
__jni_bindgen! {
    /// public class [MediaRouter.VolumeCallback](https://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html)
    ///
    /// Required feature: android-media-MediaRouter_VolumeCallback
    public class MediaRouter_VolumeCallback ("android/media/MediaRouter$VolumeCallback") extends crate::java::lang::Object {

        /// [VolumeCallback](https://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html#VolumeCallback())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MediaRouter_VolumeCallback>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaRouter$VolumeCallback", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaRouter$VolumeCallback\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onVolumeUpdateRequest](https://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html#onVolumeUpdateRequest(android.media.MediaRouter.RouteInfo,%20int))
        ///
        /// Required features: "android-media-MediaRouter_RouteInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaRouter_RouteInfo")))]
        pub fn onVolumeUpdateRequest<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaRouter_RouteInfo>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaRouter$VolumeCallback", java.flags == PUBLIC | ABSTRACT, .name == "onVolumeUpdateRequest", .descriptor == "(Landroid/media/MediaRouter$RouteInfo;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaRouter$VolumeCallback\0", "onVolumeUpdateRequest\0", "(Landroid/media/MediaRouter$RouteInfo;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onVolumeSetRequest](https://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html#onVolumeSetRequest(android.media.MediaRouter.RouteInfo,%20int))
        ///
        /// Required features: "android-media-MediaRouter_RouteInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaRouter_RouteInfo")))]
        pub fn onVolumeSetRequest<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaRouter_RouteInfo>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaRouter$VolumeCallback", java.flags == PUBLIC | ABSTRACT, .name == "onVolumeSetRequest", .descriptor == "(Landroid/media/MediaRouter$RouteInfo;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaRouter$VolumeCallback\0", "onVolumeSetRequest\0", "(Landroid/media/MediaRouter$RouteInfo;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
