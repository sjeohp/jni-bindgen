// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MicrophoneInfo"))]
__jni_bindgen! {
    /// public final class [MicrophoneInfo](https://developer.android.com/reference/android/media/MicrophoneInfo.html)
    ///
    /// Required feature: android-media-MicrophoneInfo
    public final class MicrophoneInfo ("android/media/MicrophoneInfo") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [MicrophoneInfo](https://developer.android.com/reference/android/media/MicrophoneInfo.html#MicrophoneInfo(java.lang.String,%20int,%20java.lang.String,%20int,%20int,%20int,%20android.media.MicrophoneInfo.Coordinate3F,%20android.media.MicrophoneInfo.Coordinate3F,%20java.util.List,%20java.util.List,%20float,%20float,%20float,%20int))
        // ///
        // /// Required features: "android-media-MicrophoneInfo_Coordinate3F", "java-lang-String", "java-util-List"
        // #[cfg(any(feature = "all", all(feature = "android-media-MicrophoneInfo_Coordinate3F", feature = "java-lang-String", feature = "java-util-List")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: i32, arg4: i32, arg5: i32, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MicrophoneInfo_Coordinate3F>>, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MicrophoneInfo_Coordinate3F>>, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg9: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg10: f32, arg11: f32, arg12: f32, arg13: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MicrophoneInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/MicrophoneInfo", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/String;ILjava/lang/String;IIILandroid/media/MicrophoneInfo$Coordinate3F;Landroid/media/MicrophoneInfo$Coordinate3F;Ljava/util/List;Ljava/util/List;FFFI)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into()), __jni_bindgen::AsJValue::as_jvalue(&arg7.into()), __jni_bindgen::AsJValue::as_jvalue(&arg8.into()), __jni_bindgen::AsJValue::as_jvalue(&arg9.into()), __jni_bindgen::AsJValue::as_jvalue(&arg10), __jni_bindgen::AsJValue::as_jvalue(&arg11), __jni_bindgen::AsJValue::as_jvalue(&arg12), __jni_bindgen::AsJValue::as_jvalue(&arg13)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "<init>\0", "(Ljava/lang/String;ILjava/lang/String;IIILandroid/media/MicrophoneInfo$Coordinate3F;Landroid/media/MicrophoneInfo$Coordinate3F;Ljava/util/List;Ljava/util/List;FFFI)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getDescription](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getDescription())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDescription<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getDescription", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getDescription\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getId](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getId())
        pub fn getId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getId\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getType](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getType())
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAddress](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getAddress())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAddress<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getAddress", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getAddress\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLocation](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getLocation())
        pub fn getLocation<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getLocation", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getLocation\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGroup](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getGroup())
        pub fn getGroup<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getGroup", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getGroup\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIndexInTheGroup](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getIndexInTheGroup())
        pub fn getIndexInTheGroup<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getIndexInTheGroup", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getIndexInTheGroup\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPosition](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getPosition())
        ///
        /// Required features: "android-media-MicrophoneInfo_Coordinate3F"
        #[cfg(any(feature = "all", all(feature = "android-media-MicrophoneInfo_Coordinate3F")))]
        pub fn getPosition<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MicrophoneInfo_Coordinate3F>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getPosition", .descriptor == "()Landroid/media/MicrophoneInfo$Coordinate3F;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getPosition\0", "()Landroid/media/MicrophoneInfo$Coordinate3F;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOrientation](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getOrientation())
        ///
        /// Required features: "android-media-MicrophoneInfo_Coordinate3F"
        #[cfg(any(feature = "all", all(feature = "android-media-MicrophoneInfo_Coordinate3F")))]
        pub fn getOrientation<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MicrophoneInfo_Coordinate3F>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getOrientation", .descriptor == "()Landroid/media/MicrophoneInfo$Coordinate3F;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getOrientation\0", "()Landroid/media/MicrophoneInfo$Coordinate3F;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFrequencyResponse](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getFrequencyResponse())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getFrequencyResponse<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getFrequencyResponse", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getFrequencyResponse\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChannelMapping](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getChannelMapping())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getChannelMapping<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getChannelMapping", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getChannelMapping\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSensitivity](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getSensitivity())
        pub fn getSensitivity<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getSensitivity", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getSensitivity\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxSpl](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getMaxSpl())
        pub fn getMaxSpl<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getMaxSpl", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getMaxSpl\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinSpl](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getMinSpl())
        pub fn getMinSpl<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getMinSpl", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getMinSpl\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDirectionality](https://developer.android.com/reference/android/media/MicrophoneInfo.html#getDirectionality())
        pub fn getDirectionality<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MicrophoneInfo", java.flags == PUBLIC, .name == "getDirectionality", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MicrophoneInfo\0", "getDirectionality\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CHANNEL_MAPPING_DIRECT](https://developer.android.com/reference/android/media/MicrophoneInfo.html#CHANNEL_MAPPING_DIRECT)
        pub const CHANNEL_MAPPING_DIRECT : i32 = 1;

        /// public static final [CHANNEL_MAPPING_PROCESSED](https://developer.android.com/reference/android/media/MicrophoneInfo.html#CHANNEL_MAPPING_PROCESSED)
        pub const CHANNEL_MAPPING_PROCESSED : i32 = 2;

        /// public static final [DIRECTIONALITY_BI_DIRECTIONAL](https://developer.android.com/reference/android/media/MicrophoneInfo.html#DIRECTIONALITY_BI_DIRECTIONAL)
        pub const DIRECTIONALITY_BI_DIRECTIONAL : i32 = 2;

        /// public static final [DIRECTIONALITY_CARDIOID](https://developer.android.com/reference/android/media/MicrophoneInfo.html#DIRECTIONALITY_CARDIOID)
        pub const DIRECTIONALITY_CARDIOID : i32 = 3;

        /// public static final [DIRECTIONALITY_HYPER_CARDIOID](https://developer.android.com/reference/android/media/MicrophoneInfo.html#DIRECTIONALITY_HYPER_CARDIOID)
        pub const DIRECTIONALITY_HYPER_CARDIOID : i32 = 4;

        /// public static final [DIRECTIONALITY_OMNI](https://developer.android.com/reference/android/media/MicrophoneInfo.html#DIRECTIONALITY_OMNI)
        pub const DIRECTIONALITY_OMNI : i32 = 1;

        /// public static final [DIRECTIONALITY_SUPER_CARDIOID](https://developer.android.com/reference/android/media/MicrophoneInfo.html#DIRECTIONALITY_SUPER_CARDIOID)
        pub const DIRECTIONALITY_SUPER_CARDIOID : i32 = 5;

        /// public static final [DIRECTIONALITY_UNKNOWN](https://developer.android.com/reference/android/media/MicrophoneInfo.html#DIRECTIONALITY_UNKNOWN)
        pub const DIRECTIONALITY_UNKNOWN : i32 = 0;

        /// public static final [GROUP_UNKNOWN](https://developer.android.com/reference/android/media/MicrophoneInfo.html#GROUP_UNKNOWN)
        pub const GROUP_UNKNOWN : i32 = -1;

        /// public static final [INDEX_IN_THE_GROUP_UNKNOWN](https://developer.android.com/reference/android/media/MicrophoneInfo.html#INDEX_IN_THE_GROUP_UNKNOWN)
        pub const INDEX_IN_THE_GROUP_UNKNOWN : i32 = -1;

        /// public static final [LOCATION_MAINBODY](https://developer.android.com/reference/android/media/MicrophoneInfo.html#LOCATION_MAINBODY)
        pub const LOCATION_MAINBODY : i32 = 1;

        /// public static final [LOCATION_MAINBODY_MOVABLE](https://developer.android.com/reference/android/media/MicrophoneInfo.html#LOCATION_MAINBODY_MOVABLE)
        pub const LOCATION_MAINBODY_MOVABLE : i32 = 2;

        /// public static final [LOCATION_PERIPHERAL](https://developer.android.com/reference/android/media/MicrophoneInfo.html#LOCATION_PERIPHERAL)
        pub const LOCATION_PERIPHERAL : i32 = 3;

        /// public static final [LOCATION_UNKNOWN](https://developer.android.com/reference/android/media/MicrophoneInfo.html#LOCATION_UNKNOWN)
        pub const LOCATION_UNKNOWN : i32 = 0;

        /// **get** public static final [ORIENTATION_UNKNOWN](https://developer.android.com/reference/android/media/MicrophoneInfo.html#ORIENTATION_UNKNOWN)
        ///
        /// Required feature: android-media-MicrophoneInfo_Coordinate3F
        #[cfg(any(feature = "all", feature = "android-media-MicrophoneInfo_Coordinate3F"))]
        pub fn ORIENTATION_UNKNOWN<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MicrophoneInfo_Coordinate3F>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/MicrophoneInfo\0", "ORIENTATION_UNKNOWN\0", "Landroid/media/MicrophoneInfo$Coordinate3F;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [POSITION_UNKNOWN](https://developer.android.com/reference/android/media/MicrophoneInfo.html#POSITION_UNKNOWN)
        ///
        /// Required feature: android-media-MicrophoneInfo_Coordinate3F
        #[cfg(any(feature = "all", feature = "android-media-MicrophoneInfo_Coordinate3F"))]
        pub fn POSITION_UNKNOWN<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MicrophoneInfo_Coordinate3F>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/MicrophoneInfo\0", "POSITION_UNKNOWN\0", "Landroid/media/MicrophoneInfo$Coordinate3F;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [SENSITIVITY_UNKNOWN](https://developer.android.com/reference/android/media/MicrophoneInfo.html#SENSITIVITY_UNKNOWN)
        pub const SENSITIVITY_UNKNOWN : f32 = -340282350000000000000000000000000000000f32;

        /// public static final [SPL_UNKNOWN](https://developer.android.com/reference/android/media/MicrophoneInfo.html#SPL_UNKNOWN)
        pub const SPL_UNKNOWN : f32 = -340282350000000000000000000000000000000f32;
    }
}
