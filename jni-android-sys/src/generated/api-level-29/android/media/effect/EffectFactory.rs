// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-effect-EffectFactory"))]
__jni_bindgen! {
    /// public class [EffectFactory](https://developer.android.com/reference/android/media/effect/EffectFactory.html)
    ///
    /// Required feature: android-media-effect-EffectFactory
    public class EffectFactory ("android/media/effect/EffectFactory") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [EffectFactory](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EffectFactory(android.media.effect.EffectContext))
        // ///
        // /// Required features: "android-media-effect-EffectContext"
        // #[cfg(any(feature = "all", all(feature = "android-media-effect-EffectContext")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::effect::EffectContext>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::effect::EffectFactory>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/effect/EffectFactory", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/media/effect/EffectContext;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/effect/EffectFactory\0", "<init>\0", "(Landroid/media/effect/EffectContext;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [createEffect](https://developer.android.com/reference/android/media/effect/EffectFactory.html#createEffect(java.lang.String))
        ///
        /// Required features: "android-media-effect-Effect", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-media-effect-Effect", feature = "java-lang-String")))]
        pub fn createEffect<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::effect::Effect>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/effect/EffectFactory", java.flags == PUBLIC, .name == "createEffect", .descriptor == "(Ljava/lang/String;)Landroid/media/effect/Effect;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/effect/EffectFactory\0", "createEffect\0", "(Ljava/lang/String;)Landroid/media/effect/Effect;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isEffectSupported](https://developer.android.com/reference/android/media/effect/EffectFactory.html#isEffectSupported(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isEffectSupported<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/effect/EffectFactory", java.flags == PUBLIC | STATIC, .name == "isEffectSupported", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/media/effect/EffectFactory\0", "isEffectSupported\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [EFFECT_AUTOFIX](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_AUTOFIX)
        pub const EFFECT_AUTOFIX : &'static str = "android.media.effect.effects.AutoFixEffect";

        /// public static final [EFFECT_BACKDROPPER](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_BACKDROPPER)
        pub const EFFECT_BACKDROPPER : &'static str = "android.media.effect.effects.BackDropperEffect";

        /// public static final [EFFECT_BITMAPOVERLAY](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_BITMAPOVERLAY)
        pub const EFFECT_BITMAPOVERLAY : &'static str = "android.media.effect.effects.BitmapOverlayEffect";

        /// public static final [EFFECT_BLACKWHITE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_BLACKWHITE)
        pub const EFFECT_BLACKWHITE : &'static str = "android.media.effect.effects.BlackWhiteEffect";

        /// public static final [EFFECT_BRIGHTNESS](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_BRIGHTNESS)
        pub const EFFECT_BRIGHTNESS : &'static str = "android.media.effect.effects.BrightnessEffect";

        /// public static final [EFFECT_CONTRAST](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_CONTRAST)
        pub const EFFECT_CONTRAST : &'static str = "android.media.effect.effects.ContrastEffect";

        /// public static final [EFFECT_CROP](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_CROP)
        pub const EFFECT_CROP : &'static str = "android.media.effect.effects.CropEffect";

        /// public static final [EFFECT_CROSSPROCESS](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_CROSSPROCESS)
        pub const EFFECT_CROSSPROCESS : &'static str = "android.media.effect.effects.CrossProcessEffect";

        /// public static final [EFFECT_DOCUMENTARY](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_DOCUMENTARY)
        pub const EFFECT_DOCUMENTARY : &'static str = "android.media.effect.effects.DocumentaryEffect";

        /// public static final [EFFECT_DUOTONE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_DUOTONE)
        pub const EFFECT_DUOTONE : &'static str = "android.media.effect.effects.DuotoneEffect";

        /// public static final [EFFECT_FILLLIGHT](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_FILLLIGHT)
        pub const EFFECT_FILLLIGHT : &'static str = "android.media.effect.effects.FillLightEffect";

        /// public static final [EFFECT_FISHEYE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_FISHEYE)
        pub const EFFECT_FISHEYE : &'static str = "android.media.effect.effects.FisheyeEffect";

        /// public static final [EFFECT_FLIP](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_FLIP)
        pub const EFFECT_FLIP : &'static str = "android.media.effect.effects.FlipEffect";

        /// public static final [EFFECT_GRAIN](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_GRAIN)
        pub const EFFECT_GRAIN : &'static str = "android.media.effect.effects.GrainEffect";

        /// public static final [EFFECT_GRAYSCALE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_GRAYSCALE)
        pub const EFFECT_GRAYSCALE : &'static str = "android.media.effect.effects.GrayscaleEffect";

        /// public static final [EFFECT_LOMOISH](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_LOMOISH)
        pub const EFFECT_LOMOISH : &'static str = "android.media.effect.effects.LomoishEffect";

        /// public static final [EFFECT_NEGATIVE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_NEGATIVE)
        pub const EFFECT_NEGATIVE : &'static str = "android.media.effect.effects.NegativeEffect";

        /// public static final [EFFECT_POSTERIZE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_POSTERIZE)
        pub const EFFECT_POSTERIZE : &'static str = "android.media.effect.effects.PosterizeEffect";

        /// public static final [EFFECT_REDEYE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_REDEYE)
        pub const EFFECT_REDEYE : &'static str = "android.media.effect.effects.RedEyeEffect";

        /// public static final [EFFECT_ROTATE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_ROTATE)
        pub const EFFECT_ROTATE : &'static str = "android.media.effect.effects.RotateEffect";

        /// public static final [EFFECT_SATURATE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_SATURATE)
        pub const EFFECT_SATURATE : &'static str = "android.media.effect.effects.SaturateEffect";

        /// public static final [EFFECT_SEPIA](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_SEPIA)
        pub const EFFECT_SEPIA : &'static str = "android.media.effect.effects.SepiaEffect";

        /// public static final [EFFECT_SHARPEN](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_SHARPEN)
        pub const EFFECT_SHARPEN : &'static str = "android.media.effect.effects.SharpenEffect";

        /// public static final [EFFECT_STRAIGHTEN](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_STRAIGHTEN)
        pub const EFFECT_STRAIGHTEN : &'static str = "android.media.effect.effects.StraightenEffect";

        /// public static final [EFFECT_TEMPERATURE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_TEMPERATURE)
        pub const EFFECT_TEMPERATURE : &'static str = "android.media.effect.effects.ColorTemperatureEffect";

        /// public static final [EFFECT_TINT](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_TINT)
        pub const EFFECT_TINT : &'static str = "android.media.effect.effects.TintEffect";

        /// public static final [EFFECT_VIGNETTE](https://developer.android.com/reference/android/media/effect/EffectFactory.html#EFFECT_VIGNETTE)
        pub const EFFECT_VIGNETTE : &'static str = "android.media.effect.effects.VignetteEffect";
    }
}
