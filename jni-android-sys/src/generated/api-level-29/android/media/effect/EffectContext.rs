// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-effect-EffectContext"))]
__jni_bindgen! {
    /// public class [EffectContext](https://developer.android.com/reference/android/media/effect/EffectContext.html)
    ///
    /// Required feature: android-media-effect-EffectContext
    public class EffectContext ("android/media/effect/EffectContext") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [EffectContext](https://developer.android.com/reference/android/media/effect/EffectContext.html#EffectContext())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::effect::EffectContext>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/effect/EffectContext", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/effect/EffectContext\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [createWithCurrentGlContext](https://developer.android.com/reference/android/media/effect/EffectContext.html#createWithCurrentGlContext())
        ///
        /// Required features: "android-media-effect-EffectContext"
        #[cfg(any(feature = "all", all(feature = "android-media-effect-EffectContext")))]
        pub fn createWithCurrentGlContext<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::effect::EffectContext>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/effect/EffectContext", java.flags == PUBLIC | STATIC, .name == "createWithCurrentGlContext", .descriptor == "()Landroid/media/effect/EffectContext;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/media/effect/EffectContext\0", "createWithCurrentGlContext\0", "()Landroid/media/effect/EffectContext;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFactory](https://developer.android.com/reference/android/media/effect/EffectContext.html#getFactory())
        ///
        /// Required features: "android-media-effect-EffectFactory"
        #[cfg(any(feature = "all", all(feature = "android-media-effect-EffectFactory")))]
        pub fn getFactory<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::effect::EffectFactory>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/effect/EffectContext", java.flags == PUBLIC, .name == "getFactory", .descriptor == "()Landroid/media/effect/EffectFactory;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/effect/EffectContext\0", "getFactory\0", "()Landroid/media/effect/EffectFactory;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [release](https://developer.android.com/reference/android/media/effect/EffectContext.html#release())
        pub fn release<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/effect/EffectContext", java.flags == PUBLIC, .name == "release", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/effect/EffectContext\0", "release\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
