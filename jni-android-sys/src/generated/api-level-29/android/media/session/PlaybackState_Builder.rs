// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-session-PlaybackState_Builder"))]
__jni_bindgen! {
    /// public final class [PlaybackState.Builder](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html)
    ///
    /// Required feature: android-media-session-PlaybackState_Builder
    public final class PlaybackState_Builder ("android/media/session/PlaybackState$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#Builder(android.media.session.PlaybackState))
        ///
        /// Required features: "android-media-session-PlaybackState"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState")))]
        pub fn new_PlaybackState<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::session::PlaybackState>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/media/session/PlaybackState;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "<init>\0", "(Landroid/media/session/PlaybackState;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setState](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#setState(int,%20long,%20float,%20long))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder")))]
        pub fn setState_int_long_float_long<'env>(&'env self, arg0: i32, arg1: i64, arg2: f32, arg3: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "setState", .descriptor == "(IJFJ)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "setState\0", "(IJFJ)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setState](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#setState(int,%20long,%20float))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder")))]
        pub fn setState_int_long_float<'env>(&'env self, arg0: i32, arg1: i64, arg2: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "setState", .descriptor == "(IJF)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "setState\0", "(IJF)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setActions](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#setActions(long))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder")))]
        pub fn setActions<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "setActions", .descriptor == "(J)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "setActions\0", "(J)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addCustomAction](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#addCustomAction(java.lang.String,%20java.lang.String,%20int))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder", feature = "java-lang-String")))]
        pub fn addCustomAction_String_String_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "addCustomAction", .descriptor == "(Ljava/lang/String;Ljava/lang/String;I)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "addCustomAction\0", "(Ljava/lang/String;Ljava/lang/String;I)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addCustomAction](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#addCustomAction(android.media.session.PlaybackState.CustomAction))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder", "android-media-session-PlaybackState_CustomAction"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder", feature = "android-media-session-PlaybackState_CustomAction")))]
        pub fn addCustomAction_CustomAction<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::session::PlaybackState_CustomAction>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "addCustomAction", .descriptor == "(Landroid/media/session/PlaybackState$CustomAction;)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "addCustomAction\0", "(Landroid/media/session/PlaybackState$CustomAction;)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBufferedPosition](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#setBufferedPosition(long))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder")))]
        pub fn setBufferedPosition<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "setBufferedPosition", .descriptor == "(J)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "setBufferedPosition\0", "(J)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setActiveQueueItemId](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#setActiveQueueItemId(long))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder")))]
        pub fn setActiveQueueItemId<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "setActiveQueueItemId", .descriptor == "(J)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "setActiveQueueItemId\0", "(J)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setErrorMessage](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#setErrorMessage(java.lang.CharSequence))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder", feature = "java-lang-CharSequence")))]
        pub fn setErrorMessage<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "setErrorMessage", .descriptor == "(Ljava/lang/CharSequence;)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "setErrorMessage\0", "(Ljava/lang/CharSequence;)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExtras](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#setExtras(android.os.Bundle))
        ///
        /// Required features: "android-media-session-PlaybackState_Builder", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState_Builder", feature = "android-os-Bundle")))]
        pub fn setExtras<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "setExtras", .descriptor == "(Landroid/os/Bundle;)Landroid/media/session/PlaybackState$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "setExtras\0", "(Landroid/os/Bundle;)Landroid/media/session/PlaybackState$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html#build())
        ///
        /// Required features: "android-media-session-PlaybackState"
        #[cfg(any(feature = "all", all(feature = "android-media-session-PlaybackState")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/media/session/PlaybackState;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState$Builder\0", "build\0", "()Landroid/media/session/PlaybackState;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
