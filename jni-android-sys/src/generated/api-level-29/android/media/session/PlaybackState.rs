// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-session-PlaybackState"))]
__jni_bindgen! {
    /// public final class [PlaybackState](https://developer.android.com/reference/android/media/session/PlaybackState.html)
    ///
    /// Required feature: android-media-session-PlaybackState
    public final class PlaybackState ("android/media/session/PlaybackState") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [PlaybackState](https://developer.android.com/reference/android/media/session/PlaybackState.html#PlaybackState(android.os.Parcel))
        // ///
        // /// Required features: "android-os-Parcel"
        // #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::session::PlaybackState>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/media/session/PlaybackState", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/os/Parcel;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "<init>\0", "(Landroid/os/Parcel;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [toString](https://developer.android.com/reference/android/media/session/PlaybackState.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/media/session/PlaybackState.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/media/session/PlaybackState.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getState](https://developer.android.com/reference/android/media/session/PlaybackState.html#getState())
        pub fn getState<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getState", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getState\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPosition](https://developer.android.com/reference/android/media/session/PlaybackState.html#getPosition())
        pub fn getPosition<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getPosition", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getPosition\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBufferedPosition](https://developer.android.com/reference/android/media/session/PlaybackState.html#getBufferedPosition())
        pub fn getBufferedPosition<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getBufferedPosition", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getBufferedPosition\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPlaybackSpeed](https://developer.android.com/reference/android/media/session/PlaybackState.html#getPlaybackSpeed())
        pub fn getPlaybackSpeed<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getPlaybackSpeed", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getPlaybackSpeed\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActions](https://developer.android.com/reference/android/media/session/PlaybackState.html#getActions())
        pub fn getActions<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getActions", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getActions\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCustomActions](https://developer.android.com/reference/android/media/session/PlaybackState.html#getCustomActions())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getCustomActions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getCustomActions", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getCustomActions\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getErrorMessage](https://developer.android.com/reference/android/media/session/PlaybackState.html#getErrorMessage())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getErrorMessage<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getErrorMessage", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getErrorMessage\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLastPositionUpdateTime](https://developer.android.com/reference/android/media/session/PlaybackState.html#getLastPositionUpdateTime())
        pub fn getLastPositionUpdateTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getLastPositionUpdateTime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getLastPositionUpdateTime\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActiveQueueItemId](https://developer.android.com/reference/android/media/session/PlaybackState.html#getActiveQueueItemId())
        pub fn getActiveQueueItemId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getActiveQueueItemId", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getActiveQueueItemId\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtras](https://developer.android.com/reference/android/media/session/PlaybackState.html#getExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/session/PlaybackState", java.flags == PUBLIC, .name == "getExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/session/PlaybackState\0", "getExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_FAST_FORWARD](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_FAST_FORWARD)
        pub const ACTION_FAST_FORWARD : i64 = 64i64;

        /// public static final [ACTION_PAUSE](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PAUSE)
        pub const ACTION_PAUSE : i64 = 2i64;

        /// public static final [ACTION_PLAY](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PLAY)
        pub const ACTION_PLAY : i64 = 4i64;

        /// public static final [ACTION_PLAY_FROM_MEDIA_ID](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PLAY_FROM_MEDIA_ID)
        pub const ACTION_PLAY_FROM_MEDIA_ID : i64 = 1024i64;

        /// public static final [ACTION_PLAY_FROM_SEARCH](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PLAY_FROM_SEARCH)
        pub const ACTION_PLAY_FROM_SEARCH : i64 = 2048i64;

        /// public static final [ACTION_PLAY_FROM_URI](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PLAY_FROM_URI)
        pub const ACTION_PLAY_FROM_URI : i64 = 8192i64;

        /// public static final [ACTION_PLAY_PAUSE](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PLAY_PAUSE)
        pub const ACTION_PLAY_PAUSE : i64 = 512i64;

        /// public static final [ACTION_PREPARE](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PREPARE)
        pub const ACTION_PREPARE : i64 = 16384i64;

        /// public static final [ACTION_PREPARE_FROM_MEDIA_ID](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PREPARE_FROM_MEDIA_ID)
        pub const ACTION_PREPARE_FROM_MEDIA_ID : i64 = 32768i64;

        /// public static final [ACTION_PREPARE_FROM_SEARCH](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PREPARE_FROM_SEARCH)
        pub const ACTION_PREPARE_FROM_SEARCH : i64 = 65536i64;

        /// public static final [ACTION_PREPARE_FROM_URI](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_PREPARE_FROM_URI)
        pub const ACTION_PREPARE_FROM_URI : i64 = 131072i64;

        /// public static final [ACTION_REWIND](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_REWIND)
        pub const ACTION_REWIND : i64 = 8i64;

        /// public static final [ACTION_SEEK_TO](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_SEEK_TO)
        pub const ACTION_SEEK_TO : i64 = 256i64;

        /// public static final [ACTION_SET_RATING](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_SET_RATING)
        pub const ACTION_SET_RATING : i64 = 128i64;

        /// public static final [ACTION_SKIP_TO_NEXT](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_SKIP_TO_NEXT)
        pub const ACTION_SKIP_TO_NEXT : i64 = 32i64;

        /// public static final [ACTION_SKIP_TO_PREVIOUS](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_SKIP_TO_PREVIOUS)
        pub const ACTION_SKIP_TO_PREVIOUS : i64 = 16i64;

        /// public static final [ACTION_SKIP_TO_QUEUE_ITEM](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_SKIP_TO_QUEUE_ITEM)
        pub const ACTION_SKIP_TO_QUEUE_ITEM : i64 = 4096i64;

        /// public static final [ACTION_STOP](https://developer.android.com/reference/android/media/session/PlaybackState.html#ACTION_STOP)
        pub const ACTION_STOP : i64 = 1i64;

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/media/session/PlaybackState.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/media/session/PlaybackState\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [PLAYBACK_POSITION_UNKNOWN](https://developer.android.com/reference/android/media/session/PlaybackState.html#PLAYBACK_POSITION_UNKNOWN)
        pub const PLAYBACK_POSITION_UNKNOWN : i64 = -1i64;

        /// public static final [STATE_BUFFERING](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_BUFFERING)
        pub const STATE_BUFFERING : i32 = 6;

        /// public static final [STATE_CONNECTING](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_CONNECTING)
        pub const STATE_CONNECTING : i32 = 8;

        /// public static final [STATE_ERROR](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_ERROR)
        pub const STATE_ERROR : i32 = 7;

        /// public static final [STATE_FAST_FORWARDING](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_FAST_FORWARDING)
        pub const STATE_FAST_FORWARDING : i32 = 4;

        /// public static final [STATE_NONE](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_NONE)
        pub const STATE_NONE : i32 = 0;

        /// public static final [STATE_PAUSED](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_PAUSED)
        pub const STATE_PAUSED : i32 = 2;

        /// public static final [STATE_PLAYING](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_PLAYING)
        pub const STATE_PLAYING : i32 = 3;

        /// public static final [STATE_REWINDING](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_REWINDING)
        pub const STATE_REWINDING : i32 = 5;

        /// public static final [STATE_SKIPPING_TO_NEXT](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_SKIPPING_TO_NEXT)
        pub const STATE_SKIPPING_TO_NEXT : i32 = 10;

        /// public static final [STATE_SKIPPING_TO_PREVIOUS](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_SKIPPING_TO_PREVIOUS)
        pub const STATE_SKIPPING_TO_PREVIOUS : i32 = 9;

        /// public static final [STATE_SKIPPING_TO_QUEUE_ITEM](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_SKIPPING_TO_QUEUE_ITEM)
        pub const STATE_SKIPPING_TO_QUEUE_ITEM : i32 = 11;

        /// public static final [STATE_STOPPED](https://developer.android.com/reference/android/media/session/PlaybackState.html#STATE_STOPPED)
        pub const STATE_STOPPED : i32 = 1;
    }
}
