// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MediaSession2Service"))]
__jni_bindgen! {
    /// public class [MediaSession2Service](https://developer.android.com/reference/android/media/MediaSession2Service.html)
    ///
    /// Required feature: android-media-MediaSession2Service
    public class MediaSession2Service ("android/media/MediaSession2Service") extends crate::android::app::Service {

        /// [MediaSession2Service](https://developer.android.com/reference/android/media/MediaSession2Service.html#MediaSession2Service())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MediaSession2Service>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCreate](https://developer.android.com/reference/android/media/MediaSession2Service.html#onCreate())
        pub fn onCreate<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC, .name == "onCreate", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "onCreate\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onBind](https://developer.android.com/reference/android/media/MediaSession2Service.html#onBind(android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-os-IBinder"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-IBinder")))]
        pub fn onBind<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::IBinder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC, .name == "onBind", .descriptor == "(Landroid/content/Intent;)Landroid/os/IBinder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "onBind\0", "(Landroid/content/Intent;)Landroid/os/IBinder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDestroy](https://developer.android.com/reference/android/media/MediaSession2Service.html#onDestroy())
        pub fn onDestroy<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC, .name == "onDestroy", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "onDestroy\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onGetSession](https://developer.android.com/reference/android/media/MediaSession2Service.html#onGetSession(android.media.MediaSession2.ControllerInfo))
        ///
        /// Required features: "android-media-MediaSession2", "android-media-MediaSession2_ControllerInfo"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2", feature = "android-media-MediaSession2_ControllerInfo")))]
        pub fn onGetSession<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2_ControllerInfo>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSession2>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC | ABSTRACT, .name == "onGetSession", .descriptor == "(Landroid/media/MediaSession2$ControllerInfo;)Landroid/media/MediaSession2;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "onGetSession\0", "(Landroid/media/MediaSession2$ControllerInfo;)Landroid/media/MediaSession2;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onUpdateNotification](https://developer.android.com/reference/android/media/MediaSession2Service.html#onUpdateNotification(android.media.MediaSession2))
        ///
        /// Required features: "android-media-MediaSession2", "android-media-MediaSession2Service_MediaNotification"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2", feature = "android-media-MediaSession2Service_MediaNotification")))]
        pub fn onUpdateNotification<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSession2Service_MediaNotification>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC | ABSTRACT, .name == "onUpdateNotification", .descriptor == "(Landroid/media/MediaSession2;)Landroid/media/MediaSession2Service$MediaNotification;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "onUpdateNotification\0", "(Landroid/media/MediaSession2;)Landroid/media/MediaSession2Service$MediaNotification;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addSession](https://developer.android.com/reference/android/media/MediaSession2Service.html#addSession(android.media.MediaSession2))
        ///
        /// Required features: "android-media-MediaSession2"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2")))]
        pub fn addSession<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC | FINAL, .name == "addSession", .descriptor == "(Landroid/media/MediaSession2;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "addSession\0", "(Landroid/media/MediaSession2;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeSession](https://developer.android.com/reference/android/media/MediaSession2Service.html#removeSession(android.media.MediaSession2))
        ///
        /// Required features: "android-media-MediaSession2"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2")))]
        pub fn removeSession<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC | FINAL, .name == "removeSession", .descriptor == "(Landroid/media/MediaSession2;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "removeSession\0", "(Landroid/media/MediaSession2;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSessions](https://developer.android.com/reference/android/media/MediaSession2Service.html#getSessions())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getSessions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2Service", java.flags == PUBLIC | FINAL, .name == "getSessions", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2Service\0", "getSessions\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [SERVICE_INTERFACE](https://developer.android.com/reference/android/media/MediaSession2Service.html#SERVICE_INTERFACE)
        pub const SERVICE_INTERFACE : &'static str = "android.media.MediaSession2Service";
    }
}
