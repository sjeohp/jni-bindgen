// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-media-MediaSession2_Builder"))]
__jni_bindgen! {
    /// public final class [MediaSession2.Builder](https://developer.android.com/reference/android/media/MediaSession2.Builder.html)
    ///
    /// Required feature: android-media-MediaSession2_Builder
    public final class MediaSession2_Builder ("android/media/MediaSession2$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/media/MediaSession2.Builder.html#Builder(android.content.Context))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::media::MediaSession2_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$Builder\0", "<init>\0", "(Landroid/content/Context;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSessionActivity](https://developer.android.com/reference/android/media/MediaSession2.Builder.html#setSessionActivity(android.app.PendingIntent))
        ///
        /// Required features: "android-app-PendingIntent", "android-media-MediaSession2_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-PendingIntent", feature = "android-media-MediaSession2_Builder")))]
        pub fn setSessionActivity<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::PendingIntent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSession2_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$Builder", java.flags == PUBLIC, .name == "setSessionActivity", .descriptor == "(Landroid/app/PendingIntent;)Landroid/media/MediaSession2$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$Builder\0", "setSessionActivity\0", "(Landroid/app/PendingIntent;)Landroid/media/MediaSession2$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setId](https://developer.android.com/reference/android/media/MediaSession2.Builder.html#setId(java.lang.String))
        ///
        /// Required features: "android-media-MediaSession2_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2_Builder", feature = "java-lang-String")))]
        pub fn setId<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSession2_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$Builder", java.flags == PUBLIC, .name == "setId", .descriptor == "(Ljava/lang/String;)Landroid/media/MediaSession2$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$Builder\0", "setId\0", "(Ljava/lang/String;)Landroid/media/MediaSession2$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSessionCallback](https://developer.android.com/reference/android/media/MediaSession2.Builder.html#setSessionCallback(java.util.concurrent.Executor,%20android.media.MediaSession2.SessionCallback))
        ///
        /// Required features: "android-media-MediaSession2_Builder", "android-media-MediaSession2_SessionCallback", "java-util-concurrent-Executor"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2_Builder", feature = "android-media-MediaSession2_SessionCallback", feature = "java-util-concurrent-Executor")))]
        pub fn setSessionCallback<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::Executor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::media::MediaSession2_SessionCallback>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSession2_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$Builder", java.flags == PUBLIC, .name == "setSessionCallback", .descriptor == "(Ljava/util/concurrent/Executor;Landroid/media/MediaSession2$SessionCallback;)Landroid/media/MediaSession2$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$Builder\0", "setSessionCallback\0", "(Ljava/util/concurrent/Executor;Landroid/media/MediaSession2$SessionCallback;)Landroid/media/MediaSession2$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExtras](https://developer.android.com/reference/android/media/MediaSession2.Builder.html#setExtras(android.os.Bundle))
        ///
        /// Required features: "android-media-MediaSession2_Builder", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2_Builder", feature = "android-os-Bundle")))]
        pub fn setExtras<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSession2_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$Builder", java.flags == PUBLIC, .name == "setExtras", .descriptor == "(Landroid/os/Bundle;)Landroid/media/MediaSession2$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$Builder\0", "setExtras\0", "(Landroid/os/Bundle;)Landroid/media/MediaSession2$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/media/MediaSession2.Builder.html#build())
        ///
        /// Required features: "android-media-MediaSession2"
        #[cfg(any(feature = "all", all(feature = "android-media-MediaSession2")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::media::MediaSession2>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/media/MediaSession2$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/media/MediaSession2;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/media/MediaSession2$Builder\0", "build\0", "()Landroid/media/MediaSession2;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
