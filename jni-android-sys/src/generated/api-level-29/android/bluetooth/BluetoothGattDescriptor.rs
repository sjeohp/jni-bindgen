// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-bluetooth-BluetoothGattDescriptor"))]
__jni_bindgen! {
    /// public class [BluetoothGattDescriptor](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html)
    ///
    /// Required feature: android-bluetooth-BluetoothGattDescriptor
    public class BluetoothGattDescriptor ("android/bluetooth/BluetoothGattDescriptor") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [BluetoothGattDescriptor](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#BluetoothGattDescriptor(java.util.UUID,%20int))
        ///
        /// Required features: "java-util-UUID"
        #[cfg(any(feature = "all", all(feature = "java-util-UUID")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::UUID>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::bluetooth::BluetoothGattDescriptor>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattDescriptor", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/util/UUID;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattDescriptor\0", "<init>\0", "(Ljava/util/UUID;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattDescriptor", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattDescriptor\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattDescriptor", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattDescriptor\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharacteristic](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#getCharacteristic())
        ///
        /// Required features: "android-bluetooth-BluetoothGattCharacteristic"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGattCharacteristic")))]
        pub fn getCharacteristic<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::bluetooth::BluetoothGattCharacteristic>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattDescriptor", java.flags == PUBLIC, .name == "getCharacteristic", .descriptor == "()Landroid/bluetooth/BluetoothGattCharacteristic;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattDescriptor\0", "getCharacteristic\0", "()Landroid/bluetooth/BluetoothGattCharacteristic;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUuid](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#getUuid())
        ///
        /// Required features: "java-util-UUID"
        #[cfg(any(feature = "all", all(feature = "java-util-UUID")))]
        pub fn getUuid<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattDescriptor", java.flags == PUBLIC, .name == "getUuid", .descriptor == "()Ljava/util/UUID;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattDescriptor\0", "getUuid\0", "()Ljava/util/UUID;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPermissions](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#getPermissions())
        pub fn getPermissions<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattDescriptor", java.flags == PUBLIC, .name == "getPermissions", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattDescriptor\0", "getPermissions\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getValue](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#getValue())
        pub fn getValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattDescriptor", java.flags == PUBLIC, .name == "getValue", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattDescriptor\0", "getValue\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setValue](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#setValue(byte%5B%5D))
        pub fn setValue<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattDescriptor", java.flags == PUBLIC, .name == "setValue", .descriptor == "([B)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattDescriptor\0", "setValue\0", "([B)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/bluetooth/BluetoothGattDescriptor\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DISABLE_NOTIFICATION_VALUE](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#DISABLE_NOTIFICATION_VALUE)
        pub fn DISABLE_NOTIFICATION_VALUE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/bluetooth/BluetoothGattDescriptor\0", "DISABLE_NOTIFICATION_VALUE\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ENABLE_INDICATION_VALUE](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#ENABLE_INDICATION_VALUE)
        pub fn ENABLE_INDICATION_VALUE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/bluetooth/BluetoothGattDescriptor\0", "ENABLE_INDICATION_VALUE\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ENABLE_NOTIFICATION_VALUE](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#ENABLE_NOTIFICATION_VALUE)
        pub fn ENABLE_NOTIFICATION_VALUE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/bluetooth/BluetoothGattDescriptor\0", "ENABLE_NOTIFICATION_VALUE\0", "[B\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [PERMISSION_READ](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#PERMISSION_READ)
        pub const PERMISSION_READ : i32 = 1;

        /// public static final [PERMISSION_READ_ENCRYPTED](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#PERMISSION_READ_ENCRYPTED)
        pub const PERMISSION_READ_ENCRYPTED : i32 = 2;

        /// public static final [PERMISSION_READ_ENCRYPTED_MITM](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#PERMISSION_READ_ENCRYPTED_MITM)
        pub const PERMISSION_READ_ENCRYPTED_MITM : i32 = 4;

        /// public static final [PERMISSION_WRITE](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#PERMISSION_WRITE)
        pub const PERMISSION_WRITE : i32 = 16;

        /// public static final [PERMISSION_WRITE_ENCRYPTED](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#PERMISSION_WRITE_ENCRYPTED)
        pub const PERMISSION_WRITE_ENCRYPTED : i32 = 32;

        /// public static final [PERMISSION_WRITE_ENCRYPTED_MITM](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#PERMISSION_WRITE_ENCRYPTED_MITM)
        pub const PERMISSION_WRITE_ENCRYPTED_MITM : i32 = 64;

        /// public static final [PERMISSION_WRITE_SIGNED](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#PERMISSION_WRITE_SIGNED)
        pub const PERMISSION_WRITE_SIGNED : i32 = 128;

        /// public static final [PERMISSION_WRITE_SIGNED_MITM](https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#PERMISSION_WRITE_SIGNED_MITM)
        pub const PERMISSION_WRITE_SIGNED_MITM : i32 = 256;
    }
}
