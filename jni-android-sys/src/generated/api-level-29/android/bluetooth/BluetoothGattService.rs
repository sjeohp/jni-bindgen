// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-bluetooth-BluetoothGattService"))]
__jni_bindgen! {
    /// public class [BluetoothGattService](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html)
    ///
    /// Required feature: android-bluetooth-BluetoothGattService
    public class BluetoothGattService ("android/bluetooth/BluetoothGattService") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [BluetoothGattService](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#BluetoothGattService(java.util.UUID,%20int))
        ///
        /// Required features: "java-util-UUID"
        #[cfg(any(feature = "all", all(feature = "java-util-UUID")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::UUID>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::bluetooth::BluetoothGattService>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/util/UUID;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "<init>\0", "(Ljava/util/UUID;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addService](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#addService(android.bluetooth.BluetoothGattService))
        ///
        /// Required features: "android-bluetooth-BluetoothGattService"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGattService")))]
        pub fn addService<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGattService>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "addService", .descriptor == "(Landroid/bluetooth/BluetoothGattService;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "addService\0", "(Landroid/bluetooth/BluetoothGattService;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addCharacteristic](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#addCharacteristic(android.bluetooth.BluetoothGattCharacteristic))
        ///
        /// Required features: "android-bluetooth-BluetoothGattCharacteristic"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGattCharacteristic")))]
        pub fn addCharacteristic<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGattCharacteristic>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "addCharacteristic", .descriptor == "(Landroid/bluetooth/BluetoothGattCharacteristic;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "addCharacteristic\0", "(Landroid/bluetooth/BluetoothGattCharacteristic;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUuid](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#getUuid())
        ///
        /// Required features: "java-util-UUID"
        #[cfg(any(feature = "all", all(feature = "java-util-UUID")))]
        pub fn getUuid<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::UUID>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "getUuid", .descriptor == "()Ljava/util/UUID;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "getUuid\0", "()Ljava/util/UUID;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstanceId](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#getInstanceId())
        pub fn getInstanceId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "getInstanceId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "getInstanceId\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getType](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#getType())
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "getType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "getType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIncludedServices](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#getIncludedServices())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getIncludedServices<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "getIncludedServices", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "getIncludedServices\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharacteristics](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#getCharacteristics())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getCharacteristics<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "getCharacteristics", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "getCharacteristics\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharacteristic](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#getCharacteristic(java.util.UUID))
        ///
        /// Required features: "android-bluetooth-BluetoothGattCharacteristic", "java-util-UUID"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGattCharacteristic", feature = "java-util-UUID")))]
        pub fn getCharacteristic<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::UUID>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::bluetooth::BluetoothGattCharacteristic>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattService", java.flags == PUBLIC, .name == "getCharacteristic", .descriptor == "(Ljava/util/UUID;)Landroid/bluetooth/BluetoothGattCharacteristic;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattService\0", "getCharacteristic\0", "(Ljava/util/UUID;)Landroid/bluetooth/BluetoothGattCharacteristic;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/bluetooth/BluetoothGattService\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [SERVICE_TYPE_PRIMARY](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#SERVICE_TYPE_PRIMARY)
        pub const SERVICE_TYPE_PRIMARY : i32 = 0;

        /// public static final [SERVICE_TYPE_SECONDARY](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#SERVICE_TYPE_SECONDARY)
        pub const SERVICE_TYPE_SECONDARY : i32 = 1;

        // // Not emitting: Non-public field
        // /// **get** protected [mCharacteristics](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#mCharacteristics)
        // ///
        // /// Required feature: java-util-List
        // #[cfg(any(feature = "all", feature = "java-util-List"))]
        // pub fn mCharacteristics<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/bluetooth/BluetoothGattService\0", "mCharacteristics\0", "Ljava/util/List;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [mCharacteristics](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#mCharacteristics)
        // ///
        // /// Required feature: java-util-List
        // #[cfg(any(feature = "all", feature = "java-util-List"))]
        // pub fn set_mCharacteristics<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::util::List>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/bluetooth/BluetoothGattService\0", "mCharacteristics\0", "Ljava/util/List;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [mIncludedServices](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#mIncludedServices)
        // ///
        // /// Required feature: java-util-List
        // #[cfg(any(feature = "all", feature = "java-util-List"))]
        // pub fn mIncludedServices<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/bluetooth/BluetoothGattService\0", "mIncludedServices\0", "Ljava/util/List;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [mIncludedServices](https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html#mIncludedServices)
        // ///
        // /// Required feature: java-util-List
        // #[cfg(any(feature = "all", feature = "java-util-List"))]
        // pub fn set_mIncludedServices<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::util::List>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/bluetooth/BluetoothGattService\0", "mIncludedServices\0", "Ljava/util/List;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
