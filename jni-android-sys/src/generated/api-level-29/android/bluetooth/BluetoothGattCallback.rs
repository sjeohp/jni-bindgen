// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-bluetooth-BluetoothGattCallback"))]
__jni_bindgen! {
    /// public class [BluetoothGattCallback](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html)
    ///
    /// Required feature: android-bluetooth-BluetoothGattCallback
    public class BluetoothGattCallback ("android/bluetooth/BluetoothGattCallback") extends crate::java::lang::Object {

        /// [BluetoothGattCallback](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#BluetoothGattCallback())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::bluetooth::BluetoothGattCallback>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onPhyUpdate](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onPhyUpdate(android.bluetooth.BluetoothGatt,%20int,%20int,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt")))]
        pub fn onPhyUpdate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onPhyUpdate", .descriptor == "(Landroid/bluetooth/BluetoothGatt;III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onPhyUpdate\0", "(Landroid/bluetooth/BluetoothGatt;III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onPhyRead](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onPhyRead(android.bluetooth.BluetoothGatt,%20int,%20int,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt")))]
        pub fn onPhyRead<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onPhyRead", .descriptor == "(Landroid/bluetooth/BluetoothGatt;III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onPhyRead\0", "(Landroid/bluetooth/BluetoothGatt;III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onConnectionStateChange](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onConnectionStateChange(android.bluetooth.BluetoothGatt,%20int,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt")))]
        pub fn onConnectionStateChange<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onConnectionStateChange", .descriptor == "(Landroid/bluetooth/BluetoothGatt;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onConnectionStateChange\0", "(Landroid/bluetooth/BluetoothGatt;II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onServicesDiscovered](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onServicesDiscovered(android.bluetooth.BluetoothGatt,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt")))]
        pub fn onServicesDiscovered<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onServicesDiscovered", .descriptor == "(Landroid/bluetooth/BluetoothGatt;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onServicesDiscovered\0", "(Landroid/bluetooth/BluetoothGatt;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCharacteristicRead](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onCharacteristicRead(android.bluetooth.BluetoothGatt,%20android.bluetooth.BluetoothGattCharacteristic,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt", "android-bluetooth-BluetoothGattCharacteristic"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt", feature = "android-bluetooth-BluetoothGattCharacteristic")))]
        pub fn onCharacteristicRead<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGattCharacteristic>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onCharacteristicRead", .descriptor == "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattCharacteristic;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onCharacteristicRead\0", "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattCharacteristic;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCharacteristicWrite](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onCharacteristicWrite(android.bluetooth.BluetoothGatt,%20android.bluetooth.BluetoothGattCharacteristic,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt", "android-bluetooth-BluetoothGattCharacteristic"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt", feature = "android-bluetooth-BluetoothGattCharacteristic")))]
        pub fn onCharacteristicWrite<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGattCharacteristic>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onCharacteristicWrite", .descriptor == "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattCharacteristic;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onCharacteristicWrite\0", "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattCharacteristic;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCharacteristicChanged](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onCharacteristicChanged(android.bluetooth.BluetoothGatt,%20android.bluetooth.BluetoothGattCharacteristic))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt", "android-bluetooth-BluetoothGattCharacteristic"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt", feature = "android-bluetooth-BluetoothGattCharacteristic")))]
        pub fn onCharacteristicChanged<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGattCharacteristic>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onCharacteristicChanged", .descriptor == "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattCharacteristic;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onCharacteristicChanged\0", "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattCharacteristic;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDescriptorRead](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onDescriptorRead(android.bluetooth.BluetoothGatt,%20android.bluetooth.BluetoothGattDescriptor,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt", "android-bluetooth-BluetoothGattDescriptor"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt", feature = "android-bluetooth-BluetoothGattDescriptor")))]
        pub fn onDescriptorRead<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGattDescriptor>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onDescriptorRead", .descriptor == "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattDescriptor;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onDescriptorRead\0", "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattDescriptor;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDescriptorWrite](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onDescriptorWrite(android.bluetooth.BluetoothGatt,%20android.bluetooth.BluetoothGattDescriptor,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt", "android-bluetooth-BluetoothGattDescriptor"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt", feature = "android-bluetooth-BluetoothGattDescriptor")))]
        pub fn onDescriptorWrite<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGattDescriptor>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onDescriptorWrite", .descriptor == "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattDescriptor;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onDescriptorWrite\0", "(Landroid/bluetooth/BluetoothGatt;Landroid/bluetooth/BluetoothGattDescriptor;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onReliableWriteCompleted](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onReliableWriteCompleted(android.bluetooth.BluetoothGatt,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt")))]
        pub fn onReliableWriteCompleted<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onReliableWriteCompleted", .descriptor == "(Landroid/bluetooth/BluetoothGatt;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onReliableWriteCompleted\0", "(Landroid/bluetooth/BluetoothGatt;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onReadRemoteRssi](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onReadRemoteRssi(android.bluetooth.BluetoothGatt,%20int,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt")))]
        pub fn onReadRemoteRssi<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onReadRemoteRssi", .descriptor == "(Landroid/bluetooth/BluetoothGatt;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onReadRemoteRssi\0", "(Landroid/bluetooth/BluetoothGatt;II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onMtuChanged](https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html#onMtuChanged(android.bluetooth.BluetoothGatt,%20int,%20int))
        ///
        /// Required features: "android-bluetooth-BluetoothGatt"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-BluetoothGatt")))]
        pub fn onMtuChanged<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::bluetooth::BluetoothGatt>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/BluetoothGattCallback", java.flags == PUBLIC, .name == "onMtuChanged", .descriptor == "(Landroid/bluetooth/BluetoothGatt;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/BluetoothGattCallback\0", "onMtuChanged\0", "(Landroid/bluetooth/BluetoothGatt;II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
