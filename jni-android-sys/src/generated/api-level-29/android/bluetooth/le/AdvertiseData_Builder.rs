// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-bluetooth-le-AdvertiseData_Builder"))]
__jni_bindgen! {
    /// public final class [AdvertiseData.Builder](https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html)
    ///
    /// Required feature: android-bluetooth-le-AdvertiseData_Builder
    public final class AdvertiseData_Builder ("android/bluetooth/le/AdvertiseData$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::bluetooth::le::AdvertiseData_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/le/AdvertiseData$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/le/AdvertiseData$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addServiceUuid](https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html#addServiceUuid(android.os.ParcelUuid))
        ///
        /// Required features: "android-bluetooth-le-AdvertiseData_Builder", "android-os-ParcelUuid"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-le-AdvertiseData_Builder", feature = "android-os-ParcelUuid")))]
        pub fn addServiceUuid<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelUuid>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::bluetooth::le::AdvertiseData_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/le/AdvertiseData$Builder", java.flags == PUBLIC, .name == "addServiceUuid", .descriptor == "(Landroid/os/ParcelUuid;)Landroid/bluetooth/le/AdvertiseData$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/le/AdvertiseData$Builder\0", "addServiceUuid\0", "(Landroid/os/ParcelUuid;)Landroid/bluetooth/le/AdvertiseData$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addServiceData](https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html#addServiceData(android.os.ParcelUuid,%20byte%5B%5D))
        ///
        /// Required features: "android-bluetooth-le-AdvertiseData_Builder", "android-os-ParcelUuid"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-le-AdvertiseData_Builder", feature = "android-os-ParcelUuid")))]
        pub fn addServiceData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelUuid>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::bluetooth::le::AdvertiseData_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/le/AdvertiseData$Builder", java.flags == PUBLIC, .name == "addServiceData", .descriptor == "(Landroid/os/ParcelUuid;[B)Landroid/bluetooth/le/AdvertiseData$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/le/AdvertiseData$Builder\0", "addServiceData\0", "(Landroid/os/ParcelUuid;[B)Landroid/bluetooth/le/AdvertiseData$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addManufacturerData](https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html#addManufacturerData(int,%20byte%5B%5D))
        ///
        /// Required features: "android-bluetooth-le-AdvertiseData_Builder"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-le-AdvertiseData_Builder")))]
        pub fn addManufacturerData<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::bluetooth::le::AdvertiseData_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/le/AdvertiseData$Builder", java.flags == PUBLIC, .name == "addManufacturerData", .descriptor == "(I[B)Landroid/bluetooth/le/AdvertiseData$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/le/AdvertiseData$Builder\0", "addManufacturerData\0", "(I[B)Landroid/bluetooth/le/AdvertiseData$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIncludeTxPowerLevel](https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html#setIncludeTxPowerLevel(boolean))
        ///
        /// Required features: "android-bluetooth-le-AdvertiseData_Builder"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-le-AdvertiseData_Builder")))]
        pub fn setIncludeTxPowerLevel<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::bluetooth::le::AdvertiseData_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/le/AdvertiseData$Builder", java.flags == PUBLIC, .name == "setIncludeTxPowerLevel", .descriptor == "(Z)Landroid/bluetooth/le/AdvertiseData$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/le/AdvertiseData$Builder\0", "setIncludeTxPowerLevel\0", "(Z)Landroid/bluetooth/le/AdvertiseData$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIncludeDeviceName](https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html#setIncludeDeviceName(boolean))
        ///
        /// Required features: "android-bluetooth-le-AdvertiseData_Builder"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-le-AdvertiseData_Builder")))]
        pub fn setIncludeDeviceName<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::bluetooth::le::AdvertiseData_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/le/AdvertiseData$Builder", java.flags == PUBLIC, .name == "setIncludeDeviceName", .descriptor == "(Z)Landroid/bluetooth/le/AdvertiseData$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/le/AdvertiseData$Builder\0", "setIncludeDeviceName\0", "(Z)Landroid/bluetooth/le/AdvertiseData$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html#build())
        ///
        /// Required features: "android-bluetooth-le-AdvertiseData"
        #[cfg(any(feature = "all", all(feature = "android-bluetooth-le-AdvertiseData")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::bluetooth::le::AdvertiseData>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/bluetooth/le/AdvertiseData$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/bluetooth/le/AdvertiseData;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/bluetooth/le/AdvertiseData$Builder\0", "build\0", "()Landroid/bluetooth/le/AdvertiseData;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
