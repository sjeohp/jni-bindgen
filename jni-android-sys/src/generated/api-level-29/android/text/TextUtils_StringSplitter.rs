// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-text-TextUtils_StringSplitter"))]
__jni_bindgen! {
    /// public interface [TextUtils.StringSplitter](https://developer.android.com/reference/android/text/TextUtils.StringSplitter.html)
    ///
    /// Required feature: android-text-TextUtils_StringSplitter
    public interface TextUtils_StringSplitter ("android/text/TextUtils$StringSplitter") extends crate::java::lang::Object, implements crate::java::lang::Iterable {

        /// [setString](https://developer.android.com/reference/android/text/TextUtils.StringSplitter.html#setString(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setString<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/TextUtils$StringSplitter", java.flags == PUBLIC | ABSTRACT, .name == "setString", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/TextUtils$StringSplitter\0", "setString\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
