// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-text-method-SingleLineTransformationMethod"))]
__jni_bindgen! {
    /// public class [SingleLineTransformationMethod](https://developer.android.com/reference/android/text/method/SingleLineTransformationMethod.html)
    ///
    /// Required feature: android-text-method-SingleLineTransformationMethod
    public class SingleLineTransformationMethod ("android/text/method/SingleLineTransformationMethod") extends crate::android::text::method::ReplacementTransformationMethod {

        /// [SingleLineTransformationMethod](https://developer.android.com/reference/android/text/method/SingleLineTransformationMethod.html#SingleLineTransformationMethod())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::text::method::SingleLineTransformationMethod>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/SingleLineTransformationMethod", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/SingleLineTransformationMethod\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [getOriginal](https://developer.android.com/reference/android/text/method/SingleLineTransformationMethod.html#getOriginal())
        // fn getOriginal<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::CharArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/text/method/SingleLineTransformationMethod", java.flags == PROTECTED, .name == "getOriginal", .descriptor == "()[C"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/SingleLineTransformationMethod\0", "getOriginal\0", "()[C\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getReplacement](https://developer.android.com/reference/android/text/method/SingleLineTransformationMethod.html#getReplacement())
        // fn getReplacement<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::CharArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/text/method/SingleLineTransformationMethod", java.flags == PROTECTED, .name == "getReplacement", .descriptor == "()[C"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/SingleLineTransformationMethod\0", "getReplacement\0", "()[C\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getInstance](https://developer.android.com/reference/android/text/method/SingleLineTransformationMethod.html#getInstance())
        ///
        /// Required features: "android-text-method-SingleLineTransformationMethod"
        #[cfg(any(feature = "all", all(feature = "android-text-method-SingleLineTransformationMethod")))]
        pub fn getInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::text::method::SingleLineTransformationMethod>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/SingleLineTransformationMethod", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "()Landroid/text/method/SingleLineTransformationMethod;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/SingleLineTransformationMethod\0", "getInstance\0", "()Landroid/text/method/SingleLineTransformationMethod;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
