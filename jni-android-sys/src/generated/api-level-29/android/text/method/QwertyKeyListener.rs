// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-text-method-QwertyKeyListener"))]
__jni_bindgen! {
    /// public class [QwertyKeyListener](https://developer.android.com/reference/android/text/method/QwertyKeyListener.html)
    ///
    /// Required feature: android-text-method-QwertyKeyListener
    public class QwertyKeyListener ("android/text/method/QwertyKeyListener") extends crate::android::text::method::BaseKeyListener {

        /// [QwertyKeyListener](https://developer.android.com/reference/android/text/method/QwertyKeyListener.html#QwertyKeyListener(android.text.method.TextKeyListener.Capitalize,%20boolean))
        ///
        /// Required features: "android-text-method-TextKeyListener_Capitalize"
        #[cfg(any(feature = "all", all(feature = "android-text-method-TextKeyListener_Capitalize")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::method::TextKeyListener_Capitalize>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::text::method::QwertyKeyListener>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/QwertyKeyListener", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/text/method/TextKeyListener$Capitalize;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/QwertyKeyListener\0", "<init>\0", "(Landroid/text/method/TextKeyListener$Capitalize;Z)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/text/method/QwertyKeyListener.html#getInstance(boolean,%20android.text.method.TextKeyListener.Capitalize))
        ///
        /// Required features: "android-text-method-QwertyKeyListener", "android-text-method-TextKeyListener_Capitalize"
        #[cfg(any(feature = "all", all(feature = "android-text-method-QwertyKeyListener", feature = "android-text-method-TextKeyListener_Capitalize")))]
        pub fn getInstance<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: bool, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::method::TextKeyListener_Capitalize>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::text::method::QwertyKeyListener>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/QwertyKeyListener", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(ZLandroid/text/method/TextKeyListener$Capitalize;)Landroid/text/method/QwertyKeyListener;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/QwertyKeyListener\0", "getInstance\0", "(ZLandroid/text/method/TextKeyListener$Capitalize;)Landroid/text/method/QwertyKeyListener;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstanceForFullKeyboard](https://developer.android.com/reference/android/text/method/QwertyKeyListener.html#getInstanceForFullKeyboard())
        ///
        /// Required features: "android-text-method-QwertyKeyListener"
        #[cfg(any(feature = "all", all(feature = "android-text-method-QwertyKeyListener")))]
        pub fn getInstanceForFullKeyboard<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::text::method::QwertyKeyListener>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/QwertyKeyListener", java.flags == PUBLIC | STATIC, .name == "getInstanceForFullKeyboard", .descriptor == "()Landroid/text/method/QwertyKeyListener;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/QwertyKeyListener\0", "getInstanceForFullKeyboard\0", "()Landroid/text/method/QwertyKeyListener;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInputType](https://developer.android.com/reference/android/text/method/QwertyKeyListener.html#getInputType())
        pub fn getInputType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/QwertyKeyListener", java.flags == PUBLIC, .name == "getInputType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/QwertyKeyListener\0", "getInputType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onKeyDown](https://developer.android.com/reference/android/text/method/QwertyKeyListener.html#onKeyDown(android.view.View,%20android.text.Editable,%20int,%20android.view.KeyEvent))
        ///
        /// Required features: "android-text-Editable", "android-view-KeyEvent", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-text-Editable", feature = "android-view-KeyEvent", feature = "android-view-View")))]
        pub fn onKeyDown<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Editable>>, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/QwertyKeyListener", java.flags == PUBLIC, .name == "onKeyDown", .descriptor == "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/QwertyKeyListener\0", "onKeyDown\0", "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [markAsReplaced](https://developer.android.com/reference/android/text/method/QwertyKeyListener.html#markAsReplaced(android.text.Spannable,%20int,%20int,%20java.lang.String))
        ///
        /// Required features: "android-text-Spannable", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable", feature = "java-lang-String")))]
        pub fn markAsReplaced<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/QwertyKeyListener", java.flags == PUBLIC | STATIC, .name == "markAsReplaced", .descriptor == "(Landroid/text/Spannable;IILjava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/QwertyKeyListener\0", "markAsReplaced\0", "(Landroid/text/Spannable;IILjava/lang/String;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
