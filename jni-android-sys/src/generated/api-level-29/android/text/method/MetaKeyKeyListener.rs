// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-text-method-MetaKeyKeyListener"))]
__jni_bindgen! {
    /// public class [MetaKeyKeyListener](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html)
    ///
    /// Required feature: android-text-method-MetaKeyKeyListener
    public class MetaKeyKeyListener ("android/text/method/MetaKeyKeyListener") extends crate::java::lang::Object {

        /// [MetaKeyKeyListener](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#MetaKeyKeyListener())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::text::method::MetaKeyKeyListener>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/MetaKeyKeyListener\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetMetaState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#resetMetaState(android.text.Spannable))
        ///
        /// Required features: "android-text-Spannable"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable")))]
        pub fn resetMetaState<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "resetMetaState", .descriptor == "(Landroid/text/Spannable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "resetMetaState\0", "(Landroid/text/Spannable;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#getMetaState(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getMetaState_CharSequence<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC | FINAL, .name == "getMetaState", .descriptor == "(Ljava/lang/CharSequence;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "getMetaState\0", "(Ljava/lang/CharSequence;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#getMetaState(java.lang.CharSequence,%20android.view.KeyEvent))
        ///
        /// Required features: "android-view-KeyEvent", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent", feature = "java-lang-CharSequence")))]
        pub fn getMetaState_CharSequence_KeyEvent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC | FINAL, .name == "getMetaState", .descriptor == "(Ljava/lang/CharSequence;Landroid/view/KeyEvent;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "getMetaState\0", "(Ljava/lang/CharSequence;Landroid/view/KeyEvent;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#getMetaState(java.lang.CharSequence,%20int))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getMetaState_CharSequence_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC | FINAL, .name == "getMetaState", .descriptor == "(Ljava/lang/CharSequence;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "getMetaState\0", "(Ljava/lang/CharSequence;I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#getMetaState(java.lang.CharSequence,%20int,%20android.view.KeyEvent))
        ///
        /// Required features: "android-view-KeyEvent", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent", feature = "java-lang-CharSequence")))]
        pub fn getMetaState_CharSequence_int_KeyEvent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC | FINAL, .name == "getMetaState", .descriptor == "(Ljava/lang/CharSequence;ILandroid/view/KeyEvent;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "getMetaState\0", "(Ljava/lang/CharSequence;ILandroid/view/KeyEvent;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [adjustMetaAfterKeypress](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#adjustMetaAfterKeypress(android.text.Spannable))
        ///
        /// Required features: "android-text-Spannable"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable")))]
        pub fn adjustMetaAfterKeypress_Spannable<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "adjustMetaAfterKeypress", .descriptor == "(Landroid/text/Spannable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "adjustMetaAfterKeypress\0", "(Landroid/text/Spannable;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isMetaTracker](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#isMetaTracker(java.lang.CharSequence,%20java.lang.Object))
        ///
        /// Required features: "java-lang-CharSequence", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence", feature = "java-lang-Object")))]
        pub fn isMetaTracker<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "isMetaTracker", .descriptor == "(Ljava/lang/CharSequence;Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "isMetaTracker\0", "(Ljava/lang/CharSequence;Ljava/lang/Object;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSelectingMetaTracker](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#isSelectingMetaTracker(java.lang.CharSequence,%20java.lang.Object))
        ///
        /// Required features: "java-lang-CharSequence", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence", feature = "java-lang-Object")))]
        pub fn isSelectingMetaTracker<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "isSelectingMetaTracker", .descriptor == "(Ljava/lang/CharSequence;Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "isSelectingMetaTracker\0", "(Ljava/lang/CharSequence;Ljava/lang/Object;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [resetLockedMeta](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#resetLockedMeta(android.text.Spannable))
        // ///
        // /// Required features: "android-text-Spannable"
        // #[cfg(any(feature = "all", all(feature = "android-text-Spannable")))]
        // fn resetLockedMeta<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PROTECTED | STATIC, .name == "resetLockedMeta", .descriptor == "(Landroid/text/Spannable;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "resetLockedMeta\0", "(Landroid/text/Spannable;)V\0");
        //         __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [onKeyDown](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#onKeyDown(android.view.View,%20android.text.Editable,%20int,%20android.view.KeyEvent))
        ///
        /// Required features: "android-text-Editable", "android-view-KeyEvent", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-text-Editable", feature = "android-view-KeyEvent", feature = "android-view-View")))]
        pub fn onKeyDown<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Editable>>, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC, .name == "onKeyDown", .descriptor == "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/MetaKeyKeyListener\0", "onKeyDown\0", "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onKeyUp](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#onKeyUp(android.view.View,%20android.text.Editable,%20int,%20android.view.KeyEvent))
        ///
        /// Required features: "android-text-Editable", "android-view-KeyEvent", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-text-Editable", feature = "android-view-KeyEvent", feature = "android-view-View")))]
        pub fn onKeyUp<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Editable>>, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC, .name == "onKeyUp", .descriptor == "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/MetaKeyKeyListener\0", "onKeyUp\0", "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearMetaKeyState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#clearMetaKeyState(android.view.View,%20android.text.Editable,%20int))
        ///
        /// Required features: "android-text-Editable", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-text-Editable", feature = "android-view-View")))]
        pub fn clearMetaKeyState_View_Editable_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Editable>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC, .name == "clearMetaKeyState", .descriptor == "(Landroid/view/View;Landroid/text/Editable;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/MetaKeyKeyListener\0", "clearMetaKeyState\0", "(Landroid/view/View;Landroid/text/Editable;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearMetaKeyState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#clearMetaKeyState(android.text.Editable,%20int))
        ///
        /// Required features: "android-text-Editable"
        #[cfg(any(feature = "all", all(feature = "android-text-Editable")))]
        pub fn clearMetaKeyState_Editable_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Editable>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "clearMetaKeyState", .descriptor == "(Landroid/text/Editable;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "clearMetaKeyState\0", "(Landroid/text/Editable;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetLockedMeta](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#resetLockedMeta(long))
        pub fn resetLockedMeta<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "resetLockedMeta", .descriptor == "(J)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "resetLockedMeta\0", "(J)J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#getMetaState(long))
        pub fn getMetaState_long<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC | FINAL, .name == "getMetaState", .descriptor == "(J)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "getMetaState\0", "(J)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#getMetaState(long,%20int))
        pub fn getMetaState_long_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC | FINAL, .name == "getMetaState", .descriptor == "(JI)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "getMetaState\0", "(JI)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [adjustMetaAfterKeypress](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#adjustMetaAfterKeypress(long))
        pub fn adjustMetaAfterKeypress_long<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "adjustMetaAfterKeypress", .descriptor == "(J)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "adjustMetaAfterKeypress\0", "(J)J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [handleKeyDown](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#handleKeyDown(long,%20int,%20android.view.KeyEvent))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        pub fn handleKeyDown<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "handleKeyDown", .descriptor == "(JILandroid/view/KeyEvent;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "handleKeyDown\0", "(JILandroid/view/KeyEvent;)J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [handleKeyUp](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#handleKeyUp(long,%20int,%20android.view.KeyEvent))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        pub fn handleKeyUp<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC | STATIC, .name == "handleKeyUp", .descriptor == "(JILandroid/view/KeyEvent;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/method/MetaKeyKeyListener\0", "handleKeyUp\0", "(JILandroid/view/KeyEvent;)J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearMetaKeyState](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#clearMetaKeyState(long,%20int))
        pub fn clearMetaKeyState_long_int<'env>(&'env self, arg0: i64, arg1: i32) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/MetaKeyKeyListener", java.flags == PUBLIC, .name == "clearMetaKeyState", .descriptor == "(JI)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/MetaKeyKeyListener\0", "clearMetaKeyState\0", "(JI)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [META_ALT_LOCKED](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#META_ALT_LOCKED)
        pub const META_ALT_LOCKED : i32 = 512;

        /// public static final [META_ALT_ON](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#META_ALT_ON)
        pub const META_ALT_ON : i32 = 2;

        /// public static final [META_CAP_LOCKED](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#META_CAP_LOCKED)
        pub const META_CAP_LOCKED : i32 = 256;

        /// public static final [META_SHIFT_ON](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#META_SHIFT_ON)
        pub const META_SHIFT_ON : i32 = 1;

        /// public static final [META_SYM_LOCKED](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#META_SYM_LOCKED)
        pub const META_SYM_LOCKED : i32 = 1024;

        /// public static final [META_SYM_ON](https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html#META_SYM_ON)
        pub const META_SYM_ON : i32 = 4;
    }
}
