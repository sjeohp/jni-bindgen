// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-text-method-CharacterPickerDialog"))]
__jni_bindgen! {
    /// public class [CharacterPickerDialog](https://developer.android.com/reference/android/text/method/CharacterPickerDialog.html)
    ///
    /// Required feature: android-text-method-CharacterPickerDialog
    public class CharacterPickerDialog ("android/text/method/CharacterPickerDialog") extends crate::android::app::Dialog, implements crate::android::widget::AdapterView_OnItemClickListener, crate::android::view::View_OnClickListener {

        /// [CharacterPickerDialog](https://developer.android.com/reference/android/text/method/CharacterPickerDialog.html#CharacterPickerDialog(android.content.Context,%20android.view.View,%20android.text.Editable,%20java.lang.String,%20boolean))
        ///
        /// Required features: "android-content-Context", "android-text-Editable", "android-view-View", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-text-Editable", feature = "android-view-View", feature = "java-lang-String")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Editable>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg4: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::text::method::CharacterPickerDialog>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/CharacterPickerDialog", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/view/View;Landroid/text/Editable;Ljava/lang/String;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/CharacterPickerDialog\0", "<init>\0", "(Landroid/content/Context;Landroid/view/View;Landroid/text/Editable;Ljava/lang/String;Z)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [onCreate](https://developer.android.com/reference/android/text/method/CharacterPickerDialog.html#onCreate(android.os.Bundle))
        // ///
        // /// Required features: "android-os-Bundle"
        // #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        // fn onCreate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/text/method/CharacterPickerDialog", java.flags == PROTECTED, .name == "onCreate", .descriptor == "(Landroid/os/Bundle;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/CharacterPickerDialog\0", "onCreate\0", "(Landroid/os/Bundle;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [onItemClick](https://developer.android.com/reference/android/text/method/CharacterPickerDialog.html#onItemClick(android.widget.AdapterView,%20android.view.View,%20int,%20long))
        ///
        /// Required features: "android-view-View", "android-widget-AdapterView"
        #[cfg(any(feature = "all", all(feature = "android-view-View", feature = "android-widget-AdapterView")))]
        pub fn onItemClick<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::AdapterView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg2: i32, arg3: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/CharacterPickerDialog", java.flags == PUBLIC, .name == "onItemClick", .descriptor == "(Landroid/widget/AdapterView;Landroid/view/View;IJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/CharacterPickerDialog\0", "onItemClick\0", "(Landroid/widget/AdapterView;Landroid/view/View;IJ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onClick](https://developer.android.com/reference/android/text/method/CharacterPickerDialog.html#onClick(android.view.View))
        ///
        /// Required features: "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-view-View")))]
        pub fn onClick<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/method/CharacterPickerDialog", java.flags == PUBLIC, .name == "onClick", .descriptor == "(Landroid/view/View;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/method/CharacterPickerDialog\0", "onClick\0", "(Landroid/view/View;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
