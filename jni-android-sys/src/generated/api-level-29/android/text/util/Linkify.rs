// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-text-util-Linkify"))]
__jni_bindgen! {
    /// public class [Linkify](https://developer.android.com/reference/android/text/util/Linkify.html)
    ///
    /// Required feature: android-text-util-Linkify
    public class Linkify ("android/text/util/Linkify") extends crate::java::lang::Object {

        /// [Linkify](https://developer.android.com/reference/android/text/util/Linkify.html#Linkify())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::text::util::Linkify>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/text/util/Linkify\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.text.Spannable,%20int))
        ///
        /// Required features: "android-text-Spannable"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable")))]
        pub fn addLinks_Spannable_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/text/Spannable;I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/text/Spannable;I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.text.Spannable,%20int,%20java.util.function.Function))
        ///
        /// Required features: "android-text-Spannable", "java-util-function-Function"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable", feature = "java-util-function-Function")))]
        pub fn addLinks_Spannable_int_Function<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/text/Spannable;ILjava/util/function/Function;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/text/Spannable;ILjava/util/function/Function;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.widget.TextView,%20int))
        ///
        /// Required features: "android-widget-TextView"
        #[cfg(any(feature = "all", all(feature = "android-widget-TextView")))]
        pub fn addLinks_TextView_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::TextView>>, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/widget/TextView;I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/widget/TextView;I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.widget.TextView,%20java.util.regex.Pattern,%20java.lang.String))
        ///
        /// Required features: "android-widget-TextView", "java-lang-String", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-widget-TextView", feature = "java-lang-String", feature = "java-util-regex-Pattern")))]
        pub fn addLinks_TextView_Pattern_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::TextView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.widget.TextView,%20java.util.regex.Pattern,%20java.lang.String,%20android.text.util.Linkify.MatchFilter,%20android.text.util.Linkify.TransformFilter))
        ///
        /// Required features: "android-text-util-Linkify_MatchFilter", "android-text-util-Linkify_TransformFilter", "android-widget-TextView", "java-lang-String", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-text-util-Linkify_MatchFilter", feature = "android-text-util-Linkify_TransformFilter", feature = "android-widget-TextView", feature = "java-lang-String", feature = "java-util-regex-Pattern")))]
        pub fn addLinks_TextView_Pattern_String_MatchFilter_TransformFilter<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::TextView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_MatchFilter>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_TransformFilter>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.widget.TextView,%20java.util.regex.Pattern,%20java.lang.String,%20java.lang.String%5B%5D,%20android.text.util.Linkify.MatchFilter,%20android.text.util.Linkify.TransformFilter))
        ///
        /// Required features: "android-text-util-Linkify_MatchFilter", "android-text-util-Linkify_TransformFilter", "android-widget-TextView", "java-lang-String", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-text-util-Linkify_MatchFilter", feature = "android-text-util-Linkify_TransformFilter", feature = "android-widget-TextView", feature = "java-lang-String", feature = "java-util-regex-Pattern")))]
        pub fn addLinks_TextView_Pattern_String_String_array_MatchFilter_TransformFilter<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::TextView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_MatchFilter>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_TransformFilter>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.text.Spannable,%20java.util.regex.Pattern,%20java.lang.String))
        ///
        /// Required features: "android-text-Spannable", "java-lang-String", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable", feature = "java-lang-String", feature = "java-util-regex-Pattern")))]
        pub fn addLinks_Spannable_Pattern_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.text.Spannable,%20java.util.regex.Pattern,%20java.lang.String,%20android.text.util.Linkify.MatchFilter,%20android.text.util.Linkify.TransformFilter))
        ///
        /// Required features: "android-text-Spannable", "android-text-util-Linkify_MatchFilter", "android-text-util-Linkify_TransformFilter", "java-lang-String", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable", feature = "android-text-util-Linkify_MatchFilter", feature = "android-text-util-Linkify_TransformFilter", feature = "java-lang-String", feature = "java-util-regex-Pattern")))]
        pub fn addLinks_Spannable_Pattern_String_MatchFilter_TransformFilter<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_MatchFilter>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_TransformFilter>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.text.Spannable,%20java.util.regex.Pattern,%20java.lang.String,%20java.lang.String%5B%5D,%20android.text.util.Linkify.MatchFilter,%20android.text.util.Linkify.TransformFilter))
        ///
        /// Required features: "android-text-Spannable", "android-text-util-Linkify_MatchFilter", "android-text-util-Linkify_TransformFilter", "java-lang-String", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable", feature = "android-text-util-Linkify_MatchFilter", feature = "android-text-util-Linkify_TransformFilter", feature = "java-lang-String", feature = "java-util-regex-Pattern")))]
        pub fn addLinks_Spannable_Pattern_String_String_array_MatchFilter_TransformFilter<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_MatchFilter>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_TransformFilter>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLinks](https://developer.android.com/reference/android/text/util/Linkify.html#addLinks(android.text.Spannable,%20java.util.regex.Pattern,%20java.lang.String,%20java.lang.String%5B%5D,%20android.text.util.Linkify.MatchFilter,%20android.text.util.Linkify.TransformFilter,%20java.util.function.Function))
        ///
        /// Required features: "android-text-Spannable", "android-text-util-Linkify_MatchFilter", "android-text-util-Linkify_TransformFilter", "java-lang-String", "java-util-function-Function", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-text-Spannable", feature = "android-text-util-Linkify_MatchFilter", feature = "android-text-util-Linkify_TransformFilter", feature = "java-lang-String", feature = "java-util-function-Function", feature = "java-util-regex-Pattern")))]
        pub fn addLinks_Spannable_Pattern_String_String_array_MatchFilter_TransformFilter_Function<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::Spannable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_MatchFilter>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::text::util::Linkify_TransformFilter>>, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::function::Function>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/text/util/Linkify", java.flags == PUBLIC | STATIC | FINAL, .name == "addLinks", .descriptor == "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;Ljava/util/function/Function;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/text/util/Linkify\0", "addLinks\0", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;Ljava/util/function/Function;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ALL](https://developer.android.com/reference/android/text/util/Linkify.html#ALL)
        pub const ALL : i32 = 15;

        /// public static final [EMAIL_ADDRESSES](https://developer.android.com/reference/android/text/util/Linkify.html#EMAIL_ADDRESSES)
        pub const EMAIL_ADDRESSES : i32 = 2;

        /// public static final [MAP_ADDRESSES](https://developer.android.com/reference/android/text/util/Linkify.html#MAP_ADDRESSES)
        #[deprecated] pub const MAP_ADDRESSES : i32 = 8;

        /// public static final [PHONE_NUMBERS](https://developer.android.com/reference/android/text/util/Linkify.html#PHONE_NUMBERS)
        pub const PHONE_NUMBERS : i32 = 4;

        /// public static final [WEB_URLS](https://developer.android.com/reference/android/text/util/Linkify.html#WEB_URLS)
        pub const WEB_URLS : i32 = 1;

        /// **get** public static final [sPhoneNumberMatchFilter](https://developer.android.com/reference/android/text/util/Linkify.html#sPhoneNumberMatchFilter)
        ///
        /// Required feature: android-text-util-Linkify_MatchFilter
        #[cfg(any(feature = "all", feature = "android-text-util-Linkify_MatchFilter"))]
        pub fn sPhoneNumberMatchFilter<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::text::util::Linkify_MatchFilter>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/text/util/Linkify\0", "sPhoneNumberMatchFilter\0", "Landroid/text/util/Linkify$MatchFilter;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [sPhoneNumberTransformFilter](https://developer.android.com/reference/android/text/util/Linkify.html#sPhoneNumberTransformFilter)
        ///
        /// Required feature: android-text-util-Linkify_TransformFilter
        #[cfg(any(feature = "all", feature = "android-text-util-Linkify_TransformFilter"))]
        pub fn sPhoneNumberTransformFilter<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::text::util::Linkify_TransformFilter>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/text/util/Linkify\0", "sPhoneNumberTransformFilter\0", "Landroid/text/util/Linkify$TransformFilter;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [sUrlMatchFilter](https://developer.android.com/reference/android/text/util/Linkify.html#sUrlMatchFilter)
        ///
        /// Required feature: android-text-util-Linkify_MatchFilter
        #[cfg(any(feature = "all", feature = "android-text-util-Linkify_MatchFilter"))]
        pub fn sUrlMatchFilter<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::text::util::Linkify_MatchFilter>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/text/util/Linkify\0", "sUrlMatchFilter\0", "Landroid/text/util/Linkify$MatchFilter;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
