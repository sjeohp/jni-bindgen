// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-inputmethodservice-InputMethodService_Insets"))]
__jni_bindgen! {
    /// public final class [InputMethodService.Insets](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html)
    ///
    /// Required feature: android-inputmethodservice-InputMethodService_Insets
    public final class InputMethodService_Insets ("android/inputmethodservice/InputMethodService$Insets") extends crate::java::lang::Object {

        /// [Insets](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#Insets())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::inputmethodservice::InputMethodService_Insets>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/InputMethodService$Insets", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/InputMethodService$Insets\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [TOUCHABLE_INSETS_CONTENT](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#TOUCHABLE_INSETS_CONTENT)
        pub const TOUCHABLE_INSETS_CONTENT : i32 = 1;

        /// public static final [TOUCHABLE_INSETS_FRAME](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#TOUCHABLE_INSETS_FRAME)
        pub const TOUCHABLE_INSETS_FRAME : i32 = 0;

        /// public static final [TOUCHABLE_INSETS_REGION](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#TOUCHABLE_INSETS_REGION)
        pub const TOUCHABLE_INSETS_REGION : i32 = 3;

        /// public static final [TOUCHABLE_INSETS_VISIBLE](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#TOUCHABLE_INSETS_VISIBLE)
        pub const TOUCHABLE_INSETS_VISIBLE : i32 = 2;

        /// **get** public [contentTopInsets](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#contentTopInsets)
        pub fn contentTopInsets<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/inputmethodservice/InputMethodService$Insets\0", "contentTopInsets\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [contentTopInsets](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#contentTopInsets)
        pub fn set_contentTopInsets<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/inputmethodservice/InputMethodService$Insets\0", "contentTopInsets\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [touchableInsets](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#touchableInsets)
        pub fn touchableInsets<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/inputmethodservice/InputMethodService$Insets\0", "touchableInsets\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [touchableInsets](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#touchableInsets)
        pub fn set_touchableInsets<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/inputmethodservice/InputMethodService$Insets\0", "touchableInsets\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public final [touchableRegion](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#touchableRegion)
        ///
        /// Required feature: android-graphics-Region
        #[cfg(any(feature = "all", feature = "android-graphics-Region"))]
        pub fn touchableRegion<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Region>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/inputmethodservice/InputMethodService$Insets\0", "touchableRegion\0", "Landroid/graphics/Region;\0");
                env.get_object_field(class, field)
            }
        }

        /// **get** public [visibleTopInsets](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#visibleTopInsets)
        pub fn visibleTopInsets<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/inputmethodservice/InputMethodService$Insets\0", "visibleTopInsets\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [visibleTopInsets](https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html#visibleTopInsets)
        pub fn set_visibleTopInsets<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/inputmethodservice/InputMethodService$Insets\0", "visibleTopInsets\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }
    }
}
