// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-inputmethodservice-AbstractInputMethodService_AbstractInputMethodSessionImpl"))]
__jni_bindgen! {
    /// public class [AbstractInputMethodService.AbstractInputMethodSessionImpl](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html)
    ///
    /// Required feature: android-inputmethodservice-AbstractInputMethodService_AbstractInputMethodSessionImpl
    public class AbstractInputMethodService_AbstractInputMethodSessionImpl ("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl") extends crate::java::lang::Object, implements crate::android::view::inputmethod::InputMethodSession {

        /// [AbstractInputMethodSessionImpl](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#AbstractInputMethodSessionImpl(android.inputmethodservice.AbstractInputMethodService))
        ///
        /// Required features: "android-inputmethodservice-AbstractInputMethodService"
        #[cfg(any(feature = "all", all(feature = "android-inputmethodservice-AbstractInputMethodService")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::inputmethodservice::AbstractInputMethodService>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::inputmethodservice::AbstractInputMethodService_AbstractInputMethodSessionImpl>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/inputmethodservice/AbstractInputMethodService;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl\0", "<init>\0", "(Landroid/inputmethodservice/AbstractInputMethodService;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isEnabled](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#isEnabled())
        pub fn isEnabled<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", java.flags == PUBLIC, .name == "isEnabled", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl\0", "isEnabled\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isRevoked](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#isRevoked())
        pub fn isRevoked<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", java.flags == PUBLIC, .name == "isRevoked", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl\0", "isRevoked\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEnabled](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#setEnabled(boolean))
        pub fn setEnabled<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", java.flags == PUBLIC, .name == "setEnabled", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl\0", "setEnabled\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [revokeSelf](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#revokeSelf())
        pub fn revokeSelf<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", java.flags == PUBLIC, .name == "revokeSelf", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl\0", "revokeSelf\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dispatchKeyEvent](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#dispatchKeyEvent(int,%20android.view.KeyEvent,%20android.view.inputmethod.InputMethodSession.EventCallback))
        ///
        /// Required features: "android-view-KeyEvent", "android-view-inputmethod-InputMethodSession_EventCallback"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent", feature = "android-view-inputmethod-InputMethodSession_EventCallback")))]
        pub fn dispatchKeyEvent<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::inputmethod::InputMethodSession_EventCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", java.flags == PUBLIC, .name == "dispatchKeyEvent", .descriptor == "(ILandroid/view/KeyEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl\0", "dispatchKeyEvent\0", "(ILandroid/view/KeyEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dispatchTrackballEvent](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#dispatchTrackballEvent(int,%20android.view.MotionEvent,%20android.view.inputmethod.InputMethodSession.EventCallback))
        ///
        /// Required features: "android-view-MotionEvent", "android-view-inputmethod-InputMethodSession_EventCallback"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent", feature = "android-view-inputmethod-InputMethodSession_EventCallback")))]
        pub fn dispatchTrackballEvent<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::inputmethod::InputMethodSession_EventCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", java.flags == PUBLIC, .name == "dispatchTrackballEvent", .descriptor == "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl\0", "dispatchTrackballEvent\0", "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dispatchGenericMotionEvent](https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#dispatchGenericMotionEvent(int,%20android.view.MotionEvent,%20android.view.inputmethod.InputMethodSession.EventCallback))
        ///
        /// Required features: "android-view-MotionEvent", "android-view-inputmethod-InputMethodSession_EventCallback"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent", feature = "android-view-inputmethod-InputMethodSession_EventCallback")))]
        pub fn dispatchGenericMotionEvent<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::inputmethod::InputMethodSession_EventCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", java.flags == PUBLIC, .name == "dispatchGenericMotionEvent", .descriptor == "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl\0", "dispatchGenericMotionEvent\0", "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::inputmethodservice::AbstractInputMethodService>> { ... }
    }
}
