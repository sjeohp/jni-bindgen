// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-inputmethodservice-Keyboard"))]
__jni_bindgen! {
    /// public class [Keyboard](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html)
    ///
    /// Required feature: android-inputmethodservice-Keyboard
    #[deprecated] public class Keyboard ("android/inputmethodservice/Keyboard") extends crate::java::lang::Object {

        /// [Keyboard](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#Keyboard(android.content.Context,%20int))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        #[deprecated] pub fn new_Context_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::inputmethodservice::Keyboard>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "<init>\0", "(Landroid/content/Context;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Keyboard](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#Keyboard(android.content.Context,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        #[deprecated] pub fn new_Context_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::inputmethodservice::Keyboard>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "<init>\0", "(Landroid/content/Context;IIII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Keyboard](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#Keyboard(android.content.Context,%20int,%20int))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        #[deprecated] pub fn new_Context_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::inputmethodservice::Keyboard>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "<init>\0", "(Landroid/content/Context;II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Keyboard](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#Keyboard(android.content.Context,%20int,%20java.lang.CharSequence,%20int,%20int))
        ///
        /// Required features: "android-content-Context", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-lang-CharSequence")))]
        #[deprecated] pub fn new_Context_int_CharSequence_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::inputmethodservice::Keyboard>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;ILjava/lang/CharSequence;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "<init>\0", "(Landroid/content/Context;ILjava/lang/CharSequence;II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeys](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getKeys())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        #[deprecated] pub fn getKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "getKeys", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getKeys\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getModifierKeys](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getModifierKeys())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        #[deprecated] pub fn getModifierKeys<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "getModifierKeys", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getModifierKeys\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [getHorizontalGap](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getHorizontalGap())
        // #[deprecated] fn getHorizontalGap<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "getHorizontalGap", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getHorizontalGap\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [setHorizontalGap](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#setHorizontalGap(int))
        // #[deprecated] fn setHorizontalGap<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "setHorizontalGap", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "setHorizontalGap\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getVerticalGap](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getVerticalGap())
        // #[deprecated] fn getVerticalGap<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "getVerticalGap", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getVerticalGap\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [setVerticalGap](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#setVerticalGap(int))
        // #[deprecated] fn setVerticalGap<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "setVerticalGap", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "setVerticalGap\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getKeyHeight](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getKeyHeight())
        // #[deprecated] fn getKeyHeight<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "getKeyHeight", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getKeyHeight\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [setKeyHeight](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#setKeyHeight(int))
        // #[deprecated] fn setKeyHeight<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "setKeyHeight", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "setKeyHeight\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getKeyWidth](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getKeyWidth())
        // #[deprecated] fn getKeyWidth<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "getKeyWidth", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getKeyWidth\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [setKeyWidth](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#setKeyWidth(int))
        // #[deprecated] fn setKeyWidth<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "setKeyWidth", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "setKeyWidth\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getHeight](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getHeight())
        #[deprecated] pub fn getHeight<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "getHeight", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getHeight\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinWidth](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getMinWidth())
        #[deprecated] pub fn getMinWidth<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "getMinWidth", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getMinWidth\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setShifted](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#setShifted(boolean))
        #[deprecated] pub fn setShifted<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "setShifted", .descriptor == "(Z)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "setShifted\0", "(Z)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isShifted](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#isShifted())
        #[deprecated] pub fn isShifted<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "isShifted", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "isShifted\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getShiftKeyIndex](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getShiftKeyIndex())
        #[deprecated] pub fn getShiftKeyIndex<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "getShiftKeyIndex", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getShiftKeyIndex\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNearestKeys](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#getNearestKeys(int,%20int))
        #[deprecated] pub fn getNearestKeys<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::IntArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/inputmethodservice/Keyboard", java.flags == PUBLIC, .name == "getNearestKeys", .descriptor == "(II)[I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "getNearestKeys\0", "(II)[I\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [createRowFromXml](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#createRowFromXml(android.content.res.Resources,%20android.content.res.XmlResourceParser))
        // ///
        // /// Required features: "android-content-res-Resources", "android-content-res-XmlResourceParser", "android-inputmethodservice-Keyboard_Row"
        // #[cfg(any(feature = "all", all(feature = "android-content-res-Resources", feature = "android-content-res-XmlResourceParser", feature = "android-inputmethodservice-Keyboard_Row")))]
        // #[deprecated] fn createRowFromXml<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::res::Resources>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::res::XmlResourceParser>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::inputmethodservice::Keyboard_Row>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "createRowFromXml", .descriptor == "(Landroid/content/res/Resources;Landroid/content/res/XmlResourceParser;)Landroid/inputmethodservice/Keyboard$Row;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "createRowFromXml\0", "(Landroid/content/res/Resources;Landroid/content/res/XmlResourceParser;)Landroid/inputmethodservice/Keyboard$Row;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [createKeyFromXml](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#createKeyFromXml(android.content.res.Resources,%20android.inputmethodservice.Keyboard.Row,%20int,%20int,%20android.content.res.XmlResourceParser))
        // ///
        // /// Required features: "android-content-res-Resources", "android-content-res-XmlResourceParser", "android-inputmethodservice-Keyboard_Key", "android-inputmethodservice-Keyboard_Row"
        // #[cfg(any(feature = "all", all(feature = "android-content-res-Resources", feature = "android-content-res-XmlResourceParser", feature = "android-inputmethodservice-Keyboard_Key", feature = "android-inputmethodservice-Keyboard_Row")))]
        // #[deprecated] fn createKeyFromXml<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::res::Resources>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::inputmethodservice::Keyboard_Row>>, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::res::XmlResourceParser>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::inputmethodservice::Keyboard_Key>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/inputmethodservice/Keyboard", java.flags == PROTECTED, .name == "createKeyFromXml", .descriptor == "(Landroid/content/res/Resources;Landroid/inputmethodservice/Keyboard$Row;IILandroid/content/res/XmlResourceParser;)Landroid/inputmethodservice/Keyboard$Key;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/inputmethodservice/Keyboard\0", "createKeyFromXml\0", "(Landroid/content/res/Resources;Landroid/inputmethodservice/Keyboard$Row;IILandroid/content/res/XmlResourceParser;)Landroid/inputmethodservice/Keyboard$Key;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [EDGE_BOTTOM](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#EDGE_BOTTOM)
        #[deprecated] pub const EDGE_BOTTOM : i32 = 8;

        /// public static final [EDGE_LEFT](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#EDGE_LEFT)
        #[deprecated] pub const EDGE_LEFT : i32 = 1;

        /// public static final [EDGE_RIGHT](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#EDGE_RIGHT)
        #[deprecated] pub const EDGE_RIGHT : i32 = 2;

        /// public static final [EDGE_TOP](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#EDGE_TOP)
        #[deprecated] pub const EDGE_TOP : i32 = 4;

        /// public static final [KEYCODE_ALT](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#KEYCODE_ALT)
        #[deprecated] pub const KEYCODE_ALT : i32 = -6;

        /// public static final [KEYCODE_CANCEL](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#KEYCODE_CANCEL)
        #[deprecated] pub const KEYCODE_CANCEL : i32 = -3;

        /// public static final [KEYCODE_DELETE](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#KEYCODE_DELETE)
        #[deprecated] pub const KEYCODE_DELETE : i32 = -5;

        /// public static final [KEYCODE_DONE](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#KEYCODE_DONE)
        #[deprecated] pub const KEYCODE_DONE : i32 = -4;

        /// public static final [KEYCODE_MODE_CHANGE](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#KEYCODE_MODE_CHANGE)
        #[deprecated] pub const KEYCODE_MODE_CHANGE : i32 = -2;

        /// public static final [KEYCODE_SHIFT](https://developer.android.com/reference/android/inputmethodservice/Keyboard.html#KEYCODE_SHIFT)
        #[deprecated] pub const KEYCODE_SHIFT : i32 = -1;
    }
}
