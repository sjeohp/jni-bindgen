// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-Filter"))]
__jni_bindgen! {
    /// public class [Filter](https://developer.android.com/reference/android/widget/Filter.html)
    ///
    /// Required feature: android-widget-Filter
    public class Filter ("android/widget/Filter") extends crate::java::lang::Object {

        /// [Filter](https://developer.android.com/reference/android/widget/Filter.html#Filter())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::Filter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Filter", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Filter\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [filter](https://developer.android.com/reference/android/widget/Filter.html#filter(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn filter_CharSequence<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Filter", java.flags == PUBLIC | FINAL, .name == "filter", .descriptor == "(Ljava/lang/CharSequence;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Filter\0", "filter\0", "(Ljava/lang/CharSequence;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [filter](https://developer.android.com/reference/android/widget/Filter.html#filter(java.lang.CharSequence,%20android.widget.Filter.FilterListener))
        ///
        /// Required features: "android-widget-Filter_FilterListener", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-widget-Filter_FilterListener", feature = "java-lang-CharSequence")))]
        pub fn filter_CharSequence_FilterListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::Filter_FilterListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Filter", java.flags == PUBLIC | FINAL, .name == "filter", .descriptor == "(Ljava/lang/CharSequence;Landroid/widget/Filter$FilterListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Filter\0", "filter\0", "(Ljava/lang/CharSequence;Landroid/widget/Filter$FilterListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [performFiltering](https://developer.android.com/reference/android/widget/Filter.html#performFiltering(java.lang.CharSequence))
        // ///
        // /// Required features: "android-widget-Filter_FilterResults", "java-lang-CharSequence"
        // #[cfg(any(feature = "all", all(feature = "android-widget-Filter_FilterResults", feature = "java-lang-CharSequence")))]
        // fn performFiltering<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Filter_FilterResults>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/Filter", java.flags == PROTECTED | ABSTRACT, .name == "performFiltering", .descriptor == "(Ljava/lang/CharSequence;)Landroid/widget/Filter$FilterResults;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Filter\0", "performFiltering\0", "(Ljava/lang/CharSequence;)Landroid/widget/Filter$FilterResults;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [publishResults](https://developer.android.com/reference/android/widget/Filter.html#publishResults(java.lang.CharSequence,%20android.widget.Filter.FilterResults))
        // ///
        // /// Required features: "android-widget-Filter_FilterResults", "java-lang-CharSequence"
        // #[cfg(any(feature = "all", all(feature = "android-widget-Filter_FilterResults", feature = "java-lang-CharSequence")))]
        // fn publishResults<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::Filter_FilterResults>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/Filter", java.flags == PROTECTED | ABSTRACT, .name == "publishResults", .descriptor == "(Ljava/lang/CharSequence;Landroid/widget/Filter$FilterResults;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Filter\0", "publishResults\0", "(Ljava/lang/CharSequence;Landroid/widget/Filter$FilterResults;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [convertResultToString](https://developer.android.com/reference/android/widget/Filter.html#convertResultToString(java.lang.Object))
        ///
        /// Required features: "java-lang-CharSequence", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence", feature = "java-lang-Object")))]
        pub fn convertResultToString<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Filter", java.flags == PUBLIC, .name == "convertResultToString", .descriptor == "(Ljava/lang/Object;)Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Filter\0", "convertResultToString\0", "(Ljava/lang/Object;)Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
