// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-ResourceCursorTreeAdapter"))]
__jni_bindgen! {
    /// public class [ResourceCursorTreeAdapter](https://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html)
    ///
    /// Required feature: android-widget-ResourceCursorTreeAdapter
    public class ResourceCursorTreeAdapter ("android/widget/ResourceCursorTreeAdapter") extends crate::android::widget::CursorTreeAdapter {

        /// [ResourceCursorTreeAdapter](https://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html#ResourceCursorTreeAdapter(android.content.Context,%20android.database.Cursor,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "android-content-Context", "android-database-Cursor"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor")))]
        pub fn new_Context_Cursor_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::ResourceCursorTreeAdapter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ResourceCursorTreeAdapter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/database/Cursor;IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ResourceCursorTreeAdapter\0", "<init>\0", "(Landroid/content/Context;Landroid/database/Cursor;IIII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ResourceCursorTreeAdapter](https://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html#ResourceCursorTreeAdapter(android.content.Context,%20android.database.Cursor,%20int,%20int,%20int))
        ///
        /// Required features: "android-content-Context", "android-database-Cursor"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor")))]
        pub fn new_Context_Cursor_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::ResourceCursorTreeAdapter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ResourceCursorTreeAdapter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/database/Cursor;III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ResourceCursorTreeAdapter\0", "<init>\0", "(Landroid/content/Context;Landroid/database/Cursor;III)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ResourceCursorTreeAdapter](https://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html#ResourceCursorTreeAdapter(android.content.Context,%20android.database.Cursor,%20int,%20int))
        ///
        /// Required features: "android-content-Context", "android-database-Cursor"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor")))]
        pub fn new_Context_Cursor_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::ResourceCursorTreeAdapter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ResourceCursorTreeAdapter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/database/Cursor;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ResourceCursorTreeAdapter\0", "<init>\0", "(Landroid/content/Context;Landroid/database/Cursor;II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newChildView](https://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html#newChildView(android.content.Context,%20android.database.Cursor,%20boolean,%20android.view.ViewGroup))
        ///
        /// Required features: "android-content-Context", "android-database-Cursor", "android-view-View", "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor", feature = "android-view-View", feature = "android-view-ViewGroup")))]
        pub fn newChildView<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::View>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ResourceCursorTreeAdapter", java.flags == PUBLIC, .name == "newChildView", .descriptor == "(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ResourceCursorTreeAdapter\0", "newChildView\0", "(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newGroupView](https://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html#newGroupView(android.content.Context,%20android.database.Cursor,%20boolean,%20android.view.ViewGroup))
        ///
        /// Required features: "android-content-Context", "android-database-Cursor", "android-view-View", "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor", feature = "android-view-View", feature = "android-view-ViewGroup")))]
        pub fn newGroupView<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg2: bool, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::View>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ResourceCursorTreeAdapter", java.flags == PUBLIC, .name == "newGroupView", .descriptor == "(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ResourceCursorTreeAdapter\0", "newGroupView\0", "(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
