// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-ZoomButtonsController"))]
__jni_bindgen! {
    /// public class [ZoomButtonsController](https://developer.android.com/reference/android/widget/ZoomButtonsController.html)
    ///
    /// Required feature: android-widget-ZoomButtonsController
    #[deprecated] public class ZoomButtonsController ("android/widget/ZoomButtonsController") extends crate::java::lang::Object, implements crate::android::view::View_OnTouchListener {

        /// [ZoomButtonsController](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#ZoomButtonsController(android.view.View))
        ///
        /// Required features: "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-view-View")))]
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::ZoomButtonsController>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/View;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "<init>\0", "(Landroid/view/View;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setZoomInEnabled](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#setZoomInEnabled(boolean))
        #[deprecated] pub fn setZoomInEnabled<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "setZoomInEnabled", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "setZoomInEnabled\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setZoomOutEnabled](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#setZoomOutEnabled(boolean))
        #[deprecated] pub fn setZoomOutEnabled<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "setZoomOutEnabled", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "setZoomOutEnabled\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setZoomSpeed](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#setZoomSpeed(long))
        #[deprecated] pub fn setZoomSpeed<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "setZoomSpeed", .descriptor == "(J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "setZoomSpeed\0", "(J)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOnZoomListener](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener))
        ///
        /// Required features: "android-widget-ZoomButtonsController_OnZoomListener"
        #[cfg(any(feature = "all", all(feature = "android-widget-ZoomButtonsController_OnZoomListener")))]
        #[deprecated] pub fn setOnZoomListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::ZoomButtonsController_OnZoomListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "setOnZoomListener", .descriptor == "(Landroid/widget/ZoomButtonsController$OnZoomListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "setOnZoomListener\0", "(Landroid/widget/ZoomButtonsController$OnZoomListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFocusable](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#setFocusable(boolean))
        #[deprecated] pub fn setFocusable<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "setFocusable", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "setFocusable\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isAutoDismissed](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#isAutoDismissed())
        #[deprecated] pub fn isAutoDismissed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "isAutoDismissed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "isAutoDismissed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAutoDismissed](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#setAutoDismissed(boolean))
        #[deprecated] pub fn setAutoDismissed<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "setAutoDismissed", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "setAutoDismissed\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isVisible](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#isVisible())
        #[deprecated] pub fn isVisible<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "isVisible", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "isVisible\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setVisible](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#setVisible(boolean))
        #[deprecated] pub fn setVisible<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "setVisible", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "setVisible\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContainer](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#getContainer())
        ///
        /// Required features: "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup")))]
        #[deprecated] pub fn getContainer<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::ViewGroup>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "getContainer", .descriptor == "()Landroid/view/ViewGroup;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "getContainer\0", "()Landroid/view/ViewGroup;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getZoomControls](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#getZoomControls())
        ///
        /// Required features: "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-view-View")))]
        #[deprecated] pub fn getZoomControls<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::View>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "getZoomControls", .descriptor == "()Landroid/view/View;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "getZoomControls\0", "()Landroid/view/View;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onTouch](https://developer.android.com/reference/android/widget/ZoomButtonsController.html#onTouch(android.view.View,%20android.view.MotionEvent))
        ///
        /// Required features: "android-view-MotionEvent", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent", feature = "android-view-View")))]
        pub fn onTouch<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ZoomButtonsController", java.flags == PUBLIC, .name == "onTouch", .descriptor == "(Landroid/view/View;Landroid/view/MotionEvent;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ZoomButtonsController\0", "onTouch\0", "(Landroid/view/View;Landroid/view/MotionEvent;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
