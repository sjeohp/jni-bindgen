// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-BaseExpandableListAdapter"))]
__jni_bindgen! {
    /// public class [BaseExpandableListAdapter](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html)
    ///
    /// Required feature: android-widget-BaseExpandableListAdapter
    public class BaseExpandableListAdapter ("android/widget/BaseExpandableListAdapter") extends crate::java::lang::Object, implements crate::android::widget::ExpandableListAdapter, crate::android::widget::HeterogeneousExpandableList {

        /// [BaseExpandableListAdapter](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#BaseExpandableListAdapter())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::BaseExpandableListAdapter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [registerDataSetObserver](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#registerDataSetObserver(android.database.DataSetObserver))
        ///
        /// Required features: "android-database-DataSetObserver"
        #[cfg(any(feature = "all", all(feature = "android-database-DataSetObserver")))]
        pub fn registerDataSetObserver<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::DataSetObserver>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "registerDataSetObserver", .descriptor == "(Landroid/database/DataSetObserver;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "registerDataSetObserver\0", "(Landroid/database/DataSetObserver;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unregisterDataSetObserver](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#unregisterDataSetObserver(android.database.DataSetObserver))
        ///
        /// Required features: "android-database-DataSetObserver"
        #[cfg(any(feature = "all", all(feature = "android-database-DataSetObserver")))]
        pub fn unregisterDataSetObserver<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::DataSetObserver>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "unregisterDataSetObserver", .descriptor == "(Landroid/database/DataSetObserver;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "unregisterDataSetObserver\0", "(Landroid/database/DataSetObserver;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [notifyDataSetInvalidated](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#notifyDataSetInvalidated())
        pub fn notifyDataSetInvalidated<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "notifyDataSetInvalidated", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "notifyDataSetInvalidated\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [notifyDataSetChanged](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#notifyDataSetChanged())
        pub fn notifyDataSetChanged<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "notifyDataSetChanged", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "notifyDataSetChanged\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [areAllItemsEnabled](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#areAllItemsEnabled())
        pub fn areAllItemsEnabled<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "areAllItemsEnabled", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "areAllItemsEnabled\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onGroupCollapsed](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#onGroupCollapsed(int))
        pub fn onGroupCollapsed<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "onGroupCollapsed", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "onGroupCollapsed\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onGroupExpanded](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#onGroupExpanded(int))
        pub fn onGroupExpanded<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "onGroupExpanded", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "onGroupExpanded\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCombinedChildId](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#getCombinedChildId(long,%20long))
        pub fn getCombinedChildId<'env>(&'env self, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "getCombinedChildId", .descriptor == "(JJ)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "getCombinedChildId\0", "(JJ)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCombinedGroupId](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#getCombinedGroupId(long))
        pub fn getCombinedGroupId<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "getCombinedGroupId", .descriptor == "(J)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "getCombinedGroupId\0", "(J)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isEmpty](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#isEmpty())
        pub fn isEmpty<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "isEmpty", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "isEmpty\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChildType](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#getChildType(int,%20int))
        pub fn getChildType<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "getChildType", .descriptor == "(II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "getChildType\0", "(II)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChildTypeCount](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#getChildTypeCount())
        pub fn getChildTypeCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "getChildTypeCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "getChildTypeCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGroupType](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#getGroupType(int))
        pub fn getGroupType<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "getGroupType", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "getGroupType\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGroupTypeCount](https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html#getGroupTypeCount())
        pub fn getGroupTypeCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/BaseExpandableListAdapter", java.flags == PUBLIC, .name == "getGroupTypeCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/BaseExpandableListAdapter\0", "getGroupTypeCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
