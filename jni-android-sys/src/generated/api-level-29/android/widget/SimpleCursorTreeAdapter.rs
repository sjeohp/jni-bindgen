// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-SimpleCursorTreeAdapter"))]
__jni_bindgen! {
    /// public class [SimpleCursorTreeAdapter](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html)
    ///
    /// Required feature: android-widget-SimpleCursorTreeAdapter
    public class SimpleCursorTreeAdapter ("android/widget/SimpleCursorTreeAdapter") extends crate::android::widget::ResourceCursorTreeAdapter {

        /// [SimpleCursorTreeAdapter](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#SimpleCursorTreeAdapter(android.content.Context,%20android.database.Cursor,%20int,%20int,%20java.lang.String%5B%5D,%20int%5B%5D,%20int,%20int,%20java.lang.String%5B%5D,%20int%5B%5D))
        ///
        /// Required features: "android-content-Context", "android-database-Cursor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor", feature = "java-lang-String")))]
        pub fn new_Context_Cursor_int_int_String_array_int_array_int_int_String_array_int_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg6: i32, arg7: i32, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg9: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::SimpleCursorTreeAdapter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/database/Cursor;II[Ljava/lang/String;[III[Ljava/lang/String;[I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8.into()), __jni_bindgen::AsJValue::as_jvalue(&arg9.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "<init>\0", "(Landroid/content/Context;Landroid/database/Cursor;II[Ljava/lang/String;[III[Ljava/lang/String;[I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleCursorTreeAdapter](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#SimpleCursorTreeAdapter(android.content.Context,%20android.database.Cursor,%20int,%20int,%20java.lang.String%5B%5D,%20int%5B%5D,%20int,%20java.lang.String%5B%5D,%20int%5B%5D))
        ///
        /// Required features: "android-content-Context", "android-database-Cursor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor", feature = "java-lang-String")))]
        pub fn new_Context_Cursor_int_int_String_array_int_array_int_String_array_int_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg6: i32, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::SimpleCursorTreeAdapter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/database/Cursor;II[Ljava/lang/String;[II[Ljava/lang/String;[I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7.into()), __jni_bindgen::AsJValue::as_jvalue(&arg8.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "<init>\0", "(Landroid/content/Context;Landroid/database/Cursor;II[Ljava/lang/String;[II[Ljava/lang/String;[I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleCursorTreeAdapter](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#SimpleCursorTreeAdapter(android.content.Context,%20android.database.Cursor,%20int,%20java.lang.String%5B%5D,%20int%5B%5D,%20int,%20java.lang.String%5B%5D,%20int%5B%5D))
        ///
        /// Required features: "android-content-Context", "android-database-Cursor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor", feature = "java-lang-String")))]
        pub fn new_Context_Cursor_int_String_array_int_array_int_String_array_int_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg5: i32, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::SimpleCursorTreeAdapter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/database/Cursor;I[Ljava/lang/String;[II[Ljava/lang/String;[I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into()), __jni_bindgen::AsJValue::as_jvalue(&arg7.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "<init>\0", "(Landroid/content/Context;Landroid/database/Cursor;I[Ljava/lang/String;[II[Ljava/lang/String;[I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getViewBinder](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#getViewBinder())
        ///
        /// Required features: "android-widget-SimpleCursorTreeAdapter_ViewBinder"
        #[cfg(any(feature = "all", all(feature = "android-widget-SimpleCursorTreeAdapter_ViewBinder")))]
        pub fn getViewBinder<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::SimpleCursorTreeAdapter_ViewBinder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PUBLIC, .name == "getViewBinder", .descriptor == "()Landroid/widget/SimpleCursorTreeAdapter$ViewBinder;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "getViewBinder\0", "()Landroid/widget/SimpleCursorTreeAdapter$ViewBinder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setViewBinder](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#setViewBinder(android.widget.SimpleCursorTreeAdapter.ViewBinder))
        ///
        /// Required features: "android-widget-SimpleCursorTreeAdapter_ViewBinder"
        #[cfg(any(feature = "all", all(feature = "android-widget-SimpleCursorTreeAdapter_ViewBinder")))]
        pub fn setViewBinder<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::SimpleCursorTreeAdapter_ViewBinder>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PUBLIC, .name == "setViewBinder", .descriptor == "(Landroid/widget/SimpleCursorTreeAdapter$ViewBinder;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "setViewBinder\0", "(Landroid/widget/SimpleCursorTreeAdapter$ViewBinder;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [bindChildView](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#bindChildView(android.view.View,%20android.content.Context,%20android.database.Cursor,%20boolean))
        // ///
        // /// Required features: "android-content-Context", "android-database-Cursor", "android-view-View"
        // #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor", feature = "android-view-View")))]
        // fn bindChildView<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg3: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PROTECTED, .name == "bindChildView", .descriptor == "(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "bindChildView\0", "(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [bindGroupView](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#bindGroupView(android.view.View,%20android.content.Context,%20android.database.Cursor,%20boolean))
        // ///
        // /// Required features: "android-content-Context", "android-database-Cursor", "android-view-View"
        // #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-database-Cursor", feature = "android-view-View")))]
        // fn bindGroupView<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg3: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PROTECTED, .name == "bindGroupView", .descriptor == "(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "bindGroupView\0", "(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [setViewImage](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#setViewImage(android.widget.ImageView,%20java.lang.String))
        // ///
        // /// Required features: "android-widget-ImageView", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-widget-ImageView", feature = "java-lang-String")))]
        // fn setViewImage<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::ImageView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PROTECTED, .name == "setViewImage", .descriptor == "(Landroid/widget/ImageView;Ljava/lang/String;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "setViewImage\0", "(Landroid/widget/ImageView;Ljava/lang/String;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [setViewText](https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html#setViewText(android.widget.TextView,%20java.lang.String))
        ///
        /// Required features: "android-widget-TextView", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-widget-TextView", feature = "java-lang-String")))]
        pub fn setViewText<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::TextView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/SimpleCursorTreeAdapter", java.flags == PUBLIC, .name == "setViewText", .descriptor == "(Landroid/widget/TextView;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/SimpleCursorTreeAdapter\0", "setViewText\0", "(Landroid/widget/TextView;Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
