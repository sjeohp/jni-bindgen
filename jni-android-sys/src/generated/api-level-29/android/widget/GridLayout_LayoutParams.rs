// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-GridLayout_LayoutParams"))]
__jni_bindgen! {
    /// public class [GridLayout.LayoutParams](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html)
    ///
    /// Required feature: android-widget-GridLayout_LayoutParams
    public class GridLayout_LayoutParams ("android/widget/GridLayout$LayoutParams") extends crate::android::view::ViewGroup_MarginLayoutParams {

        /// [LayoutParams](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#LayoutParams(android.widget.GridLayout.Spec,%20android.widget.GridLayout.Spec))
        ///
        /// Required features: "android-widget-GridLayout_Spec"
        #[cfg(any(feature = "all", all(feature = "android-widget-GridLayout_Spec")))]
        pub fn new_Spec_Spec<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::GridLayout_Spec>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::GridLayout_Spec>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::GridLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/widget/GridLayout$Spec;Landroid/widget/GridLayout$Spec;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "<init>\0", "(Landroid/widget/GridLayout$Spec;Landroid/widget/GridLayout$Spec;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#LayoutParams())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::GridLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#LayoutParams(android.view.ViewGroup.LayoutParams))
        ///
        /// Required features: "android-view-ViewGroup_LayoutParams"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup_LayoutParams")))]
        pub fn new_view_group_layout_params<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup_LayoutParams>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::GridLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/ViewGroup$LayoutParams;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "<init>\0", "(Landroid/view/ViewGroup$LayoutParams;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#LayoutParams(android.view.ViewGroup.MarginLayoutParams))
        ///
        /// Required features: "android-view-ViewGroup_MarginLayoutParams"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup_MarginLayoutParams")))]
        pub fn new_ViewGroup_MarginLayoutParams<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup_MarginLayoutParams>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::GridLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/ViewGroup$MarginLayoutParams;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "<init>\0", "(Landroid/view/ViewGroup$MarginLayoutParams;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#LayoutParams(android.widget.GridLayout.LayoutParams))
        ///
        /// Required features: "android-widget-GridLayout_LayoutParams"
        #[cfg(any(feature = "all", all(feature = "android-widget-GridLayout_LayoutParams")))]
        pub fn new_LayoutParams<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::GridLayout_LayoutParams>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::GridLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/widget/GridLayout$LayoutParams;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "<init>\0", "(Landroid/widget/GridLayout$LayoutParams;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#LayoutParams(android.content.Context,%20android.util.AttributeSet))
        ///
        /// Required features: "android-content-Context", "android-util-AttributeSet"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-util-AttributeSet")))]
        pub fn new_Context_AttributeSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::GridLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/util/AttributeSet;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "<init>\0", "(Landroid/content/Context;Landroid/util/AttributeSet;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setGravity](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#setGravity(int))
        pub fn setGravity<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "setGravity", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "setGravity\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [setBaseAttributes](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#setBaseAttributes(android.content.res.TypedArray,%20int,%20int))
        // ///
        // /// Required features: "android-content-res-TypedArray"
        // #[cfg(any(feature = "all", all(feature = "android-content-res-TypedArray")))]
        // fn setBaseAttributes<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::res::TypedArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PROTECTED, .name == "setBaseAttributes", .descriptor == "(Landroid/content/res/TypedArray;II)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "setBaseAttributes\0", "(Landroid/content/res/TypedArray;II)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [equals](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/GridLayout$LayoutParams", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/GridLayout$LayoutParams\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public [columnSpec](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#columnSpec)
        ///
        /// Required feature: android-widget-GridLayout_Spec
        #[cfg(any(feature = "all", feature = "android-widget-GridLayout_Spec"))]
        pub fn columnSpec<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::GridLayout_Spec>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/GridLayout$LayoutParams\0", "columnSpec\0", "Landroid/widget/GridLayout$Spec;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [columnSpec](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#columnSpec)
        ///
        /// Required feature: android-widget-GridLayout_Spec
        #[cfg(any(feature = "all", feature = "android-widget-GridLayout_Spec"))]
        pub fn set_columnSpec<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::widget::GridLayout_Spec>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/GridLayout$LayoutParams\0", "columnSpec\0", "Landroid/widget/GridLayout$Spec;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [rowSpec](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#rowSpec)
        ///
        /// Required feature: android-widget-GridLayout_Spec
        #[cfg(any(feature = "all", feature = "android-widget-GridLayout_Spec"))]
        pub fn rowSpec<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::GridLayout_Spec>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/GridLayout$LayoutParams\0", "rowSpec\0", "Landroid/widget/GridLayout$Spec;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [rowSpec](https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html#rowSpec)
        ///
        /// Required feature: android-widget-GridLayout_Spec
        #[cfg(any(feature = "all", feature = "android-widget-GridLayout_Spec"))]
        pub fn set_rowSpec<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::widget::GridLayout_Spec>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/GridLayout$LayoutParams\0", "rowSpec\0", "Landroid/widget/GridLayout$Spec;\0");
                env.set_object_field(class, field, value)
            }
        }
    }
}
