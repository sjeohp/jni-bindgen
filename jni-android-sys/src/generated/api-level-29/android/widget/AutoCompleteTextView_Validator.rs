// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-AutoCompleteTextView_Validator"))]
__jni_bindgen! {
    /// public interface [AutoCompleteTextView.Validator](https://developer.android.com/reference/android/widget/AutoCompleteTextView.Validator.html)
    ///
    /// Required feature: android-widget-AutoCompleteTextView_Validator
    public interface AutoCompleteTextView_Validator ("android/widget/AutoCompleteTextView$Validator") extends crate::java::lang::Object {

        /// [isValid](https://developer.android.com/reference/android/widget/AutoCompleteTextView.Validator.html#isValid(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn isValid<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/AutoCompleteTextView$Validator", java.flags == PUBLIC | ABSTRACT, .name == "isValid", .descriptor == "(Ljava/lang/CharSequence;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/AutoCompleteTextView$Validator\0", "isValid\0", "(Ljava/lang/CharSequence;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fixText](https://developer.android.com/reference/android/widget/AutoCompleteTextView.Validator.html#fixText(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn fixText<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/AutoCompleteTextView$Validator", java.flags == PUBLIC | ABSTRACT, .name == "fixText", .descriptor == "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/AutoCompleteTextView$Validator\0", "fixText\0", "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
