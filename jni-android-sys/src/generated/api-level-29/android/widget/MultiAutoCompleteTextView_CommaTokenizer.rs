// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-MultiAutoCompleteTextView_CommaTokenizer"))]
__jni_bindgen! {
    /// public class [MultiAutoCompleteTextView.CommaTokenizer](https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.CommaTokenizer.html)
    ///
    /// Required feature: android-widget-MultiAutoCompleteTextView_CommaTokenizer
    public class MultiAutoCompleteTextView_CommaTokenizer ("android/widget/MultiAutoCompleteTextView$CommaTokenizer") extends crate::java::lang::Object, implements crate::android::widget::MultiAutoCompleteTextView_Tokenizer {

        /// [CommaTokenizer](https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.CommaTokenizer.html#CommaTokenizer())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::MultiAutoCompleteTextView_CommaTokenizer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/MultiAutoCompleteTextView$CommaTokenizer", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/MultiAutoCompleteTextView$CommaTokenizer\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [findTokenStart](https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.CommaTokenizer.html#findTokenStart(java.lang.CharSequence,%20int))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn findTokenStart<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/MultiAutoCompleteTextView$CommaTokenizer", java.flags == PUBLIC, .name == "findTokenStart", .descriptor == "(Ljava/lang/CharSequence;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/MultiAutoCompleteTextView$CommaTokenizer\0", "findTokenStart\0", "(Ljava/lang/CharSequence;I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [findTokenEnd](https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.CommaTokenizer.html#findTokenEnd(java.lang.CharSequence,%20int))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn findTokenEnd<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/MultiAutoCompleteTextView$CommaTokenizer", java.flags == PUBLIC, .name == "findTokenEnd", .descriptor == "(Ljava/lang/CharSequence;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/MultiAutoCompleteTextView$CommaTokenizer\0", "findTokenEnd\0", "(Ljava/lang/CharSequence;I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [terminateToken](https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.CommaTokenizer.html#terminateToken(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn terminateToken<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/MultiAutoCompleteTextView$CommaTokenizer", java.flags == PUBLIC, .name == "terminateToken", .descriptor == "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/MultiAutoCompleteTextView$CommaTokenizer\0", "terminateToken\0", "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
