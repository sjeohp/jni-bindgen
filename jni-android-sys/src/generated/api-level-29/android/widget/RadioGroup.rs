// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-RadioGroup"))]
__jni_bindgen! {
    /// public class [RadioGroup](https://developer.android.com/reference/android/widget/RadioGroup.html)
    ///
    /// Required feature: android-widget-RadioGroup
    public class RadioGroup ("android/widget/RadioGroup") extends crate::android::widget::LinearLayout {

        /// [RadioGroup](https://developer.android.com/reference/android/widget/RadioGroup.html#RadioGroup(android.content.Context))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        pub fn new_Context<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::RadioGroup>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "<init>\0", "(Landroid/content/Context;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [RadioGroup](https://developer.android.com/reference/android/widget/RadioGroup.html#RadioGroup(android.content.Context,%20android.util.AttributeSet))
        ///
        /// Required features: "android-content-Context", "android-util-AttributeSet"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-util-AttributeSet")))]
        pub fn new_Context_AttributeSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::RadioGroup>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/util/AttributeSet;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "<init>\0", "(Landroid/content/Context;Landroid/util/AttributeSet;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOnHierarchyChangeListener](https://developer.android.com/reference/android/widget/RadioGroup.html#setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener))
        ///
        /// Required features: "android-view-ViewGroup_OnHierarchyChangeListener"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup_OnHierarchyChangeListener")))]
        pub fn setOnHierarchyChangeListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup_OnHierarchyChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "setOnHierarchyChangeListener", .descriptor == "(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "setOnHierarchyChangeListener\0", "(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [onFinishInflate](https://developer.android.com/reference/android/widget/RadioGroup.html#onFinishInflate())
        // fn onFinishInflate<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/RadioGroup", java.flags == PROTECTED, .name == "onFinishInflate", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "onFinishInflate\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [addView](https://developer.android.com/reference/android/widget/RadioGroup.html#addView(android.view.View,%20int,%20android.view.ViewGroup.LayoutParams))
        ///
        /// Required features: "android-view-View", "android-view-ViewGroup_LayoutParams"
        #[cfg(any(feature = "all", all(feature = "android-view-View", feature = "android-view-ViewGroup_LayoutParams")))]
        pub fn addView<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup_LayoutParams>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "addView", .descriptor == "(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "addView\0", "(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [check](https://developer.android.com/reference/android/widget/RadioGroup.html#check(int))
        pub fn check<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "check", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "check\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCheckedRadioButtonId](https://developer.android.com/reference/android/widget/RadioGroup.html#getCheckedRadioButtonId())
        pub fn getCheckedRadioButtonId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "getCheckedRadioButtonId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "getCheckedRadioButtonId\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearCheck](https://developer.android.com/reference/android/widget/RadioGroup.html#clearCheck())
        pub fn clearCheck<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "clearCheck", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "clearCheck\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOnCheckedChangeListener](https://developer.android.com/reference/android/widget/RadioGroup.html#setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener))
        ///
        /// Required features: "android-widget-RadioGroup_OnCheckedChangeListener"
        #[cfg(any(feature = "all", all(feature = "android-widget-RadioGroup_OnCheckedChangeListener")))]
        pub fn setOnCheckedChangeListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::RadioGroup_OnCheckedChangeListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "setOnCheckedChangeListener", .descriptor == "(Landroid/widget/RadioGroup$OnCheckedChangeListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "setOnCheckedChangeListener\0", "(Landroid/widget/RadioGroup$OnCheckedChangeListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [generateLayoutParams](https://developer.android.com/reference/android/widget/RadioGroup.html#generateLayoutParams(android.util.AttributeSet))
        ///
        /// Required features: "android-util-AttributeSet", "android-widget-RadioGroup_LayoutParams"
        #[cfg(any(feature = "all", all(feature = "android-util-AttributeSet", feature = "android-widget-RadioGroup_LayoutParams")))]
        pub fn generateLayoutParams_AttributeSet<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::RadioGroup_LayoutParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "generateLayoutParams", .descriptor == "(Landroid/util/AttributeSet;)Landroid/widget/RadioGroup$LayoutParams;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "generateLayoutParams\0", "(Landroid/util/AttributeSet;)Landroid/widget/RadioGroup$LayoutParams;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [checkLayoutParams](https://developer.android.com/reference/android/widget/RadioGroup.html#checkLayoutParams(android.view.ViewGroup.LayoutParams))
        // ///
        // /// Required features: "android-view-ViewGroup_LayoutParams"
        // #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup_LayoutParams")))]
        // fn checkLayoutParams<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup_LayoutParams>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/RadioGroup", java.flags == PROTECTED, .name == "checkLayoutParams", .descriptor == "(Landroid/view/ViewGroup$LayoutParams;)Z"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "checkLayoutParams\0", "(Landroid/view/ViewGroup$LayoutParams;)Z\0");
        //         __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [generateDefaultLayoutParams](https://developer.android.com/reference/android/widget/RadioGroup.html#generateDefaultLayoutParams())
        // ///
        // /// Required features: "android-widget-LinearLayout_LayoutParams"
        // #[cfg(any(feature = "all", all(feature = "android-widget-LinearLayout_LayoutParams")))]
        // fn generateDefaultLayoutParams<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::LinearLayout_LayoutParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/RadioGroup", java.flags == PROTECTED, .name == "generateDefaultLayoutParams", .descriptor == "()Landroid/widget/LinearLayout$LayoutParams;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "generateDefaultLayoutParams\0", "()Landroid/widget/LinearLayout$LayoutParams;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getAccessibilityClassName](https://developer.android.com/reference/android/widget/RadioGroup.html#getAccessibilityClassName())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getAccessibilityClassName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "getAccessibilityClassName", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "getAccessibilityClassName\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [autofill](https://developer.android.com/reference/android/widget/RadioGroup.html#autofill(android.view.autofill.AutofillValue))
        ///
        /// Required features: "android-view-autofill-AutofillValue"
        #[cfg(any(feature = "all", all(feature = "android-view-autofill-AutofillValue")))]
        pub fn autofill<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillValue>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "autofill", .descriptor == "(Landroid/view/autofill/AutofillValue;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "autofill\0", "(Landroid/view/autofill/AutofillValue;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAutofillType](https://developer.android.com/reference/android/widget/RadioGroup.html#getAutofillType())
        pub fn getAutofillType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "getAutofillType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "getAutofillType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAutofillValue](https://developer.android.com/reference/android/widget/RadioGroup.html#getAutofillValue())
        ///
        /// Required features: "android-view-autofill-AutofillValue"
        #[cfg(any(feature = "all", all(feature = "android-view-autofill-AutofillValue")))]
        pub fn getAutofillValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::autofill::AutofillValue>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/RadioGroup", java.flags == PUBLIC, .name == "getAutofillValue", .descriptor == "()Landroid/view/autofill/AutofillValue;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "getAutofillValue\0", "()Landroid/view/autofill/AutofillValue;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [generateLayoutParams](https://developer.android.com/reference/android/widget/RadioGroup.html#generateLayoutParams(android.util.AttributeSet))
        // ///
        // /// Required features: "android-util-AttributeSet", "android-widget-LinearLayout_LayoutParams"
        // #[cfg(any(feature = "all", all(feature = "android-util-AttributeSet", feature = "android-widget-LinearLayout_LayoutParams")))]
        // pub fn generateLayoutParams_AttributeSet<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::LinearLayout_LayoutParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/RadioGroup", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "generateLayoutParams", .descriptor == "(Landroid/util/AttributeSet;)Landroid/widget/LinearLayout$LayoutParams;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "generateLayoutParams\0", "(Landroid/util/AttributeSet;)Landroid/widget/LinearLayout$LayoutParams;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // // Not emitting: Bridge method - type erasure
        // /// [generateDefaultLayoutParams](https://developer.android.com/reference/android/widget/RadioGroup.html#generateDefaultLayoutParams())
        // ///
        // /// Required features: "android-view-ViewGroup_LayoutParams"
        // #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup_LayoutParams")))]
        // fn generateDefaultLayoutParams<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::ViewGroup_LayoutParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/RadioGroup", java.flags == PROTECTED | BRIDGE | SYNTHETIC, .name == "generateDefaultLayoutParams", .descriptor == "()Landroid/view/ViewGroup$LayoutParams;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "generateDefaultLayoutParams\0", "()Landroid/view/ViewGroup$LayoutParams;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [generateLayoutParams](https://developer.android.com/reference/android/widget/RadioGroup.html#generateLayoutParams(android.util.AttributeSet))
        // ///
        // /// Required features: "android-util-AttributeSet", "android-view-ViewGroup_LayoutParams"
        // #[cfg(any(feature = "all", all(feature = "android-util-AttributeSet", feature = "android-view-ViewGroup_LayoutParams")))]
        // pub fn generateLayoutParams_AttributeSet<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::ViewGroup_LayoutParams>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/RadioGroup", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "generateLayoutParams", .descriptor == "(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/RadioGroup\0", "generateLayoutParams\0", "(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
