// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-ListView_FixedViewInfo"))]
__jni_bindgen! {
    /// public class [ListView.FixedViewInfo](https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html)
    ///
    /// Required feature: android-widget-ListView_FixedViewInfo
    public class ListView_FixedViewInfo ("android/widget/ListView$FixedViewInfo") extends crate::java::lang::Object {

        /// [FixedViewInfo](https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html#FixedViewInfo(android.widget.ListView))
        ///
        /// Required features: "android-widget-ListView"
        #[cfg(any(feature = "all", all(feature = "android-widget-ListView")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::ListView>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::ListView_FixedViewInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/ListView$FixedViewInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/widget/ListView;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/ListView$FixedViewInfo\0", "<init>\0", "(Landroid/widget/ListView;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public [data](https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html#data)
        ///
        /// Required feature: java-lang-Object
        #[cfg(any(feature = "all", feature = "java-lang-Object"))]
        pub fn data<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/ListView$FixedViewInfo\0", "data\0", "Ljava/lang/Object;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [data](https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html#data)
        ///
        /// Required feature: java-lang-Object
        #[cfg(any(feature = "all", feature = "java-lang-Object"))]
        pub fn set_data<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::Object>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/ListView$FixedViewInfo\0", "data\0", "Ljava/lang/Object;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [isSelectable](https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html#isSelectable)
        pub fn isSelectable<'env>(&'env self) -> bool {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/ListView$FixedViewInfo\0", "isSelectable\0", "Z\0");
                env.get_boolean_field(class, field)
            }
        }

        /// **set** public [isSelectable](https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html#isSelectable)
        pub fn set_isSelectable<'env>(&'env self, value: bool) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/ListView$FixedViewInfo\0", "isSelectable\0", "Z\0");
                env.set_boolean_field(class, field, value)
            }
        }

        /// **get** public [view](https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html#view)
        ///
        /// Required feature: android-view-View
        #[cfg(any(feature = "all", feature = "android-view-View"))]
        pub fn view<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::View>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/ListView$FixedViewInfo\0", "view\0", "Landroid/view/View;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [view](https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html#view)
        ///
        /// Required feature: android-view-View
        #[cfg(any(feature = "all", feature = "android-view-View"))]
        pub fn set_view<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::view::View>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/ListView$FixedViewInfo\0", "view\0", "Landroid/view/View;\0");
                env.set_object_field(class, field, value)
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::ListView>> { ... }
    }
}
