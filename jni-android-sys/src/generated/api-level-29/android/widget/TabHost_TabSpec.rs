// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-TabHost_TabSpec"))]
__jni_bindgen! {
    /// public class [TabHost.TabSpec](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html)
    ///
    /// Required feature: android-widget-TabHost_TabSpec
    public class TabHost_TabSpec ("android/widget/TabHost$TabSpec") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [TabSpec](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html#TabSpec(android.widget.TabHost,%20java.lang.String))
        // ///
        // /// Required features: "android-widget-TabHost", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-widget-TabHost", feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::TabHost>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::TabHost_TabSpec>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/widget/TabHost$TabSpec", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/widget/TabHost;Ljava/lang/String;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/TabHost$TabSpec\0", "<init>\0", "(Landroid/widget/TabHost;Ljava/lang/String;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [setIndicator](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html#setIndicator(java.lang.CharSequence))
        ///
        /// Required features: "android-widget-TabHost_TabSpec", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-widget-TabHost_TabSpec", feature = "java-lang-CharSequence")))]
        pub fn setIndicator_CharSequence<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::TabHost_TabSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/TabHost$TabSpec", java.flags == PUBLIC, .name == "setIndicator", .descriptor == "(Ljava/lang/CharSequence;)Landroid/widget/TabHost$TabSpec;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/TabHost$TabSpec\0", "setIndicator\0", "(Ljava/lang/CharSequence;)Landroid/widget/TabHost$TabSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIndicator](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html#setIndicator(java.lang.CharSequence,%20android.graphics.drawable.Drawable))
        ///
        /// Required features: "android-graphics-drawable-Drawable", "android-widget-TabHost_TabSpec", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-graphics-drawable-Drawable", feature = "android-widget-TabHost_TabSpec", feature = "java-lang-CharSequence")))]
        pub fn setIndicator_CharSequence_Drawable<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::drawable::Drawable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::TabHost_TabSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/TabHost$TabSpec", java.flags == PUBLIC, .name == "setIndicator", .descriptor == "(Ljava/lang/CharSequence;Landroid/graphics/drawable/Drawable;)Landroid/widget/TabHost$TabSpec;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/TabHost$TabSpec\0", "setIndicator\0", "(Ljava/lang/CharSequence;Landroid/graphics/drawable/Drawable;)Landroid/widget/TabHost$TabSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIndicator](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html#setIndicator(android.view.View))
        ///
        /// Required features: "android-view-View", "android-widget-TabHost_TabSpec"
        #[cfg(any(feature = "all", all(feature = "android-view-View", feature = "android-widget-TabHost_TabSpec")))]
        pub fn setIndicator_View<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::TabHost_TabSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/TabHost$TabSpec", java.flags == PUBLIC, .name == "setIndicator", .descriptor == "(Landroid/view/View;)Landroid/widget/TabHost$TabSpec;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/TabHost$TabSpec\0", "setIndicator\0", "(Landroid/view/View;)Landroid/widget/TabHost$TabSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setContent](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html#setContent(int))
        ///
        /// Required features: "android-widget-TabHost_TabSpec"
        #[cfg(any(feature = "all", all(feature = "android-widget-TabHost_TabSpec")))]
        pub fn setContent_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::TabHost_TabSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/TabHost$TabSpec", java.flags == PUBLIC, .name == "setContent", .descriptor == "(I)Landroid/widget/TabHost$TabSpec;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/TabHost$TabSpec\0", "setContent\0", "(I)Landroid/widget/TabHost$TabSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setContent](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html#setContent(android.widget.TabHost.TabContentFactory))
        ///
        /// Required features: "android-widget-TabHost_TabContentFactory", "android-widget-TabHost_TabSpec"
        #[cfg(any(feature = "all", all(feature = "android-widget-TabHost_TabContentFactory", feature = "android-widget-TabHost_TabSpec")))]
        pub fn setContent_TabContentFactory<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::TabHost_TabContentFactory>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::TabHost_TabSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/TabHost$TabSpec", java.flags == PUBLIC, .name == "setContent", .descriptor == "(Landroid/widget/TabHost$TabContentFactory;)Landroid/widget/TabHost$TabSpec;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/TabHost$TabSpec\0", "setContent\0", "(Landroid/widget/TabHost$TabContentFactory;)Landroid/widget/TabHost$TabSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setContent](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html#setContent(android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-widget-TabHost_TabSpec"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-widget-TabHost_TabSpec")))]
        pub fn setContent_Intent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::TabHost_TabSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/TabHost$TabSpec", java.flags == PUBLIC, .name == "setContent", .descriptor == "(Landroid/content/Intent;)Landroid/widget/TabHost$TabSpec;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/TabHost$TabSpec\0", "setContent\0", "(Landroid/content/Intent;)Landroid/widget/TabHost$TabSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTag](https://developer.android.com/reference/android/widget/TabHost.TabSpec.html#getTag())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getTag<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/TabHost$TabSpec", java.flags == PUBLIC, .name == "getTag", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/TabHost$TabSpec\0", "getTag\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::TabHost>> { ... }
    }
}
