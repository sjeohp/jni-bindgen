// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-LinearLayout_LayoutParams"))]
__jni_bindgen! {
    /// public class [LinearLayout.LayoutParams](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html)
    ///
    /// Required feature: android-widget-LinearLayout_LayoutParams
    public class LinearLayout_LayoutParams ("android/widget/LinearLayout$LayoutParams") extends crate::android::view::ViewGroup_MarginLayoutParams {

        /// [LayoutParams](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#LayoutParams(android.content.Context,%20android.util.AttributeSet))
        ///
        /// Required features: "android-content-Context", "android-util-AttributeSet"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-util-AttributeSet")))]
        pub fn new_Context_AttributeSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::LinearLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/LinearLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/util/AttributeSet;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/LinearLayout$LayoutParams\0", "<init>\0", "(Landroid/content/Context;Landroid/util/AttributeSet;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#LayoutParams(int,%20int))
        pub fn new_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::LinearLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/LinearLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/LinearLayout$LayoutParams\0", "<init>\0", "(II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#LayoutParams(int,%20int,%20float))
        pub fn new_int_int_float<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::LinearLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/LinearLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(IIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/LinearLayout$LayoutParams\0", "<init>\0", "(IIF)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#LayoutParams(android.view.ViewGroup.LayoutParams))
        ///
        /// Required features: "android-view-ViewGroup_LayoutParams"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup_LayoutParams")))]
        pub fn new_ViewGroup_LayoutParams<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup_LayoutParams>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::LinearLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/LinearLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/ViewGroup$LayoutParams;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/LinearLayout$LayoutParams\0", "<init>\0", "(Landroid/view/ViewGroup$LayoutParams;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#LayoutParams(android.view.ViewGroup.MarginLayoutParams))
        ///
        /// Required features: "android-view-ViewGroup_MarginLayoutParams"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup_MarginLayoutParams")))]
        pub fn new_ViewGroup_MarginLayoutParams<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup_MarginLayoutParams>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::LinearLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/LinearLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/ViewGroup$MarginLayoutParams;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/LinearLayout$LayoutParams\0", "<init>\0", "(Landroid/view/ViewGroup$MarginLayoutParams;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LayoutParams](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#LayoutParams(android.widget.LinearLayout.LayoutParams))
        ///
        /// Required features: "android-widget-LinearLayout_LayoutParams"
        #[cfg(any(feature = "all", all(feature = "android-widget-LinearLayout_LayoutParams")))]
        pub fn new_LayoutParams<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::LinearLayout_LayoutParams>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::LinearLayout_LayoutParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/LinearLayout$LayoutParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/widget/LinearLayout$LayoutParams;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/LinearLayout$LayoutParams\0", "<init>\0", "(Landroid/widget/LinearLayout$LayoutParams;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [debug](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#debug(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn debug<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/LinearLayout$LayoutParams", java.flags == PUBLIC, .name == "debug", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/LinearLayout$LayoutParams\0", "debug\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public [gravity](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#gravity)
        pub fn gravity<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/LinearLayout$LayoutParams\0", "gravity\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [gravity](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#gravity)
        pub fn set_gravity<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/LinearLayout$LayoutParams\0", "gravity\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [weight](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#weight)
        pub fn weight<'env>(&'env self) -> f32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/LinearLayout$LayoutParams\0", "weight\0", "F\0");
                env.get_float_field(class, field)
            }
        }

        /// **set** public [weight](https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html#weight)
        pub fn set_weight<'env>(&'env self, value: f32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/widget/LinearLayout$LayoutParams\0", "weight\0", "F\0");
                env.set_float_field(class, field, value)
            }
        }
    }
}
