// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-Magnifier_Builder"))]
__jni_bindgen! {
    /// public final class [Magnifier.Builder](https://developer.android.com/reference/android/widget/Magnifier.Builder.html)
    ///
    /// Required feature: android-widget-Magnifier_Builder
    public final class Magnifier_Builder ("android/widget/Magnifier$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#Builder(android.view.View))
        ///
        /// Required features: "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-view-View")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/View;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "<init>\0", "(Landroid/view/View;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSize](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#setSize(int,%20int))
        ///
        /// Required features: "android-widget-Magnifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-widget-Magnifier_Builder")))]
        pub fn setSize<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "setSize", .descriptor == "(II)Landroid/widget/Magnifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "setSize\0", "(II)Landroid/widget/Magnifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setInitialZoom](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#setInitialZoom(float))
        ///
        /// Required features: "android-widget-Magnifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-widget-Magnifier_Builder")))]
        pub fn setInitialZoom<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "setInitialZoom", .descriptor == "(F)Landroid/widget/Magnifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "setInitialZoom\0", "(F)Landroid/widget/Magnifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setElevation](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#setElevation(float))
        ///
        /// Required features: "android-widget-Magnifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-widget-Magnifier_Builder")))]
        pub fn setElevation<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "setElevation", .descriptor == "(F)Landroid/widget/Magnifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "setElevation\0", "(F)Landroid/widget/Magnifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCornerRadius](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#setCornerRadius(float))
        ///
        /// Required features: "android-widget-Magnifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-widget-Magnifier_Builder")))]
        pub fn setCornerRadius<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "setCornerRadius", .descriptor == "(F)Landroid/widget/Magnifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "setCornerRadius\0", "(F)Landroid/widget/Magnifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOverlay](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#setOverlay(android.graphics.drawable.Drawable))
        ///
        /// Required features: "android-graphics-drawable-Drawable", "android-widget-Magnifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-graphics-drawable-Drawable", feature = "android-widget-Magnifier_Builder")))]
        pub fn setOverlay<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::drawable::Drawable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "setOverlay", .descriptor == "(Landroid/graphics/drawable/Drawable;)Landroid/widget/Magnifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "setOverlay\0", "(Landroid/graphics/drawable/Drawable;)Landroid/widget/Magnifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDefaultSourceToMagnifierOffset](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#setDefaultSourceToMagnifierOffset(int,%20int))
        ///
        /// Required features: "android-widget-Magnifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-widget-Magnifier_Builder")))]
        pub fn setDefaultSourceToMagnifierOffset<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "setDefaultSourceToMagnifierOffset", .descriptor == "(II)Landroid/widget/Magnifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "setDefaultSourceToMagnifierOffset\0", "(II)Landroid/widget/Magnifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setClippingEnabled](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#setClippingEnabled(boolean))
        ///
        /// Required features: "android-widget-Magnifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-widget-Magnifier_Builder")))]
        pub fn setClippingEnabled<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "setClippingEnabled", .descriptor == "(Z)Landroid/widget/Magnifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "setClippingEnabled\0", "(Z)Landroid/widget/Magnifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSourceBounds](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#setSourceBounds(int,%20int,%20int,%20int))
        ///
        /// Required features: "android-widget-Magnifier_Builder"
        #[cfg(any(feature = "all", all(feature = "android-widget-Magnifier_Builder")))]
        pub fn setSourceBounds<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "setSourceBounds", .descriptor == "(IIII)Landroid/widget/Magnifier$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "setSourceBounds\0", "(IIII)Landroid/widget/Magnifier$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/widget/Magnifier.Builder.html#build())
        ///
        /// Required features: "android-widget-Magnifier"
        #[cfg(any(feature = "all", all(feature = "android-widget-Magnifier")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::Magnifier>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Magnifier$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/widget/Magnifier;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Magnifier$Builder\0", "build\0", "()Landroid/widget/Magnifier;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
