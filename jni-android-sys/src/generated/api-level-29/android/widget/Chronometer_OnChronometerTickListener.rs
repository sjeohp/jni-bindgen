// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-widget-Chronometer_OnChronometerTickListener"))]
__jni_bindgen! {
    /// public interface [Chronometer.OnChronometerTickListener](https://developer.android.com/reference/android/widget/Chronometer.OnChronometerTickListener.html)
    ///
    /// Required feature: android-widget-Chronometer_OnChronometerTickListener
    public interface Chronometer_OnChronometerTickListener ("android/widget/Chronometer$OnChronometerTickListener") extends crate::java::lang::Object {

        /// [onChronometerTick](https://developer.android.com/reference/android/widget/Chronometer.OnChronometerTickListener.html#onChronometerTick(android.widget.Chronometer))
        ///
        /// Required features: "android-widget-Chronometer"
        #[cfg(any(feature = "all", all(feature = "android-widget-Chronometer")))]
        pub fn onChronometerTick<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::Chronometer>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/widget/Chronometer$OnChronometerTickListener", java.flags == PUBLIC | ABSTRACT, .name == "onChronometerTick", .descriptor == "(Landroid/widget/Chronometer;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/widget/Chronometer$OnChronometerTickListener\0", "onChronometerTick\0", "(Landroid/widget/Chronometer;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
