// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-security-keystore-WrappedKeyEntry"))]
__jni_bindgen! {
    /// public class [WrappedKeyEntry](https://developer.android.com/reference/android/security/keystore/WrappedKeyEntry.html)
    ///
    /// Required feature: android-security-keystore-WrappedKeyEntry
    public class WrappedKeyEntry ("android/security/keystore/WrappedKeyEntry") extends crate::java::lang::Object, implements crate::java::security::KeyStore_Entry {

        /// [WrappedKeyEntry](https://developer.android.com/reference/android/security/keystore/WrappedKeyEntry.html#WrappedKeyEntry(byte%5B%5D,%20java.lang.String,%20java.lang.String,%20java.security.spec.AlgorithmParameterSpec))
        ///
        /// Required features: "java-lang-String", "java-security-spec-AlgorithmParameterSpec"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-security-spec-AlgorithmParameterSpec")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::spec::AlgorithmParameterSpec>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::security::keystore::WrappedKeyEntry>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/WrappedKeyEntry", java.flags == PUBLIC, .name == "<init>", .descriptor == "([BLjava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/WrappedKeyEntry\0", "<init>\0", "([BLjava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWrappedKeyBytes](https://developer.android.com/reference/android/security/keystore/WrappedKeyEntry.html#getWrappedKeyBytes())
        pub fn getWrappedKeyBytes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/WrappedKeyEntry", java.flags == PUBLIC, .name == "getWrappedKeyBytes", .descriptor == "()[B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/WrappedKeyEntry\0", "getWrappedKeyBytes\0", "()[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWrappingKeyAlias](https://developer.android.com/reference/android/security/keystore/WrappedKeyEntry.html#getWrappingKeyAlias())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getWrappingKeyAlias<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/WrappedKeyEntry", java.flags == PUBLIC, .name == "getWrappingKeyAlias", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/WrappedKeyEntry\0", "getWrappingKeyAlias\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTransformation](https://developer.android.com/reference/android/security/keystore/WrappedKeyEntry.html#getTransformation())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getTransformation<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/WrappedKeyEntry", java.flags == PUBLIC, .name == "getTransformation", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/WrappedKeyEntry\0", "getTransformation\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAlgorithmParameterSpec](https://developer.android.com/reference/android/security/keystore/WrappedKeyEntry.html#getAlgorithmParameterSpec())
        ///
        /// Required features: "java-security-spec-AlgorithmParameterSpec"
        #[cfg(any(feature = "all", all(feature = "java-security-spec-AlgorithmParameterSpec")))]
        pub fn getAlgorithmParameterSpec<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::security::spec::AlgorithmParameterSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/WrappedKeyEntry", java.flags == PUBLIC, .name == "getAlgorithmParameterSpec", .descriptor == "()Ljava/security/spec/AlgorithmParameterSpec;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/WrappedKeyEntry\0", "getAlgorithmParameterSpec\0", "()Ljava/security/spec/AlgorithmParameterSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
