// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-security-keystore-KeyGenParameterSpec_Builder"))]
__jni_bindgen! {
    /// public final class [KeyGenParameterSpec.Builder](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html)
    ///
    /// Required feature: android-security-keystore-KeyGenParameterSpec_Builder
    public final class KeyGenParameterSpec_Builder ("android/security/keystore/KeyGenParameterSpec$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#Builder(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "<init>\0", "(Ljava/lang/String;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setKeySize](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setKeySize(int))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setKeySize<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setKeySize", .descriptor == "(I)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setKeySize\0", "(I)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAlgorithmParameterSpec](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-security-spec-AlgorithmParameterSpec"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-security-spec-AlgorithmParameterSpec")))]
        pub fn setAlgorithmParameterSpec<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::security::spec::AlgorithmParameterSpec>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setAlgorithmParameterSpec", .descriptor == "(Ljava/security/spec/AlgorithmParameterSpec;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setAlgorithmParameterSpec\0", "(Ljava/security/spec/AlgorithmParameterSpec;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCertificateSubject](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setCertificateSubject(javax.security.auth.x500.X500Principal))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "javax-security-auth-x500-X500Principal"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "javax-security-auth-x500-X500Principal")))]
        pub fn setCertificateSubject<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::javax::security::auth::x500::X500Principal>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setCertificateSubject", .descriptor == "(Ljavax/security/auth/x500/X500Principal;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setCertificateSubject\0", "(Ljavax/security/auth/x500/X500Principal;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCertificateSerialNumber](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setCertificateSerialNumber(java.math.BigInteger))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-math-BigInteger"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-math-BigInteger")))]
        pub fn setCertificateSerialNumber<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setCertificateSerialNumber", .descriptor == "(Ljava/math/BigInteger;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setCertificateSerialNumber\0", "(Ljava/math/BigInteger;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCertificateNotBefore](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setCertificateNotBefore(java.util.Date))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-util-Date")))]
        pub fn setCertificateNotBefore<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setCertificateNotBefore", .descriptor == "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setCertificateNotBefore\0", "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCertificateNotAfter](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setCertificateNotAfter(java.util.Date))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-util-Date")))]
        pub fn setCertificateNotAfter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setCertificateNotAfter", .descriptor == "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setCertificateNotAfter\0", "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setKeyValidityStart](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setKeyValidityStart(java.util.Date))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-util-Date")))]
        pub fn setKeyValidityStart<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setKeyValidityStart", .descriptor == "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setKeyValidityStart\0", "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setKeyValidityEnd](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setKeyValidityEnd(java.util.Date))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-util-Date")))]
        pub fn setKeyValidityEnd<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setKeyValidityEnd", .descriptor == "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setKeyValidityEnd\0", "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setKeyValidityForOriginationEnd](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setKeyValidityForOriginationEnd(java.util.Date))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-util-Date")))]
        pub fn setKeyValidityForOriginationEnd<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setKeyValidityForOriginationEnd", .descriptor == "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setKeyValidityForOriginationEnd\0", "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setKeyValidityForConsumptionEnd](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setKeyValidityForConsumptionEnd(java.util.Date))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-util-Date")))]
        pub fn setKeyValidityForConsumptionEnd<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setKeyValidityForConsumptionEnd", .descriptor == "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setKeyValidityForConsumptionEnd\0", "(Ljava/util/Date;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDigests](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setDigests(java.lang.String...))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-lang-String")))]
        pub fn setDigests<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC | VARARGS, .name == "setDigests", .descriptor == "([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setDigests\0", "([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEncryptionPaddings](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setEncryptionPaddings(java.lang.String...))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-lang-String")))]
        pub fn setEncryptionPaddings<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC | VARARGS, .name == "setEncryptionPaddings", .descriptor == "([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setEncryptionPaddings\0", "([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSignaturePaddings](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setSignaturePaddings(java.lang.String...))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-lang-String")))]
        pub fn setSignaturePaddings<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC | VARARGS, .name == "setSignaturePaddings", .descriptor == "([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setSignaturePaddings\0", "([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBlockModes](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setBlockModes(java.lang.String...))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder", feature = "java-lang-String")))]
        pub fn setBlockModes<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC | VARARGS, .name == "setBlockModes", .descriptor == "([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setBlockModes\0", "([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRandomizedEncryptionRequired](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setRandomizedEncryptionRequired(boolean))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setRandomizedEncryptionRequired<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setRandomizedEncryptionRequired", .descriptor == "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setRandomizedEncryptionRequired\0", "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUserAuthenticationRequired](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setUserAuthenticationRequired(boolean))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setUserAuthenticationRequired<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setUserAuthenticationRequired", .descriptor == "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setUserAuthenticationRequired\0", "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUserConfirmationRequired](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setUserConfirmationRequired(boolean))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setUserConfirmationRequired<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setUserConfirmationRequired", .descriptor == "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setUserConfirmationRequired\0", "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUserAuthenticationValidityDurationSeconds](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setUserAuthenticationValidityDurationSeconds(int))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setUserAuthenticationValidityDurationSeconds<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setUserAuthenticationValidityDurationSeconds", .descriptor == "(I)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setUserAuthenticationValidityDurationSeconds\0", "(I)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUserPresenceRequired](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setUserPresenceRequired(boolean))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setUserPresenceRequired<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setUserPresenceRequired", .descriptor == "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setUserPresenceRequired\0", "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAttestationChallenge](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setAttestationChallenge(byte%5B%5D))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setAttestationChallenge<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setAttestationChallenge", .descriptor == "([B)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setAttestationChallenge\0", "([B)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUserAuthenticationValidWhileOnBody](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setUserAuthenticationValidWhileOnBody(boolean))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setUserAuthenticationValidWhileOnBody<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setUserAuthenticationValidWhileOnBody", .descriptor == "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setUserAuthenticationValidWhileOnBody\0", "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setInvalidatedByBiometricEnrollment](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setInvalidatedByBiometricEnrollment(boolean))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setInvalidatedByBiometricEnrollment<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setInvalidatedByBiometricEnrollment", .descriptor == "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setInvalidatedByBiometricEnrollment\0", "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIsStrongBoxBacked](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setIsStrongBoxBacked(boolean))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setIsStrongBoxBacked<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setIsStrongBoxBacked", .descriptor == "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setIsStrongBoxBacked\0", "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUnlockedDeviceRequired](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#setUnlockedDeviceRequired(boolean))
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec_Builder"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec_Builder")))]
        pub fn setUnlockedDeviceRequired<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "setUnlockedDeviceRequired", .descriptor == "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "setUnlockedDeviceRequired\0", "(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html#build())
        ///
        /// Required features: "android-security-keystore-KeyGenParameterSpec"
        #[cfg(any(feature = "all", all(feature = "android-security-keystore-KeyGenParameterSpec")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::security::keystore::KeyGenParameterSpec>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/security/keystore/KeyGenParameterSpec$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/security/keystore/KeyGenParameterSpec;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/security/keystore/KeyGenParameterSpec$Builder\0", "build\0", "()Landroid/security/keystore/KeyGenParameterSpec;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
