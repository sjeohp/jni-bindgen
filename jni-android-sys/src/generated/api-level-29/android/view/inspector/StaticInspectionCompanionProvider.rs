// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-inspector-StaticInspectionCompanionProvider"))]
__jni_bindgen! {
    /// public class [StaticInspectionCompanionProvider](https://developer.android.com/reference/android/view/inspector/StaticInspectionCompanionProvider.html)
    ///
    /// Required feature: android-view-inspector-StaticInspectionCompanionProvider
    public class StaticInspectionCompanionProvider ("android/view/inspector/StaticInspectionCompanionProvider") extends crate::java::lang::Object, implements crate::android::view::inspector::InspectionCompanionProvider {

        /// [StaticInspectionCompanionProvider](https://developer.android.com/reference/android/view/inspector/StaticInspectionCompanionProvider.html#StaticInspectionCompanionProvider())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::inspector::StaticInspectionCompanionProvider>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inspector/StaticInspectionCompanionProvider", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inspector/StaticInspectionCompanionProvider\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [provide](https://developer.android.com/reference/android/view/inspector/StaticInspectionCompanionProvider.html#provide(java.lang.Class))
        ///
        /// Required features: "android-view-inspector-InspectionCompanion", "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "android-view-inspector-InspectionCompanion", feature = "java-lang-Class")))]
        pub fn provide<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inspector::InspectionCompanion>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inspector/StaticInspectionCompanionProvider", java.flags == PUBLIC, .name == "provide", .descriptor == "(Ljava/lang/Class;)Landroid/view/inspector/InspectionCompanion;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inspector/StaticInspectionCompanionProvider\0", "provide\0", "(Ljava/lang/Class;)Landroid/view/inspector/InspectionCompanion;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
