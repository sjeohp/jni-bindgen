// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-SurfaceControl_Builder"))]
__jni_bindgen! {
    /// public class [SurfaceControl.Builder](https://developer.android.com/reference/android/view/SurfaceControl.Builder.html)
    ///
    /// Required feature: android-view-SurfaceControl_Builder
    public class SurfaceControl_Builder ("android/view/SurfaceControl$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/view/SurfaceControl.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::SurfaceControl_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/SurfaceControl$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/SurfaceControl$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/view/SurfaceControl.Builder.html#build())
        ///
        /// Required features: "android-view-SurfaceControl"
        #[cfg(any(feature = "all", all(feature = "android-view-SurfaceControl")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::SurfaceControl>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/SurfaceControl$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/view/SurfaceControl;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/SurfaceControl$Builder\0", "build\0", "()Landroid/view/SurfaceControl;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setName](https://developer.android.com/reference/android/view/SurfaceControl.Builder.html#setName(java.lang.String))
        ///
        /// Required features: "android-view-SurfaceControl_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-view-SurfaceControl_Builder", feature = "java-lang-String")))]
        pub fn setName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::SurfaceControl_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/SurfaceControl$Builder", java.flags == PUBLIC, .name == "setName", .descriptor == "(Ljava/lang/String;)Landroid/view/SurfaceControl$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/SurfaceControl$Builder\0", "setName\0", "(Ljava/lang/String;)Landroid/view/SurfaceControl$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBufferSize](https://developer.android.com/reference/android/view/SurfaceControl.Builder.html#setBufferSize(int,%20int))
        ///
        /// Required features: "android-view-SurfaceControl_Builder"
        #[cfg(any(feature = "all", all(feature = "android-view-SurfaceControl_Builder")))]
        pub fn setBufferSize<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::SurfaceControl_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/SurfaceControl$Builder", java.flags == PUBLIC, .name == "setBufferSize", .descriptor == "(II)Landroid/view/SurfaceControl$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/SurfaceControl$Builder\0", "setBufferSize\0", "(II)Landroid/view/SurfaceControl$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFormat](https://developer.android.com/reference/android/view/SurfaceControl.Builder.html#setFormat(int))
        ///
        /// Required features: "android-view-SurfaceControl_Builder"
        #[cfg(any(feature = "all", all(feature = "android-view-SurfaceControl_Builder")))]
        pub fn setFormat<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::SurfaceControl_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/SurfaceControl$Builder", java.flags == PUBLIC, .name == "setFormat", .descriptor == "(I)Landroid/view/SurfaceControl$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/SurfaceControl$Builder\0", "setFormat\0", "(I)Landroid/view/SurfaceControl$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOpaque](https://developer.android.com/reference/android/view/SurfaceControl.Builder.html#setOpaque(boolean))
        ///
        /// Required features: "android-view-SurfaceControl_Builder"
        #[cfg(any(feature = "all", all(feature = "android-view-SurfaceControl_Builder")))]
        pub fn setOpaque<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::SurfaceControl_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/SurfaceControl$Builder", java.flags == PUBLIC, .name == "setOpaque", .descriptor == "(Z)Landroid/view/SurfaceControl$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/SurfaceControl$Builder\0", "setOpaque\0", "(Z)Landroid/view/SurfaceControl$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setParent](https://developer.android.com/reference/android/view/SurfaceControl.Builder.html#setParent(android.view.SurfaceControl))
        ///
        /// Required features: "android-view-SurfaceControl", "android-view-SurfaceControl_Builder"
        #[cfg(any(feature = "all", all(feature = "android-view-SurfaceControl", feature = "android-view-SurfaceControl_Builder")))]
        pub fn setParent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::SurfaceControl>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::SurfaceControl_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/SurfaceControl$Builder", java.flags == PUBLIC, .name == "setParent", .descriptor == "(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/SurfaceControl$Builder\0", "setParent\0", "(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
