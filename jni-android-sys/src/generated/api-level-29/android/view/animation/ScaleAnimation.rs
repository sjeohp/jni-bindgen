// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-animation-ScaleAnimation"))]
__jni_bindgen! {
    /// public class [ScaleAnimation](https://developer.android.com/reference/android/view/animation/ScaleAnimation.html)
    ///
    /// Required feature: android-view-animation-ScaleAnimation
    public class ScaleAnimation ("android/view/animation/ScaleAnimation") extends crate::android::view::animation::Animation {

        /// [ScaleAnimation](https://developer.android.com/reference/android/view/animation/ScaleAnimation.html#ScaleAnimation(android.content.Context,%20android.util.AttributeSet))
        ///
        /// Required features: "android-content-Context", "android-util-AttributeSet"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-util-AttributeSet")))]
        pub fn new_Context_AttributeSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::animation::ScaleAnimation>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/ScaleAnimation", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/util/AttributeSet;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/ScaleAnimation\0", "<init>\0", "(Landroid/content/Context;Landroid/util/AttributeSet;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ScaleAnimation](https://developer.android.com/reference/android/view/animation/ScaleAnimation.html#ScaleAnimation(float,%20float,%20float,%20float))
        pub fn new_float_float_float_float<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::animation::ScaleAnimation>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/ScaleAnimation", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/ScaleAnimation\0", "<init>\0", "(FFFF)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ScaleAnimation](https://developer.android.com/reference/android/view/animation/ScaleAnimation.html#ScaleAnimation(float,%20float,%20float,%20float,%20float,%20float))
        pub fn new_float_float_float_float_float_float<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: f32, arg5: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::animation::ScaleAnimation>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/ScaleAnimation", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFFFFF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/ScaleAnimation\0", "<init>\0", "(FFFFFF)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ScaleAnimation](https://developer.android.com/reference/android/view/animation/ScaleAnimation.html#ScaleAnimation(float,%20float,%20float,%20float,%20int,%20float,%20int,%20float))
        pub fn new_float_float_float_float_int_float_int_float<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: i32, arg5: f32, arg6: i32, arg7: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::animation::ScaleAnimation>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/ScaleAnimation", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFFFIFIF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/ScaleAnimation\0", "<init>\0", "(FFFFIFIF)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [applyTransformation](https://developer.android.com/reference/android/view/animation/ScaleAnimation.html#applyTransformation(float,%20android.view.animation.Transformation))
        // ///
        // /// Required features: "android-view-animation-Transformation"
        // #[cfg(any(feature = "all", all(feature = "android-view-animation-Transformation")))]
        // fn applyTransformation<'env>(&'env self, arg0: f32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::animation::Transformation>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/animation/ScaleAnimation", java.flags == PROTECTED, .name == "applyTransformation", .descriptor == "(FLandroid/view/animation/Transformation;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/ScaleAnimation\0", "applyTransformation\0", "(FLandroid/view/animation/Transformation;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [initialize](https://developer.android.com/reference/android/view/animation/ScaleAnimation.html#initialize(int,%20int,%20int,%20int))
        pub fn initialize<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/ScaleAnimation", java.flags == PUBLIC, .name == "initialize", .descriptor == "(IIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/ScaleAnimation\0", "initialize\0", "(IIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
