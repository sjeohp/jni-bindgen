// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-animation-Animation_AnimationListener"))]
__jni_bindgen! {
    /// public interface [Animation.AnimationListener](https://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html)
    ///
    /// Required feature: android-view-animation-Animation_AnimationListener
    public interface Animation_AnimationListener ("android/view/animation/Animation$AnimationListener") extends crate::java::lang::Object {

        /// [onAnimationStart](https://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html#onAnimationStart(android.view.animation.Animation))
        ///
        /// Required features: "android-view-animation-Animation"
        #[cfg(any(feature = "all", all(feature = "android-view-animation-Animation")))]
        pub fn onAnimationStart<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::animation::Animation>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/Animation$AnimationListener", java.flags == PUBLIC | ABSTRACT, .name == "onAnimationStart", .descriptor == "(Landroid/view/animation/Animation;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/Animation$AnimationListener\0", "onAnimationStart\0", "(Landroid/view/animation/Animation;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onAnimationEnd](https://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html#onAnimationEnd(android.view.animation.Animation))
        ///
        /// Required features: "android-view-animation-Animation"
        #[cfg(any(feature = "all", all(feature = "android-view-animation-Animation")))]
        pub fn onAnimationEnd<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::animation::Animation>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/Animation$AnimationListener", java.flags == PUBLIC | ABSTRACT, .name == "onAnimationEnd", .descriptor == "(Landroid/view/animation/Animation;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/Animation$AnimationListener\0", "onAnimationEnd\0", "(Landroid/view/animation/Animation;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onAnimationRepeat](https://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html#onAnimationRepeat(android.view.animation.Animation))
        ///
        /// Required features: "android-view-animation-Animation"
        #[cfg(any(feature = "all", all(feature = "android-view-animation-Animation")))]
        pub fn onAnimationRepeat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::animation::Animation>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/Animation$AnimationListener", java.flags == PUBLIC | ABSTRACT, .name == "onAnimationRepeat", .descriptor == "(Landroid/view/animation/Animation;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/Animation$AnimationListener\0", "onAnimationRepeat\0", "(Landroid/view/animation/Animation;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
