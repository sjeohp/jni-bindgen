// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-animation-GridLayoutAnimationController"))]
__jni_bindgen! {
    /// public class [GridLayoutAnimationController](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html)
    ///
    /// Required feature: android-view-animation-GridLayoutAnimationController
    public class GridLayoutAnimationController ("android/view/animation/GridLayoutAnimationController") extends crate::android::view::animation::LayoutAnimationController {

        /// [GridLayoutAnimationController](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#GridLayoutAnimationController(android.content.Context,%20android.util.AttributeSet))
        ///
        /// Required features: "android-content-Context", "android-util-AttributeSet"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-util-AttributeSet")))]
        pub fn new_Context_AttributeSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::animation::GridLayoutAnimationController>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/util/AttributeSet;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "<init>\0", "(Landroid/content/Context;Landroid/util/AttributeSet;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [GridLayoutAnimationController](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#GridLayoutAnimationController(android.view.animation.Animation))
        ///
        /// Required features: "android-view-animation-Animation"
        #[cfg(any(feature = "all", all(feature = "android-view-animation-Animation")))]
        pub fn new_Animation<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::animation::Animation>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::animation::GridLayoutAnimationController>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/animation/Animation;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "<init>\0", "(Landroid/view/animation/Animation;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [GridLayoutAnimationController](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#GridLayoutAnimationController(android.view.animation.Animation,%20float,%20float))
        ///
        /// Required features: "android-view-animation-Animation"
        #[cfg(any(feature = "all", all(feature = "android-view-animation-Animation")))]
        pub fn new_Animation_float_float<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::animation::Animation>>, arg1: f32, arg2: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::animation::GridLayoutAnimationController>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/animation/Animation;FF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "<init>\0", "(Landroid/view/animation/Animation;FF)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getColumnDelay](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#getColumnDelay())
        pub fn getColumnDelay<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "getColumnDelay", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "getColumnDelay\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setColumnDelay](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#setColumnDelay(float))
        pub fn setColumnDelay<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "setColumnDelay", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "setColumnDelay\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRowDelay](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#getRowDelay())
        pub fn getRowDelay<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "getRowDelay", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "getRowDelay\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRowDelay](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#setRowDelay(float))
        pub fn setRowDelay<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "setRowDelay", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "setRowDelay\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDirection](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#getDirection())
        pub fn getDirection<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "getDirection", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "getDirection\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDirection](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#setDirection(int))
        pub fn setDirection<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "setDirection", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "setDirection\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDirectionPriority](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#getDirectionPriority())
        pub fn getDirectionPriority<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "getDirectionPriority", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "getDirectionPriority\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDirectionPriority](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#setDirectionPriority(int))
        pub fn setDirectionPriority<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "setDirectionPriority", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "setDirectionPriority\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [willOverlap](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#willOverlap())
        pub fn willOverlap<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PUBLIC, .name == "willOverlap", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "willOverlap\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [getDelayForView](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#getDelayForView(android.view.View))
        // ///
        // /// Required features: "android-view-View"
        // #[cfg(any(feature = "all", all(feature = "android-view-View")))]
        // fn getDelayForView<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/animation/GridLayoutAnimationController", java.flags == PROTECTED, .name == "getDelayForView", .descriptor == "(Landroid/view/View;)J"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/animation/GridLayoutAnimationController\0", "getDelayForView\0", "(Landroid/view/View;)J\0");
        //         __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [DIRECTION_BOTTOM_TO_TOP](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#DIRECTION_BOTTOM_TO_TOP)
        pub const DIRECTION_BOTTOM_TO_TOP : i32 = 2;

        /// public static final [DIRECTION_HORIZONTAL_MASK](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#DIRECTION_HORIZONTAL_MASK)
        pub const DIRECTION_HORIZONTAL_MASK : i32 = 1;

        /// public static final [DIRECTION_LEFT_TO_RIGHT](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#DIRECTION_LEFT_TO_RIGHT)
        pub const DIRECTION_LEFT_TO_RIGHT : i32 = 0;

        /// public static final [DIRECTION_RIGHT_TO_LEFT](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#DIRECTION_RIGHT_TO_LEFT)
        pub const DIRECTION_RIGHT_TO_LEFT : i32 = 1;

        /// public static final [DIRECTION_TOP_TO_BOTTOM](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#DIRECTION_TOP_TO_BOTTOM)
        pub const DIRECTION_TOP_TO_BOTTOM : i32 = 0;

        /// public static final [DIRECTION_VERTICAL_MASK](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#DIRECTION_VERTICAL_MASK)
        pub const DIRECTION_VERTICAL_MASK : i32 = 2;

        /// public static final [PRIORITY_COLUMN](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#PRIORITY_COLUMN)
        pub const PRIORITY_COLUMN : i32 = 1;

        /// public static final [PRIORITY_NONE](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#PRIORITY_NONE)
        pub const PRIORITY_NONE : i32 = 0;

        /// public static final [PRIORITY_ROW](https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html#PRIORITY_ROW)
        pub const PRIORITY_ROW : i32 = 2;
    }
}
