// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-MotionEvent"))]
__jni_bindgen! {
    /// public final class [MotionEvent](https://developer.android.com/reference/android/view/MotionEvent.html)
    ///
    /// Required feature: android-view-MotionEvent
    public final class MotionEvent ("android/view/MotionEvent") extends crate::android::view::InputEvent, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [MotionEvent](https://developer.android.com/reference/android/view/MotionEvent.html#MotionEvent())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::MotionEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/MotionEvent", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [finalize](https://developer.android.com/reference/android/view/MotionEvent.html#finalize())
        // fn finalize<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/MotionEvent", java.flags == PROTECTED, .name == "finalize", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "finalize\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [obtain](https://developer.android.com/reference/android/view/MotionEvent.html#obtain(long,%20long,%20int,%20int,%20android.view.MotionEvent.PointerProperties%5B%5D,%20android.view.MotionEvent.PointerCoords%5B%5D,%20int,%20int,%20float,%20float,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "android-view-MotionEvent", "android-view-MotionEvent_PointerCoords", "android-view-MotionEvent_PointerProperties"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent", feature = "android-view-MotionEvent_PointerCoords", feature = "android-view-MotionEvent_PointerProperties")))]
        pub fn obtain_long_long_int_int_PointerProperties_array_PointerCoords_array_int_int_float_float_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::MotionEvent_PointerProperties, crate::java::lang::Throwable>>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::MotionEvent_PointerCoords, crate::java::lang::Throwable>>>, arg6: i32, arg7: i32, arg8: f32, arg9: f32, arg10: i32, arg11: i32, arg12: i32, arg13: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::MotionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(JJII[Landroid/view/MotionEvent$PointerProperties;[Landroid/view/MotionEvent$PointerCoords;IIFFIIII)Landroid/view/MotionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10), __jni_bindgen::AsJValue::as_jvalue(&arg11), __jni_bindgen::AsJValue::as_jvalue(&arg12), __jni_bindgen::AsJValue::as_jvalue(&arg13)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "obtain\0", "(JJII[Landroid/view/MotionEvent$PointerProperties;[Landroid/view/MotionEvent$PointerCoords;IIFFIIII)Landroid/view/MotionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtain](https://developer.android.com/reference/android/view/MotionEvent.html#obtain(long,%20long,%20int,%20int,%20int%5B%5D,%20android.view.MotionEvent.PointerCoords%5B%5D,%20int,%20float,%20float,%20int,%20int,%20int,%20int))
        ///
        /// Required features: "android-view-MotionEvent", "android-view-MotionEvent_PointerCoords"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent", feature = "android-view-MotionEvent_PointerCoords")))]
        #[deprecated] pub fn obtain_long_long_int_int_int_array_PointerCoords_array_int_float_float_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::MotionEvent_PointerCoords, crate::java::lang::Throwable>>>, arg6: i32, arg7: f32, arg8: f32, arg9: i32, arg10: i32, arg11: i32, arg12: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::MotionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(JJII[I[Landroid/view/MotionEvent$PointerCoords;IFFIIII)Landroid/view/MotionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10), __jni_bindgen::AsJValue::as_jvalue(&arg11), __jni_bindgen::AsJValue::as_jvalue(&arg12)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "obtain\0", "(JJII[I[Landroid/view/MotionEvent$PointerCoords;IFFIIII)Landroid/view/MotionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtain](https://developer.android.com/reference/android/view/MotionEvent.html#obtain(long,%20long,%20int,%20float,%20float,%20float,%20float,%20int,%20float,%20float,%20int,%20int))
        ///
        /// Required features: "android-view-MotionEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent")))]
        pub fn obtain_long_long_int_float_float_float_float_int_float_float_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: f32, arg4: f32, arg5: f32, arg6: f32, arg7: i32, arg8: f32, arg9: f32, arg10: i32, arg11: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::MotionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(JJIFFFFIFFII)Landroid/view/MotionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10), __jni_bindgen::AsJValue::as_jvalue(&arg11)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "obtain\0", "(JJIFFFFIFFII)Landroid/view/MotionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtain](https://developer.android.com/reference/android/view/MotionEvent.html#obtain(long,%20long,%20int,%20int,%20float,%20float,%20float,%20float,%20int,%20float,%20float,%20int,%20int))
        ///
        /// Required features: "android-view-MotionEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent")))]
        #[deprecated] pub fn obtain_long_long_int_int_float_float_float_float_int_float_float_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: i32, arg4: f32, arg5: f32, arg6: f32, arg7: f32, arg8: i32, arg9: f32, arg10: f32, arg11: i32, arg12: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::MotionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(JJIIFFFFIFFII)Landroid/view/MotionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9), __jni_bindgen::AsJValue::as_jvalue(&arg10), __jni_bindgen::AsJValue::as_jvalue(&arg11), __jni_bindgen::AsJValue::as_jvalue(&arg12)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "obtain\0", "(JJIIFFFFIFFII)Landroid/view/MotionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtain](https://developer.android.com/reference/android/view/MotionEvent.html#obtain(long,%20long,%20int,%20float,%20float,%20int))
        ///
        /// Required features: "android-view-MotionEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent")))]
        pub fn obtain_long_long_int_float_float_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: f32, arg4: f32, arg5: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::MotionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(JJIFFI)Landroid/view/MotionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "obtain\0", "(JJIFFI)Landroid/view/MotionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtain](https://developer.android.com/reference/android/view/MotionEvent.html#obtain(android.view.MotionEvent))
        ///
        /// Required features: "android-view-MotionEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent")))]
        pub fn obtain_MotionEvent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::MotionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "obtain\0", "(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtainNoHistory](https://developer.android.com/reference/android/view/MotionEvent.html#obtainNoHistory(android.view.MotionEvent))
        ///
        /// Required features: "android-view-MotionEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent")))]
        pub fn obtainNoHistory<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::MotionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "obtainNoHistory", .descriptor == "(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "obtainNoHistory\0", "(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [recycle](https://developer.android.com/reference/android/view/MotionEvent.html#recycle())
        pub fn recycle<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "recycle", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "recycle\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDeviceId](https://developer.android.com/reference/android/view/MotionEvent.html#getDeviceId())
        pub fn getDeviceId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getDeviceId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getDeviceId\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSource](https://developer.android.com/reference/android/view/MotionEvent.html#getSource())
        pub fn getSource<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getSource", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getSource\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSource](https://developer.android.com/reference/android/view/MotionEvent.html#setSource(int))
        pub fn setSource<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "setSource", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "setSource\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAction](https://developer.android.com/reference/android/view/MotionEvent.html#getAction())
        pub fn getAction<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getAction", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getAction\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActionMasked](https://developer.android.com/reference/android/view/MotionEvent.html#getActionMasked())
        pub fn getActionMasked<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getActionMasked", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getActionMasked\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActionIndex](https://developer.android.com/reference/android/view/MotionEvent.html#getActionIndex())
        pub fn getActionIndex<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getActionIndex", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getActionIndex\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFlags](https://developer.android.com/reference/android/view/MotionEvent.html#getFlags())
        pub fn getFlags<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getFlags", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getFlags\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDownTime](https://developer.android.com/reference/android/view/MotionEvent.html#getDownTime())
        pub fn getDownTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getDownTime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getDownTime\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEventTime](https://developer.android.com/reference/android/view/MotionEvent.html#getEventTime())
        pub fn getEventTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getEventTime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getEventTime\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getX](https://developer.android.com/reference/android/view/MotionEvent.html#getX())
        pub fn getX<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getX", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getX\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getY](https://developer.android.com/reference/android/view/MotionEvent.html#getY())
        pub fn getY<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getY", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getY\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPressure](https://developer.android.com/reference/android/view/MotionEvent.html#getPressure())
        pub fn getPressure<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getPressure", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getPressure\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSize](https://developer.android.com/reference/android/view/MotionEvent.html#getSize())
        pub fn getSize<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getSize", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getSize\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTouchMajor](https://developer.android.com/reference/android/view/MotionEvent.html#getTouchMajor())
        pub fn getTouchMajor<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getTouchMajor", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getTouchMajor\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTouchMinor](https://developer.android.com/reference/android/view/MotionEvent.html#getTouchMinor())
        pub fn getTouchMinor<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getTouchMinor", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getTouchMinor\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getToolMajor](https://developer.android.com/reference/android/view/MotionEvent.html#getToolMajor())
        pub fn getToolMajor<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getToolMajor", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getToolMajor\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getToolMinor](https://developer.android.com/reference/android/view/MotionEvent.html#getToolMinor())
        pub fn getToolMinor<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getToolMinor", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getToolMinor\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOrientation](https://developer.android.com/reference/android/view/MotionEvent.html#getOrientation())
        pub fn getOrientation<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getOrientation", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getOrientation\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAxisValue](https://developer.android.com/reference/android/view/MotionEvent.html#getAxisValue(int))
        pub fn getAxisValue_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getAxisValue", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getAxisValue\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPointerCount](https://developer.android.com/reference/android/view/MotionEvent.html#getPointerCount())
        pub fn getPointerCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getPointerCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getPointerCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPointerId](https://developer.android.com/reference/android/view/MotionEvent.html#getPointerId(int))
        pub fn getPointerId<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getPointerId", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getPointerId\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getToolType](https://developer.android.com/reference/android/view/MotionEvent.html#getToolType(int))
        pub fn getToolType<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getToolType", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getToolType\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [findPointerIndex](https://developer.android.com/reference/android/view/MotionEvent.html#findPointerIndex(int))
        pub fn findPointerIndex<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "findPointerIndex", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "findPointerIndex\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getX](https://developer.android.com/reference/android/view/MotionEvent.html#getX(int))
        pub fn getX_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getX", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getX\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getY](https://developer.android.com/reference/android/view/MotionEvent.html#getY(int))
        pub fn getY_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getY", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getY\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPressure](https://developer.android.com/reference/android/view/MotionEvent.html#getPressure(int))
        pub fn getPressure_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getPressure", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getPressure\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSize](https://developer.android.com/reference/android/view/MotionEvent.html#getSize(int))
        pub fn getSize_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getSize", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getSize\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTouchMajor](https://developer.android.com/reference/android/view/MotionEvent.html#getTouchMajor(int))
        pub fn getTouchMajor_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getTouchMajor", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getTouchMajor\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTouchMinor](https://developer.android.com/reference/android/view/MotionEvent.html#getTouchMinor(int))
        pub fn getTouchMinor_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getTouchMinor", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getTouchMinor\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getToolMajor](https://developer.android.com/reference/android/view/MotionEvent.html#getToolMajor(int))
        pub fn getToolMajor_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getToolMajor", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getToolMajor\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getToolMinor](https://developer.android.com/reference/android/view/MotionEvent.html#getToolMinor(int))
        pub fn getToolMinor_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getToolMinor", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getToolMinor\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOrientation](https://developer.android.com/reference/android/view/MotionEvent.html#getOrientation(int))
        pub fn getOrientation_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getOrientation", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getOrientation\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAxisValue](https://developer.android.com/reference/android/view/MotionEvent.html#getAxisValue(int,%20int))
        pub fn getAxisValue_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getAxisValue", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getAxisValue\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPointerCoords](https://developer.android.com/reference/android/view/MotionEvent.html#getPointerCoords(int,%20android.view.MotionEvent.PointerCoords))
        ///
        /// Required features: "android-view-MotionEvent_PointerCoords"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent_PointerCoords")))]
        pub fn getPointerCoords<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent_PointerCoords>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getPointerCoords", .descriptor == "(ILandroid/view/MotionEvent$PointerCoords;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getPointerCoords\0", "(ILandroid/view/MotionEvent$PointerCoords;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPointerProperties](https://developer.android.com/reference/android/view/MotionEvent.html#getPointerProperties(int,%20android.view.MotionEvent.PointerProperties))
        ///
        /// Required features: "android-view-MotionEvent_PointerProperties"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent_PointerProperties")))]
        pub fn getPointerProperties<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent_PointerProperties>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getPointerProperties", .descriptor == "(ILandroid/view/MotionEvent$PointerProperties;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getPointerProperties\0", "(ILandroid/view/MotionEvent$PointerProperties;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaState](https://developer.android.com/reference/android/view/MotionEvent.html#getMetaState())
        pub fn getMetaState<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getMetaState", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getMetaState\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getButtonState](https://developer.android.com/reference/android/view/MotionEvent.html#getButtonState())
        pub fn getButtonState<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getButtonState", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getButtonState\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getClassification](https://developer.android.com/reference/android/view/MotionEvent.html#getClassification())
        pub fn getClassification<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getClassification", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getClassification\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActionButton](https://developer.android.com/reference/android/view/MotionEvent.html#getActionButton())
        pub fn getActionButton<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getActionButton", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getActionButton\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRawX](https://developer.android.com/reference/android/view/MotionEvent.html#getRawX())
        pub fn getRawX<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getRawX", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getRawX\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRawY](https://developer.android.com/reference/android/view/MotionEvent.html#getRawY())
        pub fn getRawY<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getRawY", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getRawY\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRawX](https://developer.android.com/reference/android/view/MotionEvent.html#getRawX(int))
        pub fn getRawX_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getRawX", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getRawX\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRawY](https://developer.android.com/reference/android/view/MotionEvent.html#getRawY(int))
        pub fn getRawY_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getRawY", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getRawY\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getXPrecision](https://developer.android.com/reference/android/view/MotionEvent.html#getXPrecision())
        pub fn getXPrecision<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getXPrecision", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getXPrecision\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getYPrecision](https://developer.android.com/reference/android/view/MotionEvent.html#getYPrecision())
        pub fn getYPrecision<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getYPrecision", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getYPrecision\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistorySize](https://developer.android.com/reference/android/view/MotionEvent.html#getHistorySize())
        pub fn getHistorySize<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistorySize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistorySize\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalEventTime](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalEventTime(int))
        pub fn getHistoricalEventTime<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalEventTime", .descriptor == "(I)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalEventTime\0", "(I)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalX](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalX(int))
        pub fn getHistoricalX_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalX", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalX\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalY](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalY(int))
        pub fn getHistoricalY_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalY", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalY\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalPressure](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalPressure(int))
        pub fn getHistoricalPressure_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalPressure", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalPressure\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalSize](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalSize(int))
        pub fn getHistoricalSize_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalSize", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalSize\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalTouchMajor](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalTouchMajor(int))
        pub fn getHistoricalTouchMajor_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalTouchMajor", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalTouchMajor\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalTouchMinor](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalTouchMinor(int))
        pub fn getHistoricalTouchMinor_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalTouchMinor", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalTouchMinor\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalToolMajor](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalToolMajor(int))
        pub fn getHistoricalToolMajor_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalToolMajor", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalToolMajor\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalToolMinor](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalToolMinor(int))
        pub fn getHistoricalToolMinor_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalToolMinor", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalToolMinor\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalOrientation](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalOrientation(int))
        pub fn getHistoricalOrientation_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalOrientation", .descriptor == "(I)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalOrientation\0", "(I)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalAxisValue](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalAxisValue(int,%20int))
        pub fn getHistoricalAxisValue_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalAxisValue", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalAxisValue\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalX](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalX(int,%20int))
        pub fn getHistoricalX_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalX", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalX\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalY](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalY(int,%20int))
        pub fn getHistoricalY_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalY", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalY\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalPressure](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalPressure(int,%20int))
        pub fn getHistoricalPressure_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalPressure", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalPressure\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalSize](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalSize(int,%20int))
        pub fn getHistoricalSize_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalSize", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalSize\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalTouchMajor](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalTouchMajor(int,%20int))
        pub fn getHistoricalTouchMajor_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalTouchMajor", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalTouchMajor\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalTouchMinor](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalTouchMinor(int,%20int))
        pub fn getHistoricalTouchMinor_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalTouchMinor", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalTouchMinor\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalToolMajor](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalToolMajor(int,%20int))
        pub fn getHistoricalToolMajor_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalToolMajor", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalToolMajor\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalToolMinor](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalToolMinor(int,%20int))
        pub fn getHistoricalToolMinor_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalToolMinor", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalToolMinor\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalOrientation](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalOrientation(int,%20int))
        pub fn getHistoricalOrientation_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalOrientation", .descriptor == "(II)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalOrientation\0", "(II)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalAxisValue](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalAxisValue(int,%20int,%20int))
        pub fn getHistoricalAxisValue_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalAxisValue", .descriptor == "(III)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalAxisValue\0", "(III)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHistoricalPointerCoords](https://developer.android.com/reference/android/view/MotionEvent.html#getHistoricalPointerCoords(int,%20int,%20android.view.MotionEvent.PointerCoords))
        ///
        /// Required features: "android-view-MotionEvent_PointerCoords"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent_PointerCoords")))]
        pub fn getHistoricalPointerCoords<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent_PointerCoords>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getHistoricalPointerCoords", .descriptor == "(IILandroid/view/MotionEvent$PointerCoords;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getHistoricalPointerCoords\0", "(IILandroid/view/MotionEvent$PointerCoords;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEdgeFlags](https://developer.android.com/reference/android/view/MotionEvent.html#getEdgeFlags())
        pub fn getEdgeFlags<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "getEdgeFlags", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "getEdgeFlags\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEdgeFlags](https://developer.android.com/reference/android/view/MotionEvent.html#setEdgeFlags(int))
        pub fn setEdgeFlags<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "setEdgeFlags", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "setEdgeFlags\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAction](https://developer.android.com/reference/android/view/MotionEvent.html#setAction(int))
        pub fn setAction<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "setAction", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "setAction\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [offsetLocation](https://developer.android.com/reference/android/view/MotionEvent.html#offsetLocation(float,%20float))
        pub fn offsetLocation<'env>(&'env self, arg0: f32, arg1: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "offsetLocation", .descriptor == "(FF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "offsetLocation\0", "(FF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLocation](https://developer.android.com/reference/android/view/MotionEvent.html#setLocation(float,%20float))
        pub fn setLocation<'env>(&'env self, arg0: f32, arg1: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "setLocation", .descriptor == "(FF)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "setLocation\0", "(FF)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [transform](https://developer.android.com/reference/android/view/MotionEvent.html#transform(android.graphics.Matrix))
        ///
        /// Required features: "android-graphics-Matrix"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Matrix")))]
        pub fn transform<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Matrix>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "transform", .descriptor == "(Landroid/graphics/Matrix;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "transform\0", "(Landroid/graphics/Matrix;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addBatch](https://developer.android.com/reference/android/view/MotionEvent.html#addBatch(long,%20float,%20float,%20float,%20float,%20int))
        pub fn addBatch_long_float_float_float_float_int<'env>(&'env self, arg0: i64, arg1: f32, arg2: f32, arg3: f32, arg4: f32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "addBatch", .descriptor == "(JFFFFI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "addBatch\0", "(JFFFFI)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addBatch](https://developer.android.com/reference/android/view/MotionEvent.html#addBatch(long,%20android.view.MotionEvent.PointerCoords%5B%5D,%20int))
        ///
        /// Required features: "android-view-MotionEvent_PointerCoords"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent_PointerCoords")))]
        pub fn addBatch_long_PointerCoords_array_int<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::MotionEvent_PointerCoords, crate::java::lang::Throwable>>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "addBatch", .descriptor == "(J[Landroid/view/MotionEvent$PointerCoords;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "addBatch\0", "(J[Landroid/view/MotionEvent$PointerCoords;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/view/MotionEvent.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [actionToString](https://developer.android.com/reference/android/view/MotionEvent.html#actionToString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn actionToString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "actionToString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "actionToString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [axisToString](https://developer.android.com/reference/android/view/MotionEvent.html#axisToString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn axisToString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "axisToString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "axisToString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [axisFromString](https://developer.android.com/reference/android/view/MotionEvent.html#axisFromString(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn axisFromString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC | STATIC, .name == "axisFromString", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/MotionEvent\0", "axisFromString\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isButtonPressed](https://developer.android.com/reference/android/view/MotionEvent.html#isButtonPressed(int))
        pub fn isButtonPressed<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "isButtonPressed", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "isButtonPressed\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/view/MotionEvent.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_BUTTON_PRESS](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_BUTTON_PRESS)
        pub const ACTION_BUTTON_PRESS : i32 = 11;

        /// public static final [ACTION_BUTTON_RELEASE](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_BUTTON_RELEASE)
        pub const ACTION_BUTTON_RELEASE : i32 = 12;

        /// public static final [ACTION_CANCEL](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_CANCEL)
        pub const ACTION_CANCEL : i32 = 3;

        /// public static final [ACTION_DOWN](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_DOWN)
        pub const ACTION_DOWN : i32 = 0;

        /// public static final [ACTION_HOVER_ENTER](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_HOVER_ENTER)
        pub const ACTION_HOVER_ENTER : i32 = 9;

        /// public static final [ACTION_HOVER_EXIT](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_HOVER_EXIT)
        pub const ACTION_HOVER_EXIT : i32 = 10;

        /// public static final [ACTION_HOVER_MOVE](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_HOVER_MOVE)
        pub const ACTION_HOVER_MOVE : i32 = 7;

        /// public static final [ACTION_MASK](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_MASK)
        pub const ACTION_MASK : i32 = 255;

        /// public static final [ACTION_MOVE](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_MOVE)
        pub const ACTION_MOVE : i32 = 2;

        /// public static final [ACTION_OUTSIDE](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_OUTSIDE)
        pub const ACTION_OUTSIDE : i32 = 4;

        /// public static final [ACTION_POINTER_1_DOWN](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_1_DOWN)
        #[deprecated] pub const ACTION_POINTER_1_DOWN : i32 = 5;

        /// public static final [ACTION_POINTER_1_UP](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_1_UP)
        #[deprecated] pub const ACTION_POINTER_1_UP : i32 = 6;

        /// public static final [ACTION_POINTER_2_DOWN](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_2_DOWN)
        #[deprecated] pub const ACTION_POINTER_2_DOWN : i32 = 261;

        /// public static final [ACTION_POINTER_2_UP](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_2_UP)
        #[deprecated] pub const ACTION_POINTER_2_UP : i32 = 262;

        /// public static final [ACTION_POINTER_3_DOWN](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_3_DOWN)
        #[deprecated] pub const ACTION_POINTER_3_DOWN : i32 = 517;

        /// public static final [ACTION_POINTER_3_UP](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_3_UP)
        #[deprecated] pub const ACTION_POINTER_3_UP : i32 = 518;

        /// public static final [ACTION_POINTER_DOWN](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_DOWN)
        pub const ACTION_POINTER_DOWN : i32 = 5;

        /// public static final [ACTION_POINTER_ID_MASK](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_ID_MASK)
        #[deprecated] pub const ACTION_POINTER_ID_MASK : i32 = 65280;

        /// public static final [ACTION_POINTER_ID_SHIFT](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_ID_SHIFT)
        #[deprecated] pub const ACTION_POINTER_ID_SHIFT : i32 = 8;

        /// public static final [ACTION_POINTER_INDEX_MASK](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_INDEX_MASK)
        pub const ACTION_POINTER_INDEX_MASK : i32 = 65280;

        /// public static final [ACTION_POINTER_INDEX_SHIFT](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_INDEX_SHIFT)
        pub const ACTION_POINTER_INDEX_SHIFT : i32 = 8;

        /// public static final [ACTION_POINTER_UP](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_POINTER_UP)
        pub const ACTION_POINTER_UP : i32 = 6;

        /// public static final [ACTION_SCROLL](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_SCROLL)
        pub const ACTION_SCROLL : i32 = 8;

        /// public static final [ACTION_UP](https://developer.android.com/reference/android/view/MotionEvent.html#ACTION_UP)
        pub const ACTION_UP : i32 = 1;

        /// public static final [AXIS_BRAKE](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_BRAKE)
        pub const AXIS_BRAKE : i32 = 23;

        /// public static final [AXIS_DISTANCE](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_DISTANCE)
        pub const AXIS_DISTANCE : i32 = 24;

        /// public static final [AXIS_GAS](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GAS)
        pub const AXIS_GAS : i32 = 22;

        /// public static final [AXIS_GENERIC_1](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_1)
        pub const AXIS_GENERIC_1 : i32 = 32;

        /// public static final [AXIS_GENERIC_10](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_10)
        pub const AXIS_GENERIC_10 : i32 = 41;

        /// public static final [AXIS_GENERIC_11](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_11)
        pub const AXIS_GENERIC_11 : i32 = 42;

        /// public static final [AXIS_GENERIC_12](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_12)
        pub const AXIS_GENERIC_12 : i32 = 43;

        /// public static final [AXIS_GENERIC_13](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_13)
        pub const AXIS_GENERIC_13 : i32 = 44;

        /// public static final [AXIS_GENERIC_14](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_14)
        pub const AXIS_GENERIC_14 : i32 = 45;

        /// public static final [AXIS_GENERIC_15](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_15)
        pub const AXIS_GENERIC_15 : i32 = 46;

        /// public static final [AXIS_GENERIC_16](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_16)
        pub const AXIS_GENERIC_16 : i32 = 47;

        /// public static final [AXIS_GENERIC_2](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_2)
        pub const AXIS_GENERIC_2 : i32 = 33;

        /// public static final [AXIS_GENERIC_3](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_3)
        pub const AXIS_GENERIC_3 : i32 = 34;

        /// public static final [AXIS_GENERIC_4](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_4)
        pub const AXIS_GENERIC_4 : i32 = 35;

        /// public static final [AXIS_GENERIC_5](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_5)
        pub const AXIS_GENERIC_5 : i32 = 36;

        /// public static final [AXIS_GENERIC_6](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_6)
        pub const AXIS_GENERIC_6 : i32 = 37;

        /// public static final [AXIS_GENERIC_7](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_7)
        pub const AXIS_GENERIC_7 : i32 = 38;

        /// public static final [AXIS_GENERIC_8](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_8)
        pub const AXIS_GENERIC_8 : i32 = 39;

        /// public static final [AXIS_GENERIC_9](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_GENERIC_9)
        pub const AXIS_GENERIC_9 : i32 = 40;

        /// public static final [AXIS_HAT_X](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_HAT_X)
        pub const AXIS_HAT_X : i32 = 15;

        /// public static final [AXIS_HAT_Y](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_HAT_Y)
        pub const AXIS_HAT_Y : i32 = 16;

        /// public static final [AXIS_HSCROLL](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_HSCROLL)
        pub const AXIS_HSCROLL : i32 = 10;

        /// public static final [AXIS_LTRIGGER](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_LTRIGGER)
        pub const AXIS_LTRIGGER : i32 = 17;

        /// public static final [AXIS_ORIENTATION](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_ORIENTATION)
        pub const AXIS_ORIENTATION : i32 = 8;

        /// public static final [AXIS_PRESSURE](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_PRESSURE)
        pub const AXIS_PRESSURE : i32 = 2;

        /// public static final [AXIS_RELATIVE_X](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_RELATIVE_X)
        pub const AXIS_RELATIVE_X : i32 = 27;

        /// public static final [AXIS_RELATIVE_Y](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_RELATIVE_Y)
        pub const AXIS_RELATIVE_Y : i32 = 28;

        /// public static final [AXIS_RTRIGGER](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_RTRIGGER)
        pub const AXIS_RTRIGGER : i32 = 18;

        /// public static final [AXIS_RUDDER](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_RUDDER)
        pub const AXIS_RUDDER : i32 = 20;

        /// public static final [AXIS_RX](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_RX)
        pub const AXIS_RX : i32 = 12;

        /// public static final [AXIS_RY](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_RY)
        pub const AXIS_RY : i32 = 13;

        /// public static final [AXIS_RZ](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_RZ)
        pub const AXIS_RZ : i32 = 14;

        /// public static final [AXIS_SCROLL](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_SCROLL)
        pub const AXIS_SCROLL : i32 = 26;

        /// public static final [AXIS_SIZE](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_SIZE)
        pub const AXIS_SIZE : i32 = 3;

        /// public static final [AXIS_THROTTLE](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_THROTTLE)
        pub const AXIS_THROTTLE : i32 = 19;

        /// public static final [AXIS_TILT](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_TILT)
        pub const AXIS_TILT : i32 = 25;

        /// public static final [AXIS_TOOL_MAJOR](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_TOOL_MAJOR)
        pub const AXIS_TOOL_MAJOR : i32 = 6;

        /// public static final [AXIS_TOOL_MINOR](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_TOOL_MINOR)
        pub const AXIS_TOOL_MINOR : i32 = 7;

        /// public static final [AXIS_TOUCH_MAJOR](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_TOUCH_MAJOR)
        pub const AXIS_TOUCH_MAJOR : i32 = 4;

        /// public static final [AXIS_TOUCH_MINOR](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_TOUCH_MINOR)
        pub const AXIS_TOUCH_MINOR : i32 = 5;

        /// public static final [AXIS_VSCROLL](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_VSCROLL)
        pub const AXIS_VSCROLL : i32 = 9;

        /// public static final [AXIS_WHEEL](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_WHEEL)
        pub const AXIS_WHEEL : i32 = 21;

        /// public static final [AXIS_X](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_X)
        pub const AXIS_X : i32 = 0;

        /// public static final [AXIS_Y](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_Y)
        pub const AXIS_Y : i32 = 1;

        /// public static final [AXIS_Z](https://developer.android.com/reference/android/view/MotionEvent.html#AXIS_Z)
        pub const AXIS_Z : i32 = 11;

        /// public static final [BUTTON_BACK](https://developer.android.com/reference/android/view/MotionEvent.html#BUTTON_BACK)
        pub const BUTTON_BACK : i32 = 8;

        /// public static final [BUTTON_FORWARD](https://developer.android.com/reference/android/view/MotionEvent.html#BUTTON_FORWARD)
        pub const BUTTON_FORWARD : i32 = 16;

        /// public static final [BUTTON_PRIMARY](https://developer.android.com/reference/android/view/MotionEvent.html#BUTTON_PRIMARY)
        pub const BUTTON_PRIMARY : i32 = 1;

        /// public static final [BUTTON_SECONDARY](https://developer.android.com/reference/android/view/MotionEvent.html#BUTTON_SECONDARY)
        pub const BUTTON_SECONDARY : i32 = 2;

        /// public static final [BUTTON_STYLUS_PRIMARY](https://developer.android.com/reference/android/view/MotionEvent.html#BUTTON_STYLUS_PRIMARY)
        pub const BUTTON_STYLUS_PRIMARY : i32 = 32;

        /// public static final [BUTTON_STYLUS_SECONDARY](https://developer.android.com/reference/android/view/MotionEvent.html#BUTTON_STYLUS_SECONDARY)
        pub const BUTTON_STYLUS_SECONDARY : i32 = 64;

        /// public static final [BUTTON_TERTIARY](https://developer.android.com/reference/android/view/MotionEvent.html#BUTTON_TERTIARY)
        pub const BUTTON_TERTIARY : i32 = 4;

        /// public static final [CLASSIFICATION_AMBIGUOUS_GESTURE](https://developer.android.com/reference/android/view/MotionEvent.html#CLASSIFICATION_AMBIGUOUS_GESTURE)
        pub const CLASSIFICATION_AMBIGUOUS_GESTURE : i32 = 1;

        /// public static final [CLASSIFICATION_DEEP_PRESS](https://developer.android.com/reference/android/view/MotionEvent.html#CLASSIFICATION_DEEP_PRESS)
        pub const CLASSIFICATION_DEEP_PRESS : i32 = 2;

        /// public static final [CLASSIFICATION_NONE](https://developer.android.com/reference/android/view/MotionEvent.html#CLASSIFICATION_NONE)
        pub const CLASSIFICATION_NONE : i32 = 0;

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/view/MotionEvent.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/view/MotionEvent\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [EDGE_BOTTOM](https://developer.android.com/reference/android/view/MotionEvent.html#EDGE_BOTTOM)
        pub const EDGE_BOTTOM : i32 = 2;

        /// public static final [EDGE_LEFT](https://developer.android.com/reference/android/view/MotionEvent.html#EDGE_LEFT)
        pub const EDGE_LEFT : i32 = 4;

        /// public static final [EDGE_RIGHT](https://developer.android.com/reference/android/view/MotionEvent.html#EDGE_RIGHT)
        pub const EDGE_RIGHT : i32 = 8;

        /// public static final [EDGE_TOP](https://developer.android.com/reference/android/view/MotionEvent.html#EDGE_TOP)
        pub const EDGE_TOP : i32 = 1;

        /// public static final [FLAG_WINDOW_IS_OBSCURED](https://developer.android.com/reference/android/view/MotionEvent.html#FLAG_WINDOW_IS_OBSCURED)
        pub const FLAG_WINDOW_IS_OBSCURED : i32 = 1;

        /// public static final [FLAG_WINDOW_IS_PARTIALLY_OBSCURED](https://developer.android.com/reference/android/view/MotionEvent.html#FLAG_WINDOW_IS_PARTIALLY_OBSCURED)
        pub const FLAG_WINDOW_IS_PARTIALLY_OBSCURED : i32 = 2;

        /// public static final [INVALID_POINTER_ID](https://developer.android.com/reference/android/view/MotionEvent.html#INVALID_POINTER_ID)
        pub const INVALID_POINTER_ID : i32 = -1;

        /// public static final [TOOL_TYPE_ERASER](https://developer.android.com/reference/android/view/MotionEvent.html#TOOL_TYPE_ERASER)
        pub const TOOL_TYPE_ERASER : i32 = 4;

        /// public static final [TOOL_TYPE_FINGER](https://developer.android.com/reference/android/view/MotionEvent.html#TOOL_TYPE_FINGER)
        pub const TOOL_TYPE_FINGER : i32 = 1;

        /// public static final [TOOL_TYPE_MOUSE](https://developer.android.com/reference/android/view/MotionEvent.html#TOOL_TYPE_MOUSE)
        pub const TOOL_TYPE_MOUSE : i32 = 3;

        /// public static final [TOOL_TYPE_STYLUS](https://developer.android.com/reference/android/view/MotionEvent.html#TOOL_TYPE_STYLUS)
        pub const TOOL_TYPE_STYLUS : i32 = 2;

        /// public static final [TOOL_TYPE_UNKNOWN](https://developer.android.com/reference/android/view/MotionEvent.html#TOOL_TYPE_UNKNOWN)
        pub const TOOL_TYPE_UNKNOWN : i32 = 0;
    }
}
