// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-accessibility-AccessibilityEvent"))]
__jni_bindgen! {
    /// public final class [AccessibilityEvent](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html)
    ///
    /// Required feature: android-view-accessibility-AccessibilityEvent
    public final class AccessibilityEvent ("android/view/accessibility/AccessibilityEvent") extends crate::android::view::accessibility::AccessibilityRecord, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [AccessibilityEvent](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#AccessibilityEvent())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::accessibility::AccessibilityEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getRecordCount](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getRecordCount())
        pub fn getRecordCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getRecordCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getRecordCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [appendRecord](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#appendRecord(android.view.accessibility.AccessibilityRecord))
        ///
        /// Required features: "android-view-accessibility-AccessibilityRecord"
        #[cfg(any(feature = "all", all(feature = "android-view-accessibility-AccessibilityRecord")))]
        pub fn appendRecord<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::accessibility::AccessibilityRecord>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "appendRecord", .descriptor == "(Landroid/view/accessibility/AccessibilityRecord;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "appendRecord\0", "(Landroid/view/accessibility/AccessibilityRecord;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRecord](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getRecord(int))
        ///
        /// Required features: "android-view-accessibility-AccessibilityRecord"
        #[cfg(any(feature = "all", all(feature = "android-view-accessibility-AccessibilityRecord")))]
        pub fn getRecord<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::accessibility::AccessibilityRecord>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getRecord", .descriptor == "(I)Landroid/view/accessibility/AccessibilityRecord;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getRecord\0", "(I)Landroid/view/accessibility/AccessibilityRecord;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEventType](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getEventType())
        pub fn getEventType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getEventType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getEventType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContentChangeTypes](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getContentChangeTypes())
        pub fn getContentChangeTypes<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getContentChangeTypes", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getContentChangeTypes\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setContentChangeTypes](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#setContentChangeTypes(int))
        pub fn setContentChangeTypes<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "setContentChangeTypes", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "setContentChangeTypes\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWindowChanges](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getWindowChanges())
        pub fn getWindowChanges<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getWindowChanges", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getWindowChanges\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEventType](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#setEventType(int))
        pub fn setEventType<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "setEventType", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "setEventType\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEventTime](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getEventTime())
        pub fn getEventTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getEventTime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getEventTime\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEventTime](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#setEventTime(long))
        pub fn setEventTime<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "setEventTime", .descriptor == "(J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "setEventTime\0", "(J)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPackageName](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getPackageName())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getPackageName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getPackageName", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getPackageName\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPackageName](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#setPackageName(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn setPackageName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "setPackageName", .descriptor == "(Ljava/lang/CharSequence;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "setPackageName\0", "(Ljava/lang/CharSequence;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMovementGranularity](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#setMovementGranularity(int))
        pub fn setMovementGranularity<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "setMovementGranularity", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "setMovementGranularity\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMovementGranularity](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getMovementGranularity())
        pub fn getMovementGranularity<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getMovementGranularity", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getMovementGranularity\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAction](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#setAction(int))
        pub fn setAction<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "setAction", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "setAction\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAction](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#getAction())
        pub fn getAction<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "getAction", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "getAction\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtain](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#obtain(int))
        ///
        /// Required features: "android-view-accessibility-AccessibilityEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-accessibility-AccessibilityEvent")))]
        pub fn obtain_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::accessibility::AccessibilityEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(I)Landroid/view/accessibility/AccessibilityEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/accessibility/AccessibilityEvent\0", "obtain\0", "(I)Landroid/view/accessibility/AccessibilityEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtain](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#obtain(android.view.accessibility.AccessibilityEvent))
        ///
        /// Required features: "android-view-accessibility-AccessibilityEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-accessibility-AccessibilityEvent")))]
        pub fn obtain_AccessibilityEvent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::accessibility::AccessibilityEvent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::accessibility::AccessibilityEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(Landroid/view/accessibility/AccessibilityEvent;)Landroid/view/accessibility/AccessibilityEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/accessibility/AccessibilityEvent\0", "obtain\0", "(Landroid/view/accessibility/AccessibilityEvent;)Landroid/view/accessibility/AccessibilityEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [obtain](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#obtain())
        ///
        /// Required features: "android-view-accessibility-AccessibilityEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-accessibility-AccessibilityEvent")))]
        pub fn obtain<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::accessibility::AccessibilityEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "()Landroid/view/accessibility/AccessibilityEvent;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/accessibility/AccessibilityEvent\0", "obtain\0", "()Landroid/view/accessibility/AccessibilityEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [recycle](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#recycle())
        pub fn recycle<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "recycle", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "recycle\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [initFromParcel](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#initFromParcel(android.os.Parcel))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn initFromParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "initFromParcel", .descriptor == "(Landroid/os/Parcel;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "initFromParcel\0", "(Landroid/os/Parcel;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityEvent\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [eventTypeToString](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#eventTypeToString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn eventTypeToString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityEvent", java.flags == PUBLIC | STATIC, .name == "eventTypeToString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/accessibility/AccessibilityEvent\0", "eventTypeToString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION)
        pub const CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION : i32 = 4;

        /// public static final [CONTENT_CHANGE_TYPE_PANE_APPEARED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#CONTENT_CHANGE_TYPE_PANE_APPEARED)
        pub const CONTENT_CHANGE_TYPE_PANE_APPEARED : i32 = 16;

        /// public static final [CONTENT_CHANGE_TYPE_PANE_DISAPPEARED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#CONTENT_CHANGE_TYPE_PANE_DISAPPEARED)
        pub const CONTENT_CHANGE_TYPE_PANE_DISAPPEARED : i32 = 32;

        /// public static final [CONTENT_CHANGE_TYPE_PANE_TITLE](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#CONTENT_CHANGE_TYPE_PANE_TITLE)
        pub const CONTENT_CHANGE_TYPE_PANE_TITLE : i32 = 8;

        /// public static final [CONTENT_CHANGE_TYPE_SUBTREE](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#CONTENT_CHANGE_TYPE_SUBTREE)
        pub const CONTENT_CHANGE_TYPE_SUBTREE : i32 = 1;

        /// public static final [CONTENT_CHANGE_TYPE_TEXT](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#CONTENT_CHANGE_TYPE_TEXT)
        pub const CONTENT_CHANGE_TYPE_TEXT : i32 = 2;

        /// public static final [CONTENT_CHANGE_TYPE_UNDEFINED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#CONTENT_CHANGE_TYPE_UNDEFINED)
        pub const CONTENT_CHANGE_TYPE_UNDEFINED : i32 = 0;

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/view/accessibility/AccessibilityEvent\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [INVALID_POSITION](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#INVALID_POSITION)
        pub const INVALID_POSITION : i32 = -1;

        /// public static final [MAX_TEXT_LENGTH](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#MAX_TEXT_LENGTH)
        #[deprecated] pub const MAX_TEXT_LENGTH : i32 = 500;

        /// public static final [TYPES_ALL_MASK](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPES_ALL_MASK)
        pub const TYPES_ALL_MASK : i32 = -1;

        /// public static final [TYPE_ANNOUNCEMENT](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_ANNOUNCEMENT)
        pub const TYPE_ANNOUNCEMENT : i32 = 16384;

        /// public static final [TYPE_ASSIST_READING_CONTEXT](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_ASSIST_READING_CONTEXT)
        pub const TYPE_ASSIST_READING_CONTEXT : i32 = 16777216;

        /// public static final [TYPE_GESTURE_DETECTION_END](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_GESTURE_DETECTION_END)
        pub const TYPE_GESTURE_DETECTION_END : i32 = 524288;

        /// public static final [TYPE_GESTURE_DETECTION_START](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_GESTURE_DETECTION_START)
        pub const TYPE_GESTURE_DETECTION_START : i32 = 262144;

        /// public static final [TYPE_NOTIFICATION_STATE_CHANGED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_NOTIFICATION_STATE_CHANGED)
        pub const TYPE_NOTIFICATION_STATE_CHANGED : i32 = 64;

        /// public static final [TYPE_TOUCH_EXPLORATION_GESTURE_END](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_TOUCH_EXPLORATION_GESTURE_END)
        pub const TYPE_TOUCH_EXPLORATION_GESTURE_END : i32 = 1024;

        /// public static final [TYPE_TOUCH_EXPLORATION_GESTURE_START](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_TOUCH_EXPLORATION_GESTURE_START)
        pub const TYPE_TOUCH_EXPLORATION_GESTURE_START : i32 = 512;

        /// public static final [TYPE_TOUCH_INTERACTION_END](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_TOUCH_INTERACTION_END)
        pub const TYPE_TOUCH_INTERACTION_END : i32 = 2097152;

        /// public static final [TYPE_TOUCH_INTERACTION_START](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_TOUCH_INTERACTION_START)
        pub const TYPE_TOUCH_INTERACTION_START : i32 = 1048576;

        /// public static final [TYPE_VIEW_ACCESSIBILITY_FOCUSED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_ACCESSIBILITY_FOCUSED)
        pub const TYPE_VIEW_ACCESSIBILITY_FOCUSED : i32 = 32768;

        /// public static final [TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED)
        pub const TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED : i32 = 65536;

        /// public static final [TYPE_VIEW_CLICKED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_CLICKED)
        pub const TYPE_VIEW_CLICKED : i32 = 1;

        /// public static final [TYPE_VIEW_CONTEXT_CLICKED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_CONTEXT_CLICKED)
        pub const TYPE_VIEW_CONTEXT_CLICKED : i32 = 8388608;

        /// public static final [TYPE_VIEW_FOCUSED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_FOCUSED)
        pub const TYPE_VIEW_FOCUSED : i32 = 8;

        /// public static final [TYPE_VIEW_HOVER_ENTER](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_HOVER_ENTER)
        pub const TYPE_VIEW_HOVER_ENTER : i32 = 128;

        /// public static final [TYPE_VIEW_HOVER_EXIT](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_HOVER_EXIT)
        pub const TYPE_VIEW_HOVER_EXIT : i32 = 256;

        /// public static final [TYPE_VIEW_LONG_CLICKED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_LONG_CLICKED)
        pub const TYPE_VIEW_LONG_CLICKED : i32 = 2;

        /// public static final [TYPE_VIEW_SCROLLED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_SCROLLED)
        pub const TYPE_VIEW_SCROLLED : i32 = 4096;

        /// public static final [TYPE_VIEW_SELECTED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_SELECTED)
        pub const TYPE_VIEW_SELECTED : i32 = 4;

        /// public static final [TYPE_VIEW_TEXT_CHANGED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_TEXT_CHANGED)
        pub const TYPE_VIEW_TEXT_CHANGED : i32 = 16;

        /// public static final [TYPE_VIEW_TEXT_SELECTION_CHANGED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_TEXT_SELECTION_CHANGED)
        pub const TYPE_VIEW_TEXT_SELECTION_CHANGED : i32 = 8192;

        /// public static final [TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY)
        pub const TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY : i32 = 131072;

        /// public static final [TYPE_WINDOWS_CHANGED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_WINDOWS_CHANGED)
        pub const TYPE_WINDOWS_CHANGED : i32 = 4194304;

        /// public static final [TYPE_WINDOW_CONTENT_CHANGED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_WINDOW_CONTENT_CHANGED)
        pub const TYPE_WINDOW_CONTENT_CHANGED : i32 = 2048;

        /// public static final [TYPE_WINDOW_STATE_CHANGED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_WINDOW_STATE_CHANGED)
        pub const TYPE_WINDOW_STATE_CHANGED : i32 = 32;

        /// public static final [WINDOWS_CHANGE_ACCESSIBILITY_FOCUSED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_ACCESSIBILITY_FOCUSED)
        pub const WINDOWS_CHANGE_ACCESSIBILITY_FOCUSED : i32 = 128;

        /// public static final [WINDOWS_CHANGE_ACTIVE](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_ACTIVE)
        pub const WINDOWS_CHANGE_ACTIVE : i32 = 32;

        /// public static final [WINDOWS_CHANGE_ADDED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_ADDED)
        pub const WINDOWS_CHANGE_ADDED : i32 = 1;

        /// public static final [WINDOWS_CHANGE_BOUNDS](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_BOUNDS)
        pub const WINDOWS_CHANGE_BOUNDS : i32 = 8;

        /// public static final [WINDOWS_CHANGE_CHILDREN](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_CHILDREN)
        pub const WINDOWS_CHANGE_CHILDREN : i32 = 512;

        /// public static final [WINDOWS_CHANGE_FOCUSED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_FOCUSED)
        pub const WINDOWS_CHANGE_FOCUSED : i32 = 64;

        /// public static final [WINDOWS_CHANGE_LAYER](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_LAYER)
        pub const WINDOWS_CHANGE_LAYER : i32 = 16;

        /// public static final [WINDOWS_CHANGE_PARENT](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_PARENT)
        pub const WINDOWS_CHANGE_PARENT : i32 = 256;

        /// public static final [WINDOWS_CHANGE_PIP](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_PIP)
        pub const WINDOWS_CHANGE_PIP : i32 = 1024;

        /// public static final [WINDOWS_CHANGE_REMOVED](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_REMOVED)
        pub const WINDOWS_CHANGE_REMOVED : i32 = 2;

        /// public static final [WINDOWS_CHANGE_TITLE](https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#WINDOWS_CHANGE_TITLE)
        pub const WINDOWS_CHANGE_TITLE : i32 = 4;
    }
}
