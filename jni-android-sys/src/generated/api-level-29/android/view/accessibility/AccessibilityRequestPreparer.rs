// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-accessibility-AccessibilityRequestPreparer"))]
__jni_bindgen! {
    /// public class [AccessibilityRequestPreparer](https://developer.android.com/reference/android/view/accessibility/AccessibilityRequestPreparer.html)
    ///
    /// Required feature: android-view-accessibility-AccessibilityRequestPreparer
    public class AccessibilityRequestPreparer ("android/view/accessibility/AccessibilityRequestPreparer") extends crate::java::lang::Object {

        /// [AccessibilityRequestPreparer](https://developer.android.com/reference/android/view/accessibility/AccessibilityRequestPreparer.html#AccessibilityRequestPreparer(android.view.View,%20int))
        ///
        /// Required features: "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-view-View")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::accessibility::AccessibilityRequestPreparer>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityRequestPreparer", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/View;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityRequestPreparer\0", "<init>\0", "(Landroid/view/View;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onPrepareExtraData](https://developer.android.com/reference/android/view/accessibility/AccessibilityRequestPreparer.html#onPrepareExtraData(int,%20java.lang.String,%20android.os.Bundle,%20android.os.Message))
        ///
        /// Required features: "android-os-Bundle", "android-os-Message", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle", feature = "android-os-Message", feature = "java-lang-String")))]
        pub fn onPrepareExtraData<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Message>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityRequestPreparer", java.flags == PUBLIC | ABSTRACT, .name == "onPrepareExtraData", .descriptor == "(ILjava/lang/String;Landroid/os/Bundle;Landroid/os/Message;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityRequestPreparer\0", "onPrepareExtraData\0", "(ILjava/lang/String;Landroid/os/Bundle;Landroid/os/Message;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getView](https://developer.android.com/reference/android/view/accessibility/AccessibilityRequestPreparer.html#getView())
        ///
        /// Required features: "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-view-View")))]
        pub fn getView<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::View>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityRequestPreparer", java.flags == PUBLIC, .name == "getView", .descriptor == "()Landroid/view/View;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityRequestPreparer\0", "getView\0", "()Landroid/view/View;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [REQUEST_TYPE_EXTRA_DATA](https://developer.android.com/reference/android/view/accessibility/AccessibilityRequestPreparer.html#REQUEST_TYPE_EXTRA_DATA)
        pub const REQUEST_TYPE_EXTRA_DATA : i32 = 1;
    }
}
