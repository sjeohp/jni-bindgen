// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-accessibility-CaptioningManager_CaptionStyle"))]
__jni_bindgen! {
    /// public final class [CaptioningManager.CaptionStyle](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html)
    ///
    /// Required feature: android-view-accessibility-CaptioningManager_CaptionStyle
    public final class CaptioningManager_CaptionStyle ("android/view/accessibility/CaptioningManager$CaptionStyle") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [CaptionStyle](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#CaptionStyle(int,%20int,%20int,%20int,%20int,%20java.lang.String))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::accessibility::CaptioningManager_CaptionStyle>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/accessibility/CaptioningManager$CaptionStyle", java.flags == (empty), .name == "<init>", .descriptor == "(IIIIILjava/lang/String;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/CaptioningManager$CaptionStyle\0", "<init>\0", "(IIIIILjava/lang/String;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [hasBackgroundColor](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#hasBackgroundColor())
        pub fn hasBackgroundColor<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/CaptioningManager$CaptionStyle", java.flags == PUBLIC, .name == "hasBackgroundColor", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/CaptioningManager$CaptionStyle\0", "hasBackgroundColor\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasForegroundColor](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#hasForegroundColor())
        pub fn hasForegroundColor<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/CaptioningManager$CaptionStyle", java.flags == PUBLIC, .name == "hasForegroundColor", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/CaptioningManager$CaptionStyle\0", "hasForegroundColor\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasEdgeType](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#hasEdgeType())
        pub fn hasEdgeType<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/CaptioningManager$CaptionStyle", java.flags == PUBLIC, .name == "hasEdgeType", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/CaptioningManager$CaptionStyle\0", "hasEdgeType\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasEdgeColor](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#hasEdgeColor())
        pub fn hasEdgeColor<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/CaptioningManager$CaptionStyle", java.flags == PUBLIC, .name == "hasEdgeColor", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/CaptioningManager$CaptionStyle\0", "hasEdgeColor\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasWindowColor](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#hasWindowColor())
        pub fn hasWindowColor<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/CaptioningManager$CaptionStyle", java.flags == PUBLIC, .name == "hasWindowColor", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/CaptioningManager$CaptionStyle\0", "hasWindowColor\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTypeface](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#getTypeface())
        ///
        /// Required features: "android-graphics-Typeface"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Typeface")))]
        pub fn getTypeface<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Typeface>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/CaptioningManager$CaptionStyle", java.flags == PUBLIC, .name == "getTypeface", .descriptor == "()Landroid/graphics/Typeface;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/CaptioningManager$CaptionStyle\0", "getTypeface\0", "()Landroid/graphics/Typeface;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [EDGE_TYPE_DEPRESSED](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#EDGE_TYPE_DEPRESSED)
        pub const EDGE_TYPE_DEPRESSED : i32 = 4;

        /// public static final [EDGE_TYPE_DROP_SHADOW](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#EDGE_TYPE_DROP_SHADOW)
        pub const EDGE_TYPE_DROP_SHADOW : i32 = 2;

        /// public static final [EDGE_TYPE_NONE](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#EDGE_TYPE_NONE)
        pub const EDGE_TYPE_NONE : i32 = 0;

        /// public static final [EDGE_TYPE_OUTLINE](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#EDGE_TYPE_OUTLINE)
        pub const EDGE_TYPE_OUTLINE : i32 = 1;

        /// public static final [EDGE_TYPE_RAISED](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#EDGE_TYPE_RAISED)
        pub const EDGE_TYPE_RAISED : i32 = 3;

        /// public static final [EDGE_TYPE_UNSPECIFIED](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#EDGE_TYPE_UNSPECIFIED)
        pub const EDGE_TYPE_UNSPECIFIED : i32 = -1;

        /// **get** public final [backgroundColor](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#backgroundColor)
        pub fn backgroundColor<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/accessibility/CaptioningManager$CaptionStyle\0", "backgroundColor\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **get** public final [edgeColor](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#edgeColor)
        pub fn edgeColor<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/accessibility/CaptioningManager$CaptionStyle\0", "edgeColor\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **get** public final [edgeType](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#edgeType)
        pub fn edgeType<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/accessibility/CaptioningManager$CaptionStyle\0", "edgeType\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **get** public final [foregroundColor](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#foregroundColor)
        pub fn foregroundColor<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/accessibility/CaptioningManager$CaptionStyle\0", "foregroundColor\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **get** public final [windowColor](https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html#windowColor)
        pub fn windowColor<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/accessibility/CaptioningManager$CaptionStyle\0", "windowColor\0", "I\0");
                env.get_int_field(class, field)
            }
        }
    }
}
