// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-accessibility-AccessibilityNodeInfo_RangeInfo"))]
__jni_bindgen! {
    /// public final class [AccessibilityNodeInfo.RangeInfo](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html)
    ///
    /// Required feature: android-view-accessibility-AccessibilityNodeInfo_RangeInfo
    public final class AccessibilityNodeInfo_RangeInfo ("android/view/accessibility/AccessibilityNodeInfo$RangeInfo") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [RangeInfo](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#RangeInfo(int,%20float,%20float,%20float))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: f32, arg2: f32, arg3: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::accessibility::AccessibilityNodeInfo_RangeInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/accessibility/AccessibilityNodeInfo$RangeInfo", java.flags == (empty), .name == "<init>", .descriptor == "(IFFF)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityNodeInfo$RangeInfo\0", "<init>\0", "(IFFF)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [obtain](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#obtain(int,%20float,%20float,%20float))
        ///
        /// Required features: "android-view-accessibility-AccessibilityNodeInfo_RangeInfo"
        #[cfg(any(feature = "all", all(feature = "android-view-accessibility-AccessibilityNodeInfo_RangeInfo")))]
        pub fn obtain<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: f32, arg2: f32, arg3: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::accessibility::AccessibilityNodeInfo_RangeInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityNodeInfo$RangeInfo", java.flags == PUBLIC | STATIC, .name == "obtain", .descriptor == "(IFFF)Landroid/view/accessibility/AccessibilityNodeInfo$RangeInfo;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/accessibility/AccessibilityNodeInfo$RangeInfo\0", "obtain\0", "(IFFF)Landroid/view/accessibility/AccessibilityNodeInfo$RangeInfo;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getType](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#getType())
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityNodeInfo$RangeInfo", java.flags == PUBLIC, .name == "getType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityNodeInfo$RangeInfo\0", "getType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMin](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#getMin())
        pub fn getMin<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityNodeInfo$RangeInfo", java.flags == PUBLIC, .name == "getMin", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityNodeInfo$RangeInfo\0", "getMin\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMax](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#getMax())
        pub fn getMax<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityNodeInfo$RangeInfo", java.flags == PUBLIC, .name == "getMax", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityNodeInfo$RangeInfo\0", "getMax\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCurrent](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#getCurrent())
        pub fn getCurrent<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/accessibility/AccessibilityNodeInfo$RangeInfo", java.flags == PUBLIC, .name == "getCurrent", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/accessibility/AccessibilityNodeInfo$RangeInfo\0", "getCurrent\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [RANGE_TYPE_FLOAT](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#RANGE_TYPE_FLOAT)
        pub const RANGE_TYPE_FLOAT : i32 = 1;

        /// public static final [RANGE_TYPE_INT](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#RANGE_TYPE_INT)
        pub const RANGE_TYPE_INT : i32 = 0;

        /// public static final [RANGE_TYPE_PERCENT](https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html#RANGE_TYPE_PERCENT)
        pub const RANGE_TYPE_PERCENT : i32 = 2;
    }
}
