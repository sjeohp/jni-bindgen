// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-textservice-TextServicesManager"))]
__jni_bindgen! {
    /// public final class [TextServicesManager](https://developer.android.com/reference/android/view/textservice/TextServicesManager.html)
    ///
    /// Required feature: android-view-textservice-TextServicesManager
    public final class TextServicesManager ("android/view/textservice/TextServicesManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [TextServicesManager](https://developer.android.com/reference/android/view/textservice/TextServicesManager.html#TextServicesManager())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::textservice::TextServicesManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/textservice/TextServicesManager", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/TextServicesManager\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [newSpellCheckerSession](https://developer.android.com/reference/android/view/textservice/TextServicesManager.html#newSpellCheckerSession(android.os.Bundle,%20java.util.Locale,%20android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener,%20boolean))
        ///
        /// Required features: "android-os-Bundle", "android-view-textservice-SpellCheckerSession", "android-view-textservice-SpellCheckerSession_SpellCheckerSessionListener", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle", feature = "android-view-textservice-SpellCheckerSession", feature = "android-view-textservice-SpellCheckerSession_SpellCheckerSessionListener", feature = "java-util-Locale")))]
        pub fn newSpellCheckerSession<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::textservice::SpellCheckerSession_SpellCheckerSessionListener>>, arg3: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textservice::SpellCheckerSession>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/TextServicesManager", java.flags == PUBLIC, .name == "newSpellCheckerSession", .descriptor == "(Landroid/os/Bundle;Ljava/util/Locale;Landroid/view/textservice/SpellCheckerSession$SpellCheckerSessionListener;Z)Landroid/view/textservice/SpellCheckerSession;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/TextServicesManager\0", "newSpellCheckerSession\0", "(Landroid/os/Bundle;Ljava/util/Locale;Landroid/view/textservice/SpellCheckerSession$SpellCheckerSessionListener;Z)Landroid/view/textservice/SpellCheckerSession;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
