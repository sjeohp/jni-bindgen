// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-textservice-SpellCheckerSession_SpellCheckerSessionListener"))]
__jni_bindgen! {
    /// public interface [SpellCheckerSession.SpellCheckerSessionListener](https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html)
    ///
    /// Required feature: android-view-textservice-SpellCheckerSession_SpellCheckerSessionListener
    public interface SpellCheckerSession_SpellCheckerSessionListener ("android/view/textservice/SpellCheckerSession$SpellCheckerSessionListener") extends crate::java::lang::Object {

        /// [onGetSuggestions](https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html#onGetSuggestions(android.view.textservice.SuggestionsInfo%5B%5D))
        ///
        /// Required features: "android-view-textservice-SuggestionsInfo"
        #[cfg(any(feature = "all", all(feature = "android-view-textservice-SuggestionsInfo")))]
        pub fn onGetSuggestions<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::textservice::SuggestionsInfo, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SpellCheckerSession$SpellCheckerSessionListener", java.flags == PUBLIC | ABSTRACT, .name == "onGetSuggestions", .descriptor == "([Landroid/view/textservice/SuggestionsInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SpellCheckerSession$SpellCheckerSessionListener\0", "onGetSuggestions\0", "([Landroid/view/textservice/SuggestionsInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onGetSentenceSuggestions](https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html#onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo%5B%5D))
        ///
        /// Required features: "android-view-textservice-SentenceSuggestionsInfo"
        #[cfg(any(feature = "all", all(feature = "android-view-textservice-SentenceSuggestionsInfo")))]
        pub fn onGetSentenceSuggestions<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::textservice::SentenceSuggestionsInfo, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SpellCheckerSession$SpellCheckerSessionListener", java.flags == PUBLIC | ABSTRACT, .name == "onGetSentenceSuggestions", .descriptor == "([Landroid/view/textservice/SentenceSuggestionsInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SpellCheckerSession$SpellCheckerSessionListener\0", "onGetSentenceSuggestions\0", "([Landroid/view/textservice/SentenceSuggestionsInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
