// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-textservice-SentenceSuggestionsInfo"))]
__jni_bindgen! {
    /// public final class [SentenceSuggestionsInfo](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html)
    ///
    /// Required feature: android-view-textservice-SentenceSuggestionsInfo
    public final class SentenceSuggestionsInfo ("android/view/textservice/SentenceSuggestionsInfo") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [SentenceSuggestionsInfo](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#SentenceSuggestionsInfo(android.view.textservice.SuggestionsInfo%5B%5D,%20int%5B%5D,%20int%5B%5D))
        ///
        /// Required features: "android-view-textservice-SuggestionsInfo"
        #[cfg(any(feature = "all", all(feature = "android-view-textservice-SuggestionsInfo")))]
        pub fn new_SuggestionsInfo_array_int_array_int_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::textservice::SuggestionsInfo, crate::java::lang::Throwable>>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::textservice::SentenceSuggestionsInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SentenceSuggestionsInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "([Landroid/view/textservice/SuggestionsInfo;[I[I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SentenceSuggestionsInfo\0", "<init>\0", "([Landroid/view/textservice/SuggestionsInfo;[I[I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SentenceSuggestionsInfo](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#SentenceSuggestionsInfo(android.os.Parcel))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn new_Parcel<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::textservice::SentenceSuggestionsInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SentenceSuggestionsInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/os/Parcel;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SentenceSuggestionsInfo\0", "<init>\0", "(Landroid/os/Parcel;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SentenceSuggestionsInfo", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SentenceSuggestionsInfo\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SentenceSuggestionsInfo", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SentenceSuggestionsInfo\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSuggestionsCount](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#getSuggestionsCount())
        pub fn getSuggestionsCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SentenceSuggestionsInfo", java.flags == PUBLIC, .name == "getSuggestionsCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SentenceSuggestionsInfo\0", "getSuggestionsCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSuggestionsInfoAt](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#getSuggestionsInfoAt(int))
        ///
        /// Required features: "android-view-textservice-SuggestionsInfo"
        #[cfg(any(feature = "all", all(feature = "android-view-textservice-SuggestionsInfo")))]
        pub fn getSuggestionsInfoAt<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textservice::SuggestionsInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SentenceSuggestionsInfo", java.flags == PUBLIC, .name == "getSuggestionsInfoAt", .descriptor == "(I)Landroid/view/textservice/SuggestionsInfo;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SentenceSuggestionsInfo\0", "getSuggestionsInfoAt\0", "(I)Landroid/view/textservice/SuggestionsInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOffsetAt](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#getOffsetAt(int))
        pub fn getOffsetAt<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SentenceSuggestionsInfo", java.flags == PUBLIC, .name == "getOffsetAt", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SentenceSuggestionsInfo\0", "getOffsetAt\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLengthAt](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#getLengthAt(int))
        pub fn getLengthAt<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textservice/SentenceSuggestionsInfo", java.flags == PUBLIC, .name == "getLengthAt", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textservice/SentenceSuggestionsInfo\0", "getLengthAt\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/view/textservice/SentenceSuggestionsInfo\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
