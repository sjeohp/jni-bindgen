// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-View_OnKeyListener"))]
__jni_bindgen! {
    /// public interface [View.OnKeyListener](https://developer.android.com/reference/android/view/View.OnKeyListener.html)
    ///
    /// Required feature: android-view-View_OnKeyListener
    public interface View_OnKeyListener ("android/view/View$OnKeyListener") extends crate::java::lang::Object {

        /// [onKey](https://developer.android.com/reference/android/view/View.OnKeyListener.html#onKey(android.view.View,%20int,%20android.view.KeyEvent))
        ///
        /// Required features: "android-view-KeyEvent", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent", feature = "android-view-View")))]
        pub fn onKey<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/View$OnKeyListener", java.flags == PUBLIC | ABSTRACT, .name == "onKey", .descriptor == "(Landroid/view/View;ILandroid/view/KeyEvent;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/View$OnKeyListener\0", "onKey\0", "(Landroid/view/View;ILandroid/view/KeyEvent;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
