// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-ActionMode_Callback"))]
__jni_bindgen! {
    /// public interface [ActionMode.Callback](https://developer.android.com/reference/android/view/ActionMode.Callback.html)
    ///
    /// Required feature: android-view-ActionMode_Callback
    public interface ActionMode_Callback ("android/view/ActionMode$Callback") extends crate::java::lang::Object {

        /// [onCreateActionMode](https://developer.android.com/reference/android/view/ActionMode.Callback.html#onCreateActionMode(android.view.ActionMode,%20android.view.Menu))
        ///
        /// Required features: "android-view-ActionMode", "android-view-Menu"
        #[cfg(any(feature = "all", all(feature = "android-view-ActionMode", feature = "android-view-Menu")))]
        pub fn onCreateActionMode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ActionMode>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Menu>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ActionMode$Callback", java.flags == PUBLIC | ABSTRACT, .name == "onCreateActionMode", .descriptor == "(Landroid/view/ActionMode;Landroid/view/Menu;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ActionMode$Callback\0", "onCreateActionMode\0", "(Landroid/view/ActionMode;Landroid/view/Menu;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onPrepareActionMode](https://developer.android.com/reference/android/view/ActionMode.Callback.html#onPrepareActionMode(android.view.ActionMode,%20android.view.Menu))
        ///
        /// Required features: "android-view-ActionMode", "android-view-Menu"
        #[cfg(any(feature = "all", all(feature = "android-view-ActionMode", feature = "android-view-Menu")))]
        pub fn onPrepareActionMode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ActionMode>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Menu>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ActionMode$Callback", java.flags == PUBLIC | ABSTRACT, .name == "onPrepareActionMode", .descriptor == "(Landroid/view/ActionMode;Landroid/view/Menu;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ActionMode$Callback\0", "onPrepareActionMode\0", "(Landroid/view/ActionMode;Landroid/view/Menu;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onActionItemClicked](https://developer.android.com/reference/android/view/ActionMode.Callback.html#onActionItemClicked(android.view.ActionMode,%20android.view.MenuItem))
        ///
        /// Required features: "android-view-ActionMode", "android-view-MenuItem"
        #[cfg(any(feature = "all", all(feature = "android-view-ActionMode", feature = "android-view-MenuItem")))]
        pub fn onActionItemClicked<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ActionMode>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MenuItem>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ActionMode$Callback", java.flags == PUBLIC | ABSTRACT, .name == "onActionItemClicked", .descriptor == "(Landroid/view/ActionMode;Landroid/view/MenuItem;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ActionMode$Callback\0", "onActionItemClicked\0", "(Landroid/view/ActionMode;Landroid/view/MenuItem;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDestroyActionMode](https://developer.android.com/reference/android/view/ActionMode.Callback.html#onDestroyActionMode(android.view.ActionMode))
        ///
        /// Required features: "android-view-ActionMode"
        #[cfg(any(feature = "all", all(feature = "android-view-ActionMode")))]
        pub fn onDestroyActionMode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ActionMode>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ActionMode$Callback", java.flags == PUBLIC | ABSTRACT, .name == "onDestroyActionMode", .descriptor == "(Landroid/view/ActionMode;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ActionMode$Callback\0", "onDestroyActionMode\0", "(Landroid/view/ActionMode;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
