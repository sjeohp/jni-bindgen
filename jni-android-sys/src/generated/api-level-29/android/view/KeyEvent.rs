// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-KeyEvent"))]
__jni_bindgen! {
    /// public class [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html)
    ///
    /// Required feature: android-view-KeyEvent
    public class KeyEvent ("android/view/KeyEvent") extends crate::android::view::InputEvent, implements crate::android::os::Parcelable {

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(int,%20int))
        pub fn new_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long,%20long,%20int,%20int,%20int))
        pub fn new_long_long_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(JJIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(JJIII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long,%20long,%20int,%20int,%20int,%20int))
        pub fn new_long_long_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(JJIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(JJIIII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long,%20long,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn new_long_long_int_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(JJIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(JJIIIIII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long,%20long,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn new_long_long_int_int_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(JJIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(JJIIIIIII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long,%20long,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20int))
        pub fn new_long_long_int_int_int_int_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64, arg2: i32, arg3: i32, arg4: i32, arg5: i32, arg6: i32, arg7: i32, arg8: i32, arg9: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(JJIIIIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6), __jni_bindgen::AsJValue::as_jvalue(&arg7), __jni_bindgen::AsJValue::as_jvalue(&arg8), __jni_bindgen::AsJValue::as_jvalue(&arg9)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(JJIIIIIIII)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long,%20java.lang.String,%20int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_long_String_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(JLjava/lang/String;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(JLjava/lang/String;II)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(android.view.KeyEvent))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        pub fn new_KeyEvent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/KeyEvent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(Landroid/view/KeyEvent;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [KeyEvent](https://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(android.view.KeyEvent,%20long,%20int))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        #[deprecated] pub fn new_KeyEvent_long_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>, arg1: i64, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/KeyEvent;JI)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "<init>\0", "(Landroid/view/KeyEvent;JI)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxKeyCode](https://developer.android.com/reference/android/view/KeyEvent.html#getMaxKeyCode())
        pub fn getMaxKeyCode<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "getMaxKeyCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "getMaxKeyCode\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDeadChar](https://developer.android.com/reference/android/view/KeyEvent.html#getDeadChar(int,%20int))
        pub fn getDeadChar<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "getDeadChar", .descriptor == "(II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "getDeadChar\0", "(II)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [changeTimeRepeat](https://developer.android.com/reference/android/view/KeyEvent.html#changeTimeRepeat(android.view.KeyEvent,%20long,%20int))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        pub fn changeTimeRepeat_KeyEvent_long_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>, arg1: i64, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "changeTimeRepeat", .descriptor == "(Landroid/view/KeyEvent;JI)Landroid/view/KeyEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "changeTimeRepeat\0", "(Landroid/view/KeyEvent;JI)Landroid/view/KeyEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [changeTimeRepeat](https://developer.android.com/reference/android/view/KeyEvent.html#changeTimeRepeat(android.view.KeyEvent,%20long,%20int,%20int))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        pub fn changeTimeRepeat_KeyEvent_long_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>, arg1: i64, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "changeTimeRepeat", .descriptor == "(Landroid/view/KeyEvent;JII)Landroid/view/KeyEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "changeTimeRepeat\0", "(Landroid/view/KeyEvent;JII)Landroid/view/KeyEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [changeAction](https://developer.android.com/reference/android/view/KeyEvent.html#changeAction(android.view.KeyEvent,%20int))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        pub fn changeAction<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "changeAction", .descriptor == "(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "changeAction\0", "(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [changeFlags](https://developer.android.com/reference/android/view/KeyEvent.html#changeFlags(android.view.KeyEvent,%20int))
        ///
        /// Required features: "android-view-KeyEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent")))]
        pub fn changeFlags<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::KeyEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "changeFlags", .descriptor == "(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "changeFlags\0", "(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSystem](https://developer.android.com/reference/android/view/KeyEvent.html#isSystem())
        pub fn isSystem<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isSystem", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isSystem\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isGamepadButton](https://developer.android.com/reference/android/view/KeyEvent.html#isGamepadButton(int))
        pub fn isGamepadButton<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC | FINAL, .name == "isGamepadButton", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "isGamepadButton\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDeviceId](https://developer.android.com/reference/android/view/KeyEvent.html#getDeviceId())
        pub fn getDeviceId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getDeviceId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getDeviceId\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSource](https://developer.android.com/reference/android/view/KeyEvent.html#getSource())
        pub fn getSource<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getSource", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getSource\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSource](https://developer.android.com/reference/android/view/KeyEvent.html#setSource(int))
        pub fn setSource<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "setSource", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "setSource\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaState](https://developer.android.com/reference/android/view/KeyEvent.html#getMetaState())
        pub fn getMetaState<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getMetaState", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getMetaState\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getModifiers](https://developer.android.com/reference/android/view/KeyEvent.html#getModifiers())
        pub fn getModifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getModifiers", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getModifiers\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFlags](https://developer.android.com/reference/android/view/KeyEvent.html#getFlags())
        pub fn getFlags<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getFlags", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getFlags\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getModifierMetaStateMask](https://developer.android.com/reference/android/view/KeyEvent.html#getModifierMetaStateMask())
        pub fn getModifierMetaStateMask<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "getModifierMetaStateMask", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "getModifierMetaStateMask\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isModifierKey](https://developer.android.com/reference/android/view/KeyEvent.html#isModifierKey(int))
        pub fn isModifierKey<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "isModifierKey", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "isModifierKey\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [normalizeMetaState](https://developer.android.com/reference/android/view/KeyEvent.html#normalizeMetaState(int))
        pub fn normalizeMetaState<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "normalizeMetaState", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "normalizeMetaState\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [metaStateHasNoModifiers](https://developer.android.com/reference/android/view/KeyEvent.html#metaStateHasNoModifiers(int))
        pub fn metaStateHasNoModifiers<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "metaStateHasNoModifiers", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "metaStateHasNoModifiers\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [metaStateHasModifiers](https://developer.android.com/reference/android/view/KeyEvent.html#metaStateHasModifiers(int,%20int))
        pub fn metaStateHasModifiers<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "metaStateHasModifiers", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "metaStateHasModifiers\0", "(II)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasNoModifiers](https://developer.android.com/reference/android/view/KeyEvent.html#hasNoModifiers())
        pub fn hasNoModifiers<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "hasNoModifiers", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "hasNoModifiers\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasModifiers](https://developer.android.com/reference/android/view/KeyEvent.html#hasModifiers(int))
        pub fn hasModifiers<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "hasModifiers", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "hasModifiers\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isAltPressed](https://developer.android.com/reference/android/view/KeyEvent.html#isAltPressed())
        pub fn isAltPressed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isAltPressed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isAltPressed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isShiftPressed](https://developer.android.com/reference/android/view/KeyEvent.html#isShiftPressed())
        pub fn isShiftPressed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isShiftPressed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isShiftPressed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSymPressed](https://developer.android.com/reference/android/view/KeyEvent.html#isSymPressed())
        pub fn isSymPressed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isSymPressed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isSymPressed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isCtrlPressed](https://developer.android.com/reference/android/view/KeyEvent.html#isCtrlPressed())
        pub fn isCtrlPressed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isCtrlPressed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isCtrlPressed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isMetaPressed](https://developer.android.com/reference/android/view/KeyEvent.html#isMetaPressed())
        pub fn isMetaPressed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isMetaPressed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isMetaPressed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isFunctionPressed](https://developer.android.com/reference/android/view/KeyEvent.html#isFunctionPressed())
        pub fn isFunctionPressed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isFunctionPressed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isFunctionPressed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isCapsLockOn](https://developer.android.com/reference/android/view/KeyEvent.html#isCapsLockOn())
        pub fn isCapsLockOn<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isCapsLockOn", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isCapsLockOn\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNumLockOn](https://developer.android.com/reference/android/view/KeyEvent.html#isNumLockOn())
        pub fn isNumLockOn<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isNumLockOn", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isNumLockOn\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isScrollLockOn](https://developer.android.com/reference/android/view/KeyEvent.html#isScrollLockOn())
        pub fn isScrollLockOn<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isScrollLockOn", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isScrollLockOn\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAction](https://developer.android.com/reference/android/view/KeyEvent.html#getAction())
        pub fn getAction<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getAction", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getAction\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isCanceled](https://developer.android.com/reference/android/view/KeyEvent.html#isCanceled())
        pub fn isCanceled<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isCanceled", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isCanceled\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startTracking](https://developer.android.com/reference/android/view/KeyEvent.html#startTracking())
        pub fn startTracking<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "startTracking", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "startTracking\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isTracking](https://developer.android.com/reference/android/view/KeyEvent.html#isTracking())
        pub fn isTracking<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isTracking", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isTracking\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLongPress](https://developer.android.com/reference/android/view/KeyEvent.html#isLongPress())
        pub fn isLongPress<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "isLongPress", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isLongPress\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeyCode](https://developer.android.com/reference/android/view/KeyEvent.html#getKeyCode())
        pub fn getKeyCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getKeyCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getKeyCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharacters](https://developer.android.com/reference/android/view/KeyEvent.html#getCharacters())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn getCharacters<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getCharacters", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getCharacters\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScanCode](https://developer.android.com/reference/android/view/KeyEvent.html#getScanCode())
        pub fn getScanCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getScanCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getScanCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRepeatCount](https://developer.android.com/reference/android/view/KeyEvent.html#getRepeatCount())
        pub fn getRepeatCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getRepeatCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getRepeatCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDownTime](https://developer.android.com/reference/android/view/KeyEvent.html#getDownTime())
        pub fn getDownTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getDownTime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getDownTime\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEventTime](https://developer.android.com/reference/android/view/KeyEvent.html#getEventTime())
        pub fn getEventTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getEventTime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getEventTime\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeyCharacterMap](https://developer.android.com/reference/android/view/KeyEvent.html#getKeyCharacterMap())
        ///
        /// Required features: "android-view-KeyCharacterMap"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyCharacterMap")))]
        pub fn getKeyCharacterMap<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::KeyCharacterMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "getKeyCharacterMap", .descriptor == "()Landroid/view/KeyCharacterMap;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getKeyCharacterMap\0", "()Landroid/view/KeyCharacterMap;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayLabel](https://developer.android.com/reference/android/view/KeyEvent.html#getDisplayLabel())
        pub fn getDisplayLabel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::jchar, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "getDisplayLabel", .descriptor == "()C"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getDisplayLabel\0", "()C\0");
                __jni_env.call_char_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUnicodeChar](https://developer.android.com/reference/android/view/KeyEvent.html#getUnicodeChar())
        pub fn getUnicodeChar<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "getUnicodeChar", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getUnicodeChar\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUnicodeChar](https://developer.android.com/reference/android/view/KeyEvent.html#getUnicodeChar(int))
        pub fn getUnicodeChar_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "getUnicodeChar", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getUnicodeChar\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeyData](https://developer.android.com/reference/android/view/KeyEvent.html#getKeyData(android.view.KeyCharacterMap.KeyData))
        ///
        /// Required features: "android-view-KeyCharacterMap_KeyData"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyCharacterMap_KeyData")))]
        #[deprecated] pub fn getKeyData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyCharacterMap_KeyData>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "getKeyData", .descriptor == "(Landroid/view/KeyCharacterMap$KeyData;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getKeyData\0", "(Landroid/view/KeyCharacterMap$KeyData;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMatch](https://developer.android.com/reference/android/view/KeyEvent.html#getMatch(char%5B%5D))
        pub fn getMatch_char_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::jchar, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "getMatch", .descriptor == "([C)C"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getMatch\0", "([C)C\0");
                __jni_env.call_char_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMatch](https://developer.android.com/reference/android/view/KeyEvent.html#getMatch(char%5B%5D,%20int))
        pub fn getMatch_char_array_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::jchar, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "getMatch", .descriptor == "([CI)C"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getMatch\0", "([CI)C\0");
                __jni_env.call_char_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNumber](https://developer.android.com/reference/android/view/KeyEvent.html#getNumber())
        pub fn getNumber<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::jchar, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "getNumber", .descriptor == "()C"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "getNumber\0", "()C\0");
                __jni_env.call_char_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isPrintingKey](https://developer.android.com/reference/android/view/KeyEvent.html#isPrintingKey())
        pub fn isPrintingKey<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "isPrintingKey", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "isPrintingKey\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dispatch](https://developer.android.com/reference/android/view/KeyEvent.html#dispatch(android.view.KeyEvent.Callback))
        ///
        /// Required features: "android-view-KeyEvent_Callback"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent_Callback")))]
        #[deprecated] pub fn dispatch_Callback<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent_Callback>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "dispatch", .descriptor == "(Landroid/view/KeyEvent$Callback;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "dispatch\0", "(Landroid/view/KeyEvent$Callback;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dispatch](https://developer.android.com/reference/android/view/KeyEvent.html#dispatch(android.view.KeyEvent.Callback,%20android.view.KeyEvent.DispatcherState,%20java.lang.Object))
        ///
        /// Required features: "android-view-KeyEvent_Callback", "android-view-KeyEvent_DispatcherState", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent_Callback", feature = "android-view-KeyEvent_DispatcherState", feature = "java-lang-Object")))]
        pub fn dispatch_Callback_DispatcherState_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent_Callback>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent_DispatcherState>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | FINAL, .name == "dispatch", .descriptor == "(Landroid/view/KeyEvent$Callback;Landroid/view/KeyEvent$DispatcherState;Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "dispatch\0", "(Landroid/view/KeyEvent$Callback;Landroid/view/KeyEvent$DispatcherState;Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/view/KeyEvent.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [keyCodeToString](https://developer.android.com/reference/android/view/KeyEvent.html#keyCodeToString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn keyCodeToString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "keyCodeToString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "keyCodeToString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [keyCodeFromString](https://developer.android.com/reference/android/view/KeyEvent.html#keyCodeFromString(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn keyCodeFromString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC | STATIC, .name == "keyCodeFromString", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/KeyEvent\0", "keyCodeFromString\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/view/KeyEvent.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/KeyEvent", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/KeyEvent\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#ACTION_DOWN)
        pub const ACTION_DOWN : i32 = 0;

        /// public static final [ACTION_MULTIPLE](https://developer.android.com/reference/android/view/KeyEvent.html#ACTION_MULTIPLE)
        #[deprecated] pub const ACTION_MULTIPLE : i32 = 2;

        /// public static final [ACTION_UP](https://developer.android.com/reference/android/view/KeyEvent.html#ACTION_UP)
        pub const ACTION_UP : i32 = 1;

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/view/KeyEvent.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/view/KeyEvent\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [FLAG_CANCELED](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_CANCELED)
        pub const FLAG_CANCELED : i32 = 32;

        /// public static final [FLAG_CANCELED_LONG_PRESS](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_CANCELED_LONG_PRESS)
        pub const FLAG_CANCELED_LONG_PRESS : i32 = 256;

        /// public static final [FLAG_EDITOR_ACTION](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_EDITOR_ACTION)
        pub const FLAG_EDITOR_ACTION : i32 = 16;

        /// public static final [FLAG_FALLBACK](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_FALLBACK)
        pub const FLAG_FALLBACK : i32 = 1024;

        /// public static final [FLAG_FROM_SYSTEM](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_FROM_SYSTEM)
        pub const FLAG_FROM_SYSTEM : i32 = 8;

        /// public static final [FLAG_KEEP_TOUCH_MODE](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_KEEP_TOUCH_MODE)
        pub const FLAG_KEEP_TOUCH_MODE : i32 = 4;

        /// public static final [FLAG_LONG_PRESS](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_LONG_PRESS)
        pub const FLAG_LONG_PRESS : i32 = 128;

        /// public static final [FLAG_SOFT_KEYBOARD](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_SOFT_KEYBOARD)
        pub const FLAG_SOFT_KEYBOARD : i32 = 2;

        /// public static final [FLAG_TRACKING](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_TRACKING)
        pub const FLAG_TRACKING : i32 = 512;

        /// public static final [FLAG_VIRTUAL_HARD_KEY](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_VIRTUAL_HARD_KEY)
        pub const FLAG_VIRTUAL_HARD_KEY : i32 = 64;

        /// public static final [FLAG_WOKE_HERE](https://developer.android.com/reference/android/view/KeyEvent.html#FLAG_WOKE_HERE)
        #[deprecated] pub const FLAG_WOKE_HERE : i32 = 1;

        /// public static final [KEYCODE_0](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_0)
        pub const KEYCODE_0 : i32 = 7;

        /// public static final [KEYCODE_1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_1)
        pub const KEYCODE_1 : i32 = 8;

        /// public static final [KEYCODE_11](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_11)
        pub const KEYCODE_11 : i32 = 227;

        /// public static final [KEYCODE_12](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_12)
        pub const KEYCODE_12 : i32 = 228;

        /// public static final [KEYCODE_2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_2)
        pub const KEYCODE_2 : i32 = 9;

        /// public static final [KEYCODE_3](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_3)
        pub const KEYCODE_3 : i32 = 10;

        /// public static final [KEYCODE_3D_MODE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_3D_MODE)
        pub const KEYCODE_3D_MODE : i32 = 206;

        /// public static final [KEYCODE_4](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_4)
        pub const KEYCODE_4 : i32 = 11;

        /// public static final [KEYCODE_5](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_5)
        pub const KEYCODE_5 : i32 = 12;

        /// public static final [KEYCODE_6](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_6)
        pub const KEYCODE_6 : i32 = 13;

        /// public static final [KEYCODE_7](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_7)
        pub const KEYCODE_7 : i32 = 14;

        /// public static final [KEYCODE_8](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_8)
        pub const KEYCODE_8 : i32 = 15;

        /// public static final [KEYCODE_9](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_9)
        pub const KEYCODE_9 : i32 = 16;

        /// public static final [KEYCODE_A](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_A)
        pub const KEYCODE_A : i32 = 29;

        /// public static final [KEYCODE_ALL_APPS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ALL_APPS)
        pub const KEYCODE_ALL_APPS : i32 = 284;

        /// public static final [KEYCODE_ALT_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ALT_LEFT)
        pub const KEYCODE_ALT_LEFT : i32 = 57;

        /// public static final [KEYCODE_ALT_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ALT_RIGHT)
        pub const KEYCODE_ALT_RIGHT : i32 = 58;

        /// public static final [KEYCODE_APOSTROPHE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_APOSTROPHE)
        pub const KEYCODE_APOSTROPHE : i32 = 75;

        /// public static final [KEYCODE_APP_SWITCH](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_APP_SWITCH)
        pub const KEYCODE_APP_SWITCH : i32 = 187;

        /// public static final [KEYCODE_ASSIST](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ASSIST)
        pub const KEYCODE_ASSIST : i32 = 219;

        /// public static final [KEYCODE_AT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_AT)
        pub const KEYCODE_AT : i32 = 77;

        /// public static final [KEYCODE_AVR_INPUT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_AVR_INPUT)
        pub const KEYCODE_AVR_INPUT : i32 = 182;

        /// public static final [KEYCODE_AVR_POWER](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_AVR_POWER)
        pub const KEYCODE_AVR_POWER : i32 = 181;

        /// public static final [KEYCODE_B](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_B)
        pub const KEYCODE_B : i32 = 30;

        /// public static final [KEYCODE_BACK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BACK)
        pub const KEYCODE_BACK : i32 = 4;

        /// public static final [KEYCODE_BACKSLASH](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BACKSLASH)
        pub const KEYCODE_BACKSLASH : i32 = 73;

        /// public static final [KEYCODE_BOOKMARK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BOOKMARK)
        pub const KEYCODE_BOOKMARK : i32 = 174;

        /// public static final [KEYCODE_BREAK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BREAK)
        pub const KEYCODE_BREAK : i32 = 121;

        /// public static final [KEYCODE_BRIGHTNESS_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BRIGHTNESS_DOWN)
        pub const KEYCODE_BRIGHTNESS_DOWN : i32 = 220;

        /// public static final [KEYCODE_BRIGHTNESS_UP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BRIGHTNESS_UP)
        pub const KEYCODE_BRIGHTNESS_UP : i32 = 221;

        /// public static final [KEYCODE_BUTTON_1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_1)
        pub const KEYCODE_BUTTON_1 : i32 = 188;

        /// public static final [KEYCODE_BUTTON_10](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_10)
        pub const KEYCODE_BUTTON_10 : i32 = 197;

        /// public static final [KEYCODE_BUTTON_11](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_11)
        pub const KEYCODE_BUTTON_11 : i32 = 198;

        /// public static final [KEYCODE_BUTTON_12](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_12)
        pub const KEYCODE_BUTTON_12 : i32 = 199;

        /// public static final [KEYCODE_BUTTON_13](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_13)
        pub const KEYCODE_BUTTON_13 : i32 = 200;

        /// public static final [KEYCODE_BUTTON_14](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_14)
        pub const KEYCODE_BUTTON_14 : i32 = 201;

        /// public static final [KEYCODE_BUTTON_15](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_15)
        pub const KEYCODE_BUTTON_15 : i32 = 202;

        /// public static final [KEYCODE_BUTTON_16](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_16)
        pub const KEYCODE_BUTTON_16 : i32 = 203;

        /// public static final [KEYCODE_BUTTON_2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_2)
        pub const KEYCODE_BUTTON_2 : i32 = 189;

        /// public static final [KEYCODE_BUTTON_3](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_3)
        pub const KEYCODE_BUTTON_3 : i32 = 190;

        /// public static final [KEYCODE_BUTTON_4](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_4)
        pub const KEYCODE_BUTTON_4 : i32 = 191;

        /// public static final [KEYCODE_BUTTON_5](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_5)
        pub const KEYCODE_BUTTON_5 : i32 = 192;

        /// public static final [KEYCODE_BUTTON_6](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_6)
        pub const KEYCODE_BUTTON_6 : i32 = 193;

        /// public static final [KEYCODE_BUTTON_7](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_7)
        pub const KEYCODE_BUTTON_7 : i32 = 194;

        /// public static final [KEYCODE_BUTTON_8](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_8)
        pub const KEYCODE_BUTTON_8 : i32 = 195;

        /// public static final [KEYCODE_BUTTON_9](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_9)
        pub const KEYCODE_BUTTON_9 : i32 = 196;

        /// public static final [KEYCODE_BUTTON_A](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_A)
        pub const KEYCODE_BUTTON_A : i32 = 96;

        /// public static final [KEYCODE_BUTTON_B](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_B)
        pub const KEYCODE_BUTTON_B : i32 = 97;

        /// public static final [KEYCODE_BUTTON_C](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_C)
        pub const KEYCODE_BUTTON_C : i32 = 98;

        /// public static final [KEYCODE_BUTTON_L1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_L1)
        pub const KEYCODE_BUTTON_L1 : i32 = 102;

        /// public static final [KEYCODE_BUTTON_L2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_L2)
        pub const KEYCODE_BUTTON_L2 : i32 = 104;

        /// public static final [KEYCODE_BUTTON_MODE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_MODE)
        pub const KEYCODE_BUTTON_MODE : i32 = 110;

        /// public static final [KEYCODE_BUTTON_R1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_R1)
        pub const KEYCODE_BUTTON_R1 : i32 = 103;

        /// public static final [KEYCODE_BUTTON_R2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_R2)
        pub const KEYCODE_BUTTON_R2 : i32 = 105;

        /// public static final [KEYCODE_BUTTON_SELECT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_SELECT)
        pub const KEYCODE_BUTTON_SELECT : i32 = 109;

        /// public static final [KEYCODE_BUTTON_START](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_START)
        pub const KEYCODE_BUTTON_START : i32 = 108;

        /// public static final [KEYCODE_BUTTON_THUMBL](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_THUMBL)
        pub const KEYCODE_BUTTON_THUMBL : i32 = 106;

        /// public static final [KEYCODE_BUTTON_THUMBR](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_THUMBR)
        pub const KEYCODE_BUTTON_THUMBR : i32 = 107;

        /// public static final [KEYCODE_BUTTON_X](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_X)
        pub const KEYCODE_BUTTON_X : i32 = 99;

        /// public static final [KEYCODE_BUTTON_Y](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_Y)
        pub const KEYCODE_BUTTON_Y : i32 = 100;

        /// public static final [KEYCODE_BUTTON_Z](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_BUTTON_Z)
        pub const KEYCODE_BUTTON_Z : i32 = 101;

        /// public static final [KEYCODE_C](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_C)
        pub const KEYCODE_C : i32 = 31;

        /// public static final [KEYCODE_CALCULATOR](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CALCULATOR)
        pub const KEYCODE_CALCULATOR : i32 = 210;

        /// public static final [KEYCODE_CALENDAR](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CALENDAR)
        pub const KEYCODE_CALENDAR : i32 = 208;

        /// public static final [KEYCODE_CALL](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CALL)
        pub const KEYCODE_CALL : i32 = 5;

        /// public static final [KEYCODE_CAMERA](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CAMERA)
        pub const KEYCODE_CAMERA : i32 = 27;

        /// public static final [KEYCODE_CAPS_LOCK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CAPS_LOCK)
        pub const KEYCODE_CAPS_LOCK : i32 = 115;

        /// public static final [KEYCODE_CAPTIONS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CAPTIONS)
        pub const KEYCODE_CAPTIONS : i32 = 175;

        /// public static final [KEYCODE_CHANNEL_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CHANNEL_DOWN)
        pub const KEYCODE_CHANNEL_DOWN : i32 = 167;

        /// public static final [KEYCODE_CHANNEL_UP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CHANNEL_UP)
        pub const KEYCODE_CHANNEL_UP : i32 = 166;

        /// public static final [KEYCODE_CLEAR](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CLEAR)
        pub const KEYCODE_CLEAR : i32 = 28;

        /// public static final [KEYCODE_COMMA](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_COMMA)
        pub const KEYCODE_COMMA : i32 = 55;

        /// public static final [KEYCODE_CONTACTS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CONTACTS)
        pub const KEYCODE_CONTACTS : i32 = 207;

        /// public static final [KEYCODE_COPY](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_COPY)
        pub const KEYCODE_COPY : i32 = 278;

        /// public static final [KEYCODE_CTRL_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CTRL_LEFT)
        pub const KEYCODE_CTRL_LEFT : i32 = 113;

        /// public static final [KEYCODE_CTRL_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CTRL_RIGHT)
        pub const KEYCODE_CTRL_RIGHT : i32 = 114;

        /// public static final [KEYCODE_CUT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_CUT)
        pub const KEYCODE_CUT : i32 = 277;

        /// public static final [KEYCODE_D](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_D)
        pub const KEYCODE_D : i32 = 32;

        /// public static final [KEYCODE_DEL](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DEL)
        pub const KEYCODE_DEL : i32 = 67;

        /// public static final [KEYCODE_DPAD_CENTER](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_CENTER)
        pub const KEYCODE_DPAD_CENTER : i32 = 23;

        /// public static final [KEYCODE_DPAD_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_DOWN)
        pub const KEYCODE_DPAD_DOWN : i32 = 20;

        /// public static final [KEYCODE_DPAD_DOWN_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_DOWN_LEFT)
        pub const KEYCODE_DPAD_DOWN_LEFT : i32 = 269;

        /// public static final [KEYCODE_DPAD_DOWN_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_DOWN_RIGHT)
        pub const KEYCODE_DPAD_DOWN_RIGHT : i32 = 271;

        /// public static final [KEYCODE_DPAD_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_LEFT)
        pub const KEYCODE_DPAD_LEFT : i32 = 21;

        /// public static final [KEYCODE_DPAD_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_RIGHT)
        pub const KEYCODE_DPAD_RIGHT : i32 = 22;

        /// public static final [KEYCODE_DPAD_UP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_UP)
        pub const KEYCODE_DPAD_UP : i32 = 19;

        /// public static final [KEYCODE_DPAD_UP_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_UP_LEFT)
        pub const KEYCODE_DPAD_UP_LEFT : i32 = 268;

        /// public static final [KEYCODE_DPAD_UP_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_UP_RIGHT)
        pub const KEYCODE_DPAD_UP_RIGHT : i32 = 270;

        /// public static final [KEYCODE_DVR](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DVR)
        pub const KEYCODE_DVR : i32 = 173;

        /// public static final [KEYCODE_E](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_E)
        pub const KEYCODE_E : i32 = 33;

        /// public static final [KEYCODE_EISU](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_EISU)
        pub const KEYCODE_EISU : i32 = 212;

        /// public static final [KEYCODE_ENDCALL](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ENDCALL)
        pub const KEYCODE_ENDCALL : i32 = 6;

        /// public static final [KEYCODE_ENTER](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ENTER)
        pub const KEYCODE_ENTER : i32 = 66;

        /// public static final [KEYCODE_ENVELOPE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ENVELOPE)
        pub const KEYCODE_ENVELOPE : i32 = 65;

        /// public static final [KEYCODE_EQUALS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_EQUALS)
        pub const KEYCODE_EQUALS : i32 = 70;

        /// public static final [KEYCODE_ESCAPE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ESCAPE)
        pub const KEYCODE_ESCAPE : i32 = 111;

        /// public static final [KEYCODE_EXPLORER](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_EXPLORER)
        pub const KEYCODE_EXPLORER : i32 = 64;

        /// public static final [KEYCODE_F](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F)
        pub const KEYCODE_F : i32 = 34;

        /// public static final [KEYCODE_F1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F1)
        pub const KEYCODE_F1 : i32 = 131;

        /// public static final [KEYCODE_F10](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F10)
        pub const KEYCODE_F10 : i32 = 140;

        /// public static final [KEYCODE_F11](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F11)
        pub const KEYCODE_F11 : i32 = 141;

        /// public static final [KEYCODE_F12](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F12)
        pub const KEYCODE_F12 : i32 = 142;

        /// public static final [KEYCODE_F2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F2)
        pub const KEYCODE_F2 : i32 = 132;

        /// public static final [KEYCODE_F3](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F3)
        pub const KEYCODE_F3 : i32 = 133;

        /// public static final [KEYCODE_F4](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F4)
        pub const KEYCODE_F4 : i32 = 134;

        /// public static final [KEYCODE_F5](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F5)
        pub const KEYCODE_F5 : i32 = 135;

        /// public static final [KEYCODE_F6](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F6)
        pub const KEYCODE_F6 : i32 = 136;

        /// public static final [KEYCODE_F7](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F7)
        pub const KEYCODE_F7 : i32 = 137;

        /// public static final [KEYCODE_F8](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F8)
        pub const KEYCODE_F8 : i32 = 138;

        /// public static final [KEYCODE_F9](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_F9)
        pub const KEYCODE_F9 : i32 = 139;

        /// public static final [KEYCODE_FOCUS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_FOCUS)
        pub const KEYCODE_FOCUS : i32 = 80;

        /// public static final [KEYCODE_FORWARD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_FORWARD)
        pub const KEYCODE_FORWARD : i32 = 125;

        /// public static final [KEYCODE_FORWARD_DEL](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_FORWARD_DEL)
        pub const KEYCODE_FORWARD_DEL : i32 = 112;

        /// public static final [KEYCODE_FUNCTION](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_FUNCTION)
        pub const KEYCODE_FUNCTION : i32 = 119;

        /// public static final [KEYCODE_G](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_G)
        pub const KEYCODE_G : i32 = 35;

        /// public static final [KEYCODE_GRAVE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_GRAVE)
        pub const KEYCODE_GRAVE : i32 = 68;

        /// public static final [KEYCODE_GUIDE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_GUIDE)
        pub const KEYCODE_GUIDE : i32 = 172;

        /// public static final [KEYCODE_H](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_H)
        pub const KEYCODE_H : i32 = 36;

        /// public static final [KEYCODE_HEADSETHOOK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_HEADSETHOOK)
        pub const KEYCODE_HEADSETHOOK : i32 = 79;

        /// public static final [KEYCODE_HELP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_HELP)
        pub const KEYCODE_HELP : i32 = 259;

        /// public static final [KEYCODE_HENKAN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_HENKAN)
        pub const KEYCODE_HENKAN : i32 = 214;

        /// public static final [KEYCODE_HOME](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_HOME)
        pub const KEYCODE_HOME : i32 = 3;

        /// public static final [KEYCODE_I](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_I)
        pub const KEYCODE_I : i32 = 37;

        /// public static final [KEYCODE_INFO](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_INFO)
        pub const KEYCODE_INFO : i32 = 165;

        /// public static final [KEYCODE_INSERT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_INSERT)
        pub const KEYCODE_INSERT : i32 = 124;

        /// public static final [KEYCODE_J](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_J)
        pub const KEYCODE_J : i32 = 38;

        /// public static final [KEYCODE_K](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_K)
        pub const KEYCODE_K : i32 = 39;

        /// public static final [KEYCODE_KANA](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_KANA)
        pub const KEYCODE_KANA : i32 = 218;

        /// public static final [KEYCODE_KATAKANA_HIRAGANA](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_KATAKANA_HIRAGANA)
        pub const KEYCODE_KATAKANA_HIRAGANA : i32 = 215;

        /// public static final [KEYCODE_L](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_L)
        pub const KEYCODE_L : i32 = 40;

        /// public static final [KEYCODE_LANGUAGE_SWITCH](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_LANGUAGE_SWITCH)
        pub const KEYCODE_LANGUAGE_SWITCH : i32 = 204;

        /// public static final [KEYCODE_LAST_CHANNEL](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_LAST_CHANNEL)
        pub const KEYCODE_LAST_CHANNEL : i32 = 229;

        /// public static final [KEYCODE_LEFT_BRACKET](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_LEFT_BRACKET)
        pub const KEYCODE_LEFT_BRACKET : i32 = 71;

        /// public static final [KEYCODE_M](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_M)
        pub const KEYCODE_M : i32 = 41;

        /// public static final [KEYCODE_MANNER_MODE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MANNER_MODE)
        pub const KEYCODE_MANNER_MODE : i32 = 205;

        /// public static final [KEYCODE_MEDIA_AUDIO_TRACK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_AUDIO_TRACK)
        pub const KEYCODE_MEDIA_AUDIO_TRACK : i32 = 222;

        /// public static final [KEYCODE_MEDIA_CLOSE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_CLOSE)
        pub const KEYCODE_MEDIA_CLOSE : i32 = 128;

        /// public static final [KEYCODE_MEDIA_EJECT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_EJECT)
        pub const KEYCODE_MEDIA_EJECT : i32 = 129;

        /// public static final [KEYCODE_MEDIA_FAST_FORWARD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_FAST_FORWARD)
        pub const KEYCODE_MEDIA_FAST_FORWARD : i32 = 90;

        /// public static final [KEYCODE_MEDIA_NEXT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_NEXT)
        pub const KEYCODE_MEDIA_NEXT : i32 = 87;

        /// public static final [KEYCODE_MEDIA_PAUSE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_PAUSE)
        pub const KEYCODE_MEDIA_PAUSE : i32 = 127;

        /// public static final [KEYCODE_MEDIA_PLAY](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_PLAY)
        pub const KEYCODE_MEDIA_PLAY : i32 = 126;

        /// public static final [KEYCODE_MEDIA_PLAY_PAUSE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_PLAY_PAUSE)
        pub const KEYCODE_MEDIA_PLAY_PAUSE : i32 = 85;

        /// public static final [KEYCODE_MEDIA_PREVIOUS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_PREVIOUS)
        pub const KEYCODE_MEDIA_PREVIOUS : i32 = 88;

        /// public static final [KEYCODE_MEDIA_RECORD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_RECORD)
        pub const KEYCODE_MEDIA_RECORD : i32 = 130;

        /// public static final [KEYCODE_MEDIA_REWIND](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_REWIND)
        pub const KEYCODE_MEDIA_REWIND : i32 = 89;

        /// public static final [KEYCODE_MEDIA_SKIP_BACKWARD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_SKIP_BACKWARD)
        pub const KEYCODE_MEDIA_SKIP_BACKWARD : i32 = 273;

        /// public static final [KEYCODE_MEDIA_SKIP_FORWARD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_SKIP_FORWARD)
        pub const KEYCODE_MEDIA_SKIP_FORWARD : i32 = 272;

        /// public static final [KEYCODE_MEDIA_STEP_BACKWARD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_STEP_BACKWARD)
        pub const KEYCODE_MEDIA_STEP_BACKWARD : i32 = 275;

        /// public static final [KEYCODE_MEDIA_STEP_FORWARD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_STEP_FORWARD)
        pub const KEYCODE_MEDIA_STEP_FORWARD : i32 = 274;

        /// public static final [KEYCODE_MEDIA_STOP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_STOP)
        pub const KEYCODE_MEDIA_STOP : i32 = 86;

        /// public static final [KEYCODE_MEDIA_TOP_MENU](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MEDIA_TOP_MENU)
        pub const KEYCODE_MEDIA_TOP_MENU : i32 = 226;

        /// public static final [KEYCODE_MENU](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MENU)
        pub const KEYCODE_MENU : i32 = 82;

        /// public static final [KEYCODE_META_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_META_LEFT)
        pub const KEYCODE_META_LEFT : i32 = 117;

        /// public static final [KEYCODE_META_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_META_RIGHT)
        pub const KEYCODE_META_RIGHT : i32 = 118;

        /// public static final [KEYCODE_MINUS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MINUS)
        pub const KEYCODE_MINUS : i32 = 69;

        /// public static final [KEYCODE_MOVE_END](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MOVE_END)
        pub const KEYCODE_MOVE_END : i32 = 123;

        /// public static final [KEYCODE_MOVE_HOME](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MOVE_HOME)
        pub const KEYCODE_MOVE_HOME : i32 = 122;

        /// public static final [KEYCODE_MUHENKAN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MUHENKAN)
        pub const KEYCODE_MUHENKAN : i32 = 213;

        /// public static final [KEYCODE_MUSIC](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MUSIC)
        pub const KEYCODE_MUSIC : i32 = 209;

        /// public static final [KEYCODE_MUTE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_MUTE)
        pub const KEYCODE_MUTE : i32 = 91;

        /// public static final [KEYCODE_N](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_N)
        pub const KEYCODE_N : i32 = 42;

        /// public static final [KEYCODE_NAVIGATE_IN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NAVIGATE_IN)
        pub const KEYCODE_NAVIGATE_IN : i32 = 262;

        /// public static final [KEYCODE_NAVIGATE_NEXT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NAVIGATE_NEXT)
        pub const KEYCODE_NAVIGATE_NEXT : i32 = 261;

        /// public static final [KEYCODE_NAVIGATE_OUT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NAVIGATE_OUT)
        pub const KEYCODE_NAVIGATE_OUT : i32 = 263;

        /// public static final [KEYCODE_NAVIGATE_PREVIOUS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NAVIGATE_PREVIOUS)
        pub const KEYCODE_NAVIGATE_PREVIOUS : i32 = 260;

        /// public static final [KEYCODE_NOTIFICATION](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NOTIFICATION)
        pub const KEYCODE_NOTIFICATION : i32 = 83;

        /// public static final [KEYCODE_NUM](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUM)
        pub const KEYCODE_NUM : i32 = 78;

        /// public static final [KEYCODE_NUMPAD_0](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_0)
        pub const KEYCODE_NUMPAD_0 : i32 = 144;

        /// public static final [KEYCODE_NUMPAD_1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_1)
        pub const KEYCODE_NUMPAD_1 : i32 = 145;

        /// public static final [KEYCODE_NUMPAD_2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_2)
        pub const KEYCODE_NUMPAD_2 : i32 = 146;

        /// public static final [KEYCODE_NUMPAD_3](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_3)
        pub const KEYCODE_NUMPAD_3 : i32 = 147;

        /// public static final [KEYCODE_NUMPAD_4](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_4)
        pub const KEYCODE_NUMPAD_4 : i32 = 148;

        /// public static final [KEYCODE_NUMPAD_5](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_5)
        pub const KEYCODE_NUMPAD_5 : i32 = 149;

        /// public static final [KEYCODE_NUMPAD_6](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_6)
        pub const KEYCODE_NUMPAD_6 : i32 = 150;

        /// public static final [KEYCODE_NUMPAD_7](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_7)
        pub const KEYCODE_NUMPAD_7 : i32 = 151;

        /// public static final [KEYCODE_NUMPAD_8](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_8)
        pub const KEYCODE_NUMPAD_8 : i32 = 152;

        /// public static final [KEYCODE_NUMPAD_9](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_9)
        pub const KEYCODE_NUMPAD_9 : i32 = 153;

        /// public static final [KEYCODE_NUMPAD_ADD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_ADD)
        pub const KEYCODE_NUMPAD_ADD : i32 = 157;

        /// public static final [KEYCODE_NUMPAD_COMMA](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_COMMA)
        pub const KEYCODE_NUMPAD_COMMA : i32 = 159;

        /// public static final [KEYCODE_NUMPAD_DIVIDE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_DIVIDE)
        pub const KEYCODE_NUMPAD_DIVIDE : i32 = 154;

        /// public static final [KEYCODE_NUMPAD_DOT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_DOT)
        pub const KEYCODE_NUMPAD_DOT : i32 = 158;

        /// public static final [KEYCODE_NUMPAD_ENTER](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_ENTER)
        pub const KEYCODE_NUMPAD_ENTER : i32 = 160;

        /// public static final [KEYCODE_NUMPAD_EQUALS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_EQUALS)
        pub const KEYCODE_NUMPAD_EQUALS : i32 = 161;

        /// public static final [KEYCODE_NUMPAD_LEFT_PAREN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_LEFT_PAREN)
        pub const KEYCODE_NUMPAD_LEFT_PAREN : i32 = 162;

        /// public static final [KEYCODE_NUMPAD_MULTIPLY](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_MULTIPLY)
        pub const KEYCODE_NUMPAD_MULTIPLY : i32 = 155;

        /// public static final [KEYCODE_NUMPAD_RIGHT_PAREN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_RIGHT_PAREN)
        pub const KEYCODE_NUMPAD_RIGHT_PAREN : i32 = 163;

        /// public static final [KEYCODE_NUMPAD_SUBTRACT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUMPAD_SUBTRACT)
        pub const KEYCODE_NUMPAD_SUBTRACT : i32 = 156;

        /// public static final [KEYCODE_NUM_LOCK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_NUM_LOCK)
        pub const KEYCODE_NUM_LOCK : i32 = 143;

        /// public static final [KEYCODE_O](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_O)
        pub const KEYCODE_O : i32 = 43;

        /// public static final [KEYCODE_P](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_P)
        pub const KEYCODE_P : i32 = 44;

        /// public static final [KEYCODE_PAGE_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PAGE_DOWN)
        pub const KEYCODE_PAGE_DOWN : i32 = 93;

        /// public static final [KEYCODE_PAGE_UP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PAGE_UP)
        pub const KEYCODE_PAGE_UP : i32 = 92;

        /// public static final [KEYCODE_PAIRING](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PAIRING)
        pub const KEYCODE_PAIRING : i32 = 225;

        /// public static final [KEYCODE_PASTE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PASTE)
        pub const KEYCODE_PASTE : i32 = 279;

        /// public static final [KEYCODE_PERIOD](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PERIOD)
        pub const KEYCODE_PERIOD : i32 = 56;

        /// public static final [KEYCODE_PICTSYMBOLS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PICTSYMBOLS)
        pub const KEYCODE_PICTSYMBOLS : i32 = 94;

        /// public static final [KEYCODE_PLUS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PLUS)
        pub const KEYCODE_PLUS : i32 = 81;

        /// public static final [KEYCODE_POUND](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_POUND)
        pub const KEYCODE_POUND : i32 = 18;

        /// public static final [KEYCODE_POWER](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_POWER)
        pub const KEYCODE_POWER : i32 = 26;

        /// public static final [KEYCODE_PROFILE_SWITCH](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PROFILE_SWITCH)
        pub const KEYCODE_PROFILE_SWITCH : i32 = 288;

        /// public static final [KEYCODE_PROG_BLUE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PROG_BLUE)
        pub const KEYCODE_PROG_BLUE : i32 = 186;

        /// public static final [KEYCODE_PROG_GREEN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PROG_GREEN)
        pub const KEYCODE_PROG_GREEN : i32 = 184;

        /// public static final [KEYCODE_PROG_RED](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PROG_RED)
        pub const KEYCODE_PROG_RED : i32 = 183;

        /// public static final [KEYCODE_PROG_YELLOW](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_PROG_YELLOW)
        pub const KEYCODE_PROG_YELLOW : i32 = 185;

        /// public static final [KEYCODE_Q](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_Q)
        pub const KEYCODE_Q : i32 = 45;

        /// public static final [KEYCODE_R](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_R)
        pub const KEYCODE_R : i32 = 46;

        /// public static final [KEYCODE_REFRESH](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_REFRESH)
        pub const KEYCODE_REFRESH : i32 = 285;

        /// public static final [KEYCODE_RIGHT_BRACKET](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_RIGHT_BRACKET)
        pub const KEYCODE_RIGHT_BRACKET : i32 = 72;

        /// public static final [KEYCODE_RO](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_RO)
        pub const KEYCODE_RO : i32 = 217;

        /// public static final [KEYCODE_S](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_S)
        pub const KEYCODE_S : i32 = 47;

        /// public static final [KEYCODE_SCROLL_LOCK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SCROLL_LOCK)
        pub const KEYCODE_SCROLL_LOCK : i32 = 116;

        /// public static final [KEYCODE_SEARCH](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SEARCH)
        pub const KEYCODE_SEARCH : i32 = 84;

        /// public static final [KEYCODE_SEMICOLON](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SEMICOLON)
        pub const KEYCODE_SEMICOLON : i32 = 74;

        /// public static final [KEYCODE_SETTINGS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SETTINGS)
        pub const KEYCODE_SETTINGS : i32 = 176;

        /// public static final [KEYCODE_SHIFT_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SHIFT_LEFT)
        pub const KEYCODE_SHIFT_LEFT : i32 = 59;

        /// public static final [KEYCODE_SHIFT_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SHIFT_RIGHT)
        pub const KEYCODE_SHIFT_RIGHT : i32 = 60;

        /// public static final [KEYCODE_SLASH](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SLASH)
        pub const KEYCODE_SLASH : i32 = 76;

        /// public static final [KEYCODE_SLEEP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SLEEP)
        pub const KEYCODE_SLEEP : i32 = 223;

        /// public static final [KEYCODE_SOFT_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SOFT_LEFT)
        pub const KEYCODE_SOFT_LEFT : i32 = 1;

        /// public static final [KEYCODE_SOFT_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SOFT_RIGHT)
        pub const KEYCODE_SOFT_RIGHT : i32 = 2;

        /// public static final [KEYCODE_SOFT_SLEEP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SOFT_SLEEP)
        pub const KEYCODE_SOFT_SLEEP : i32 = 276;

        /// public static final [KEYCODE_SPACE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SPACE)
        pub const KEYCODE_SPACE : i32 = 62;

        /// public static final [KEYCODE_STAR](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_STAR)
        pub const KEYCODE_STAR : i32 = 17;

        /// public static final [KEYCODE_STB_INPUT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_STB_INPUT)
        pub const KEYCODE_STB_INPUT : i32 = 180;

        /// public static final [KEYCODE_STB_POWER](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_STB_POWER)
        pub const KEYCODE_STB_POWER : i32 = 179;

        /// public static final [KEYCODE_STEM_1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_STEM_1)
        pub const KEYCODE_STEM_1 : i32 = 265;

        /// public static final [KEYCODE_STEM_2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_STEM_2)
        pub const KEYCODE_STEM_2 : i32 = 266;

        /// public static final [KEYCODE_STEM_3](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_STEM_3)
        pub const KEYCODE_STEM_3 : i32 = 267;

        /// public static final [KEYCODE_STEM_PRIMARY](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_STEM_PRIMARY)
        pub const KEYCODE_STEM_PRIMARY : i32 = 264;

        /// public static final [KEYCODE_SWITCH_CHARSET](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SWITCH_CHARSET)
        pub const KEYCODE_SWITCH_CHARSET : i32 = 95;

        /// public static final [KEYCODE_SYM](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SYM)
        pub const KEYCODE_SYM : i32 = 63;

        /// public static final [KEYCODE_SYSRQ](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SYSRQ)
        pub const KEYCODE_SYSRQ : i32 = 120;

        /// public static final [KEYCODE_SYSTEM_NAVIGATION_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SYSTEM_NAVIGATION_DOWN)
        pub const KEYCODE_SYSTEM_NAVIGATION_DOWN : i32 = 281;

        /// public static final [KEYCODE_SYSTEM_NAVIGATION_LEFT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SYSTEM_NAVIGATION_LEFT)
        pub const KEYCODE_SYSTEM_NAVIGATION_LEFT : i32 = 282;

        /// public static final [KEYCODE_SYSTEM_NAVIGATION_RIGHT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SYSTEM_NAVIGATION_RIGHT)
        pub const KEYCODE_SYSTEM_NAVIGATION_RIGHT : i32 = 283;

        /// public static final [KEYCODE_SYSTEM_NAVIGATION_UP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_SYSTEM_NAVIGATION_UP)
        pub const KEYCODE_SYSTEM_NAVIGATION_UP : i32 = 280;

        /// public static final [KEYCODE_T](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_T)
        pub const KEYCODE_T : i32 = 48;

        /// public static final [KEYCODE_TAB](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TAB)
        pub const KEYCODE_TAB : i32 = 61;

        /// public static final [KEYCODE_THUMBS_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_THUMBS_DOWN)
        pub const KEYCODE_THUMBS_DOWN : i32 = 287;

        /// public static final [KEYCODE_THUMBS_UP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_THUMBS_UP)
        pub const KEYCODE_THUMBS_UP : i32 = 286;

        /// public static final [KEYCODE_TV](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV)
        pub const KEYCODE_TV : i32 = 170;

        /// public static final [KEYCODE_TV_ANTENNA_CABLE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_ANTENNA_CABLE)
        pub const KEYCODE_TV_ANTENNA_CABLE : i32 = 242;

        /// public static final [KEYCODE_TV_AUDIO_DESCRIPTION](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_AUDIO_DESCRIPTION)
        pub const KEYCODE_TV_AUDIO_DESCRIPTION : i32 = 252;

        /// public static final [KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN)
        pub const KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN : i32 = 254;

        /// public static final [KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP)
        pub const KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP : i32 = 253;

        /// public static final [KEYCODE_TV_CONTENTS_MENU](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_CONTENTS_MENU)
        pub const KEYCODE_TV_CONTENTS_MENU : i32 = 256;

        /// public static final [KEYCODE_TV_DATA_SERVICE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_DATA_SERVICE)
        pub const KEYCODE_TV_DATA_SERVICE : i32 = 230;

        /// public static final [KEYCODE_TV_INPUT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT)
        pub const KEYCODE_TV_INPUT : i32 = 178;

        /// public static final [KEYCODE_TV_INPUT_COMPONENT_1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_COMPONENT_1)
        pub const KEYCODE_TV_INPUT_COMPONENT_1 : i32 = 249;

        /// public static final [KEYCODE_TV_INPUT_COMPONENT_2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_COMPONENT_2)
        pub const KEYCODE_TV_INPUT_COMPONENT_2 : i32 = 250;

        /// public static final [KEYCODE_TV_INPUT_COMPOSITE_1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_COMPOSITE_1)
        pub const KEYCODE_TV_INPUT_COMPOSITE_1 : i32 = 247;

        /// public static final [KEYCODE_TV_INPUT_COMPOSITE_2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_COMPOSITE_2)
        pub const KEYCODE_TV_INPUT_COMPOSITE_2 : i32 = 248;

        /// public static final [KEYCODE_TV_INPUT_HDMI_1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_HDMI_1)
        pub const KEYCODE_TV_INPUT_HDMI_1 : i32 = 243;

        /// public static final [KEYCODE_TV_INPUT_HDMI_2](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_HDMI_2)
        pub const KEYCODE_TV_INPUT_HDMI_2 : i32 = 244;

        /// public static final [KEYCODE_TV_INPUT_HDMI_3](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_HDMI_3)
        pub const KEYCODE_TV_INPUT_HDMI_3 : i32 = 245;

        /// public static final [KEYCODE_TV_INPUT_HDMI_4](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_HDMI_4)
        pub const KEYCODE_TV_INPUT_HDMI_4 : i32 = 246;

        /// public static final [KEYCODE_TV_INPUT_VGA_1](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_INPUT_VGA_1)
        pub const KEYCODE_TV_INPUT_VGA_1 : i32 = 251;

        /// public static final [KEYCODE_TV_MEDIA_CONTEXT_MENU](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_MEDIA_CONTEXT_MENU)
        pub const KEYCODE_TV_MEDIA_CONTEXT_MENU : i32 = 257;

        /// public static final [KEYCODE_TV_NETWORK](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_NETWORK)
        pub const KEYCODE_TV_NETWORK : i32 = 241;

        /// public static final [KEYCODE_TV_NUMBER_ENTRY](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_NUMBER_ENTRY)
        pub const KEYCODE_TV_NUMBER_ENTRY : i32 = 234;

        /// public static final [KEYCODE_TV_POWER](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_POWER)
        pub const KEYCODE_TV_POWER : i32 = 177;

        /// public static final [KEYCODE_TV_RADIO_SERVICE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_RADIO_SERVICE)
        pub const KEYCODE_TV_RADIO_SERVICE : i32 = 232;

        /// public static final [KEYCODE_TV_SATELLITE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_SATELLITE)
        pub const KEYCODE_TV_SATELLITE : i32 = 237;

        /// public static final [KEYCODE_TV_SATELLITE_BS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_SATELLITE_BS)
        pub const KEYCODE_TV_SATELLITE_BS : i32 = 238;

        /// public static final [KEYCODE_TV_SATELLITE_CS](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_SATELLITE_CS)
        pub const KEYCODE_TV_SATELLITE_CS : i32 = 239;

        /// public static final [KEYCODE_TV_SATELLITE_SERVICE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_SATELLITE_SERVICE)
        pub const KEYCODE_TV_SATELLITE_SERVICE : i32 = 240;

        /// public static final [KEYCODE_TV_TELETEXT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_TELETEXT)
        pub const KEYCODE_TV_TELETEXT : i32 = 233;

        /// public static final [KEYCODE_TV_TERRESTRIAL_ANALOG](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_TERRESTRIAL_ANALOG)
        pub const KEYCODE_TV_TERRESTRIAL_ANALOG : i32 = 235;

        /// public static final [KEYCODE_TV_TERRESTRIAL_DIGITAL](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_TERRESTRIAL_DIGITAL)
        pub const KEYCODE_TV_TERRESTRIAL_DIGITAL : i32 = 236;

        /// public static final [KEYCODE_TV_TIMER_PROGRAMMING](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_TIMER_PROGRAMMING)
        pub const KEYCODE_TV_TIMER_PROGRAMMING : i32 = 258;

        /// public static final [KEYCODE_TV_ZOOM_MODE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_TV_ZOOM_MODE)
        pub const KEYCODE_TV_ZOOM_MODE : i32 = 255;

        /// public static final [KEYCODE_U](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_U)
        pub const KEYCODE_U : i32 = 49;

        /// public static final [KEYCODE_UNKNOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_UNKNOWN)
        pub const KEYCODE_UNKNOWN : i32 = 0;

        /// public static final [KEYCODE_V](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_V)
        pub const KEYCODE_V : i32 = 50;

        /// public static final [KEYCODE_VOICE_ASSIST](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_VOICE_ASSIST)
        pub const KEYCODE_VOICE_ASSIST : i32 = 231;

        /// public static final [KEYCODE_VOLUME_DOWN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_VOLUME_DOWN)
        pub const KEYCODE_VOLUME_DOWN : i32 = 25;

        /// public static final [KEYCODE_VOLUME_MUTE](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_VOLUME_MUTE)
        pub const KEYCODE_VOLUME_MUTE : i32 = 164;

        /// public static final [KEYCODE_VOLUME_UP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_VOLUME_UP)
        pub const KEYCODE_VOLUME_UP : i32 = 24;

        /// public static final [KEYCODE_W](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_W)
        pub const KEYCODE_W : i32 = 51;

        /// public static final [KEYCODE_WAKEUP](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_WAKEUP)
        pub const KEYCODE_WAKEUP : i32 = 224;

        /// public static final [KEYCODE_WINDOW](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_WINDOW)
        pub const KEYCODE_WINDOW : i32 = 171;

        /// public static final [KEYCODE_X](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_X)
        pub const KEYCODE_X : i32 = 52;

        /// public static final [KEYCODE_Y](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_Y)
        pub const KEYCODE_Y : i32 = 53;

        /// public static final [KEYCODE_YEN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_YEN)
        pub const KEYCODE_YEN : i32 = 216;

        /// public static final [KEYCODE_Z](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_Z)
        pub const KEYCODE_Z : i32 = 54;

        /// public static final [KEYCODE_ZENKAKU_HANKAKU](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ZENKAKU_HANKAKU)
        pub const KEYCODE_ZENKAKU_HANKAKU : i32 = 211;

        /// public static final [KEYCODE_ZOOM_IN](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ZOOM_IN)
        pub const KEYCODE_ZOOM_IN : i32 = 168;

        /// public static final [KEYCODE_ZOOM_OUT](https://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ZOOM_OUT)
        pub const KEYCODE_ZOOM_OUT : i32 = 169;

        /// public static final [MAX_KEYCODE](https://developer.android.com/reference/android/view/KeyEvent.html#MAX_KEYCODE)
        #[deprecated] pub const MAX_KEYCODE : i32 = 84;

        /// public static final [META_ALT_LEFT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_ALT_LEFT_ON)
        pub const META_ALT_LEFT_ON : i32 = 16;

        /// public static final [META_ALT_MASK](https://developer.android.com/reference/android/view/KeyEvent.html#META_ALT_MASK)
        pub const META_ALT_MASK : i32 = 50;

        /// public static final [META_ALT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_ALT_ON)
        pub const META_ALT_ON : i32 = 2;

        /// public static final [META_ALT_RIGHT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_ALT_RIGHT_ON)
        pub const META_ALT_RIGHT_ON : i32 = 32;

        /// public static final [META_CAPS_LOCK_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_CAPS_LOCK_ON)
        pub const META_CAPS_LOCK_ON : i32 = 1048576;

        /// public static final [META_CTRL_LEFT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_CTRL_LEFT_ON)
        pub const META_CTRL_LEFT_ON : i32 = 8192;

        /// public static final [META_CTRL_MASK](https://developer.android.com/reference/android/view/KeyEvent.html#META_CTRL_MASK)
        pub const META_CTRL_MASK : i32 = 28672;

        /// public static final [META_CTRL_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_CTRL_ON)
        pub const META_CTRL_ON : i32 = 4096;

        /// public static final [META_CTRL_RIGHT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_CTRL_RIGHT_ON)
        pub const META_CTRL_RIGHT_ON : i32 = 16384;

        /// public static final [META_FUNCTION_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_FUNCTION_ON)
        pub const META_FUNCTION_ON : i32 = 8;

        /// public static final [META_META_LEFT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_META_LEFT_ON)
        pub const META_META_LEFT_ON : i32 = 131072;

        /// public static final [META_META_MASK](https://developer.android.com/reference/android/view/KeyEvent.html#META_META_MASK)
        pub const META_META_MASK : i32 = 458752;

        /// public static final [META_META_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_META_ON)
        pub const META_META_ON : i32 = 65536;

        /// public static final [META_META_RIGHT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_META_RIGHT_ON)
        pub const META_META_RIGHT_ON : i32 = 262144;

        /// public static final [META_NUM_LOCK_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_NUM_LOCK_ON)
        pub const META_NUM_LOCK_ON : i32 = 2097152;

        /// public static final [META_SCROLL_LOCK_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_SCROLL_LOCK_ON)
        pub const META_SCROLL_LOCK_ON : i32 = 4194304;

        /// public static final [META_SHIFT_LEFT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_SHIFT_LEFT_ON)
        pub const META_SHIFT_LEFT_ON : i32 = 64;

        /// public static final [META_SHIFT_MASK](https://developer.android.com/reference/android/view/KeyEvent.html#META_SHIFT_MASK)
        pub const META_SHIFT_MASK : i32 = 193;

        /// public static final [META_SHIFT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_SHIFT_ON)
        pub const META_SHIFT_ON : i32 = 1;

        /// public static final [META_SHIFT_RIGHT_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_SHIFT_RIGHT_ON)
        pub const META_SHIFT_RIGHT_ON : i32 = 128;

        /// public static final [META_SYM_ON](https://developer.android.com/reference/android/view/KeyEvent.html#META_SYM_ON)
        pub const META_SYM_ON : i32 = 4;
    }
}
