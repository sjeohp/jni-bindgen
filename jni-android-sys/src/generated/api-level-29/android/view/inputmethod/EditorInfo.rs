// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-inputmethod-EditorInfo"))]
__jni_bindgen! {
    /// public class [EditorInfo](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html)
    ///
    /// Required feature: android-view-inputmethod-EditorInfo
    public class EditorInfo ("android/view/inputmethod/EditorInfo") extends crate::java::lang::Object, implements crate::android::text::InputType, crate::android::os::Parcelable {

        /// [EditorInfo](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#EditorInfo())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::inputmethod::EditorInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/EditorInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/EditorInfo\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [makeCompatible](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#makeCompatible(int))
        pub fn makeCompatible<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/EditorInfo", java.flags == PUBLIC | FINAL, .name == "makeCompatible", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/EditorInfo\0", "makeCompatible\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dump](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#dump(android.util.Printer,%20java.lang.String))
        ///
        /// Required features: "android-util-Printer", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-util-Printer", feature = "java-lang-String")))]
        pub fn dump<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::Printer>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/EditorInfo", java.flags == PUBLIC, .name == "dump", .descriptor == "(Landroid/util/Printer;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/EditorInfo\0", "dump\0", "(Landroid/util/Printer;Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/EditorInfo", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/EditorInfo\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/EditorInfo", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/EditorInfo\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/view/inputmethod/EditorInfo\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [IME_ACTION_DONE](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_ACTION_DONE)
        pub const IME_ACTION_DONE : i32 = 6;

        /// public static final [IME_ACTION_GO](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_ACTION_GO)
        pub const IME_ACTION_GO : i32 = 2;

        /// public static final [IME_ACTION_NEXT](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_ACTION_NEXT)
        pub const IME_ACTION_NEXT : i32 = 5;

        /// public static final [IME_ACTION_NONE](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_ACTION_NONE)
        pub const IME_ACTION_NONE : i32 = 1;

        /// public static final [IME_ACTION_PREVIOUS](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_ACTION_PREVIOUS)
        pub const IME_ACTION_PREVIOUS : i32 = 7;

        /// public static final [IME_ACTION_SEARCH](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_ACTION_SEARCH)
        pub const IME_ACTION_SEARCH : i32 = 3;

        /// public static final [IME_ACTION_SEND](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_ACTION_SEND)
        pub const IME_ACTION_SEND : i32 = 4;

        /// public static final [IME_ACTION_UNSPECIFIED](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_ACTION_UNSPECIFIED)
        pub const IME_ACTION_UNSPECIFIED : i32 = 0;

        /// public static final [IME_FLAG_FORCE_ASCII](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_FLAG_FORCE_ASCII)
        pub const IME_FLAG_FORCE_ASCII : i32 = -2147483648;

        /// public static final [IME_FLAG_NAVIGATE_NEXT](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_FLAG_NAVIGATE_NEXT)
        pub const IME_FLAG_NAVIGATE_NEXT : i32 = 134217728;

        /// public static final [IME_FLAG_NAVIGATE_PREVIOUS](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_FLAG_NAVIGATE_PREVIOUS)
        pub const IME_FLAG_NAVIGATE_PREVIOUS : i32 = 67108864;

        /// public static final [IME_FLAG_NO_ACCESSORY_ACTION](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_FLAG_NO_ACCESSORY_ACTION)
        pub const IME_FLAG_NO_ACCESSORY_ACTION : i32 = 536870912;

        /// public static final [IME_FLAG_NO_ENTER_ACTION](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_FLAG_NO_ENTER_ACTION)
        pub const IME_FLAG_NO_ENTER_ACTION : i32 = 1073741824;

        /// public static final [IME_FLAG_NO_EXTRACT_UI](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_FLAG_NO_EXTRACT_UI)
        pub const IME_FLAG_NO_EXTRACT_UI : i32 = 268435456;

        /// public static final [IME_FLAG_NO_FULLSCREEN](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_FLAG_NO_FULLSCREEN)
        pub const IME_FLAG_NO_FULLSCREEN : i32 = 33554432;

        /// public static final [IME_FLAG_NO_PERSONALIZED_LEARNING](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_FLAG_NO_PERSONALIZED_LEARNING)
        pub const IME_FLAG_NO_PERSONALIZED_LEARNING : i32 = 16777216;

        /// public static final [IME_MASK_ACTION](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_MASK_ACTION)
        pub const IME_MASK_ACTION : i32 = 255;

        /// public static final [IME_NULL](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#IME_NULL)
        pub const IME_NULL : i32 = 0;

        /// **get** public [actionId](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#actionId)
        pub fn actionId<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "actionId\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [actionId](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#actionId)
        pub fn set_actionId<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "actionId\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [actionLabel](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#actionLabel)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn actionLabel<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "actionLabel\0", "Ljava/lang/CharSequence;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [actionLabel](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#actionLabel)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn set_actionLabel<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::CharSequence>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "actionLabel\0", "Ljava/lang/CharSequence;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [contentMimeTypes](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#contentMimeTypes)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn contentMimeTypes<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "contentMimeTypes\0", "[Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [contentMimeTypes](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#contentMimeTypes)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_contentMimeTypes<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "contentMimeTypes\0", "[Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [extras](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#extras)
        ///
        /// Required feature: android-os-Bundle
        #[cfg(any(feature = "all", feature = "android-os-Bundle"))]
        pub fn extras<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "extras\0", "Landroid/os/Bundle;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [extras](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#extras)
        ///
        /// Required feature: android-os-Bundle
        #[cfg(any(feature = "all", feature = "android-os-Bundle"))]
        pub fn set_extras<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::os::Bundle>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "extras\0", "Landroid/os/Bundle;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [fieldId](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#fieldId)
        pub fn fieldId<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "fieldId\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [fieldId](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#fieldId)
        pub fn set_fieldId<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "fieldId\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [fieldName](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#fieldName)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn fieldName<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "fieldName\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [fieldName](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#fieldName)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_fieldName<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "fieldName\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [hintLocales](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#hintLocales)
        ///
        /// Required feature: android-os-LocaleList
        #[cfg(any(feature = "all", feature = "android-os-LocaleList"))]
        pub fn hintLocales<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::LocaleList>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "hintLocales\0", "Landroid/os/LocaleList;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [hintLocales](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#hintLocales)
        ///
        /// Required feature: android-os-LocaleList
        #[cfg(any(feature = "all", feature = "android-os-LocaleList"))]
        pub fn set_hintLocales<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::os::LocaleList>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "hintLocales\0", "Landroid/os/LocaleList;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [hintText](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#hintText)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn hintText<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "hintText\0", "Ljava/lang/CharSequence;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [hintText](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#hintText)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn set_hintText<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::CharSequence>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "hintText\0", "Ljava/lang/CharSequence;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [imeOptions](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#imeOptions)
        pub fn imeOptions<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "imeOptions\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [imeOptions](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#imeOptions)
        pub fn set_imeOptions<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "imeOptions\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [initialCapsMode](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#initialCapsMode)
        pub fn initialCapsMode<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "initialCapsMode\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [initialCapsMode](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#initialCapsMode)
        pub fn set_initialCapsMode<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "initialCapsMode\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [initialSelEnd](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#initialSelEnd)
        pub fn initialSelEnd<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "initialSelEnd\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [initialSelEnd](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#initialSelEnd)
        pub fn set_initialSelEnd<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "initialSelEnd\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [initialSelStart](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#initialSelStart)
        pub fn initialSelStart<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "initialSelStart\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [initialSelStart](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#initialSelStart)
        pub fn set_initialSelStart<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "initialSelStart\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [inputType](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#inputType)
        pub fn inputType<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "inputType\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [inputType](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#inputType)
        pub fn set_inputType<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "inputType\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [label](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#label)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn label<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "label\0", "Ljava/lang/CharSequence;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [label](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#label)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn set_label<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::CharSequence>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "label\0", "Ljava/lang/CharSequence;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [packageName](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#packageName)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn packageName<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "packageName\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [packageName](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#packageName)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_packageName<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "packageName\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [privateImeOptions](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#privateImeOptions)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn privateImeOptions<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "privateImeOptions\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [privateImeOptions](https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#privateImeOptions)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_privateImeOptions<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/EditorInfo\0", "privateImeOptions\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }
    }
}
