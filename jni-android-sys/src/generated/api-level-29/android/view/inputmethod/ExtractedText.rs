// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-inputmethod-ExtractedText"))]
__jni_bindgen! {
    /// public class [ExtractedText](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html)
    ///
    /// Required feature: android-view-inputmethod-ExtractedText
    public class ExtractedText ("android/view/inputmethod/ExtractedText") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [ExtractedText](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#ExtractedText())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::inputmethod::ExtractedText>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/ExtractedText", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/ExtractedText\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/ExtractedText", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/ExtractedText\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/ExtractedText", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/ExtractedText\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/view/inputmethod/ExtractedText\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [FLAG_SELECTING](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#FLAG_SELECTING)
        pub const FLAG_SELECTING : i32 = 2;

        /// public static final [FLAG_SINGLE_LINE](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#FLAG_SINGLE_LINE)
        pub const FLAG_SINGLE_LINE : i32 = 1;

        /// **get** public [flags](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#flags)
        pub fn flags<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "flags\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [flags](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#flags)
        pub fn set_flags<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "flags\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [hint](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#hint)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn hint<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "hint\0", "Ljava/lang/CharSequence;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [hint](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#hint)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn set_hint<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::CharSequence>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "hint\0", "Ljava/lang/CharSequence;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [partialEndOffset](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#partialEndOffset)
        pub fn partialEndOffset<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "partialEndOffset\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [partialEndOffset](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#partialEndOffset)
        pub fn set_partialEndOffset<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "partialEndOffset\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [partialStartOffset](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#partialStartOffset)
        pub fn partialStartOffset<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "partialStartOffset\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [partialStartOffset](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#partialStartOffset)
        pub fn set_partialStartOffset<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "partialStartOffset\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [selectionEnd](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#selectionEnd)
        pub fn selectionEnd<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "selectionEnd\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [selectionEnd](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#selectionEnd)
        pub fn set_selectionEnd<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "selectionEnd\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [selectionStart](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#selectionStart)
        pub fn selectionStart<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "selectionStart\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [selectionStart](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#selectionStart)
        pub fn set_selectionStart<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "selectionStart\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [startOffset](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#startOffset)
        pub fn startOffset<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "startOffset\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [startOffset](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#startOffset)
        pub fn set_startOffset<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "startOffset\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [text](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#text)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn text<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "text\0", "Ljava/lang/CharSequence;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [text](https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html#text)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn set_text<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::CharSequence>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/inputmethod/ExtractedText\0", "text\0", "Ljava/lang/CharSequence;\0");
                env.set_object_field(class, field, value)
            }
        }
    }
}
