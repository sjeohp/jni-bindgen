// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-inputmethod-InputMethodSession"))]
__jni_bindgen! {
    /// public interface [InputMethodSession](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html)
    ///
    /// Required feature: android-view-inputmethod-InputMethodSession
    public interface InputMethodSession ("android/view/inputmethod/InputMethodSession") extends crate::java::lang::Object {

        /// [finishInput](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#finishInput())
        pub fn finishInput<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "finishInput", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "finishInput\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [updateSelection](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#updateSelection(int,%20int,%20int,%20int,%20int,%20int))
        pub fn updateSelection<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "updateSelection", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "updateSelection\0", "(IIIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [viewClicked](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#viewClicked(boolean))
        pub fn viewClicked<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "viewClicked", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "viewClicked\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [updateCursor](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#updateCursor(android.graphics.Rect))
        ///
        /// Required features: "android-graphics-Rect"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Rect")))]
        pub fn updateCursor<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Rect>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "updateCursor", .descriptor == "(Landroid/graphics/Rect;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "updateCursor\0", "(Landroid/graphics/Rect;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [displayCompletions](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#displayCompletions(android.view.inputmethod.CompletionInfo%5B%5D))
        ///
        /// Required features: "android-view-inputmethod-CompletionInfo"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-CompletionInfo")))]
        pub fn displayCompletions<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::inputmethod::CompletionInfo, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "displayCompletions", .descriptor == "([Landroid/view/inputmethod/CompletionInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "displayCompletions\0", "([Landroid/view/inputmethod/CompletionInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [updateExtractedText](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#updateExtractedText(int,%20android.view.inputmethod.ExtractedText))
        ///
        /// Required features: "android-view-inputmethod-ExtractedText"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-ExtractedText")))]
        pub fn updateExtractedText<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::inputmethod::ExtractedText>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "updateExtractedText", .descriptor == "(ILandroid/view/inputmethod/ExtractedText;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "updateExtractedText\0", "(ILandroid/view/inputmethod/ExtractedText;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dispatchKeyEvent](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#dispatchKeyEvent(int,%20android.view.KeyEvent,%20android.view.inputmethod.InputMethodSession.EventCallback))
        ///
        /// Required features: "android-view-KeyEvent", "android-view-inputmethod-InputMethodSession_EventCallback"
        #[cfg(any(feature = "all", all(feature = "android-view-KeyEvent", feature = "android-view-inputmethod-InputMethodSession_EventCallback")))]
        pub fn dispatchKeyEvent<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::KeyEvent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::inputmethod::InputMethodSession_EventCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "dispatchKeyEvent", .descriptor == "(ILandroid/view/KeyEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "dispatchKeyEvent\0", "(ILandroid/view/KeyEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dispatchTrackballEvent](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#dispatchTrackballEvent(int,%20android.view.MotionEvent,%20android.view.inputmethod.InputMethodSession.EventCallback))
        ///
        /// Required features: "android-view-MotionEvent", "android-view-inputmethod-InputMethodSession_EventCallback"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent", feature = "android-view-inputmethod-InputMethodSession_EventCallback")))]
        pub fn dispatchTrackballEvent<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::inputmethod::InputMethodSession_EventCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "dispatchTrackballEvent", .descriptor == "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "dispatchTrackballEvent\0", "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dispatchGenericMotionEvent](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#dispatchGenericMotionEvent(int,%20android.view.MotionEvent,%20android.view.inputmethod.InputMethodSession.EventCallback))
        ///
        /// Required features: "android-view-MotionEvent", "android-view-inputmethod-InputMethodSession_EventCallback"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent", feature = "android-view-inputmethod-InputMethodSession_EventCallback")))]
        pub fn dispatchGenericMotionEvent<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::inputmethod::InputMethodSession_EventCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "dispatchGenericMotionEvent", .descriptor == "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "dispatchGenericMotionEvent\0", "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [appPrivateCommand](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#appPrivateCommand(java.lang.String,%20android.os.Bundle))
        ///
        /// Required features: "android-os-Bundle", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle", feature = "java-lang-String")))]
        pub fn appPrivateCommand<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "appPrivateCommand", .descriptor == "(Ljava/lang/String;Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "appPrivateCommand\0", "(Ljava/lang/String;Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toggleSoftInput](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#toggleSoftInput(int,%20int))
        pub fn toggleSoftInput<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "toggleSoftInput", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "toggleSoftInput\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [updateCursorAnchorInfo](https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html#updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo))
        ///
        /// Required features: "android-view-inputmethod-CursorAnchorInfo"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-CursorAnchorInfo")))]
        pub fn updateCursorAnchorInfo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::inputmethod::CursorAnchorInfo>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSession", java.flags == PUBLIC | ABSTRACT, .name == "updateCursorAnchorInfo", .descriptor == "(Landroid/view/inputmethod/CursorAnchorInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSession\0", "updateCursorAnchorInfo\0", "(Landroid/view/inputmethod/CursorAnchorInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
