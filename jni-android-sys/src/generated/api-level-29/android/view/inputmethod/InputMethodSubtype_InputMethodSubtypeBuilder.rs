// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder"))]
__jni_bindgen! {
    /// public class [InputMethodSubtype.InputMethodSubtypeBuilder](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html)
    ///
    /// Required feature: android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder
    public class InputMethodSubtype_InputMethodSubtypeBuilder ("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder") extends crate::java::lang::Object {

        /// [InputMethodSubtypeBuilder](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#InputMethodSubtypeBuilder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIsAuxiliary](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setIsAuxiliary(boolean))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder")))]
        pub fn setIsAuxiliary<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setIsAuxiliary", .descriptor == "(Z)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setIsAuxiliary\0", "(Z)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOverridesImplicitlyEnabledSubtype](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setOverridesImplicitlyEnabledSubtype(boolean))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder")))]
        pub fn setOverridesImplicitlyEnabledSubtype<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setOverridesImplicitlyEnabledSubtype", .descriptor == "(Z)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setOverridesImplicitlyEnabledSubtype\0", "(Z)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIsAsciiCapable](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setIsAsciiCapable(boolean))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder")))]
        pub fn setIsAsciiCapable<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setIsAsciiCapable", .descriptor == "(Z)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setIsAsciiCapable\0", "(Z)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubtypeIconResId](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setSubtypeIconResId(int))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder")))]
        pub fn setSubtypeIconResId<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setSubtypeIconResId", .descriptor == "(I)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setSubtypeIconResId\0", "(I)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubtypeNameResId](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setSubtypeNameResId(int))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder")))]
        pub fn setSubtypeNameResId<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setSubtypeNameResId", .descriptor == "(I)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setSubtypeNameResId\0", "(I)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubtypeId](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setSubtypeId(int))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder")))]
        pub fn setSubtypeId<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setSubtypeId", .descriptor == "(I)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setSubtypeId\0", "(I)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubtypeLocale](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setSubtypeLocale(java.lang.String))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder", feature = "java-lang-String")))]
        pub fn setSubtypeLocale<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setSubtypeLocale", .descriptor == "(Ljava/lang/String;)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setSubtypeLocale\0", "(Ljava/lang/String;)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLanguageTag](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setLanguageTag(java.lang.String))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder", feature = "java-lang-String")))]
        pub fn setLanguageTag<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setLanguageTag", .descriptor == "(Ljava/lang/String;)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setLanguageTag\0", "(Ljava/lang/String;)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubtypeMode](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setSubtypeMode(java.lang.String))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder", feature = "java-lang-String")))]
        pub fn setSubtypeMode<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setSubtypeMode", .descriptor == "(Ljava/lang/String;)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setSubtypeMode\0", "(Ljava/lang/String;)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubtypeExtraValue](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#setSubtypeExtraValue(java.lang.String))
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype_InputMethodSubtypeBuilder", feature = "java-lang-String")))]
        pub fn setSubtypeExtraValue<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype_InputMethodSubtypeBuilder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "setSubtypeExtraValue", .descriptor == "(Ljava/lang/String;)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "setSubtypeExtraValue\0", "(Ljava/lang/String;)Landroid/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html#build())
        ///
        /// Required features: "android-view-inputmethod-InputMethodSubtype"
        #[cfg(any(feature = "all", all(feature = "android-view-inputmethod-InputMethodSubtype")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::inputmethod::InputMethodSubtype>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/view/inputmethod/InputMethodSubtype;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/inputmethod/InputMethodSubtype$InputMethodSubtypeBuilder\0", "build\0", "()Landroid/view/inputmethod/InputMethodSubtype;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
