// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-textclassifier-TextClassificationManager"))]
__jni_bindgen! {
    /// public final class [TextClassificationManager](https://developer.android.com/reference/android/view/textclassifier/TextClassificationManager.html)
    ///
    /// Required feature: android-view-textclassifier-TextClassificationManager
    public final class TextClassificationManager ("android/view/textclassifier/TextClassificationManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [TextClassificationManager](https://developer.android.com/reference/android/view/textclassifier/TextClassificationManager.html#TextClassificationManager(android.content.Context))
        // ///
        // /// Required features: "android-content-Context"
        // #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassificationManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/textclassifier/TextClassificationManager", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/content/Context;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassificationManager\0", "<init>\0", "(Landroid/content/Context;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getTextClassifier](https://developer.android.com/reference/android/view/textclassifier/TextClassificationManager.html#getTextClassifier())
        ///
        /// Required features: "android-view-textclassifier-TextClassifier"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassifier")))]
        pub fn getTextClassifier<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifier>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassificationManager", java.flags == PUBLIC, .name == "getTextClassifier", .descriptor == "()Landroid/view/textclassifier/TextClassifier;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassificationManager\0", "getTextClassifier\0", "()Landroid/view/textclassifier/TextClassifier;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTextClassifier](https://developer.android.com/reference/android/view/textclassifier/TextClassificationManager.html#setTextClassifier(android.view.textclassifier.TextClassifier))
        ///
        /// Required features: "android-view-textclassifier-TextClassifier"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassifier")))]
        pub fn setTextClassifier<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::textclassifier::TextClassifier>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassificationManager", java.flags == PUBLIC, .name == "setTextClassifier", .descriptor == "(Landroid/view/textclassifier/TextClassifier;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassificationManager\0", "setTextClassifier\0", "(Landroid/view/textclassifier/TextClassifier;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createTextClassificationSession](https://developer.android.com/reference/android/view/textclassifier/TextClassificationManager.html#createTextClassificationSession(android.view.textclassifier.TextClassificationContext))
        ///
        /// Required features: "android-view-textclassifier-TextClassificationContext", "android-view-textclassifier-TextClassifier"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassificationContext", feature = "android-view-textclassifier-TextClassifier")))]
        pub fn createTextClassificationSession<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::textclassifier::TextClassificationContext>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifier>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassificationManager", java.flags == PUBLIC, .name == "createTextClassificationSession", .descriptor == "(Landroid/view/textclassifier/TextClassificationContext;)Landroid/view/textclassifier/TextClassifier;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassificationManager\0", "createTextClassificationSession\0", "(Landroid/view/textclassifier/TextClassificationContext;)Landroid/view/textclassifier/TextClassifier;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTextClassificationSessionFactory](https://developer.android.com/reference/android/view/textclassifier/TextClassificationManager.html#setTextClassificationSessionFactory(android.view.textclassifier.TextClassificationSessionFactory))
        ///
        /// Required features: "android-view-textclassifier-TextClassificationSessionFactory"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassificationSessionFactory")))]
        pub fn setTextClassificationSessionFactory<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::textclassifier::TextClassificationSessionFactory>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassificationManager", java.flags == PUBLIC, .name == "setTextClassificationSessionFactory", .descriptor == "(Landroid/view/textclassifier/TextClassificationSessionFactory;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassificationManager\0", "setTextClassificationSessionFactory\0", "(Landroid/view/textclassifier/TextClassificationSessionFactory;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [finalize](https://developer.android.com/reference/android/view/textclassifier/TextClassificationManager.html#finalize())
        // fn finalize<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/textclassifier/TextClassificationManager", java.flags == PROTECTED, .name == "finalize", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassificationManager\0", "finalize\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
