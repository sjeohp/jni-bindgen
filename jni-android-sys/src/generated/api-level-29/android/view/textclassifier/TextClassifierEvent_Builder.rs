// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-textclassifier-TextClassifierEvent_Builder"))]
__jni_bindgen! {
    /// public class [TextClassifierEvent.Builder](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html)
    ///
    /// Required feature: android-view-textclassifier-TextClassifierEvent_Builder
    public class TextClassifierEvent_Builder ("android/view/textclassifier/TextClassifierEvent$Builder") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Builder](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#Builder(int,%20int))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == (empty), .name == "<init>", .descriptor == "(II)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "<init>\0", "(II)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [setEntityTypes](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setEntityTypes(java.lang.String...))
        ///
        /// Required features: "android-view-textclassifier-TextClassifierEvent_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassifierEvent_Builder", feature = "java-lang-String")))]
        pub fn setEntityTypes<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC | VARARGS, .name == "setEntityTypes", .descriptor == "([Ljava/lang/String;)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setEntityTypes\0", "([Ljava/lang/String;)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEventContext](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setEventContext(android.view.textclassifier.TextClassificationContext))
        ///
        /// Required features: "android-view-textclassifier-TextClassificationContext", "android-view-textclassifier-TextClassifierEvent_Builder"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassificationContext", feature = "android-view-textclassifier-TextClassifierEvent_Builder")))]
        pub fn setEventContext<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::textclassifier::TextClassificationContext>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC, .name == "setEventContext", .descriptor == "(Landroid/view/textclassifier/TextClassificationContext;)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setEventContext\0", "(Landroid/view/textclassifier/TextClassificationContext;)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setResultId](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setResultId(java.lang.String))
        ///
        /// Required features: "android-view-textclassifier-TextClassifierEvent_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassifierEvent_Builder", feature = "java-lang-String")))]
        pub fn setResultId<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC, .name == "setResultId", .descriptor == "(Ljava/lang/String;)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setResultId\0", "(Ljava/lang/String;)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEventIndex](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setEventIndex(int))
        ///
        /// Required features: "android-view-textclassifier-TextClassifierEvent_Builder"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassifierEvent_Builder")))]
        pub fn setEventIndex<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC, .name == "setEventIndex", .descriptor == "(I)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setEventIndex\0", "(I)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setScores](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setScores(float...))
        ///
        /// Required features: "android-view-textclassifier-TextClassifierEvent_Builder"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassifierEvent_Builder")))]
        pub fn setScores<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC | VARARGS, .name == "setScores", .descriptor == "([F)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setScores\0", "([F)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setModelName](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setModelName(java.lang.String))
        ///
        /// Required features: "android-view-textclassifier-TextClassifierEvent_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassifierEvent_Builder", feature = "java-lang-String")))]
        pub fn setModelName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC, .name == "setModelName", .descriptor == "(Ljava/lang/String;)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setModelName\0", "(Ljava/lang/String;)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setActionIndices](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setActionIndices(int...))
        ///
        /// Required features: "android-view-textclassifier-TextClassifierEvent_Builder"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassifierEvent_Builder")))]
        pub fn setActionIndices<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC | VARARGS, .name == "setActionIndices", .descriptor == "([I)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setActionIndices\0", "([I)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLocale](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setLocale(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-ULocale", "android-view-textclassifier-TextClassifierEvent_Builder"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "android-view-textclassifier-TextClassifierEvent_Builder")))]
        pub fn setLocale<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC, .name == "setLocale", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setLocale\0", "(Landroid/icu/util/ULocale;)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExtras](https://developer.android.com/reference/android/view/textclassifier/TextClassifierEvent.Builder.html#setExtras(android.os.Bundle))
        ///
        /// Required features: "android-os-Bundle", "android-view-textclassifier-TextClassifierEvent_Builder"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle", feature = "android-view-textclassifier-TextClassifierEvent_Builder")))]
        pub fn setExtras<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassifierEvent_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/TextClassifierEvent$Builder", java.flags == PUBLIC, .name == "setExtras", .descriptor == "(Landroid/os/Bundle;)Landroid/view/textclassifier/TextClassifierEvent$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/TextClassifierEvent$Builder\0", "setExtras\0", "(Landroid/os/Bundle;)Landroid/view/textclassifier/TextClassifierEvent$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
