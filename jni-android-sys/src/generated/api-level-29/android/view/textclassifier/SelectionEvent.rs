// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-textclassifier-SelectionEvent"))]
__jni_bindgen! {
    /// public final class [SelectionEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html)
    ///
    /// Required feature: android-view-textclassifier-SelectionEvent
    public final class SelectionEvent ("android/view/textclassifier/SelectionEvent") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [SelectionEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#SelectionEvent(android.os.Parcel))
        // ///
        // /// Required features: "android-os-Parcel"
        // #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::textclassifier::SelectionEvent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/textclassifier/SelectionEvent", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/os/Parcel;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "<init>\0", "(Landroid/os/Parcel;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [writeToParcel](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createSelectionStartedEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#createSelectionStartedEvent(int,%20int))
        ///
        /// Required features: "android-view-textclassifier-SelectionEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-SelectionEvent")))]
        pub fn createSelectionStartedEvent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::SelectionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC | STATIC, .name == "createSelectionStartedEvent", .descriptor == "(II)Landroid/view/textclassifier/SelectionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/textclassifier/SelectionEvent\0", "createSelectionStartedEvent\0", "(II)Landroid/view/textclassifier/SelectionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createSelectionModifiedEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#createSelectionModifiedEvent(int,%20int))
        ///
        /// Required features: "android-view-textclassifier-SelectionEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-SelectionEvent")))]
        pub fn createSelectionModifiedEvent_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::SelectionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC | STATIC, .name == "createSelectionModifiedEvent", .descriptor == "(II)Landroid/view/textclassifier/SelectionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/textclassifier/SelectionEvent\0", "createSelectionModifiedEvent\0", "(II)Landroid/view/textclassifier/SelectionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createSelectionModifiedEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#createSelectionModifiedEvent(int,%20int,%20android.view.textclassifier.TextClassification))
        ///
        /// Required features: "android-view-textclassifier-SelectionEvent", "android-view-textclassifier-TextClassification"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-SelectionEvent", feature = "android-view-textclassifier-TextClassification")))]
        pub fn createSelectionModifiedEvent_int_int_TextClassification<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::textclassifier::TextClassification>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::SelectionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC | STATIC, .name == "createSelectionModifiedEvent", .descriptor == "(IILandroid/view/textclassifier/TextClassification;)Landroid/view/textclassifier/SelectionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/textclassifier/SelectionEvent\0", "createSelectionModifiedEvent\0", "(IILandroid/view/textclassifier/TextClassification;)Landroid/view/textclassifier/SelectionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createSelectionModifiedEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#createSelectionModifiedEvent(int,%20int,%20android.view.textclassifier.TextSelection))
        ///
        /// Required features: "android-view-textclassifier-SelectionEvent", "android-view-textclassifier-TextSelection"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-SelectionEvent", feature = "android-view-textclassifier-TextSelection")))]
        pub fn createSelectionModifiedEvent_int_int_TextSelection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::textclassifier::TextSelection>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::SelectionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC | STATIC, .name == "createSelectionModifiedEvent", .descriptor == "(IILandroid/view/textclassifier/TextSelection;)Landroid/view/textclassifier/SelectionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/textclassifier/SelectionEvent\0", "createSelectionModifiedEvent\0", "(IILandroid/view/textclassifier/TextSelection;)Landroid/view/textclassifier/SelectionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createSelectionActionEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#createSelectionActionEvent(int,%20int,%20int))
        ///
        /// Required features: "android-view-textclassifier-SelectionEvent"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-SelectionEvent")))]
        pub fn createSelectionActionEvent_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::SelectionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC | STATIC, .name == "createSelectionActionEvent", .descriptor == "(III)Landroid/view/textclassifier/SelectionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/textclassifier/SelectionEvent\0", "createSelectionActionEvent\0", "(III)Landroid/view/textclassifier/SelectionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createSelectionActionEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#createSelectionActionEvent(int,%20int,%20int,%20android.view.textclassifier.TextClassification))
        ///
        /// Required features: "android-view-textclassifier-SelectionEvent", "android-view-textclassifier-TextClassification"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-SelectionEvent", feature = "android-view-textclassifier-TextClassification")))]
        pub fn createSelectionActionEvent_int_int_int_TextClassification<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::textclassifier::TextClassification>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::SelectionEvent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC | STATIC, .name == "createSelectionActionEvent", .descriptor == "(IIILandroid/view/textclassifier/TextClassification;)Landroid/view/textclassifier/SelectionEvent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/textclassifier/SelectionEvent\0", "createSelectionActionEvent\0", "(IIILandroid/view/textclassifier/TextClassification;)Landroid/view/textclassifier/SelectionEvent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEventType](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getEventType())
        pub fn getEventType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getEventType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getEventType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEntityType](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getEntityType())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getEntityType<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getEntityType", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getEntityType\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPackageName](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getPackageName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPackageName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getPackageName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getPackageName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWidgetType](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getWidgetType())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getWidgetType<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getWidgetType", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getWidgetType\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWidgetVersion](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getWidgetVersion())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getWidgetVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getWidgetVersion", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getWidgetVersion\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInvocationMethod](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getInvocationMethod())
        pub fn getInvocationMethod<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getInvocationMethod", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getInvocationMethod\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getResultId](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getResultId())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getResultId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getResultId", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getResultId\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEventTime](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getEventTime())
        pub fn getEventTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getEventTime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getEventTime\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDurationSinceSessionStart](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getDurationSinceSessionStart())
        pub fn getDurationSinceSessionStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getDurationSinceSessionStart", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getDurationSinceSessionStart\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDurationSincePreviousEvent](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getDurationSincePreviousEvent())
        pub fn getDurationSincePreviousEvent<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getDurationSincePreviousEvent", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getDurationSincePreviousEvent\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEventIndex](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getEventIndex())
        pub fn getEventIndex<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getEventIndex", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getEventIndex\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSessionId](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getSessionId())
        ///
        /// Required features: "android-view-textclassifier-TextClassificationSessionId"
        #[cfg(any(feature = "all", all(feature = "android-view-textclassifier-TextClassificationSessionId")))]
        pub fn getSessionId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::textclassifier::TextClassificationSessionId>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getSessionId", .descriptor == "()Landroid/view/textclassifier/TextClassificationSessionId;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getSessionId\0", "()Landroid/view/textclassifier/TextClassificationSessionId;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStart](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getStart())
        pub fn getStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getStart", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getStart\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEnd](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getEnd())
        pub fn getEnd<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getEnd", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getEnd\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSmartStart](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getSmartStart())
        pub fn getSmartStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getSmartStart", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getSmartStart\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSmartEnd](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#getSmartEnd())
        pub fn getSmartEnd<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "getSmartEnd", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "getSmartEnd\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isTerminal](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#isTerminal(int))
        pub fn isTerminal<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC | STATIC, .name == "isTerminal", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/textclassifier/SelectionEvent\0", "isTerminal\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/textclassifier/SelectionEvent", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/textclassifier/SelectionEvent\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_ABANDON](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_ABANDON)
        pub const ACTION_ABANDON : i32 = 107;

        /// public static final [ACTION_COPY](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_COPY)
        pub const ACTION_COPY : i32 = 101;

        /// public static final [ACTION_CUT](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_CUT)
        pub const ACTION_CUT : i32 = 103;

        /// public static final [ACTION_DRAG](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_DRAG)
        pub const ACTION_DRAG : i32 = 106;

        /// public static final [ACTION_OTHER](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_OTHER)
        pub const ACTION_OTHER : i32 = 108;

        /// public static final [ACTION_OVERTYPE](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_OVERTYPE)
        pub const ACTION_OVERTYPE : i32 = 100;

        /// public static final [ACTION_PASTE](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_PASTE)
        pub const ACTION_PASTE : i32 = 102;

        /// public static final [ACTION_RESET](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_RESET)
        pub const ACTION_RESET : i32 = 201;

        /// public static final [ACTION_SELECT_ALL](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_SELECT_ALL)
        pub const ACTION_SELECT_ALL : i32 = 200;

        /// public static final [ACTION_SHARE](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_SHARE)
        pub const ACTION_SHARE : i32 = 104;

        /// public static final [ACTION_SMART_SHARE](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#ACTION_SMART_SHARE)
        pub const ACTION_SMART_SHARE : i32 = 105;

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/view/textclassifier/SelectionEvent\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [EVENT_AUTO_SELECTION](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#EVENT_AUTO_SELECTION)
        pub const EVENT_AUTO_SELECTION : i32 = 5;

        /// public static final [EVENT_SELECTION_MODIFIED](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#EVENT_SELECTION_MODIFIED)
        pub const EVENT_SELECTION_MODIFIED : i32 = 2;

        /// public static final [EVENT_SELECTION_STARTED](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#EVENT_SELECTION_STARTED)
        pub const EVENT_SELECTION_STARTED : i32 = 1;

        /// public static final [EVENT_SMART_SELECTION_MULTI](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#EVENT_SMART_SELECTION_MULTI)
        pub const EVENT_SMART_SELECTION_MULTI : i32 = 4;

        /// public static final [EVENT_SMART_SELECTION_SINGLE](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#EVENT_SMART_SELECTION_SINGLE)
        pub const EVENT_SMART_SELECTION_SINGLE : i32 = 3;

        /// public static final [INVOCATION_LINK](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#INVOCATION_LINK)
        pub const INVOCATION_LINK : i32 = 2;

        /// public static final [INVOCATION_MANUAL](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#INVOCATION_MANUAL)
        pub const INVOCATION_MANUAL : i32 = 1;

        /// public static final [INVOCATION_UNKNOWN](https://developer.android.com/reference/android/view/textclassifier/SelectionEvent.html#INVOCATION_UNKNOWN)
        pub const INVOCATION_UNKNOWN : i32 = 0;
    }
}
