// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-MotionEvent_PointerProperties"))]
__jni_bindgen! {
    /// public final class [MotionEvent.PointerProperties](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html)
    ///
    /// Required feature: android-view-MotionEvent_PointerProperties
    public final class MotionEvent_PointerProperties ("android/view/MotionEvent$PointerProperties") extends crate::java::lang::Object {

        /// [PointerProperties](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#PointerProperties())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::MotionEvent_PointerProperties>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent$PointerProperties", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent$PointerProperties\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [PointerProperties](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#PointerProperties(android.view.MotionEvent.PointerProperties))
        ///
        /// Required features: "android-view-MotionEvent_PointerProperties"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent_PointerProperties")))]
        pub fn new_PointerProperties<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent_PointerProperties>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::MotionEvent_PointerProperties>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent$PointerProperties", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/MotionEvent$PointerProperties;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent$PointerProperties\0", "<init>\0", "(Landroid/view/MotionEvent$PointerProperties;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clear](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#clear())
        pub fn clear<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent$PointerProperties", java.flags == PUBLIC, .name == "clear", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent$PointerProperties\0", "clear\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [copyFrom](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#copyFrom(android.view.MotionEvent.PointerProperties))
        ///
        /// Required features: "android-view-MotionEvent_PointerProperties"
        #[cfg(any(feature = "all", all(feature = "android-view-MotionEvent_PointerProperties")))]
        pub fn copyFrom<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::MotionEvent_PointerProperties>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent$PointerProperties", java.flags == PUBLIC, .name == "copyFrom", .descriptor == "(Landroid/view/MotionEvent$PointerProperties;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent$PointerProperties\0", "copyFrom\0", "(Landroid/view/MotionEvent$PointerProperties;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent$PointerProperties", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent$PointerProperties\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/MotionEvent$PointerProperties", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/MotionEvent$PointerProperties\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public [id](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#id)
        pub fn id<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/MotionEvent$PointerProperties\0", "id\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [id](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#id)
        pub fn set_id<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/MotionEvent$PointerProperties\0", "id\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [toolType](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#toolType)
        pub fn toolType<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/MotionEvent$PointerProperties\0", "toolType\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [toolType](https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html#toolType)
        pub fn set_toolType<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/view/MotionEvent$PointerProperties\0", "toolType\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }
    }
}
