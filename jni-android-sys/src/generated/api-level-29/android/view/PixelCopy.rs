// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-PixelCopy"))]
__jni_bindgen! {
    /// public final class [PixelCopy](https://developer.android.com/reference/android/view/PixelCopy.html)
    ///
    /// Required feature: android-view-PixelCopy
    public final class PixelCopy ("android/view/PixelCopy") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [PixelCopy](https://developer.android.com/reference/android/view/PixelCopy.html#PixelCopy())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::PixelCopy>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/PixelCopy", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/PixelCopy\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [request](https://developer.android.com/reference/android/view/PixelCopy.html#request(android.view.SurfaceView,%20android.graphics.Bitmap,%20android.view.PixelCopy.OnPixelCopyFinishedListener,%20android.os.Handler))
        ///
        /// Required features: "android-graphics-Bitmap", "android-os-Handler", "android-view-PixelCopy_OnPixelCopyFinishedListener", "android-view-SurfaceView"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap", feature = "android-os-Handler", feature = "android-view-PixelCopy_OnPixelCopyFinishedListener", feature = "android-view-SurfaceView")))]
        pub fn request_SurfaceView_Bitmap_OnPixelCopyFinishedListener_Handler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::SurfaceView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::PixelCopy_OnPixelCopyFinishedListener>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/PixelCopy", java.flags == PUBLIC | STATIC, .name == "request", .descriptor == "(Landroid/view/SurfaceView;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/PixelCopy\0", "request\0", "(Landroid/view/SurfaceView;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [request](https://developer.android.com/reference/android/view/PixelCopy.html#request(android.view.SurfaceView,%20android.graphics.Rect,%20android.graphics.Bitmap,%20android.view.PixelCopy.OnPixelCopyFinishedListener,%20android.os.Handler))
        ///
        /// Required features: "android-graphics-Bitmap", "android-graphics-Rect", "android-os-Handler", "android-view-PixelCopy_OnPixelCopyFinishedListener", "android-view-SurfaceView"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap", feature = "android-graphics-Rect", feature = "android-os-Handler", feature = "android-view-PixelCopy_OnPixelCopyFinishedListener", feature = "android-view-SurfaceView")))]
        pub fn request_SurfaceView_Rect_Bitmap_OnPixelCopyFinishedListener_Handler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::SurfaceView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Rect>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::PixelCopy_OnPixelCopyFinishedListener>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/PixelCopy", java.flags == PUBLIC | STATIC, .name == "request", .descriptor == "(Landroid/view/SurfaceView;Landroid/graphics/Rect;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/PixelCopy\0", "request\0", "(Landroid/view/SurfaceView;Landroid/graphics/Rect;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [request](https://developer.android.com/reference/android/view/PixelCopy.html#request(android.view.Surface,%20android.graphics.Bitmap,%20android.view.PixelCopy.OnPixelCopyFinishedListener,%20android.os.Handler))
        ///
        /// Required features: "android-graphics-Bitmap", "android-os-Handler", "android-view-PixelCopy_OnPixelCopyFinishedListener", "android-view-Surface"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap", feature = "android-os-Handler", feature = "android-view-PixelCopy_OnPixelCopyFinishedListener", feature = "android-view-Surface")))]
        pub fn request_Surface_Bitmap_OnPixelCopyFinishedListener_Handler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Surface>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::PixelCopy_OnPixelCopyFinishedListener>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/PixelCopy", java.flags == PUBLIC | STATIC, .name == "request", .descriptor == "(Landroid/view/Surface;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/PixelCopy\0", "request\0", "(Landroid/view/Surface;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [request](https://developer.android.com/reference/android/view/PixelCopy.html#request(android.view.Surface,%20android.graphics.Rect,%20android.graphics.Bitmap,%20android.view.PixelCopy.OnPixelCopyFinishedListener,%20android.os.Handler))
        ///
        /// Required features: "android-graphics-Bitmap", "android-graphics-Rect", "android-os-Handler", "android-view-PixelCopy_OnPixelCopyFinishedListener", "android-view-Surface"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap", feature = "android-graphics-Rect", feature = "android-os-Handler", feature = "android-view-PixelCopy_OnPixelCopyFinishedListener", feature = "android-view-Surface")))]
        pub fn request_Surface_Rect_Bitmap_OnPixelCopyFinishedListener_Handler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Surface>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Rect>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::PixelCopy_OnPixelCopyFinishedListener>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/PixelCopy", java.flags == PUBLIC | STATIC, .name == "request", .descriptor == "(Landroid/view/Surface;Landroid/graphics/Rect;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/PixelCopy\0", "request\0", "(Landroid/view/Surface;Landroid/graphics/Rect;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [request](https://developer.android.com/reference/android/view/PixelCopy.html#request(android.view.Window,%20android.graphics.Bitmap,%20android.view.PixelCopy.OnPixelCopyFinishedListener,%20android.os.Handler))
        ///
        /// Required features: "android-graphics-Bitmap", "android-os-Handler", "android-view-PixelCopy_OnPixelCopyFinishedListener", "android-view-Window"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap", feature = "android-os-Handler", feature = "android-view-PixelCopy_OnPixelCopyFinishedListener", feature = "android-view-Window")))]
        pub fn request_Window_Bitmap_OnPixelCopyFinishedListener_Handler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Window>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::PixelCopy_OnPixelCopyFinishedListener>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/PixelCopy", java.flags == PUBLIC | STATIC, .name == "request", .descriptor == "(Landroid/view/Window;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/PixelCopy\0", "request\0", "(Landroid/view/Window;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [request](https://developer.android.com/reference/android/view/PixelCopy.html#request(android.view.Window,%20android.graphics.Rect,%20android.graphics.Bitmap,%20android.view.PixelCopy.OnPixelCopyFinishedListener,%20android.os.Handler))
        ///
        /// Required features: "android-graphics-Bitmap", "android-graphics-Rect", "android-os-Handler", "android-view-PixelCopy_OnPixelCopyFinishedListener", "android-view-Window"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Bitmap", feature = "android-graphics-Rect", feature = "android-os-Handler", feature = "android-view-PixelCopy_OnPixelCopyFinishedListener", feature = "android-view-Window")))]
        pub fn request_Window_Rect_Bitmap_OnPixelCopyFinishedListener_Handler<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Window>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Rect>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Bitmap>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::PixelCopy_OnPixelCopyFinishedListener>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Handler>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/PixelCopy", java.flags == PUBLIC | STATIC, .name == "request", .descriptor == "(Landroid/view/Window;Landroid/graphics/Rect;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/PixelCopy\0", "request\0", "(Landroid/view/Window;Landroid/graphics/Rect;Landroid/graphics/Bitmap;Landroid/view/PixelCopy$OnPixelCopyFinishedListener;Landroid/os/Handler;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ERROR_DESTINATION_INVALID](https://developer.android.com/reference/android/view/PixelCopy.html#ERROR_DESTINATION_INVALID)
        pub const ERROR_DESTINATION_INVALID : i32 = 5;

        /// public static final [ERROR_SOURCE_INVALID](https://developer.android.com/reference/android/view/PixelCopy.html#ERROR_SOURCE_INVALID)
        pub const ERROR_SOURCE_INVALID : i32 = 4;

        /// public static final [ERROR_SOURCE_NO_DATA](https://developer.android.com/reference/android/view/PixelCopy.html#ERROR_SOURCE_NO_DATA)
        pub const ERROR_SOURCE_NO_DATA : i32 = 3;

        /// public static final [ERROR_TIMEOUT](https://developer.android.com/reference/android/view/PixelCopy.html#ERROR_TIMEOUT)
        pub const ERROR_TIMEOUT : i32 = 2;

        /// public static final [ERROR_UNKNOWN](https://developer.android.com/reference/android/view/PixelCopy.html#ERROR_UNKNOWN)
        pub const ERROR_UNKNOWN : i32 = 1;

        /// public static final [SUCCESS](https://developer.android.com/reference/android/view/PixelCopy.html#SUCCESS)
        pub const SUCCESS : i32 = 0;
    }
}
