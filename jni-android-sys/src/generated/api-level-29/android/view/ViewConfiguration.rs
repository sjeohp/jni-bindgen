// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-ViewConfiguration"))]
__jni_bindgen! {
    /// public class [ViewConfiguration](https://developer.android.com/reference/android/view/ViewConfiguration.html)
    ///
    /// Required feature: android-view-ViewConfiguration
    public class ViewConfiguration ("android/view/ViewConfiguration") extends crate::java::lang::Object {

        /// [ViewConfiguration](https://developer.android.com/reference/android/view/ViewConfiguration.html#ViewConfiguration())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::ViewConfiguration>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get](https://developer.android.com/reference/android/view/ViewConfiguration.html#get(android.content.Context))
        ///
        /// Required features: "android-content-Context", "android-view-ViewConfiguration"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-view-ViewConfiguration")))]
        pub fn get<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::ViewConfiguration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "get", .descriptor == "(Landroid/content/Context;)Landroid/view/ViewConfiguration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "get\0", "(Landroid/content/Context;)Landroid/view/ViewConfiguration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScrollBarSize](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScrollBarSize())
        #[deprecated] pub fn getScrollBarSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getScrollBarSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getScrollBarSize\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledScrollBarSize](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledScrollBarSize())
        pub fn getScaledScrollBarSize<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledScrollBarSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledScrollBarSize\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScrollBarFadeDuration](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScrollBarFadeDuration())
        pub fn getScrollBarFadeDuration<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getScrollBarFadeDuration", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getScrollBarFadeDuration\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScrollDefaultDelay](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScrollDefaultDelay())
        pub fn getScrollDefaultDelay<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getScrollDefaultDelay", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getScrollDefaultDelay\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFadingEdgeLength](https://developer.android.com/reference/android/view/ViewConfiguration.html#getFadingEdgeLength())
        #[deprecated] pub fn getFadingEdgeLength<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getFadingEdgeLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getFadingEdgeLength\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledFadingEdgeLength](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledFadingEdgeLength())
        pub fn getScaledFadingEdgeLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledFadingEdgeLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledFadingEdgeLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPressedStateDuration](https://developer.android.com/reference/android/view/ViewConfiguration.html#getPressedStateDuration())
        pub fn getPressedStateDuration<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getPressedStateDuration", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getPressedStateDuration\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLongPressTimeout](https://developer.android.com/reference/android/view/ViewConfiguration.html#getLongPressTimeout())
        pub fn getLongPressTimeout<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getLongPressTimeout", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getLongPressTimeout\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeyRepeatTimeout](https://developer.android.com/reference/android/view/ViewConfiguration.html#getKeyRepeatTimeout())
        pub fn getKeyRepeatTimeout<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getKeyRepeatTimeout", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getKeyRepeatTimeout\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeyRepeatDelay](https://developer.android.com/reference/android/view/ViewConfiguration.html#getKeyRepeatDelay())
        pub fn getKeyRepeatDelay<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getKeyRepeatDelay", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getKeyRepeatDelay\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTapTimeout](https://developer.android.com/reference/android/view/ViewConfiguration.html#getTapTimeout())
        pub fn getTapTimeout<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getTapTimeout", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getTapTimeout\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getJumpTapTimeout](https://developer.android.com/reference/android/view/ViewConfiguration.html#getJumpTapTimeout())
        pub fn getJumpTapTimeout<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getJumpTapTimeout", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getJumpTapTimeout\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDoubleTapTimeout](https://developer.android.com/reference/android/view/ViewConfiguration.html#getDoubleTapTimeout())
        pub fn getDoubleTapTimeout<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getDoubleTapTimeout", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getDoubleTapTimeout\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEdgeSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getEdgeSlop())
        #[deprecated] pub fn getEdgeSlop<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getEdgeSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getEdgeSlop\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledEdgeSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledEdgeSlop())
        pub fn getScaledEdgeSlop<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledEdgeSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledEdgeSlop\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTouchSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getTouchSlop())
        #[deprecated] pub fn getTouchSlop<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getTouchSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getTouchSlop\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledTouchSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledTouchSlop())
        pub fn getScaledTouchSlop<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledTouchSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledTouchSlop\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledHoverSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledHoverSlop())
        pub fn getScaledHoverSlop<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledHoverSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledHoverSlop\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledPagingTouchSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledPagingTouchSlop())
        pub fn getScaledPagingTouchSlop<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledPagingTouchSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledPagingTouchSlop\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledDoubleTapSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledDoubleTapSlop())
        pub fn getScaledDoubleTapSlop<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledDoubleTapSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledDoubleTapSlop\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWindowTouchSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getWindowTouchSlop())
        #[deprecated] pub fn getWindowTouchSlop<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getWindowTouchSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getWindowTouchSlop\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledWindowTouchSlop](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledWindowTouchSlop())
        pub fn getScaledWindowTouchSlop<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledWindowTouchSlop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledWindowTouchSlop\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinimumFlingVelocity](https://developer.android.com/reference/android/view/ViewConfiguration.html#getMinimumFlingVelocity())
        #[deprecated] pub fn getMinimumFlingVelocity<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getMinimumFlingVelocity", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getMinimumFlingVelocity\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledMinimumFlingVelocity](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledMinimumFlingVelocity())
        pub fn getScaledMinimumFlingVelocity<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledMinimumFlingVelocity", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledMinimumFlingVelocity\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaximumFlingVelocity](https://developer.android.com/reference/android/view/ViewConfiguration.html#getMaximumFlingVelocity())
        #[deprecated] pub fn getMaximumFlingVelocity<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getMaximumFlingVelocity", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getMaximumFlingVelocity\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledMaximumFlingVelocity](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledMaximumFlingVelocity())
        pub fn getScaledMaximumFlingVelocity<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledMaximumFlingVelocity", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledMaximumFlingVelocity\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledHorizontalScrollFactor](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledHorizontalScrollFactor())
        pub fn getScaledHorizontalScrollFactor<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledHorizontalScrollFactor", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledHorizontalScrollFactor\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledVerticalScrollFactor](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledVerticalScrollFactor())
        pub fn getScaledVerticalScrollFactor<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledVerticalScrollFactor", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledVerticalScrollFactor\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaximumDrawingCacheSize](https://developer.android.com/reference/android/view/ViewConfiguration.html#getMaximumDrawingCacheSize())
        #[deprecated] pub fn getMaximumDrawingCacheSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getMaximumDrawingCacheSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getMaximumDrawingCacheSize\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledMaximumDrawingCacheSize](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledMaximumDrawingCacheSize())
        pub fn getScaledMaximumDrawingCacheSize<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledMaximumDrawingCacheSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledMaximumDrawingCacheSize\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledOverscrollDistance](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledOverscrollDistance())
        pub fn getScaledOverscrollDistance<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledOverscrollDistance", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledOverscrollDistance\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledOverflingDistance](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledOverflingDistance())
        pub fn getScaledOverflingDistance<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledOverflingDistance", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledOverflingDistance\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getZoomControlsTimeout](https://developer.android.com/reference/android/view/ViewConfiguration.html#getZoomControlsTimeout())
        pub fn getZoomControlsTimeout<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getZoomControlsTimeout", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getZoomControlsTimeout\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalActionKeyTimeout](https://developer.android.com/reference/android/view/ViewConfiguration.html#getGlobalActionKeyTimeout())
        #[deprecated] pub fn getGlobalActionKeyTimeout<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getGlobalActionKeyTimeout", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getGlobalActionKeyTimeout\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScrollFriction](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScrollFriction())
        pub fn getScrollFriction<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getScrollFriction", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getScrollFriction\0", "()F\0");
                __jni_env.call_static_float_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultActionModeHideDuration](https://developer.android.com/reference/android/view/ViewConfiguration.html#getDefaultActionModeHideDuration())
        pub fn getDefaultActionModeHideDuration<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getDefaultActionModeHideDuration", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getDefaultActionModeHideDuration\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAmbiguousGestureMultiplier](https://developer.android.com/reference/android/view/ViewConfiguration.html#getAmbiguousGestureMultiplier())
        pub fn getAmbiguousGestureMultiplier<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC | STATIC, .name == "getAmbiguousGestureMultiplier", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/view/ViewConfiguration\0", "getAmbiguousGestureMultiplier\0", "()F\0");
                __jni_env.call_static_float_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasPermanentMenuKey](https://developer.android.com/reference/android/view/ViewConfiguration.html#hasPermanentMenuKey())
        pub fn hasPermanentMenuKey<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "hasPermanentMenuKey", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "hasPermanentMenuKey\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [shouldShowMenuShortcutsWhenKeyboardPresent](https://developer.android.com/reference/android/view/ViewConfiguration.html#shouldShowMenuShortcutsWhenKeyboardPresent())
        pub fn shouldShowMenuShortcutsWhenKeyboardPresent<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "shouldShowMenuShortcutsWhenKeyboardPresent", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "shouldShowMenuShortcutsWhenKeyboardPresent\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScaledMinimumScalingSpan](https://developer.android.com/reference/android/view/ViewConfiguration.html#getScaledMinimumScalingSpan())
        pub fn getScaledMinimumScalingSpan<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/ViewConfiguration", java.flags == PUBLIC, .name == "getScaledMinimumScalingSpan", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/ViewConfiguration\0", "getScaledMinimumScalingSpan\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
