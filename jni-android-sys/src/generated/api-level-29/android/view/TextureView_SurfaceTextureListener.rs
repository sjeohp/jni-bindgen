// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-TextureView_SurfaceTextureListener"))]
__jni_bindgen! {
    /// public interface [TextureView.SurfaceTextureListener](https://developer.android.com/reference/android/view/TextureView.SurfaceTextureListener.html)
    ///
    /// Required feature: android-view-TextureView_SurfaceTextureListener
    public interface TextureView_SurfaceTextureListener ("android/view/TextureView$SurfaceTextureListener") extends crate::java::lang::Object {

        /// [onSurfaceTextureAvailable](https://developer.android.com/reference/android/view/TextureView.SurfaceTextureListener.html#onSurfaceTextureAvailable(android.graphics.SurfaceTexture,%20int,%20int))
        ///
        /// Required features: "android-graphics-SurfaceTexture"
        #[cfg(any(feature = "all", all(feature = "android-graphics-SurfaceTexture")))]
        pub fn onSurfaceTextureAvailable<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::SurfaceTexture>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/TextureView$SurfaceTextureListener", java.flags == PUBLIC | ABSTRACT, .name == "onSurfaceTextureAvailable", .descriptor == "(Landroid/graphics/SurfaceTexture;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/TextureView$SurfaceTextureListener\0", "onSurfaceTextureAvailable\0", "(Landroid/graphics/SurfaceTexture;II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSurfaceTextureSizeChanged](https://developer.android.com/reference/android/view/TextureView.SurfaceTextureListener.html#onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,%20int,%20int))
        ///
        /// Required features: "android-graphics-SurfaceTexture"
        #[cfg(any(feature = "all", all(feature = "android-graphics-SurfaceTexture")))]
        pub fn onSurfaceTextureSizeChanged<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::SurfaceTexture>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/TextureView$SurfaceTextureListener", java.flags == PUBLIC | ABSTRACT, .name == "onSurfaceTextureSizeChanged", .descriptor == "(Landroid/graphics/SurfaceTexture;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/TextureView$SurfaceTextureListener\0", "onSurfaceTextureSizeChanged\0", "(Landroid/graphics/SurfaceTexture;II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSurfaceTextureDestroyed](https://developer.android.com/reference/android/view/TextureView.SurfaceTextureListener.html#onSurfaceTextureDestroyed(android.graphics.SurfaceTexture))
        ///
        /// Required features: "android-graphics-SurfaceTexture"
        #[cfg(any(feature = "all", all(feature = "android-graphics-SurfaceTexture")))]
        pub fn onSurfaceTextureDestroyed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::SurfaceTexture>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/TextureView$SurfaceTextureListener", java.flags == PUBLIC | ABSTRACT, .name == "onSurfaceTextureDestroyed", .descriptor == "(Landroid/graphics/SurfaceTexture;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/TextureView$SurfaceTextureListener\0", "onSurfaceTextureDestroyed\0", "(Landroid/graphics/SurfaceTexture;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSurfaceTextureUpdated](https://developer.android.com/reference/android/view/TextureView.SurfaceTextureListener.html#onSurfaceTextureUpdated(android.graphics.SurfaceTexture))
        ///
        /// Required features: "android-graphics-SurfaceTexture"
        #[cfg(any(feature = "all", all(feature = "android-graphics-SurfaceTexture")))]
        pub fn onSurfaceTextureUpdated<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::SurfaceTexture>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/view/TextureView$SurfaceTextureListener", java.flags == PUBLIC | ABSTRACT, .name == "onSurfaceTextureUpdated", .descriptor == "(Landroid/graphics/SurfaceTexture;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/TextureView$SurfaceTextureListener\0", "onSurfaceTextureUpdated\0", "(Landroid/graphics/SurfaceTexture;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
