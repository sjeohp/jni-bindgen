// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-view-HapticFeedbackConstants"))]
__jni_bindgen! {
    /// public class [HapticFeedbackConstants](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html)
    ///
    /// Required feature: android-view-HapticFeedbackConstants
    public class HapticFeedbackConstants ("android/view/HapticFeedbackConstants") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [HapticFeedbackConstants](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#HapticFeedbackConstants())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::view::HapticFeedbackConstants>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/view/HapticFeedbackConstants", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/view/HapticFeedbackConstants\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [CLOCK_TICK](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#CLOCK_TICK)
        pub const CLOCK_TICK : i32 = 4;

        /// public static final [CONTEXT_CLICK](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#CONTEXT_CLICK)
        pub const CONTEXT_CLICK : i32 = 6;

        /// public static final [FLAG_IGNORE_GLOBAL_SETTING](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#FLAG_IGNORE_GLOBAL_SETTING)
        pub const FLAG_IGNORE_GLOBAL_SETTING : i32 = 2;

        /// public static final [FLAG_IGNORE_VIEW_SETTING](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#FLAG_IGNORE_VIEW_SETTING)
        pub const FLAG_IGNORE_VIEW_SETTING : i32 = 1;

        /// public static final [KEYBOARD_PRESS](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#KEYBOARD_PRESS)
        pub const KEYBOARD_PRESS : i32 = 3;

        /// public static final [KEYBOARD_RELEASE](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#KEYBOARD_RELEASE)
        pub const KEYBOARD_RELEASE : i32 = 7;

        /// public static final [KEYBOARD_TAP](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#KEYBOARD_TAP)
        pub const KEYBOARD_TAP : i32 = 3;

        /// public static final [LONG_PRESS](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#LONG_PRESS)
        pub const LONG_PRESS : i32 = 0;

        /// public static final [TEXT_HANDLE_MOVE](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#TEXT_HANDLE_MOVE)
        pub const TEXT_HANDLE_MOVE : i32 = 9;

        /// public static final [VIRTUAL_KEY](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#VIRTUAL_KEY)
        pub const VIRTUAL_KEY : i32 = 1;

        /// public static final [VIRTUAL_KEY_RELEASE](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html#VIRTUAL_KEY_RELEASE)
        pub const VIRTUAL_KEY_RELEASE : i32 = 8;
    }
}
