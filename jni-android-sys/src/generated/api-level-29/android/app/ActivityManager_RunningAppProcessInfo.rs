// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-ActivityManager_RunningAppProcessInfo"))]
__jni_bindgen! {
    /// public class [ActivityManager.RunningAppProcessInfo](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html)
    ///
    /// Required feature: android-app-ActivityManager_RunningAppProcessInfo
    public class ActivityManager_RunningAppProcessInfo ("android/app/ActivityManager$RunningAppProcessInfo") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [RunningAppProcessInfo](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#RunningAppProcessInfo())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::ActivityManager_RunningAppProcessInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$RunningAppProcessInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$RunningAppProcessInfo\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [RunningAppProcessInfo](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#RunningAppProcessInfo(java.lang.String,%20int,%20java.lang.String%5B%5D))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String_int_String_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::ActivityManager_RunningAppProcessInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$RunningAppProcessInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;I[Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$RunningAppProcessInfo\0", "<init>\0", "(Ljava/lang/String;I[Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$RunningAppProcessInfo", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$RunningAppProcessInfo\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$RunningAppProcessInfo", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$RunningAppProcessInfo\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readFromParcel](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#readFromParcel(android.os.Parcel))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn readFromParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$RunningAppProcessInfo", java.flags == PUBLIC, .name == "readFromParcel", .descriptor == "(Landroid/os/Parcel;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$RunningAppProcessInfo\0", "readFromParcel\0", "(Landroid/os/Parcel;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/ActivityManager$RunningAppProcessInfo\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [IMPORTANCE_BACKGROUND](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_BACKGROUND)
        #[deprecated] pub const IMPORTANCE_BACKGROUND : i32 = 400;

        /// public static final [IMPORTANCE_CACHED](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_CACHED)
        pub const IMPORTANCE_CACHED : i32 = 400;

        /// public static final [IMPORTANCE_CANT_SAVE_STATE](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_CANT_SAVE_STATE)
        pub const IMPORTANCE_CANT_SAVE_STATE : i32 = 350;

        /// public static final [IMPORTANCE_EMPTY](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_EMPTY)
        #[deprecated] pub const IMPORTANCE_EMPTY : i32 = 500;

        /// public static final [IMPORTANCE_FOREGROUND](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_FOREGROUND)
        pub const IMPORTANCE_FOREGROUND : i32 = 100;

        /// public static final [IMPORTANCE_FOREGROUND_SERVICE](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_FOREGROUND_SERVICE)
        pub const IMPORTANCE_FOREGROUND_SERVICE : i32 = 125;

        /// public static final [IMPORTANCE_GONE](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_GONE)
        pub const IMPORTANCE_GONE : i32 = 1000;

        /// public static final [IMPORTANCE_PERCEPTIBLE](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_PERCEPTIBLE)
        pub const IMPORTANCE_PERCEPTIBLE : i32 = 230;

        /// public static final [IMPORTANCE_PERCEPTIBLE_PRE_26](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_PERCEPTIBLE_PRE_26)
        pub const IMPORTANCE_PERCEPTIBLE_PRE_26 : i32 = 130;

        /// public static final [IMPORTANCE_SERVICE](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_SERVICE)
        pub const IMPORTANCE_SERVICE : i32 = 300;

        /// public static final [IMPORTANCE_TOP_SLEEPING](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_TOP_SLEEPING)
        pub const IMPORTANCE_TOP_SLEEPING : i32 = 325;

        /// public static final [IMPORTANCE_TOP_SLEEPING_PRE_28](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_TOP_SLEEPING_PRE_28)
        #[deprecated] pub const IMPORTANCE_TOP_SLEEPING_PRE_28 : i32 = 150;

        /// public static final [IMPORTANCE_VISIBLE](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_VISIBLE)
        pub const IMPORTANCE_VISIBLE : i32 = 200;

        /// public static final [REASON_PROVIDER_IN_USE](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#REASON_PROVIDER_IN_USE)
        pub const REASON_PROVIDER_IN_USE : i32 = 1;

        /// public static final [REASON_SERVICE_IN_USE](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#REASON_SERVICE_IN_USE)
        pub const REASON_SERVICE_IN_USE : i32 = 2;

        /// public static final [REASON_UNKNOWN](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#REASON_UNKNOWN)
        pub const REASON_UNKNOWN : i32 = 0;

        /// **get** public [importance](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#importance)
        pub fn importance<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "importance\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [importance](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#importance)
        pub fn set_importance<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "importance\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [importanceReasonCode](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#importanceReasonCode)
        pub fn importanceReasonCode<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "importanceReasonCode\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [importanceReasonCode](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#importanceReasonCode)
        pub fn set_importanceReasonCode<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "importanceReasonCode\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [importanceReasonComponent](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#importanceReasonComponent)
        ///
        /// Required feature: android-content-ComponentName
        #[cfg(any(feature = "all", feature = "android-content-ComponentName"))]
        pub fn importanceReasonComponent<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ComponentName>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "importanceReasonComponent\0", "Landroid/content/ComponentName;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [importanceReasonComponent](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#importanceReasonComponent)
        ///
        /// Required feature: android-content-ComponentName
        #[cfg(any(feature = "all", feature = "android-content-ComponentName"))]
        pub fn set_importanceReasonComponent<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::content::ComponentName>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "importanceReasonComponent\0", "Landroid/content/ComponentName;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [importanceReasonPid](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#importanceReasonPid)
        pub fn importanceReasonPid<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "importanceReasonPid\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [importanceReasonPid](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#importanceReasonPid)
        pub fn set_importanceReasonPid<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "importanceReasonPid\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [lastTrimLevel](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#lastTrimLevel)
        pub fn lastTrimLevel<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "lastTrimLevel\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [lastTrimLevel](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#lastTrimLevel)
        pub fn set_lastTrimLevel<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "lastTrimLevel\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [lru](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#lru)
        pub fn lru<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "lru\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [lru](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#lru)
        pub fn set_lru<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "lru\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [pid](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#pid)
        pub fn pid<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "pid\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [pid](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#pid)
        pub fn set_pid<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "pid\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [pkgList](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#pkgList)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn pkgList<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "pkgList\0", "[Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [pkgList](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#pkgList)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_pkgList<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "pkgList\0", "[Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [processName](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#processName)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn processName<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "processName\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [processName](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#processName)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_processName<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "processName\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [uid](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#uid)
        pub fn uid<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "uid\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [uid](https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#uid)
        pub fn set_uid<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$RunningAppProcessInfo\0", "uid\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }
    }
}
