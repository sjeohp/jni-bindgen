// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-Presentation"))]
__jni_bindgen! {
    /// public class [Presentation](https://developer.android.com/reference/android/app/Presentation.html)
    ///
    /// Required feature: android-app-Presentation
    public class Presentation ("android/app/Presentation") extends crate::android::app::Dialog {

        /// [Presentation](https://developer.android.com/reference/android/app/Presentation.html#Presentation(android.content.Context,%20android.view.Display))
        ///
        /// Required features: "android-content-Context", "android-view-Display"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-view-Display")))]
        pub fn new_Context_Display<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Display>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::Presentation>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Presentation", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/view/Display;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "<init>\0", "(Landroid/content/Context;Landroid/view/Display;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Presentation](https://developer.android.com/reference/android/app/Presentation.html#Presentation(android.content.Context,%20android.view.Display,%20int))
        ///
        /// Required features: "android-content-Context", "android-view-Display"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-view-Display")))]
        pub fn new_Context_Display_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::Display>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::Presentation>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Presentation", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/view/Display;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "<init>\0", "(Landroid/content/Context;Landroid/view/Display;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplay](https://developer.android.com/reference/android/app/Presentation.html#getDisplay())
        ///
        /// Required features: "android-view-Display"
        #[cfg(any(feature = "all", all(feature = "android-view-Display")))]
        pub fn getDisplay<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::Display>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Presentation", java.flags == PUBLIC, .name == "getDisplay", .descriptor == "()Landroid/view/Display;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "getDisplay\0", "()Landroid/view/Display;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getResources](https://developer.android.com/reference/android/app/Presentation.html#getResources())
        ///
        /// Required features: "android-content-res-Resources"
        #[cfg(any(feature = "all", all(feature = "android-content-res-Resources")))]
        pub fn getResources<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::res::Resources>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Presentation", java.flags == PUBLIC, .name == "getResources", .descriptor == "()Landroid/content/res/Resources;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "getResources\0", "()Landroid/content/res/Resources;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [onStart](https://developer.android.com/reference/android/app/Presentation.html#onStart())
        // fn onStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/Presentation", java.flags == PROTECTED, .name == "onStart", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "onStart\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [onStop](https://developer.android.com/reference/android/app/Presentation.html#onStop())
        // fn onStop<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/Presentation", java.flags == PROTECTED, .name == "onStop", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "onStop\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [show](https://developer.android.com/reference/android/app/Presentation.html#show())
        pub fn show<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Presentation", java.flags == PUBLIC, .name == "show", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "show\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDisplayRemoved](https://developer.android.com/reference/android/app/Presentation.html#onDisplayRemoved())
        pub fn onDisplayRemoved<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Presentation", java.flags == PUBLIC, .name == "onDisplayRemoved", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "onDisplayRemoved\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDisplayChanged](https://developer.android.com/reference/android/app/Presentation.html#onDisplayChanged())
        pub fn onDisplayChanged<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Presentation", java.flags == PUBLIC, .name == "onDisplayChanged", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Presentation\0", "onDisplayChanged\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
