// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-Notification_Style"))]
__jni_bindgen! {
    /// public class [Notification.Style](https://developer.android.com/reference/android/app/Notification.Style.html)
    ///
    /// Required feature: android-app-Notification_Style
    public class Notification_Style ("android/app/Notification$Style") extends crate::java::lang::Object {

        /// [Style](https://developer.android.com/reference/android/app/Notification.Style.html#Style())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::Notification_Style>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$Style", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$Style\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [internalSetBigContentTitle](https://developer.android.com/reference/android/app/Notification.Style.html#internalSetBigContentTitle(java.lang.CharSequence))
        // ///
        // /// Required features: "java-lang-CharSequence"
        // #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        // fn internalSetBigContentTitle<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/Notification$Style", java.flags == PROTECTED, .name == "internalSetBigContentTitle", .descriptor == "(Ljava/lang/CharSequence;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$Style\0", "internalSetBigContentTitle\0", "(Ljava/lang/CharSequence;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [internalSetSummaryText](https://developer.android.com/reference/android/app/Notification.Style.html#internalSetSummaryText(java.lang.CharSequence))
        // ///
        // /// Required features: "java-lang-CharSequence"
        // #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        // fn internalSetSummaryText<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/Notification$Style", java.flags == PROTECTED, .name == "internalSetSummaryText", .descriptor == "(Ljava/lang/CharSequence;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$Style\0", "internalSetSummaryText\0", "(Ljava/lang/CharSequence;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [setBuilder](https://developer.android.com/reference/android/app/Notification.Style.html#setBuilder(android.app.Notification.Builder))
        ///
        /// Required features: "android-app-Notification_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-Notification_Builder")))]
        pub fn setBuilder<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Notification_Builder>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$Style", java.flags == PUBLIC, .name == "setBuilder", .descriptor == "(Landroid/app/Notification$Builder;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$Style\0", "setBuilder\0", "(Landroid/app/Notification$Builder;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [checkBuilder](https://developer.android.com/reference/android/app/Notification.Style.html#checkBuilder())
        // fn checkBuilder<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/Notification$Style", java.flags == PROTECTED, .name == "checkBuilder", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$Style\0", "checkBuilder\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getStandardView](https://developer.android.com/reference/android/app/Notification.Style.html#getStandardView(int))
        // ///
        // /// Required features: "android-widget-RemoteViews"
        // #[cfg(any(feature = "all", all(feature = "android-widget-RemoteViews")))]
        // fn getStandardView<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::widget::RemoteViews>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/Notification$Style", java.flags == PROTECTED, .name == "getStandardView", .descriptor == "(I)Landroid/widget/RemoteViews;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$Style\0", "getStandardView\0", "(I)Landroid/widget/RemoteViews;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [build](https://developer.android.com/reference/android/app/Notification.Style.html#build())
        ///
        /// Required features: "android-app-Notification"
        #[cfg(any(feature = "all", all(feature = "android-app-Notification")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::Notification>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$Style", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/app/Notification;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$Style\0", "build\0", "()Landroid/app/Notification;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // /// **get** protected [mBuilder](https://developer.android.com/reference/android/app/Notification.Style.html#mBuilder)
        // ///
        // /// Required feature: android-app-Notification_Builder
        // #[cfg(any(feature = "all", feature = "android-app-Notification_Builder"))]
        // pub fn mBuilder<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::Notification_Builder>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/app/Notification$Style\0", "mBuilder\0", "Landroid/app/Notification$Builder;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [mBuilder](https://developer.android.com/reference/android/app/Notification.Style.html#mBuilder)
        // ///
        // /// Required feature: android-app-Notification_Builder
        // #[cfg(any(feature = "all", feature = "android-app-Notification_Builder"))]
        // pub fn set_mBuilder<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::app::Notification_Builder>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/app/Notification$Style\0", "mBuilder\0", "Landroid/app/Notification$Builder;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
