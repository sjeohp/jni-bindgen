// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-UiModeManager"))]
__jni_bindgen! {
    /// public class [UiModeManager](https://developer.android.com/reference/android/app/UiModeManager.html)
    ///
    /// Required feature: android-app-UiModeManager
    public class UiModeManager ("android/app/UiModeManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [UiModeManager](https://developer.android.com/reference/android/app/UiModeManager.html#UiModeManager())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::UiModeManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/UiModeManager", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/UiModeManager\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [enableCarMode](https://developer.android.com/reference/android/app/UiModeManager.html#enableCarMode(int))
        pub fn enableCarMode<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/UiModeManager", java.flags == PUBLIC, .name == "enableCarMode", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/UiModeManager\0", "enableCarMode\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [disableCarMode](https://developer.android.com/reference/android/app/UiModeManager.html#disableCarMode(int))
        pub fn disableCarMode<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/UiModeManager", java.flags == PUBLIC, .name == "disableCarMode", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/UiModeManager\0", "disableCarMode\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCurrentModeType](https://developer.android.com/reference/android/app/UiModeManager.html#getCurrentModeType())
        pub fn getCurrentModeType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/UiModeManager", java.flags == PUBLIC, .name == "getCurrentModeType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/UiModeManager\0", "getCurrentModeType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNightMode](https://developer.android.com/reference/android/app/UiModeManager.html#setNightMode(int))
        pub fn setNightMode<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/UiModeManager", java.flags == PUBLIC, .name == "setNightMode", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/UiModeManager\0", "setNightMode\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNightMode](https://developer.android.com/reference/android/app/UiModeManager.html#getNightMode())
        pub fn getNightMode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/UiModeManager", java.flags == PUBLIC, .name == "getNightMode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/UiModeManager\0", "getNightMode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static [ACTION_ENTER_CAR_MODE](https://developer.android.com/reference/android/app/UiModeManager.html#ACTION_ENTER_CAR_MODE)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn ACTION_ENTER_CAR_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/UiModeManager\0", "ACTION_ENTER_CAR_MODE\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [ACTION_ENTER_CAR_MODE](https://developer.android.com/reference/android/app/UiModeManager.html#ACTION_ENTER_CAR_MODE)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_ACTION_ENTER_CAR_MODE<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/UiModeManager\0", "ACTION_ENTER_CAR_MODE\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [ACTION_ENTER_DESK_MODE](https://developer.android.com/reference/android/app/UiModeManager.html#ACTION_ENTER_DESK_MODE)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn ACTION_ENTER_DESK_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/UiModeManager\0", "ACTION_ENTER_DESK_MODE\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [ACTION_ENTER_DESK_MODE](https://developer.android.com/reference/android/app/UiModeManager.html#ACTION_ENTER_DESK_MODE)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_ACTION_ENTER_DESK_MODE<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/UiModeManager\0", "ACTION_ENTER_DESK_MODE\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [ACTION_EXIT_CAR_MODE](https://developer.android.com/reference/android/app/UiModeManager.html#ACTION_EXIT_CAR_MODE)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn ACTION_EXIT_CAR_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/UiModeManager\0", "ACTION_EXIT_CAR_MODE\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [ACTION_EXIT_CAR_MODE](https://developer.android.com/reference/android/app/UiModeManager.html#ACTION_EXIT_CAR_MODE)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_ACTION_EXIT_CAR_MODE<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/UiModeManager\0", "ACTION_EXIT_CAR_MODE\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [ACTION_EXIT_DESK_MODE](https://developer.android.com/reference/android/app/UiModeManager.html#ACTION_EXIT_DESK_MODE)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn ACTION_EXIT_DESK_MODE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/UiModeManager\0", "ACTION_EXIT_DESK_MODE\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [ACTION_EXIT_DESK_MODE](https://developer.android.com/reference/android/app/UiModeManager.html#ACTION_EXIT_DESK_MODE)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_ACTION_EXIT_DESK_MODE<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/UiModeManager\0", "ACTION_EXIT_DESK_MODE\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// public static final [DISABLE_CAR_MODE_GO_HOME](https://developer.android.com/reference/android/app/UiModeManager.html#DISABLE_CAR_MODE_GO_HOME)
        pub const DISABLE_CAR_MODE_GO_HOME : i32 = 1;

        /// public static final [ENABLE_CAR_MODE_ALLOW_SLEEP](https://developer.android.com/reference/android/app/UiModeManager.html#ENABLE_CAR_MODE_ALLOW_SLEEP)
        pub const ENABLE_CAR_MODE_ALLOW_SLEEP : i32 = 2;

        /// public static final [ENABLE_CAR_MODE_GO_CAR_HOME](https://developer.android.com/reference/android/app/UiModeManager.html#ENABLE_CAR_MODE_GO_CAR_HOME)
        pub const ENABLE_CAR_MODE_GO_CAR_HOME : i32 = 1;

        /// public static final [MODE_NIGHT_AUTO](https://developer.android.com/reference/android/app/UiModeManager.html#MODE_NIGHT_AUTO)
        pub const MODE_NIGHT_AUTO : i32 = 0;

        /// public static final [MODE_NIGHT_NO](https://developer.android.com/reference/android/app/UiModeManager.html#MODE_NIGHT_NO)
        pub const MODE_NIGHT_NO : i32 = 1;

        /// public static final [MODE_NIGHT_YES](https://developer.android.com/reference/android/app/UiModeManager.html#MODE_NIGHT_YES)
        pub const MODE_NIGHT_YES : i32 = 2;
    }
}
