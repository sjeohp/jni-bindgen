// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-ActivityManager_AppTask"))]
__jni_bindgen! {
    /// public class [ActivityManager.AppTask](https://developer.android.com/reference/android/app/ActivityManager.AppTask.html)
    ///
    /// Required feature: android-app-ActivityManager_AppTask
    public class ActivityManager_AppTask ("android/app/ActivityManager$AppTask") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [AppTask](https://developer.android.com/reference/android/app/ActivityManager.AppTask.html#AppTask())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::ActivityManager_AppTask>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/ActivityManager$AppTask", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$AppTask\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [finishAndRemoveTask](https://developer.android.com/reference/android/app/ActivityManager.AppTask.html#finishAndRemoveTask())
        pub fn finishAndRemoveTask<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$AppTask", java.flags == PUBLIC, .name == "finishAndRemoveTask", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$AppTask\0", "finishAndRemoveTask\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTaskInfo](https://developer.android.com/reference/android/app/ActivityManager.AppTask.html#getTaskInfo())
        ///
        /// Required features: "android-app-ActivityManager_RecentTaskInfo"
        #[cfg(any(feature = "all", all(feature = "android-app-ActivityManager_RecentTaskInfo")))]
        pub fn getTaskInfo<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::ActivityManager_RecentTaskInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$AppTask", java.flags == PUBLIC, .name == "getTaskInfo", .descriptor == "()Landroid/app/ActivityManager$RecentTaskInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$AppTask\0", "getTaskInfo\0", "()Landroid/app/ActivityManager$RecentTaskInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [moveToFront](https://developer.android.com/reference/android/app/ActivityManager.AppTask.html#moveToFront())
        pub fn moveToFront<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$AppTask", java.flags == PUBLIC, .name == "moveToFront", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$AppTask\0", "moveToFront\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startActivity](https://developer.android.com/reference/android/app/ActivityManager.AppTask.html#startActivity(android.content.Context,%20android.content.Intent,%20android.os.Bundle))
        ///
        /// Required features: "android-content-Context", "android-content-Intent", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-content-Intent", feature = "android-os-Bundle")))]
        pub fn startActivity<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$AppTask", java.flags == PUBLIC, .name == "startActivity", .descriptor == "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$AppTask\0", "startActivity\0", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExcludeFromRecents](https://developer.android.com/reference/android/app/ActivityManager.AppTask.html#setExcludeFromRecents(boolean))
        pub fn setExcludeFromRecents<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$AppTask", java.flags == PUBLIC, .name == "setExcludeFromRecents", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$AppTask\0", "setExcludeFromRecents\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
