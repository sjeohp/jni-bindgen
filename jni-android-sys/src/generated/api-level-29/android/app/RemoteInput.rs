// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-RemoteInput"))]
__jni_bindgen! {
    /// public final class [RemoteInput](https://developer.android.com/reference/android/app/RemoteInput.html)
    ///
    /// Required feature: android-app-RemoteInput
    public final class RemoteInput ("android/app/RemoteInput") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [RemoteInput](https://developer.android.com/reference/android/app/RemoteInput.html#RemoteInput(android.os.Parcel))
        // ///
        // /// Required features: "android-os-Parcel"
        // #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::RemoteInput>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/RemoteInput", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/os/Parcel;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "<init>\0", "(Landroid/os/Parcel;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getResultKey](https://developer.android.com/reference/android/app/RemoteInput.html#getResultKey())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getResultKey<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "getResultKey", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "getResultKey\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLabel](https://developer.android.com/reference/android/app/RemoteInput.html#getLabel())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getLabel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "getLabel", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "getLabel\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChoices](https://developer.android.com/reference/android/app/RemoteInput.html#getChoices())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getChoices<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::CharSequence, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "getChoices", .descriptor == "()[Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "getChoices\0", "()[Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAllowedDataTypes](https://developer.android.com/reference/android/app/RemoteInput.html#getAllowedDataTypes())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn getAllowedDataTypes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "getAllowedDataTypes", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "getAllowedDataTypes\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDataOnly](https://developer.android.com/reference/android/app/RemoteInput.html#isDataOnly())
        pub fn isDataOnly<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "isDataOnly", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "isDataOnly\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAllowFreeFormInput](https://developer.android.com/reference/android/app/RemoteInput.html#getAllowFreeFormInput())
        pub fn getAllowFreeFormInput<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "getAllowFreeFormInput", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "getAllowFreeFormInput\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEditChoicesBeforeSending](https://developer.android.com/reference/android/app/RemoteInput.html#getEditChoicesBeforeSending())
        pub fn getEditChoicesBeforeSending<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "getEditChoicesBeforeSending", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "getEditChoicesBeforeSending\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtras](https://developer.android.com/reference/android/app/RemoteInput.html#getExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "getExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "getExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDataResultsFromIntent](https://developer.android.com/reference/android/app/RemoteInput.html#getDataResultsFromIntent(android.content.Intent,%20java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String", "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String", feature = "java-util-Map")))]
        pub fn getDataResultsFromIntent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC | STATIC, .name == "getDataResultsFromIntent", .descriptor == "(Landroid/content/Intent;Ljava/lang/String;)Ljava/util/Map;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/app/RemoteInput\0", "getDataResultsFromIntent\0", "(Landroid/content/Intent;Ljava/lang/String;)Ljava/util/Map;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getResultsFromIntent](https://developer.android.com/reference/android/app/RemoteInput.html#getResultsFromIntent(android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-Bundle")))]
        pub fn getResultsFromIntent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC | STATIC, .name == "getResultsFromIntent", .descriptor == "(Landroid/content/Intent;)Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/app/RemoteInput\0", "getResultsFromIntent\0", "(Landroid/content/Intent;)Landroid/os/Bundle;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addResultsToIntent](https://developer.android.com/reference/android/app/RemoteInput.html#addResultsToIntent(android.app.RemoteInput%5B%5D,%20android.content.Intent,%20android.os.Bundle))
        ///
        /// Required features: "android-app-RemoteInput", "android-content-Intent", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput", feature = "android-content-Intent", feature = "android-os-Bundle")))]
        pub fn addResultsToIntent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::app::RemoteInput, crate::java::lang::Throwable>>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC | STATIC, .name == "addResultsToIntent", .descriptor == "([Landroid/app/RemoteInput;Landroid/content/Intent;Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/app/RemoteInput\0", "addResultsToIntent\0", "([Landroid/app/RemoteInput;Landroid/content/Intent;Landroid/os/Bundle;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addDataResultToIntent](https://developer.android.com/reference/android/app/RemoteInput.html#addDataResultToIntent(android.app.RemoteInput,%20android.content.Intent,%20java.util.Map))
        ///
        /// Required features: "android-app-RemoteInput", "android-content-Intent", "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput", feature = "android-content-Intent", feature = "java-util-Map")))]
        pub fn addDataResultToIntent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::RemoteInput>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC | STATIC, .name == "addDataResultToIntent", .descriptor == "(Landroid/app/RemoteInput;Landroid/content/Intent;Ljava/util/Map;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/app/RemoteInput\0", "addDataResultToIntent\0", "(Landroid/app/RemoteInput;Landroid/content/Intent;Ljava/util/Map;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setResultsSource](https://developer.android.com/reference/android/app/RemoteInput.html#setResultsSource(android.content.Intent,%20int))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn setResultsSource<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC | STATIC, .name == "setResultsSource", .descriptor == "(Landroid/content/Intent;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/app/RemoteInput\0", "setResultsSource\0", "(Landroid/content/Intent;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getResultsSource](https://developer.android.com/reference/android/app/RemoteInput.html#getResultsSource(android.content.Intent))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn getResultsSource<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC | STATIC, .name == "getResultsSource", .descriptor == "(Landroid/content/Intent;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/app/RemoteInput\0", "getResultsSource\0", "(Landroid/content/Intent;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/app/RemoteInput.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/app/RemoteInput.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/app/RemoteInput.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/RemoteInput\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [EDIT_CHOICES_BEFORE_SENDING_AUTO](https://developer.android.com/reference/android/app/RemoteInput.html#EDIT_CHOICES_BEFORE_SENDING_AUTO)
        pub const EDIT_CHOICES_BEFORE_SENDING_AUTO : i32 = 0;

        /// public static final [EDIT_CHOICES_BEFORE_SENDING_DISABLED](https://developer.android.com/reference/android/app/RemoteInput.html#EDIT_CHOICES_BEFORE_SENDING_DISABLED)
        pub const EDIT_CHOICES_BEFORE_SENDING_DISABLED : i32 = 1;

        /// public static final [EDIT_CHOICES_BEFORE_SENDING_ENABLED](https://developer.android.com/reference/android/app/RemoteInput.html#EDIT_CHOICES_BEFORE_SENDING_ENABLED)
        pub const EDIT_CHOICES_BEFORE_SENDING_ENABLED : i32 = 2;

        /// public static final [EXTRA_RESULTS_DATA](https://developer.android.com/reference/android/app/RemoteInput.html#EXTRA_RESULTS_DATA)
        pub const EXTRA_RESULTS_DATA : &'static str = "android.remoteinput.resultsData";

        /// public static final [RESULTS_CLIP_LABEL](https://developer.android.com/reference/android/app/RemoteInput.html#RESULTS_CLIP_LABEL)
        pub const RESULTS_CLIP_LABEL : &'static str = "android.remoteinput.results";

        /// public static final [SOURCE_CHOICE](https://developer.android.com/reference/android/app/RemoteInput.html#SOURCE_CHOICE)
        pub const SOURCE_CHOICE : i32 = 1;

        /// public static final [SOURCE_FREE_FORM_INPUT](https://developer.android.com/reference/android/app/RemoteInput.html#SOURCE_FREE_FORM_INPUT)
        pub const SOURCE_FREE_FORM_INPUT : i32 = 0;
    }
}
