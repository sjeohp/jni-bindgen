// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-admin-FreezePeriod"))]
__jni_bindgen! {
    /// public class [FreezePeriod](https://developer.android.com/reference/android/app/admin/FreezePeriod.html)
    ///
    /// Required feature: android-app-admin-FreezePeriod
    public class FreezePeriod ("android/app/admin/FreezePeriod") extends crate::java::lang::Object {

        /// [FreezePeriod](https://developer.android.com/reference/android/app/admin/FreezePeriod.html#FreezePeriod(java.time.MonthDay,%20java.time.MonthDay))
        ///
        /// Required features: "java-time-MonthDay"
        #[cfg(any(feature = "all", all(feature = "java-time-MonthDay")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::MonthDay>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::time::MonthDay>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::admin::FreezePeriod>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/admin/FreezePeriod", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/time/MonthDay;Ljava/time/MonthDay;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/admin/FreezePeriod\0", "<init>\0", "(Ljava/time/MonthDay;Ljava/time/MonthDay;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStart](https://developer.android.com/reference/android/app/admin/FreezePeriod.html#getStart())
        ///
        /// Required features: "java-time-MonthDay"
        #[cfg(any(feature = "all", all(feature = "java-time-MonthDay")))]
        pub fn getStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::MonthDay>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/admin/FreezePeriod", java.flags == PUBLIC, .name == "getStart", .descriptor == "()Ljava/time/MonthDay;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/admin/FreezePeriod\0", "getStart\0", "()Ljava/time/MonthDay;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getEnd](https://developer.android.com/reference/android/app/admin/FreezePeriod.html#getEnd())
        ///
        /// Required features: "java-time-MonthDay"
        #[cfg(any(feature = "all", all(feature = "java-time-MonthDay")))]
        pub fn getEnd<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::MonthDay>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/admin/FreezePeriod", java.flags == PUBLIC, .name == "getEnd", .descriptor == "()Ljava/time/MonthDay;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/admin/FreezePeriod\0", "getEnd\0", "()Ljava/time/MonthDay;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/app/admin/FreezePeriod.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/admin/FreezePeriod", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/admin/FreezePeriod\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
