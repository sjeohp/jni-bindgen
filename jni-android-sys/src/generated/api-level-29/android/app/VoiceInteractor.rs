// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-VoiceInteractor"))]
__jni_bindgen! {
    /// public final class [VoiceInteractor](https://developer.android.com/reference/android/app/VoiceInteractor.html)
    ///
    /// Required feature: android-app-VoiceInteractor
    public final class VoiceInteractor ("android/app/VoiceInteractor") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [VoiceInteractor](https://developer.android.com/reference/android/app/VoiceInteractor.html#VoiceInteractor())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::VoiceInteractor>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/VoiceInteractor", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [submitRequest](https://developer.android.com/reference/android/app/VoiceInteractor.html#submitRequest(android.app.VoiceInteractor.Request))
        ///
        /// Required features: "android-app-VoiceInteractor_Request"
        #[cfg(any(feature = "all", all(feature = "android-app-VoiceInteractor_Request")))]
        pub fn submitRequest_Request<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::VoiceInteractor_Request>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "submitRequest", .descriptor == "(Landroid/app/VoiceInteractor$Request;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "submitRequest\0", "(Landroid/app/VoiceInteractor$Request;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [submitRequest](https://developer.android.com/reference/android/app/VoiceInteractor.html#submitRequest(android.app.VoiceInteractor.Request,%20java.lang.String))
        ///
        /// Required features: "android-app-VoiceInteractor_Request", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-VoiceInteractor_Request", feature = "java-lang-String")))]
        pub fn submitRequest_Request_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::VoiceInteractor_Request>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "submitRequest", .descriptor == "(Landroid/app/VoiceInteractor$Request;Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "submitRequest\0", "(Landroid/app/VoiceInteractor$Request;Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActiveRequests](https://developer.android.com/reference/android/app/VoiceInteractor.html#getActiveRequests())
        ///
        /// Required features: "android-app-VoiceInteractor_Request"
        #[cfg(any(feature = "all", all(feature = "android-app-VoiceInteractor_Request")))]
        pub fn getActiveRequests<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::app::VoiceInteractor_Request, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "getActiveRequests", .descriptor == "()[Landroid/app/VoiceInteractor$Request;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "getActiveRequests\0", "()[Landroid/app/VoiceInteractor$Request;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActiveRequest](https://developer.android.com/reference/android/app/VoiceInteractor.html#getActiveRequest(java.lang.String))
        ///
        /// Required features: "android-app-VoiceInteractor_Request", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-VoiceInteractor_Request", feature = "java-lang-String")))]
        pub fn getActiveRequest<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::VoiceInteractor_Request>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "getActiveRequest", .descriptor == "(Ljava/lang/String;)Landroid/app/VoiceInteractor$Request;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "getActiveRequest\0", "(Ljava/lang/String;)Landroid/app/VoiceInteractor$Request;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsCommands](https://developer.android.com/reference/android/app/VoiceInteractor.html#supportsCommands(java.lang.String%5B%5D))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn supportsCommands<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::BooleanArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "supportsCommands", .descriptor == "([Ljava/lang/String;)[Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "supportsCommands\0", "([Ljava/lang/String;)[Z\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDestroyed](https://developer.android.com/reference/android/app/VoiceInteractor.html#isDestroyed())
        pub fn isDestroyed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "isDestroyed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "isDestroyed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [registerOnDestroyedCallback](https://developer.android.com/reference/android/app/VoiceInteractor.html#registerOnDestroyedCallback(java.util.concurrent.Executor,%20java.lang.Runnable))
        ///
        /// Required features: "java-lang-Runnable", "java-util-concurrent-Executor"
        #[cfg(any(feature = "all", all(feature = "java-lang-Runnable", feature = "java-util-concurrent-Executor")))]
        pub fn registerOnDestroyedCallback<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::Executor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Runnable>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "registerOnDestroyedCallback", .descriptor == "(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "registerOnDestroyedCallback\0", "(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unregisterOnDestroyedCallback](https://developer.android.com/reference/android/app/VoiceInteractor.html#unregisterOnDestroyedCallback(java.lang.Runnable))
        ///
        /// Required features: "java-lang-Runnable"
        #[cfg(any(feature = "all", all(feature = "java-lang-Runnable")))]
        pub fn unregisterOnDestroyedCallback<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Runnable>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "unregisterOnDestroyedCallback", .descriptor == "(Ljava/lang/Runnable;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "unregisterOnDestroyedCallback\0", "(Ljava/lang/Runnable;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [notifyDirectActionsChanged](https://developer.android.com/reference/android/app/VoiceInteractor.html#notifyDirectActionsChanged())
        pub fn notifyDirectActionsChanged<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/VoiceInteractor", java.flags == PUBLIC, .name == "notifyDirectActionsChanged", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/VoiceInteractor\0", "notifyDirectActionsChanged\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
