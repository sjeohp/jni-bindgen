// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-RemoteInput_Builder"))]
__jni_bindgen! {
    /// public final class [RemoteInput.Builder](https://developer.android.com/reference/android/app/RemoteInput.Builder.html)
    ///
    /// Required feature: android-app-RemoteInput_Builder
    public final class RemoteInput_Builder ("android/app/RemoteInput$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#Builder(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::RemoteInput_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLabel](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#setLabel(java.lang.CharSequence))
        ///
        /// Required features: "android-app-RemoteInput_Builder", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput_Builder", feature = "java-lang-CharSequence")))]
        pub fn setLabel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::RemoteInput_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "setLabel", .descriptor == "(Ljava/lang/CharSequence;)Landroid/app/RemoteInput$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "setLabel\0", "(Ljava/lang/CharSequence;)Landroid/app/RemoteInput$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setChoices](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#setChoices(java.lang.CharSequence%5B%5D))
        ///
        /// Required features: "android-app-RemoteInput_Builder", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput_Builder", feature = "java-lang-CharSequence")))]
        pub fn setChoices<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::CharSequence, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::RemoteInput_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "setChoices", .descriptor == "([Ljava/lang/CharSequence;)Landroid/app/RemoteInput$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "setChoices\0", "([Ljava/lang/CharSequence;)Landroid/app/RemoteInput$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAllowDataType](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#setAllowDataType(java.lang.String,%20boolean))
        ///
        /// Required features: "android-app-RemoteInput_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput_Builder", feature = "java-lang-String")))]
        pub fn setAllowDataType<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::RemoteInput_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "setAllowDataType", .descriptor == "(Ljava/lang/String;Z)Landroid/app/RemoteInput$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "setAllowDataType\0", "(Ljava/lang/String;Z)Landroid/app/RemoteInput$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAllowFreeFormInput](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#setAllowFreeFormInput(boolean))
        ///
        /// Required features: "android-app-RemoteInput_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput_Builder")))]
        pub fn setAllowFreeFormInput<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::RemoteInput_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "setAllowFreeFormInput", .descriptor == "(Z)Landroid/app/RemoteInput$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "setAllowFreeFormInput\0", "(Z)Landroid/app/RemoteInput$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEditChoicesBeforeSending](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#setEditChoicesBeforeSending(int))
        ///
        /// Required features: "android-app-RemoteInput_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput_Builder")))]
        pub fn setEditChoicesBeforeSending<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::RemoteInput_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "setEditChoicesBeforeSending", .descriptor == "(I)Landroid/app/RemoteInput$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "setEditChoicesBeforeSending\0", "(I)Landroid/app/RemoteInput$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addExtras](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#addExtras(android.os.Bundle))
        ///
        /// Required features: "android-app-RemoteInput_Builder", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput_Builder", feature = "android-os-Bundle")))]
        pub fn addExtras<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::RemoteInput_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "addExtras", .descriptor == "(Landroid/os/Bundle;)Landroid/app/RemoteInput$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "addExtras\0", "(Landroid/os/Bundle;)Landroid/app/RemoteInput$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtras](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#getExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "getExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "getExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/app/RemoteInput.Builder.html#build())
        ///
        /// Required features: "android-app-RemoteInput"
        #[cfg(any(feature = "all", all(feature = "android-app-RemoteInput")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::RemoteInput>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/RemoteInput$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/app/RemoteInput;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/RemoteInput$Builder\0", "build\0", "()Landroid/app/RemoteInput;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
