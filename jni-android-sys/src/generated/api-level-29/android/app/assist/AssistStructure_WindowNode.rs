// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-assist-AssistStructure_WindowNode"))]
__jni_bindgen! {
    /// public class [AssistStructure.WindowNode](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html)
    ///
    /// Required feature: android-app-assist-AssistStructure_WindowNode
    public class AssistStructure_WindowNode ("android/app/assist/AssistStructure$WindowNode") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [WindowNode](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html#WindowNode())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::assist::AssistStructure_WindowNode>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/assist/AssistStructure$WindowNode", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/assist/AssistStructure$WindowNode\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getLeft](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html#getLeft())
        pub fn getLeft<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/assist/AssistStructure$WindowNode", java.flags == PUBLIC, .name == "getLeft", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/assist/AssistStructure$WindowNode\0", "getLeft\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTop](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html#getTop())
        pub fn getTop<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/assist/AssistStructure$WindowNode", java.flags == PUBLIC, .name == "getTop", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/assist/AssistStructure$WindowNode\0", "getTop\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWidth](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html#getWidth())
        pub fn getWidth<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/assist/AssistStructure$WindowNode", java.flags == PUBLIC, .name == "getWidth", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/assist/AssistStructure$WindowNode\0", "getWidth\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHeight](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html#getHeight())
        pub fn getHeight<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/assist/AssistStructure$WindowNode", java.flags == PUBLIC, .name == "getHeight", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/assist/AssistStructure$WindowNode\0", "getHeight\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTitle](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html#getTitle())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getTitle<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/assist/AssistStructure$WindowNode", java.flags == PUBLIC, .name == "getTitle", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/assist/AssistStructure$WindowNode\0", "getTitle\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayId](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html#getDisplayId())
        pub fn getDisplayId<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/assist/AssistStructure$WindowNode", java.flags == PUBLIC, .name == "getDisplayId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/assist/AssistStructure$WindowNode\0", "getDisplayId\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRootViewNode](https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html#getRootViewNode())
        ///
        /// Required features: "android-app-assist-AssistStructure_ViewNode"
        #[cfg(any(feature = "all", all(feature = "android-app-assist-AssistStructure_ViewNode")))]
        pub fn getRootViewNode<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::assist::AssistStructure_ViewNode>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/assist/AssistStructure$WindowNode", java.flags == PUBLIC, .name == "getRootViewNode", .descriptor == "()Landroid/app/assist/AssistStructure$ViewNode;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/assist/AssistStructure$WindowNode\0", "getRootViewNode\0", "()Landroid/app/assist/AssistStructure$ViewNode;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
