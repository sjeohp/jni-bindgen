// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-SharedElementCallback"))]
__jni_bindgen! {
    /// public class [SharedElementCallback](https://developer.android.com/reference/android/app/SharedElementCallback.html)
    ///
    /// Required feature: android-app-SharedElementCallback
    public class SharedElementCallback ("android/app/SharedElementCallback") extends crate::java::lang::Object {

        /// [SharedElementCallback](https://developer.android.com/reference/android/app/SharedElementCallback.html#SharedElementCallback())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::SharedElementCallback>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/SharedElementCallback", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/SharedElementCallback\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSharedElementStart](https://developer.android.com/reference/android/app/SharedElementCallback.html#onSharedElementStart(java.util.List,%20java.util.List,%20java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn onSharedElementStart<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/SharedElementCallback", java.flags == PUBLIC, .name == "onSharedElementStart", .descriptor == "(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/SharedElementCallback\0", "onSharedElementStart\0", "(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSharedElementEnd](https://developer.android.com/reference/android/app/SharedElementCallback.html#onSharedElementEnd(java.util.List,%20java.util.List,%20java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn onSharedElementEnd<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/SharedElementCallback", java.flags == PUBLIC, .name == "onSharedElementEnd", .descriptor == "(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/SharedElementCallback\0", "onSharedElementEnd\0", "(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRejectSharedElements](https://developer.android.com/reference/android/app/SharedElementCallback.html#onRejectSharedElements(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn onRejectSharedElements<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/SharedElementCallback", java.flags == PUBLIC, .name == "onRejectSharedElements", .descriptor == "(Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/SharedElementCallback\0", "onRejectSharedElements\0", "(Ljava/util/List;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onMapSharedElements](https://developer.android.com/reference/android/app/SharedElementCallback.html#onMapSharedElements(java.util.List,%20java.util.Map))
        ///
        /// Required features: "java-util-List", "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-List", feature = "java-util-Map")))]
        pub fn onMapSharedElements<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/SharedElementCallback", java.flags == PUBLIC, .name == "onMapSharedElements", .descriptor == "(Ljava/util/List;Ljava/util/Map;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/SharedElementCallback\0", "onMapSharedElements\0", "(Ljava/util/List;Ljava/util/Map;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCaptureSharedElementSnapshot](https://developer.android.com/reference/android/app/SharedElementCallback.html#onCaptureSharedElementSnapshot(android.view.View,%20android.graphics.Matrix,%20android.graphics.RectF))
        ///
        /// Required features: "android-graphics-Matrix", "android-graphics-RectF", "android-os-Parcelable", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Matrix", feature = "android-graphics-RectF", feature = "android-os-Parcelable", feature = "android-view-View")))]
        pub fn onCaptureSharedElementSnapshot<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Matrix>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::RectF>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/SharedElementCallback", java.flags == PUBLIC, .name == "onCaptureSharedElementSnapshot", .descriptor == "(Landroid/view/View;Landroid/graphics/Matrix;Landroid/graphics/RectF;)Landroid/os/Parcelable;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/SharedElementCallback\0", "onCaptureSharedElementSnapshot\0", "(Landroid/view/View;Landroid/graphics/Matrix;Landroid/graphics/RectF;)Landroid/os/Parcelable;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCreateSnapshotView](https://developer.android.com/reference/android/app/SharedElementCallback.html#onCreateSnapshotView(android.content.Context,%20android.os.Parcelable))
        ///
        /// Required features: "android-content-Context", "android-os-Parcelable", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-os-Parcelable", feature = "android-view-View")))]
        pub fn onCreateSnapshotView<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcelable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::View>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/SharedElementCallback", java.flags == PUBLIC, .name == "onCreateSnapshotView", .descriptor == "(Landroid/content/Context;Landroid/os/Parcelable;)Landroid/view/View;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/SharedElementCallback\0", "onCreateSnapshotView\0", "(Landroid/content/Context;Landroid/os/Parcelable;)Landroid/view/View;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onSharedElementsArrived](https://developer.android.com/reference/android/app/SharedElementCallback.html#onSharedElementsArrived(java.util.List,%20java.util.List,%20android.app.SharedElementCallback.OnSharedElementsReadyListener))
        ///
        /// Required features: "android-app-SharedElementCallback_OnSharedElementsReadyListener", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "android-app-SharedElementCallback_OnSharedElementsReadyListener", feature = "java-util-List")))]
        pub fn onSharedElementsArrived<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::SharedElementCallback_OnSharedElementsReadyListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/SharedElementCallback", java.flags == PUBLIC, .name == "onSharedElementsArrived", .descriptor == "(Ljava/util/List;Ljava/util/List;Landroid/app/SharedElementCallback$OnSharedElementsReadyListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/SharedElementCallback\0", "onSharedElementsArrived\0", "(Ljava/util/List;Ljava/util/List;Landroid/app/SharedElementCallback$OnSharedElementsReadyListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
