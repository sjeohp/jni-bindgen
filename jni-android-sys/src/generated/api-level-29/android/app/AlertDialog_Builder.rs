// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-AlertDialog_Builder"))]
__jni_bindgen! {
    /// public class [AlertDialog.Builder](https://developer.android.com/reference/android/app/AlertDialog.Builder.html)
    ///
    /// Required feature: android-app-AlertDialog_Builder
    public class AlertDialog_Builder ("android/app/AlertDialog$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#Builder(android.content.Context))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        pub fn new_Context<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "<init>\0", "(Landroid/content/Context;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#Builder(android.content.Context,%20int))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        pub fn new_Context_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "<init>\0", "(Landroid/content/Context;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContext](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#getContext())
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        pub fn getContext<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Context>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "getContext", .descriptor == "()Landroid/content/Context;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "getContext\0", "()Landroid/content/Context;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTitle](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setTitle(int))
        ///
        /// Required features: "android-app-AlertDialog_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder")))]
        pub fn setTitle_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setTitle", .descriptor == "(I)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setTitle\0", "(I)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTitle](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setTitle(java.lang.CharSequence))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "java-lang-CharSequence")))]
        pub fn setTitle_CharSequence<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setTitle", .descriptor == "(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setTitle\0", "(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCustomTitle](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setCustomTitle(android.view.View))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-view-View")))]
        pub fn setCustomTitle<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setCustomTitle", .descriptor == "(Landroid/view/View;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setCustomTitle\0", "(Landroid/view/View;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMessage](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setMessage(int))
        ///
        /// Required features: "android-app-AlertDialog_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder")))]
        pub fn setMessage_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setMessage", .descriptor == "(I)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setMessage\0", "(I)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMessage](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setMessage(java.lang.CharSequence))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "java-lang-CharSequence")))]
        pub fn setMessage_CharSequence<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setMessage", .descriptor == "(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setMessage\0", "(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIcon](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setIcon(int))
        ///
        /// Required features: "android-app-AlertDialog_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder")))]
        pub fn setIcon_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setIcon", .descriptor == "(I)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setIcon\0", "(I)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIcon](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setIcon(android.graphics.drawable.Drawable))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-graphics-drawable-Drawable"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-graphics-drawable-Drawable")))]
        pub fn setIcon_Drawable<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::drawable::Drawable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setIcon", .descriptor == "(Landroid/graphics/drawable/Drawable;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setIcon\0", "(Landroid/graphics/drawable/Drawable;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIconAttribute](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setIconAttribute(int))
        ///
        /// Required features: "android-app-AlertDialog_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder")))]
        pub fn setIconAttribute<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setIconAttribute", .descriptor == "(I)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setIconAttribute\0", "(I)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPositiveButton](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setPositiveButton(int,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener")))]
        pub fn setPositiveButton_int_OnClickListener<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setPositiveButton", .descriptor == "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setPositiveButton\0", "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPositiveButton](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setPositiveButton(java.lang.CharSequence,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "java-lang-CharSequence")))]
        pub fn setPositiveButton_CharSequence_OnClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setPositiveButton", .descriptor == "(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setPositiveButton\0", "(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNegativeButton](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setNegativeButton(int,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener")))]
        pub fn setNegativeButton_int_OnClickListener<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setNegativeButton", .descriptor == "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setNegativeButton\0", "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNegativeButton](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setNegativeButton(java.lang.CharSequence,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "java-lang-CharSequence")))]
        pub fn setNegativeButton_CharSequence_OnClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setNegativeButton", .descriptor == "(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setNegativeButton\0", "(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNeutralButton](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setNeutralButton(int,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener")))]
        pub fn setNeutralButton_int_OnClickListener<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setNeutralButton", .descriptor == "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setNeutralButton\0", "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNeutralButton](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setNeutralButton(java.lang.CharSequence,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "java-lang-CharSequence")))]
        pub fn setNeutralButton_CharSequence_OnClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setNeutralButton", .descriptor == "(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setNeutralButton\0", "(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCancelable](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setCancelable(boolean))
        ///
        /// Required features: "android-app-AlertDialog_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder")))]
        pub fn setCancelable<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setCancelable", .descriptor == "(Z)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setCancelable\0", "(Z)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOnCancelListener](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnCancelListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnCancelListener")))]
        pub fn setOnCancelListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnCancelListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setOnCancelListener", .descriptor == "(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setOnCancelListener\0", "(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOnDismissListener](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnDismissListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnDismissListener")))]
        pub fn setOnDismissListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnDismissListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setOnDismissListener", .descriptor == "(Landroid/content/DialogInterface$OnDismissListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setOnDismissListener\0", "(Landroid/content/DialogInterface$OnDismissListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOnKeyListener](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnKeyListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnKeyListener")))]
        pub fn setOnKeyListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnKeyListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setOnKeyListener", .descriptor == "(Landroid/content/DialogInterface$OnKeyListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setOnKeyListener\0", "(Landroid/content/DialogInterface$OnKeyListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setItems(int,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener")))]
        pub fn setItems_int_OnClickListener<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setItems", .descriptor == "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setItems\0", "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setItems(java.lang.CharSequence%5B%5D,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "java-lang-CharSequence")))]
        pub fn setItems_CharSequence_array_OnClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::CharSequence, crate::java::lang::Throwable>>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setItems", .descriptor == "([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setItems\0", "([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAdapter](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setAdapter(android.widget.ListAdapter,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "android-widget-ListAdapter"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "android-widget-ListAdapter")))]
        pub fn setAdapter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::ListAdapter>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setAdapter", .descriptor == "(Landroid/widget/ListAdapter;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setAdapter\0", "(Landroid/widget/ListAdapter;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCursor](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setCursor(android.database.Cursor,%20android.content.DialogInterface.OnClickListener,%20java.lang.String))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "android-database-Cursor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "android-database-Cursor", feature = "java-lang-String")))]
        pub fn setCursor<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setCursor", .descriptor == "(Landroid/database/Cursor;Landroid/content/DialogInterface$OnClickListener;Ljava/lang/String;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setCursor\0", "(Landroid/database/Cursor;Landroid/content/DialogInterface$OnClickListener;Ljava/lang/String;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMultiChoiceItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setMultiChoiceItems(int,%20bool%5B%5D,%20android.content.DialogInterface.OnMultiChoiceClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnMultiChoiceClickListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnMultiChoiceClickListener")))]
        pub fn setMultiChoiceItems_int_boolean_array_OnMultiChoiceClickListener<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::BooleanArray>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnMultiChoiceClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setMultiChoiceItems", .descriptor == "(I[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setMultiChoiceItems\0", "(I[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMultiChoiceItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setMultiChoiceItems(java.lang.CharSequence%5B%5D,%20bool%5B%5D,%20android.content.DialogInterface.OnMultiChoiceClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnMultiChoiceClickListener", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnMultiChoiceClickListener", feature = "java-lang-CharSequence")))]
        pub fn setMultiChoiceItems_CharSequence_array_boolean_array_OnMultiChoiceClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::CharSequence, crate::java::lang::Throwable>>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::BooleanArray>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnMultiChoiceClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setMultiChoiceItems", .descriptor == "([Ljava/lang/CharSequence;[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setMultiChoiceItems\0", "([Ljava/lang/CharSequence;[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMultiChoiceItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setMultiChoiceItems(android.database.Cursor,%20java.lang.String,%20java.lang.String,%20android.content.DialogInterface.OnMultiChoiceClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnMultiChoiceClickListener", "android-database-Cursor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnMultiChoiceClickListener", feature = "android-database-Cursor", feature = "java-lang-String")))]
        pub fn setMultiChoiceItems_Cursor_String_String_OnMultiChoiceClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnMultiChoiceClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setMultiChoiceItems", .descriptor == "(Landroid/database/Cursor;Ljava/lang/String;Ljava/lang/String;Landroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setMultiChoiceItems\0", "(Landroid/database/Cursor;Ljava/lang/String;Ljava/lang/String;Landroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSingleChoiceItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(int,%20int,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener")))]
        pub fn setSingleChoiceItems_int_int_OnClickListener<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setSingleChoiceItems", .descriptor == "(IILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setSingleChoiceItems\0", "(IILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSingleChoiceItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(android.database.Cursor,%20int,%20java.lang.String,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "android-database-Cursor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "android-database-Cursor", feature = "java-lang-String")))]
        pub fn setSingleChoiceItems_Cursor_int_String_OnClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::database::Cursor>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setSingleChoiceItems", .descriptor == "(Landroid/database/Cursor;ILjava/lang/String;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setSingleChoiceItems\0", "(Landroid/database/Cursor;ILjava/lang/String;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSingleChoiceItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(java.lang.CharSequence%5B%5D,%20int,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "java-lang-CharSequence")))]
        pub fn setSingleChoiceItems_CharSequence_array_int_OnClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::CharSequence, crate::java::lang::Throwable>>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setSingleChoiceItems", .descriptor == "([Ljava/lang/CharSequence;ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setSingleChoiceItems\0", "([Ljava/lang/CharSequence;ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSingleChoiceItems](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(android.widget.ListAdapter,%20int,%20android.content.DialogInterface.OnClickListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-content-DialogInterface_OnClickListener", "android-widget-ListAdapter"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-content-DialogInterface_OnClickListener", feature = "android-widget-ListAdapter")))]
        pub fn setSingleChoiceItems_ListAdapter_int_OnClickListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::ListAdapter>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::DialogInterface_OnClickListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setSingleChoiceItems", .descriptor == "(Landroid/widget/ListAdapter;ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setSingleChoiceItems\0", "(Landroid/widget/ListAdapter;ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOnItemSelectedListener](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-widget-AdapterView_OnItemSelectedListener"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-widget-AdapterView_OnItemSelectedListener")))]
        pub fn setOnItemSelectedListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::AdapterView_OnItemSelectedListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setOnItemSelectedListener", .descriptor == "(Landroid/widget/AdapterView$OnItemSelectedListener;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setOnItemSelectedListener\0", "(Landroid/widget/AdapterView$OnItemSelectedListener;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setView](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setView(int))
        ///
        /// Required features: "android-app-AlertDialog_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder")))]
        pub fn setView_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setView", .descriptor == "(I)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setView\0", "(I)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setView](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setView(android.view.View))
        ///
        /// Required features: "android-app-AlertDialog_Builder", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder", feature = "android-view-View")))]
        pub fn setView_View<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setView", .descriptor == "(Landroid/view/View;)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setView\0", "(Landroid/view/View;)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setInverseBackgroundForced](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#setInverseBackgroundForced(boolean))
        ///
        /// Required features: "android-app-AlertDialog_Builder"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog_Builder")))]
        #[deprecated] pub fn setInverseBackgroundForced<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "setInverseBackgroundForced", .descriptor == "(Z)Landroid/app/AlertDialog$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "setInverseBackgroundForced\0", "(Z)Landroid/app/AlertDialog$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [create](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#create())
        ///
        /// Required features: "android-app-AlertDialog"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog")))]
        pub fn create<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "create", .descriptor == "()Landroid/app/AlertDialog;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "create\0", "()Landroid/app/AlertDialog;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [show](https://developer.android.com/reference/android/app/AlertDialog.Builder.html#show())
        ///
        /// Required features: "android-app-AlertDialog"
        #[cfg(any(feature = "all", all(feature = "android-app-AlertDialog")))]
        pub fn show<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::AlertDialog>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AlertDialog$Builder", java.flags == PUBLIC, .name == "show", .descriptor == "()Landroid/app/AlertDialog;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AlertDialog$Builder\0", "show\0", "()Landroid/app/AlertDialog;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
