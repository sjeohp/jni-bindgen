// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-usage-UsageStatsManager"))]
__jni_bindgen! {
    /// public final class [UsageStatsManager](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html)
    ///
    /// Required feature: android-app-usage-UsageStatsManager
    public final class UsageStatsManager ("android/app/usage/UsageStatsManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [UsageStatsManager](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#UsageStatsManager())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::usage::UsageStatsManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/usage/UsageStatsManager", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [queryUsageStats](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#queryUsageStats(int,%20long,%20long))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn queryUsageStats<'env>(&'env self, arg0: i32, arg1: i64, arg2: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/usage/UsageStatsManager", java.flags == PUBLIC, .name == "queryUsageStats", .descriptor == "(IJJ)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "queryUsageStats\0", "(IJJ)Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryConfigurations](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#queryConfigurations(int,%20long,%20long))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn queryConfigurations<'env>(&'env self, arg0: i32, arg1: i64, arg2: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/usage/UsageStatsManager", java.flags == PUBLIC, .name == "queryConfigurations", .descriptor == "(IJJ)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "queryConfigurations\0", "(IJJ)Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryEventStats](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#queryEventStats(int,%20long,%20long))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn queryEventStats<'env>(&'env self, arg0: i32, arg1: i64, arg2: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/usage/UsageStatsManager", java.flags == PUBLIC, .name == "queryEventStats", .descriptor == "(IJJ)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "queryEventStats\0", "(IJJ)Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryEvents](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#queryEvents(long,%20long))
        ///
        /// Required features: "android-app-usage-UsageEvents"
        #[cfg(any(feature = "all", all(feature = "android-app-usage-UsageEvents")))]
        pub fn queryEvents<'env>(&'env self, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::usage::UsageEvents>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/usage/UsageStatsManager", java.flags == PUBLIC, .name == "queryEvents", .descriptor == "(JJ)Landroid/app/usage/UsageEvents;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "queryEvents\0", "(JJ)Landroid/app/usage/UsageEvents;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryEventsForSelf](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#queryEventsForSelf(long,%20long))
        ///
        /// Required features: "android-app-usage-UsageEvents"
        #[cfg(any(feature = "all", all(feature = "android-app-usage-UsageEvents")))]
        pub fn queryEventsForSelf<'env>(&'env self, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::usage::UsageEvents>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/usage/UsageStatsManager", java.flags == PUBLIC, .name == "queryEventsForSelf", .descriptor == "(JJ)Landroid/app/usage/UsageEvents;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "queryEventsForSelf\0", "(JJ)Landroid/app/usage/UsageEvents;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryAndAggregateUsageStats](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#queryAndAggregateUsageStats(long,%20long))
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn queryAndAggregateUsageStats<'env>(&'env self, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/usage/UsageStatsManager", java.flags == PUBLIC, .name == "queryAndAggregateUsageStats", .descriptor == "(JJ)Ljava/util/Map;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "queryAndAggregateUsageStats\0", "(JJ)Ljava/util/Map;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isAppInactive](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#isAppInactive(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isAppInactive<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/usage/UsageStatsManager", java.flags == PUBLIC, .name == "isAppInactive", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "isAppInactive\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAppStandbyBucket](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#getAppStandbyBucket())
        pub fn getAppStandbyBucket<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/usage/UsageStatsManager", java.flags == PUBLIC, .name == "getAppStandbyBucket", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/usage/UsageStatsManager\0", "getAppStandbyBucket\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [INTERVAL_BEST](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#INTERVAL_BEST)
        pub const INTERVAL_BEST : i32 = 4;

        /// public static final [INTERVAL_DAILY](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#INTERVAL_DAILY)
        pub const INTERVAL_DAILY : i32 = 0;

        /// public static final [INTERVAL_MONTHLY](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#INTERVAL_MONTHLY)
        pub const INTERVAL_MONTHLY : i32 = 2;

        /// public static final [INTERVAL_WEEKLY](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#INTERVAL_WEEKLY)
        pub const INTERVAL_WEEKLY : i32 = 1;

        /// public static final [INTERVAL_YEARLY](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#INTERVAL_YEARLY)
        pub const INTERVAL_YEARLY : i32 = 3;

        /// public static final [STANDBY_BUCKET_ACTIVE](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#STANDBY_BUCKET_ACTIVE)
        pub const STANDBY_BUCKET_ACTIVE : i32 = 10;

        /// public static final [STANDBY_BUCKET_FREQUENT](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#STANDBY_BUCKET_FREQUENT)
        pub const STANDBY_BUCKET_FREQUENT : i32 = 30;

        /// public static final [STANDBY_BUCKET_RARE](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#STANDBY_BUCKET_RARE)
        pub const STANDBY_BUCKET_RARE : i32 = 40;

        /// public static final [STANDBY_BUCKET_WORKING_SET](https://developer.android.com/reference/android/app/usage/UsageStatsManager.html#STANDBY_BUCKET_WORKING_SET)
        pub const STANDBY_BUCKET_WORKING_SET : i32 = 20;
    }
}
