// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-FragmentManager_FragmentLifecycleCallbacks"))]
__jni_bindgen! {
    /// public class [FragmentManager.FragmentLifecycleCallbacks](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html)
    ///
    /// Required feature: android-app-FragmentManager_FragmentLifecycleCallbacks
    #[deprecated] public class FragmentManager_FragmentLifecycleCallbacks ("android/app/FragmentManager$FragmentLifecycleCallbacks") extends crate::java::lang::Object {

        /// [FragmentLifecycleCallbacks](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#FragmentLifecycleCallbacks())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::FragmentManager_FragmentLifecycleCallbacks>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentPreAttached](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentPreAttached(android.app.FragmentManager,%20android.app.Fragment,%20android.content.Context))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager", "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager", feature = "android-content-Context")))]
        #[deprecated] pub fn onFragmentPreAttached<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentPreAttached", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/content/Context;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentPreAttached\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/content/Context;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentAttached](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentAttached(android.app.FragmentManager,%20android.app.Fragment,%20android.content.Context))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager", "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager", feature = "android-content-Context")))]
        #[deprecated] pub fn onFragmentAttached<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentAttached", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/content/Context;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentAttached\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/content/Context;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentPreCreated](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentPreCreated(android.app.FragmentManager,%20android.app.Fragment,%20android.os.Bundle))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager", feature = "android-os-Bundle")))]
        #[deprecated] pub fn onFragmentPreCreated<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentPreCreated", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentPreCreated\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentCreated](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentCreated(android.app.FragmentManager,%20android.app.Fragment,%20android.os.Bundle))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager", feature = "android-os-Bundle")))]
        #[deprecated] pub fn onFragmentCreated<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentCreated", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentCreated\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentActivityCreated](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentActivityCreated(android.app.FragmentManager,%20android.app.Fragment,%20android.os.Bundle))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager", feature = "android-os-Bundle")))]
        #[deprecated] pub fn onFragmentActivityCreated<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentActivityCreated", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentActivityCreated\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentViewCreated](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentViewCreated(android.app.FragmentManager,%20android.app.Fragment,%20android.view.View,%20android.os.Bundle))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager", "android-os-Bundle", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager", feature = "android-os-Bundle", feature = "android-view-View")))]
        #[deprecated] pub fn onFragmentViewCreated<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentViewCreated", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/view/View;Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentViewCreated\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/view/View;Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentStarted](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentStarted(android.app.FragmentManager,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager")))]
        #[deprecated] pub fn onFragmentStarted<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentStarted", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentStarted\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentResumed](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentResumed(android.app.FragmentManager,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager")))]
        #[deprecated] pub fn onFragmentResumed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentResumed", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentResumed\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentPaused](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentPaused(android.app.FragmentManager,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager")))]
        #[deprecated] pub fn onFragmentPaused<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentPaused", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentPaused\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentStopped](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentStopped(android.app.FragmentManager,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager")))]
        #[deprecated] pub fn onFragmentStopped<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentStopped", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentStopped\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentSaveInstanceState](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentSaveInstanceState(android.app.FragmentManager,%20android.app.Fragment,%20android.os.Bundle))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager", feature = "android-os-Bundle")))]
        #[deprecated] pub fn onFragmentSaveInstanceState<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentSaveInstanceState", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentSaveInstanceState\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentViewDestroyed](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentViewDestroyed(android.app.FragmentManager,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager")))]
        #[deprecated] pub fn onFragmentViewDestroyed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentViewDestroyed", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentViewDestroyed\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentDestroyed](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentDestroyed(android.app.FragmentManager,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager")))]
        #[deprecated] pub fn onFragmentDestroyed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentDestroyed", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentDestroyed\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFragmentDetached](https://developer.android.com/reference/android/app/FragmentManager.FragmentLifecycleCallbacks.html#onFragmentDetached(android.app.FragmentManager,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentManager"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentManager")))]
        #[deprecated] pub fn onFragmentDetached<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::FragmentManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentManager$FragmentLifecycleCallbacks", java.flags == PUBLIC, .name == "onFragmentDetached", .descriptor == "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentManager$FragmentLifecycleCallbacks\0", "onFragmentDetached\0", "(Landroid/app/FragmentManager;Landroid/app/Fragment;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
