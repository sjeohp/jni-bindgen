// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-backup-BackupManager"))]
__jni_bindgen! {
    /// public class [BackupManager](https://developer.android.com/reference/android/app/backup/BackupManager.html)
    ///
    /// Required feature: android-app-backup-BackupManager
    public class BackupManager ("android/app/backup/BackupManager") extends crate::java::lang::Object {

        /// [BackupManager](https://developer.android.com/reference/android/app/backup/BackupManager.html#BackupManager(android.content.Context))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::backup::BackupManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupManager", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupManager\0", "<init>\0", "(Landroid/content/Context;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dataChanged](https://developer.android.com/reference/android/app/backup/BackupManager.html#dataChanged())
        pub fn dataChanged<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupManager", java.flags == PUBLIC, .name == "dataChanged", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupManager\0", "dataChanged\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dataChanged](https://developer.android.com/reference/android/app/backup/BackupManager.html#dataChanged(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn dataChanged_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupManager", java.flags == PUBLIC | STATIC, .name == "dataChanged", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/app/backup/BackupManager\0", "dataChanged\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [requestRestore](https://developer.android.com/reference/android/app/backup/BackupManager.html#requestRestore(android.app.backup.RestoreObserver))
        ///
        /// Required features: "android-app-backup-RestoreObserver"
        #[cfg(any(feature = "all", all(feature = "android-app-backup-RestoreObserver")))]
        #[deprecated] pub fn requestRestore<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::backup::RestoreObserver>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupManager", java.flags == PUBLIC, .name == "requestRestore", .descriptor == "(Landroid/app/backup/RestoreObserver;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupManager\0", "requestRestore\0", "(Landroid/app/backup/RestoreObserver;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUserForAncestralSerialNumber](https://developer.android.com/reference/android/app/backup/BackupManager.html#getUserForAncestralSerialNumber(long))
        ///
        /// Required features: "android-os-UserHandle"
        #[cfg(any(feature = "all", all(feature = "android-os-UserHandle")))]
        pub fn getUserForAncestralSerialNumber<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::UserHandle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupManager", java.flags == PUBLIC, .name == "getUserForAncestralSerialNumber", .descriptor == "(J)Landroid/os/UserHandle;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupManager\0", "getUserForAncestralSerialNumber\0", "(J)Landroid/os/UserHandle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
