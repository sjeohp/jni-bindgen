// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-backup-BackupAgent"))]
__jni_bindgen! {
    /// public class [BackupAgent](https://developer.android.com/reference/android/app/backup/BackupAgent.html)
    ///
    /// Required feature: android-app-backup-BackupAgent
    public class BackupAgent ("android/app/backup/BackupAgent") extends crate::android::content::ContextWrapper {

        /// [BackupAgent](https://developer.android.com/reference/android/app/backup/BackupAgent.html#BackupAgent())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::backup::BackupAgent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCreate](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onCreate())
        pub fn onCreate<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC, .name == "onCreate", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onCreate\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDestroy](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onDestroy())
        pub fn onDestroy<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC, .name == "onDestroy", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onDestroy\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onBackup](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onBackup(android.os.ParcelFileDescriptor,%20android.app.backup.BackupDataOutput,%20android.os.ParcelFileDescriptor))
        ///
        /// Required features: "android-app-backup-BackupDataOutput", "android-os-ParcelFileDescriptor"
        #[cfg(any(feature = "all", all(feature = "android-app-backup-BackupDataOutput", feature = "android-os-ParcelFileDescriptor")))]
        pub fn onBackup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::backup::BackupDataOutput>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC | ABSTRACT, .name == "onBackup", .descriptor == "(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onBackup\0", "(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRestore](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onRestore(android.app.backup.BackupDataInput,%20int,%20android.os.ParcelFileDescriptor))
        ///
        /// Required features: "android-app-backup-BackupDataInput", "android-os-ParcelFileDescriptor"
        #[cfg(any(feature = "all", all(feature = "android-app-backup-BackupDataInput", feature = "android-os-ParcelFileDescriptor")))]
        pub fn onRestore_BackupDataInput_int_ParcelFileDescriptor<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::backup::BackupDataInput>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC | ABSTRACT, .name == "onRestore", .descriptor == "(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onRestore\0", "(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRestore](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onRestore(android.app.backup.BackupDataInput,%20long,%20android.os.ParcelFileDescriptor))
        ///
        /// Required features: "android-app-backup-BackupDataInput", "android-os-ParcelFileDescriptor"
        #[cfg(any(feature = "all", all(feature = "android-app-backup-BackupDataInput", feature = "android-os-ParcelFileDescriptor")))]
        pub fn onRestore_BackupDataInput_long_ParcelFileDescriptor<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::backup::BackupDataInput>>, arg1: i64, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC, .name == "onRestore", .descriptor == "(Landroid/app/backup/BackupDataInput;JLandroid/os/ParcelFileDescriptor;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onRestore\0", "(Landroid/app/backup/BackupDataInput;JLandroid/os/ParcelFileDescriptor;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onFullBackup](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onFullBackup(android.app.backup.FullBackupDataOutput))
        ///
        /// Required features: "android-app-backup-FullBackupDataOutput"
        #[cfg(any(feature = "all", all(feature = "android-app-backup-FullBackupDataOutput")))]
        pub fn onFullBackup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::backup::FullBackupDataOutput>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC, .name == "onFullBackup", .descriptor == "(Landroid/app/backup/FullBackupDataOutput;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onFullBackup\0", "(Landroid/app/backup/FullBackupDataOutput;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onQuotaExceeded](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onQuotaExceeded(long,%20long))
        pub fn onQuotaExceeded<'env>(&'env self, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC, .name == "onQuotaExceeded", .descriptor == "(JJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onQuotaExceeded\0", "(JJ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fullBackupFile](https://developer.android.com/reference/android/app/backup/BackupAgent.html#fullBackupFile(java.io.File,%20android.app.backup.FullBackupDataOutput))
        ///
        /// Required features: "android-app-backup-FullBackupDataOutput", "java-io-File"
        #[cfg(any(feature = "all", all(feature = "android-app-backup-FullBackupDataOutput", feature = "java-io-File")))]
        pub fn fullBackupFile<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::backup::FullBackupDataOutput>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC | FINAL, .name == "fullBackupFile", .descriptor == "(Ljava/io/File;Landroid/app/backup/FullBackupDataOutput;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "fullBackupFile\0", "(Ljava/io/File;Landroid/app/backup/FullBackupDataOutput;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRestoreFile](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onRestoreFile(android.os.ParcelFileDescriptor,%20long,%20java.io.File,%20int,%20long,%20long))
        ///
        /// Required features: "android-os-ParcelFileDescriptor", "java-io-File"
        #[cfg(any(feature = "all", all(feature = "android-os-ParcelFileDescriptor", feature = "java-io-File")))]
        pub fn onRestoreFile<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>, arg1: i64, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>, arg3: i32, arg4: i64, arg5: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC, .name == "onRestoreFile", .descriptor == "(Landroid/os/ParcelFileDescriptor;JLjava/io/File;IJJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onRestoreFile\0", "(Landroid/os/ParcelFileDescriptor;JLjava/io/File;IJJ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRestoreFinished](https://developer.android.com/reference/android/app/backup/BackupAgent.html#onRestoreFinished())
        pub fn onRestoreFinished<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupAgent", java.flags == PUBLIC, .name == "onRestoreFinished", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupAgent\0", "onRestoreFinished\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED](https://developer.android.com/reference/android/app/backup/BackupAgent.html#FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED)
        pub const FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED : i32 = 1;

        /// public static final [FLAG_DEVICE_TO_DEVICE_TRANSFER](https://developer.android.com/reference/android/app/backup/BackupAgent.html#FLAG_DEVICE_TO_DEVICE_TRANSFER)
        pub const FLAG_DEVICE_TO_DEVICE_TRANSFER : i32 = 2;

        /// public static final [TYPE_DIRECTORY](https://developer.android.com/reference/android/app/backup/BackupAgent.html#TYPE_DIRECTORY)
        pub const TYPE_DIRECTORY : i32 = 2;

        /// public static final [TYPE_FILE](https://developer.android.com/reference/android/app/backup/BackupAgent.html#TYPE_FILE)
        pub const TYPE_FILE : i32 = 1;
    }
}
