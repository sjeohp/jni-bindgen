// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-backup-BackupHelper"))]
__jni_bindgen! {
    /// public interface [BackupHelper](https://developer.android.com/reference/android/app/backup/BackupHelper.html)
    ///
    /// Required feature: android-app-backup-BackupHelper
    public interface BackupHelper ("android/app/backup/BackupHelper") extends crate::java::lang::Object {

        /// [performBackup](https://developer.android.com/reference/android/app/backup/BackupHelper.html#performBackup(android.os.ParcelFileDescriptor,%20android.app.backup.BackupDataOutput,%20android.os.ParcelFileDescriptor))
        ///
        /// Required features: "android-app-backup-BackupDataOutput", "android-os-ParcelFileDescriptor"
        #[cfg(any(feature = "all", all(feature = "android-app-backup-BackupDataOutput", feature = "android-os-ParcelFileDescriptor")))]
        pub fn performBackup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::backup::BackupDataOutput>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupHelper", java.flags == PUBLIC | ABSTRACT, .name == "performBackup", .descriptor == "(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupHelper\0", "performBackup\0", "(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [restoreEntity](https://developer.android.com/reference/android/app/backup/BackupHelper.html#restoreEntity(android.app.backup.BackupDataInputStream))
        ///
        /// Required features: "android-app-backup-BackupDataInputStream"
        #[cfg(any(feature = "all", all(feature = "android-app-backup-BackupDataInputStream")))]
        pub fn restoreEntity<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::backup::BackupDataInputStream>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupHelper", java.flags == PUBLIC | ABSTRACT, .name == "restoreEntity", .descriptor == "(Landroid/app/backup/BackupDataInputStream;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupHelper\0", "restoreEntity\0", "(Landroid/app/backup/BackupDataInputStream;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeNewStateDescription](https://developer.android.com/reference/android/app/backup/BackupHelper.html#writeNewStateDescription(android.os.ParcelFileDescriptor))
        ///
        /// Required features: "android-os-ParcelFileDescriptor"
        #[cfg(any(feature = "all", all(feature = "android-os-ParcelFileDescriptor")))]
        pub fn writeNewStateDescription<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/backup/BackupHelper", java.flags == PUBLIC | ABSTRACT, .name == "writeNewStateDescription", .descriptor == "(Landroid/os/ParcelFileDescriptor;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/backup/BackupHelper\0", "writeNewStateDescription\0", "(Landroid/os/ParcelFileDescriptor;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
