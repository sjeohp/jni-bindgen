// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-AppComponentFactory"))]
__jni_bindgen! {
    /// public class [AppComponentFactory](https://developer.android.com/reference/android/app/AppComponentFactory.html)
    ///
    /// Required feature: android-app-AppComponentFactory
    public class AppComponentFactory ("android/app/AppComponentFactory") extends crate::java::lang::Object {

        /// [AppComponentFactory](https://developer.android.com/reference/android/app/AppComponentFactory.html#AppComponentFactory())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::AppComponentFactory>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AppComponentFactory", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AppComponentFactory\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [instantiateClassLoader](https://developer.android.com/reference/android/app/AppComponentFactory.html#instantiateClassLoader(java.lang.ClassLoader,%20android.content.pm.ApplicationInfo))
        ///
        /// Required features: "android-content-pm-ApplicationInfo", "java-lang-ClassLoader"
        #[cfg(any(feature = "all", all(feature = "android-content-pm-ApplicationInfo", feature = "java-lang-ClassLoader")))]
        pub fn instantiateClassLoader<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::pm::ApplicationInfo>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::ClassLoader>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AppComponentFactory", java.flags == PUBLIC, .name == "instantiateClassLoader", .descriptor == "(Ljava/lang/ClassLoader;Landroid/content/pm/ApplicationInfo;)Ljava/lang/ClassLoader;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AppComponentFactory\0", "instantiateClassLoader\0", "(Ljava/lang/ClassLoader;Landroid/content/pm/ApplicationInfo;)Ljava/lang/ClassLoader;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [instantiateApplication](https://developer.android.com/reference/android/app/AppComponentFactory.html#instantiateApplication(java.lang.ClassLoader,%20java.lang.String))
        ///
        /// Required features: "android-app-Application", "java-lang-ClassLoader", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-Application", feature = "java-lang-ClassLoader", feature = "java-lang-String")))]
        pub fn instantiateApplication<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::Application>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AppComponentFactory", java.flags == PUBLIC, .name == "instantiateApplication", .descriptor == "(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroid/app/Application;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AppComponentFactory\0", "instantiateApplication\0", "(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroid/app/Application;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [instantiateActivity](https://developer.android.com/reference/android/app/AppComponentFactory.html#instantiateActivity(java.lang.ClassLoader,%20java.lang.String,%20android.content.Intent))
        ///
        /// Required features: "android-app-Activity", "android-content-Intent", "java-lang-ClassLoader", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-Activity", feature = "android-content-Intent", feature = "java-lang-ClassLoader", feature = "java-lang-String")))]
        pub fn instantiateActivity<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::Activity>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AppComponentFactory", java.flags == PUBLIC, .name == "instantiateActivity", .descriptor == "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Activity;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AppComponentFactory\0", "instantiateActivity\0", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Activity;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [instantiateReceiver](https://developer.android.com/reference/android/app/AppComponentFactory.html#instantiateReceiver(java.lang.ClassLoader,%20java.lang.String,%20android.content.Intent))
        ///
        /// Required features: "android-content-BroadcastReceiver", "android-content-Intent", "java-lang-ClassLoader", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-BroadcastReceiver", feature = "android-content-Intent", feature = "java-lang-ClassLoader", feature = "java-lang-String")))]
        pub fn instantiateReceiver<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::BroadcastReceiver>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AppComponentFactory", java.flags == PUBLIC, .name == "instantiateReceiver", .descriptor == "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/content/BroadcastReceiver;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AppComponentFactory\0", "instantiateReceiver\0", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/content/BroadcastReceiver;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [instantiateService](https://developer.android.com/reference/android/app/AppComponentFactory.html#instantiateService(java.lang.ClassLoader,%20java.lang.String,%20android.content.Intent))
        ///
        /// Required features: "android-app-Service", "android-content-Intent", "java-lang-ClassLoader", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-Service", feature = "android-content-Intent", feature = "java-lang-ClassLoader", feature = "java-lang-String")))]
        pub fn instantiateService<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::Service>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AppComponentFactory", java.flags == PUBLIC, .name == "instantiateService", .descriptor == "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Service;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AppComponentFactory\0", "instantiateService\0", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Service;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [instantiateProvider](https://developer.android.com/reference/android/app/AppComponentFactory.html#instantiateProvider(java.lang.ClassLoader,%20java.lang.String))
        ///
        /// Required features: "android-content-ContentProvider", "java-lang-ClassLoader", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentProvider", feature = "java-lang-ClassLoader", feature = "java-lang-String")))]
        pub fn instantiateProvider<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ContentProvider>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/AppComponentFactory", java.flags == PUBLIC, .name == "instantiateProvider", .descriptor == "(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroid/content/ContentProvider;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/AppComponentFactory\0", "instantiateProvider\0", "(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroid/content/ContentProvider;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
