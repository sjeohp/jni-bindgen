// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-ActivityManager_ProcessErrorStateInfo"))]
__jni_bindgen! {
    /// public class [ActivityManager.ProcessErrorStateInfo](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html)
    ///
    /// Required feature: android-app-ActivityManager_ProcessErrorStateInfo
    public class ActivityManager_ProcessErrorStateInfo ("android/app/ActivityManager$ProcessErrorStateInfo") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [ProcessErrorStateInfo](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#ProcessErrorStateInfo())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::ActivityManager_ProcessErrorStateInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$ProcessErrorStateInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$ProcessErrorStateInfo\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$ProcessErrorStateInfo", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$ProcessErrorStateInfo\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$ProcessErrorStateInfo", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$ProcessErrorStateInfo\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readFromParcel](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#readFromParcel(android.os.Parcel))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn readFromParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/ActivityManager$ProcessErrorStateInfo", java.flags == PUBLIC, .name == "readFromParcel", .descriptor == "(Landroid/os/Parcel;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/ActivityManager$ProcessErrorStateInfo\0", "readFromParcel\0", "(Landroid/os/Parcel;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CRASHED](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#CRASHED)
        pub const CRASHED : i32 = 1;

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [NOT_RESPONDING](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#NOT_RESPONDING)
        pub const NOT_RESPONDING : i32 = 2;

        /// public static final [NO_ERROR](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#NO_ERROR)
        pub const NO_ERROR : i32 = 0;

        /// **get** public [condition](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#condition)
        pub fn condition<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "condition\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [condition](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#condition)
        pub fn set_condition<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "condition\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [crashData](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#crashData)
        pub fn crashData<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "crashData\0", "[B\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [crashData](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#crashData)
        pub fn set_crashData<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj __jni_bindgen::ByteArray>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "crashData\0", "[B\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [longMsg](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#longMsg)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn longMsg<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "longMsg\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [longMsg](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#longMsg)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_longMsg<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "longMsg\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [pid](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#pid)
        pub fn pid<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "pid\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [pid](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#pid)
        pub fn set_pid<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "pid\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [processName](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#processName)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn processName<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "processName\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [processName](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#processName)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_processName<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "processName\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [shortMsg](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#shortMsg)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn shortMsg<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "shortMsg\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [shortMsg](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#shortMsg)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_shortMsg<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "shortMsg\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [stackTrace](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#stackTrace)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn stackTrace<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "stackTrace\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [stackTrace](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#stackTrace)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_stackTrace<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "stackTrace\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [tag](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#tag)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn tag<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "tag\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [tag](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#tag)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_tag<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "tag\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [uid](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#uid)
        pub fn uid<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "uid\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [uid](https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#uid)
        pub fn set_uid<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/ActivityManager$ProcessErrorStateInfo\0", "uid\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }
    }
}
