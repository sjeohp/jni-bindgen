// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-role-RoleManager"))]
__jni_bindgen! {
    /// public final class [RoleManager](https://developer.android.com/reference/android/app/role/RoleManager.html)
    ///
    /// Required feature: android-app-role-RoleManager
    public final class RoleManager ("android/app/role/RoleManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [RoleManager](https://developer.android.com/reference/android/app/role/RoleManager.html#RoleManager())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::role::RoleManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/role/RoleManager", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/role/RoleManager\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [createRequestRoleIntent](https://developer.android.com/reference/android/app/role/RoleManager.html#createRequestRoleIntent(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn createRequestRoleIntent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/role/RoleManager", java.flags == PUBLIC, .name == "createRequestRoleIntent", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/role/RoleManager\0", "createRequestRoleIntent\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isRoleAvailable](https://developer.android.com/reference/android/app/role/RoleManager.html#isRoleAvailable(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isRoleAvailable<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/role/RoleManager", java.flags == PUBLIC, .name == "isRoleAvailable", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/role/RoleManager\0", "isRoleAvailable\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isRoleHeld](https://developer.android.com/reference/android/app/role/RoleManager.html#isRoleHeld(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isRoleHeld<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/role/RoleManager", java.flags == PUBLIC, .name == "isRoleHeld", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/role/RoleManager\0", "isRoleHeld\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ROLE_ASSISTANT](https://developer.android.com/reference/android/app/role/RoleManager.html#ROLE_ASSISTANT)
        pub const ROLE_ASSISTANT : &'static str = "android.app.role.ASSISTANT";

        /// public static final [ROLE_BROWSER](https://developer.android.com/reference/android/app/role/RoleManager.html#ROLE_BROWSER)
        pub const ROLE_BROWSER : &'static str = "android.app.role.BROWSER";

        /// public static final [ROLE_CALL_REDIRECTION](https://developer.android.com/reference/android/app/role/RoleManager.html#ROLE_CALL_REDIRECTION)
        pub const ROLE_CALL_REDIRECTION : &'static str = "android.app.role.CALL_REDIRECTION";

        /// public static final [ROLE_CALL_SCREENING](https://developer.android.com/reference/android/app/role/RoleManager.html#ROLE_CALL_SCREENING)
        pub const ROLE_CALL_SCREENING : &'static str = "android.app.role.CALL_SCREENING";

        /// public static final [ROLE_DIALER](https://developer.android.com/reference/android/app/role/RoleManager.html#ROLE_DIALER)
        pub const ROLE_DIALER : &'static str = "android.app.role.DIALER";

        /// public static final [ROLE_EMERGENCY](https://developer.android.com/reference/android/app/role/RoleManager.html#ROLE_EMERGENCY)
        pub const ROLE_EMERGENCY : &'static str = "android.app.role.EMERGENCY";

        /// public static final [ROLE_HOME](https://developer.android.com/reference/android/app/role/RoleManager.html#ROLE_HOME)
        pub const ROLE_HOME : &'static str = "android.app.role.HOME";

        /// public static final [ROLE_SMS](https://developer.android.com/reference/android/app/role/RoleManager.html#ROLE_SMS)
        pub const ROLE_SMS : &'static str = "android.app.role.SMS";
    }
}
