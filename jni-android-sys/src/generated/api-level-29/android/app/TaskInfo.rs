// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-TaskInfo"))]
__jni_bindgen! {
    /// public class [TaskInfo](https://developer.android.com/reference/android/app/TaskInfo.html)
    ///
    /// Required feature: android-app-TaskInfo
    public class TaskInfo ("android/app/TaskInfo") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [TaskInfo](https://developer.android.com/reference/android/app/TaskInfo.html#TaskInfo())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::TaskInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/app/TaskInfo", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/TaskInfo\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [toString](https://developer.android.com/reference/android/app/TaskInfo.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/TaskInfo", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/TaskInfo\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public [baseActivity](https://developer.android.com/reference/android/app/TaskInfo.html#baseActivity)
        ///
        /// Required feature: android-content-ComponentName
        #[cfg(any(feature = "all", feature = "android-content-ComponentName"))]
        pub fn baseActivity<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ComponentName>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "baseActivity\0", "Landroid/content/ComponentName;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [baseActivity](https://developer.android.com/reference/android/app/TaskInfo.html#baseActivity)
        ///
        /// Required feature: android-content-ComponentName
        #[cfg(any(feature = "all", feature = "android-content-ComponentName"))]
        pub fn set_baseActivity<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::content::ComponentName>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "baseActivity\0", "Landroid/content/ComponentName;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [baseIntent](https://developer.android.com/reference/android/app/TaskInfo.html#baseIntent)
        ///
        /// Required feature: android-content-Intent
        #[cfg(any(feature = "all", feature = "android-content-Intent"))]
        pub fn baseIntent<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "baseIntent\0", "Landroid/content/Intent;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [baseIntent](https://developer.android.com/reference/android/app/TaskInfo.html#baseIntent)
        ///
        /// Required feature: android-content-Intent
        #[cfg(any(feature = "all", feature = "android-content-Intent"))]
        pub fn set_baseIntent<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::content::Intent>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "baseIntent\0", "Landroid/content/Intent;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [isRunning](https://developer.android.com/reference/android/app/TaskInfo.html#isRunning)
        pub fn isRunning<'env>(&'env self) -> bool {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "isRunning\0", "Z\0");
                env.get_boolean_field(class, field)
            }
        }

        /// **set** public [isRunning](https://developer.android.com/reference/android/app/TaskInfo.html#isRunning)
        pub fn set_isRunning<'env>(&'env self, value: bool) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "isRunning\0", "Z\0");
                env.set_boolean_field(class, field, value)
            }
        }

        /// **get** public [numActivities](https://developer.android.com/reference/android/app/TaskInfo.html#numActivities)
        pub fn numActivities<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "numActivities\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [numActivities](https://developer.android.com/reference/android/app/TaskInfo.html#numActivities)
        pub fn set_numActivities<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "numActivities\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [origActivity](https://developer.android.com/reference/android/app/TaskInfo.html#origActivity)
        ///
        /// Required feature: android-content-ComponentName
        #[cfg(any(feature = "all", feature = "android-content-ComponentName"))]
        pub fn origActivity<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ComponentName>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "origActivity\0", "Landroid/content/ComponentName;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [origActivity](https://developer.android.com/reference/android/app/TaskInfo.html#origActivity)
        ///
        /// Required feature: android-content-ComponentName
        #[cfg(any(feature = "all", feature = "android-content-ComponentName"))]
        pub fn set_origActivity<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::content::ComponentName>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "origActivity\0", "Landroid/content/ComponentName;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [taskDescription](https://developer.android.com/reference/android/app/TaskInfo.html#taskDescription)
        ///
        /// Required feature: android-app-ActivityManager_TaskDescription
        #[cfg(any(feature = "all", feature = "android-app-ActivityManager_TaskDescription"))]
        pub fn taskDescription<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::ActivityManager_TaskDescription>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "taskDescription\0", "Landroid/app/ActivityManager$TaskDescription;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [taskDescription](https://developer.android.com/reference/android/app/TaskInfo.html#taskDescription)
        ///
        /// Required feature: android-app-ActivityManager_TaskDescription
        #[cfg(any(feature = "all", feature = "android-app-ActivityManager_TaskDescription"))]
        pub fn set_taskDescription<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::app::ActivityManager_TaskDescription>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "taskDescription\0", "Landroid/app/ActivityManager$TaskDescription;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [taskId](https://developer.android.com/reference/android/app/TaskInfo.html#taskId)
        pub fn taskId<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "taskId\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [taskId](https://developer.android.com/reference/android/app/TaskInfo.html#taskId)
        pub fn set_taskId<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "taskId\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [topActivity](https://developer.android.com/reference/android/app/TaskInfo.html#topActivity)
        ///
        /// Required feature: android-content-ComponentName
        #[cfg(any(feature = "all", feature = "android-content-ComponentName"))]
        pub fn topActivity<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ComponentName>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "topActivity\0", "Landroid/content/ComponentName;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [topActivity](https://developer.android.com/reference/android/app/TaskInfo.html#topActivity)
        ///
        /// Required feature: android-content-ComponentName
        #[cfg(any(feature = "all", feature = "android-content-ComponentName"))]
        pub fn set_topActivity<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::content::ComponentName>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/app/TaskInfo\0", "topActivity\0", "Landroid/content/ComponentName;\0");
                env.set_object_field(class, field, value)
            }
        }
    }
}
