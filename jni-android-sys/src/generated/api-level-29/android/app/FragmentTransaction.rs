// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-FragmentTransaction"))]
__jni_bindgen! {
    /// public class [FragmentTransaction](https://developer.android.com/reference/android/app/FragmentTransaction.html)
    ///
    /// Required feature: android-app-FragmentTransaction
    #[deprecated] public class FragmentTransaction ("android/app/FragmentTransaction") extends crate::java::lang::Object {

        /// [FragmentTransaction](https://developer.android.com/reference/android/app/FragmentTransaction.html#FragmentTransaction())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [add](https://developer.android.com/reference/android/app/FragmentTransaction.html#add(android.app.Fragment,%20java.lang.String))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction", feature = "java-lang-String")))]
        #[deprecated] pub fn add_Fragment_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "add", .descriptor == "(Landroid/app/Fragment;Ljava/lang/String;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "add\0", "(Landroid/app/Fragment;Ljava/lang/String;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [add](https://developer.android.com/reference/android/app/FragmentTransaction.html#add(int,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn add_int_Fragment<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "add", .descriptor == "(ILandroid/app/Fragment;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "add\0", "(ILandroid/app/Fragment;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [add](https://developer.android.com/reference/android/app/FragmentTransaction.html#add(int,%20android.app.Fragment,%20java.lang.String))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction", feature = "java-lang-String")))]
        #[deprecated] pub fn add_int_Fragment_String<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "add", .descriptor == "(ILandroid/app/Fragment;Ljava/lang/String;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "add\0", "(ILandroid/app/Fragment;Ljava/lang/String;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replace](https://developer.android.com/reference/android/app/FragmentTransaction.html#replace(int,%20android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn replace_int_Fragment<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "replace", .descriptor == "(ILandroid/app/Fragment;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "replace\0", "(ILandroid/app/Fragment;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replace](https://developer.android.com/reference/android/app/FragmentTransaction.html#replace(int,%20android.app.Fragment,%20java.lang.String))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction", feature = "java-lang-String")))]
        #[deprecated] pub fn replace_int_Fragment_String<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "replace", .descriptor == "(ILandroid/app/Fragment;Ljava/lang/String;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "replace\0", "(ILandroid/app/Fragment;Ljava/lang/String;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [remove](https://developer.android.com/reference/android/app/FragmentTransaction.html#remove(android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn remove<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "remove", .descriptor == "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "remove\0", "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hide](https://developer.android.com/reference/android/app/FragmentTransaction.html#hide(android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn hide<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "hide", .descriptor == "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "hide\0", "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [show](https://developer.android.com/reference/android/app/FragmentTransaction.html#show(android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn show<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "show", .descriptor == "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "show\0", "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [detach](https://developer.android.com/reference/android/app/FragmentTransaction.html#detach(android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn detach<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "detach", .descriptor == "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "detach\0", "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [attach](https://developer.android.com/reference/android/app/FragmentTransaction.html#attach(android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn attach<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "attach", .descriptor == "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "attach\0", "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPrimaryNavigationFragment](https://developer.android.com/reference/android/app/FragmentTransaction.html#setPrimaryNavigationFragment(android.app.Fragment))
        ///
        /// Required features: "android-app-Fragment", "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-Fragment", feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn setPrimaryNavigationFragment<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Fragment>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setPrimaryNavigationFragment", .descriptor == "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setPrimaryNavigationFragment\0", "(Landroid/app/Fragment;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isEmpty](https://developer.android.com/reference/android/app/FragmentTransaction.html#isEmpty())
        #[deprecated] pub fn isEmpty<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "isEmpty", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "isEmpty\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCustomAnimations](https://developer.android.com/reference/android/app/FragmentTransaction.html#setCustomAnimations(int,%20int))
        ///
        /// Required features: "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn setCustomAnimations_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setCustomAnimations", .descriptor == "(II)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setCustomAnimations\0", "(II)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCustomAnimations](https://developer.android.com/reference/android/app/FragmentTransaction.html#setCustomAnimations(int,%20int,%20int,%20int))
        ///
        /// Required features: "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn setCustomAnimations_int_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setCustomAnimations", .descriptor == "(IIII)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setCustomAnimations\0", "(IIII)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTransition](https://developer.android.com/reference/android/app/FragmentTransaction.html#setTransition(int))
        ///
        /// Required features: "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn setTransition<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setTransition", .descriptor == "(I)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setTransition\0", "(I)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addSharedElement](https://developer.android.com/reference/android/app/FragmentTransaction.html#addSharedElement(android.view.View,%20java.lang.String))
        ///
        /// Required features: "android-app-FragmentTransaction", "android-view-View", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction", feature = "android-view-View", feature = "java-lang-String")))]
        #[deprecated] pub fn addSharedElement<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "addSharedElement", .descriptor == "(Landroid/view/View;Ljava/lang/String;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "addSharedElement\0", "(Landroid/view/View;Ljava/lang/String;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTransitionStyle](https://developer.android.com/reference/android/app/FragmentTransaction.html#setTransitionStyle(int))
        ///
        /// Required features: "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn setTransitionStyle<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setTransitionStyle", .descriptor == "(I)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setTransitionStyle\0", "(I)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addToBackStack](https://developer.android.com/reference/android/app/FragmentTransaction.html#addToBackStack(java.lang.String))
        ///
        /// Required features: "android-app-FragmentTransaction", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction", feature = "java-lang-String")))]
        #[deprecated] pub fn addToBackStack<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "addToBackStack", .descriptor == "(Ljava/lang/String;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "addToBackStack\0", "(Ljava/lang/String;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isAddToBackStackAllowed](https://developer.android.com/reference/android/app/FragmentTransaction.html#isAddToBackStackAllowed())
        #[deprecated] pub fn isAddToBackStackAllowed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "isAddToBackStackAllowed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "isAddToBackStackAllowed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [disallowAddToBackStack](https://developer.android.com/reference/android/app/FragmentTransaction.html#disallowAddToBackStack())
        ///
        /// Required features: "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn disallowAddToBackStack<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "disallowAddToBackStack", .descriptor == "()Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "disallowAddToBackStack\0", "()Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBreadCrumbTitle](https://developer.android.com/reference/android/app/FragmentTransaction.html#setBreadCrumbTitle(int))
        ///
        /// Required features: "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn setBreadCrumbTitle_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setBreadCrumbTitle", .descriptor == "(I)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setBreadCrumbTitle\0", "(I)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBreadCrumbTitle](https://developer.android.com/reference/android/app/FragmentTransaction.html#setBreadCrumbTitle(java.lang.CharSequence))
        ///
        /// Required features: "android-app-FragmentTransaction", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction", feature = "java-lang-CharSequence")))]
        #[deprecated] pub fn setBreadCrumbTitle_CharSequence<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setBreadCrumbTitle", .descriptor == "(Ljava/lang/CharSequence;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setBreadCrumbTitle\0", "(Ljava/lang/CharSequence;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBreadCrumbShortTitle](https://developer.android.com/reference/android/app/FragmentTransaction.html#setBreadCrumbShortTitle(int))
        ///
        /// Required features: "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn setBreadCrumbShortTitle_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setBreadCrumbShortTitle", .descriptor == "(I)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setBreadCrumbShortTitle\0", "(I)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBreadCrumbShortTitle](https://developer.android.com/reference/android/app/FragmentTransaction.html#setBreadCrumbShortTitle(java.lang.CharSequence))
        ///
        /// Required features: "android-app-FragmentTransaction", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction", feature = "java-lang-CharSequence")))]
        #[deprecated] pub fn setBreadCrumbShortTitle_CharSequence<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setBreadCrumbShortTitle", .descriptor == "(Ljava/lang/CharSequence;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setBreadCrumbShortTitle\0", "(Ljava/lang/CharSequence;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setReorderingAllowed](https://developer.android.com/reference/android/app/FragmentTransaction.html#setReorderingAllowed(boolean))
        ///
        /// Required features: "android-app-FragmentTransaction"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction")))]
        #[deprecated] pub fn setReorderingAllowed<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "setReorderingAllowed", .descriptor == "(Z)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "setReorderingAllowed\0", "(Z)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [runOnCommit](https://developer.android.com/reference/android/app/FragmentTransaction.html#runOnCommit(java.lang.Runnable))
        ///
        /// Required features: "android-app-FragmentTransaction", "java-lang-Runnable"
        #[cfg(any(feature = "all", all(feature = "android-app-FragmentTransaction", feature = "java-lang-Runnable")))]
        #[deprecated] pub fn runOnCommit<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Runnable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::FragmentTransaction>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "runOnCommit", .descriptor == "(Ljava/lang/Runnable;)Landroid/app/FragmentTransaction;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "runOnCommit\0", "(Ljava/lang/Runnable;)Landroid/app/FragmentTransaction;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [commit](https://developer.android.com/reference/android/app/FragmentTransaction.html#commit())
        #[deprecated] pub fn commit<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "commit", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "commit\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [commitAllowingStateLoss](https://developer.android.com/reference/android/app/FragmentTransaction.html#commitAllowingStateLoss())
        #[deprecated] pub fn commitAllowingStateLoss<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "commitAllowingStateLoss", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "commitAllowingStateLoss\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [commitNow](https://developer.android.com/reference/android/app/FragmentTransaction.html#commitNow())
        #[deprecated] pub fn commitNow<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "commitNow", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "commitNow\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [commitNowAllowingStateLoss](https://developer.android.com/reference/android/app/FragmentTransaction.html#commitNowAllowingStateLoss())
        #[deprecated] pub fn commitNowAllowingStateLoss<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/FragmentTransaction", java.flags == PUBLIC | ABSTRACT, .name == "commitNowAllowingStateLoss", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/FragmentTransaction\0", "commitNowAllowingStateLoss\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [TRANSIT_ENTER_MASK](https://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_ENTER_MASK)
        #[deprecated] pub const TRANSIT_ENTER_MASK : i32 = 4096;

        /// public static final [TRANSIT_EXIT_MASK](https://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_EXIT_MASK)
        #[deprecated] pub const TRANSIT_EXIT_MASK : i32 = 8192;

        /// public static final [TRANSIT_FRAGMENT_CLOSE](https://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_FRAGMENT_CLOSE)
        #[deprecated] pub const TRANSIT_FRAGMENT_CLOSE : i32 = 8194;

        /// public static final [TRANSIT_FRAGMENT_FADE](https://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_FRAGMENT_FADE)
        #[deprecated] pub const TRANSIT_FRAGMENT_FADE : i32 = 4099;

        /// public static final [TRANSIT_FRAGMENT_OPEN](https://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_FRAGMENT_OPEN)
        #[deprecated] pub const TRANSIT_FRAGMENT_OPEN : i32 = 4097;

        /// public static final [TRANSIT_NONE](https://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_NONE)
        #[deprecated] pub const TRANSIT_NONE : i32 = 0;

        /// public static final [TRANSIT_UNSET](https://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_UNSET)
        #[deprecated] pub const TRANSIT_UNSET : i32 = -1;
    }
}
