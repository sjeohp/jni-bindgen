// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-app-Notification_MessagingStyle_Message"))]
__jni_bindgen! {
    /// public final class [Notification.MessagingStyle.Message](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html)
    ///
    /// Required feature: android-app-Notification_MessagingStyle_Message
    public final class Notification_MessagingStyle_Message ("android/app/Notification$MessagingStyle$Message") extends crate::java::lang::Object {

        /// [Message](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#Message(java.lang.CharSequence,%20long,%20java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        #[deprecated] pub fn new_CharSequence_long_CharSequence<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i64, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::Notification_MessagingStyle_Message>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/CharSequence;JLjava/lang/CharSequence;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "<init>\0", "(Ljava/lang/CharSequence;JLjava/lang/CharSequence;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Message](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#Message(java.lang.CharSequence,%20long,%20android.app.Person))
        ///
        /// Required features: "android-app-Person", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-app-Person", feature = "java-lang-CharSequence")))]
        pub fn new_CharSequence_long_Person<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i64, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::Person>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::app::Notification_MessagingStyle_Message>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/CharSequence;JLandroid/app/Person;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "<init>\0", "(Ljava/lang/CharSequence;JLandroid/app/Person;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setData](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#setData(java.lang.String,%20android.net.Uri))
        ///
        /// Required features: "android-app-Notification_MessagingStyle_Message", "android-net-Uri", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-app-Notification_MessagingStyle_Message", feature = "android-net-Uri", feature = "java-lang-String")))]
        pub fn setData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::Notification_MessagingStyle_Message>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "setData", .descriptor == "(Ljava/lang/String;Landroid/net/Uri;)Landroid/app/Notification$MessagingStyle$Message;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "setData\0", "(Ljava/lang/String;Landroid/net/Uri;)Landroid/app/Notification$MessagingStyle$Message;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getText](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#getText())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getText<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "getText", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "getText\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimestamp](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#getTimestamp())
        pub fn getTimestamp<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "getTimestamp", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "getTimestamp\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtras](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#getExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "getExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "getExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSender](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#getSender())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        #[deprecated] pub fn getSender<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "getSender", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "getSender\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSenderPerson](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#getSenderPerson())
        ///
        /// Required features: "android-app-Person"
        #[cfg(any(feature = "all", all(feature = "android-app-Person")))]
        pub fn getSenderPerson<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::Person>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "getSenderPerson", .descriptor == "()Landroid/app/Person;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "getSenderPerson\0", "()Landroid/app/Person;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDataMimeType](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#getDataMimeType())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDataMimeType<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "getDataMimeType", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "getDataMimeType\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDataUri](https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html#getDataUri())
        ///
        /// Required features: "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri")))]
        pub fn getDataUri<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/app/Notification$MessagingStyle$Message", java.flags == PUBLIC, .name == "getDataUri", .descriptor == "()Landroid/net/Uri;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/app/Notification$MessagingStyle$Message\0", "getDataUri\0", "()Landroid/net/Uri;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
