// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-animation-BidirectionalTypeConverter"))]
__jni_bindgen! {
    /// public class [BidirectionalTypeConverter](https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html)
    ///
    /// Required feature: android-animation-BidirectionalTypeConverter
    public class BidirectionalTypeConverter ("android/animation/BidirectionalTypeConverter") extends crate::android::animation::TypeConverter {

        /// [BidirectionalTypeConverter](https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#BidirectionalTypeConverter(java.lang.Class,%20java.lang.Class))
        ///
        /// Required features: "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "java-lang-Class")))]
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::animation::BidirectionalTypeConverter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/animation/BidirectionalTypeConverter", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/Class;Ljava/lang/Class;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/animation/BidirectionalTypeConverter\0", "<init>\0", "(Ljava/lang/Class;Ljava/lang/Class;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [convertBack](https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#convertBack(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn convertBack<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/animation/BidirectionalTypeConverter", java.flags == PUBLIC | ABSTRACT, .name == "convertBack", .descriptor == "(Ljava/lang/Object;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/animation/BidirectionalTypeConverter\0", "convertBack\0", "(Ljava/lang/Object;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [invert](https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#invert())
        ///
        /// Required features: "android-animation-BidirectionalTypeConverter"
        #[cfg(any(feature = "all", all(feature = "android-animation-BidirectionalTypeConverter")))]
        pub fn invert<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::animation::BidirectionalTypeConverter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/animation/BidirectionalTypeConverter", java.flags == PUBLIC, .name == "invert", .descriptor == "()Landroid/animation/BidirectionalTypeConverter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/animation/BidirectionalTypeConverter\0", "invert\0", "()Landroid/animation/BidirectionalTypeConverter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
