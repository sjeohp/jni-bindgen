// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-accessibilityservice-FingerprintGestureController_FingerprintGestureCallback"))]
__jni_bindgen! {
    /// public class [FingerprintGestureController.FingerprintGestureCallback](https://developer.android.com/reference/android/accessibilityservice/FingerprintGestureController.FingerprintGestureCallback.html)
    ///
    /// Required feature: android-accessibilityservice-FingerprintGestureController_FingerprintGestureCallback
    public class FingerprintGestureController_FingerprintGestureCallback ("android/accessibilityservice/FingerprintGestureController$FingerprintGestureCallback") extends crate::java::lang::Object {

        /// [FingerprintGestureCallback](https://developer.android.com/reference/android/accessibilityservice/FingerprintGestureController.FingerprintGestureCallback.html#FingerprintGestureCallback())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::accessibilityservice::FingerprintGestureController_FingerprintGestureCallback>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/accessibilityservice/FingerprintGestureController$FingerprintGestureCallback", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/accessibilityservice/FingerprintGestureController$FingerprintGestureCallback\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onGestureDetectionAvailabilityChanged](https://developer.android.com/reference/android/accessibilityservice/FingerprintGestureController.FingerprintGestureCallback.html#onGestureDetectionAvailabilityChanged(boolean))
        pub fn onGestureDetectionAvailabilityChanged<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/accessibilityservice/FingerprintGestureController$FingerprintGestureCallback", java.flags == PUBLIC, .name == "onGestureDetectionAvailabilityChanged", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/accessibilityservice/FingerprintGestureController$FingerprintGestureCallback\0", "onGestureDetectionAvailabilityChanged\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onGestureDetected](https://developer.android.com/reference/android/accessibilityservice/FingerprintGestureController.FingerprintGestureCallback.html#onGestureDetected(int))
        pub fn onGestureDetected<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/accessibilityservice/FingerprintGestureController$FingerprintGestureCallback", java.flags == PUBLIC, .name == "onGestureDetected", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/accessibilityservice/FingerprintGestureController$FingerprintGestureCallback\0", "onGestureDetected\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
