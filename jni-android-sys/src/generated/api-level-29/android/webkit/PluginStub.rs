// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-webkit-PluginStub"))]
__jni_bindgen! {
    /// public interface [PluginStub](https://developer.android.com/reference/android/webkit/PluginStub.html)
    ///
    /// Required feature: android-webkit-PluginStub
    public interface PluginStub ("android/webkit/PluginStub") extends crate::java::lang::Object {

        /// [getEmbeddedView](https://developer.android.com/reference/android/webkit/PluginStub.html#getEmbeddedView(int,%20android.content.Context))
        ///
        /// Required features: "android-content-Context", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-view-View")))]
        pub fn getEmbeddedView<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::View>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/PluginStub", java.flags == PUBLIC | ABSTRACT, .name == "getEmbeddedView", .descriptor == "(ILandroid/content/Context;)Landroid/view/View;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/PluginStub\0", "getEmbeddedView\0", "(ILandroid/content/Context;)Landroid/view/View;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFullScreenView](https://developer.android.com/reference/android/webkit/PluginStub.html#getFullScreenView(int,%20android.content.Context))
        ///
        /// Required features: "android-content-Context", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-view-View")))]
        pub fn getFullScreenView<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::View>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/PluginStub", java.flags == PUBLIC | ABSTRACT, .name == "getFullScreenView", .descriptor == "(ILandroid/content/Context;)Landroid/view/View;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/PluginStub\0", "getFullScreenView\0", "(ILandroid/content/Context;)Landroid/view/View;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
