// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-webkit-WebViewDatabase"))]
__jni_bindgen! {
    /// public class [WebViewDatabase](https://developer.android.com/reference/android/webkit/WebViewDatabase.html)
    ///
    /// Required feature: android-webkit-WebViewDatabase
    public class WebViewDatabase ("android/webkit/WebViewDatabase") extends crate::java::lang::Object {

        /// [WebViewDatabase](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#WebViewDatabase())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::webkit::WebViewDatabase>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#getInstance(android.content.Context))
        ///
        /// Required features: "android-content-Context", "android-webkit-WebViewDatabase"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-webkit-WebViewDatabase")))]
        pub fn getInstance<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::webkit::WebViewDatabase>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/content/Context;)Landroid/webkit/WebViewDatabase;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/webkit/WebViewDatabase\0", "getInstance\0", "(Landroid/content/Context;)Landroid/webkit/WebViewDatabase;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasUsernamePassword](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasUsernamePassword())
        #[deprecated] pub fn hasUsernamePassword<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | ABSTRACT, .name == "hasUsernamePassword", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "hasUsernamePassword\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearUsernamePassword](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearUsernamePassword())
        #[deprecated] pub fn clearUsernamePassword<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | ABSTRACT, .name == "clearUsernamePassword", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "clearUsernamePassword\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasHttpAuthUsernamePassword](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasHttpAuthUsernamePassword())
        pub fn hasHttpAuthUsernamePassword<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | ABSTRACT, .name == "hasHttpAuthUsernamePassword", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "hasHttpAuthUsernamePassword\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearHttpAuthUsernamePassword](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearHttpAuthUsernamePassword())
        pub fn clearHttpAuthUsernamePassword<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | ABSTRACT, .name == "clearHttpAuthUsernamePassword", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "clearHttpAuthUsernamePassword\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setHttpAuthUsernamePassword](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#setHttpAuthUsernamePassword(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setHttpAuthUsernamePassword<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | ABSTRACT, .name == "setHttpAuthUsernamePassword", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "setHttpAuthUsernamePassword\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHttpAuthUsernamePassword](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#getHttpAuthUsernamePassword(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getHttpAuthUsernamePassword<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | ABSTRACT, .name == "getHttpAuthUsernamePassword", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "getHttpAuthUsernamePassword\0", "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasFormData](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasFormData())
        #[deprecated] pub fn hasFormData<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | ABSTRACT, .name == "hasFormData", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "hasFormData\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearFormData](https://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearFormData())
        #[deprecated] pub fn clearFormData<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewDatabase", java.flags == PUBLIC | ABSTRACT, .name == "clearFormData", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewDatabase\0", "clearFormData\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
