// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-webkit-WebChromeClient_FileChooserParams"))]
__jni_bindgen! {
    /// public class [WebChromeClient.FileChooserParams](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html)
    ///
    /// Required feature: android-webkit-WebChromeClient_FileChooserParams
    public class WebChromeClient_FileChooserParams ("android/webkit/WebChromeClient$FileChooserParams") extends crate::java::lang::Object {

        /// [FileChooserParams](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#FileChooserParams())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::webkit::WebChromeClient_FileChooserParams>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebChromeClient$FileChooserParams", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebChromeClient$FileChooserParams\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseResult](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#parseResult(int,%20android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-net-Uri")))]
        pub fn parseResult<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::net::Uri, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebChromeClient$FileChooserParams", java.flags == PUBLIC | STATIC, .name == "parseResult", .descriptor == "(ILandroid/content/Intent;)[Landroid/net/Uri;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/webkit/WebChromeClient$FileChooserParams\0", "parseResult\0", "(ILandroid/content/Intent;)[Landroid/net/Uri;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMode](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#getMode())
        pub fn getMode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebChromeClient$FileChooserParams", java.flags == PUBLIC | ABSTRACT, .name == "getMode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebChromeClient$FileChooserParams\0", "getMode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAcceptTypes](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#getAcceptTypes())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAcceptTypes<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebChromeClient$FileChooserParams", java.flags == PUBLIC | ABSTRACT, .name == "getAcceptTypes", .descriptor == "()[Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebChromeClient$FileChooserParams\0", "getAcceptTypes\0", "()[Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isCaptureEnabled](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#isCaptureEnabled())
        pub fn isCaptureEnabled<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebChromeClient$FileChooserParams", java.flags == PUBLIC | ABSTRACT, .name == "isCaptureEnabled", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebChromeClient$FileChooserParams\0", "isCaptureEnabled\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTitle](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#getTitle())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getTitle<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebChromeClient$FileChooserParams", java.flags == PUBLIC | ABSTRACT, .name == "getTitle", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebChromeClient$FileChooserParams\0", "getTitle\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFilenameHint](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#getFilenameHint())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getFilenameHint<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebChromeClient$FileChooserParams", java.flags == PUBLIC | ABSTRACT, .name == "getFilenameHint", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebChromeClient$FileChooserParams\0", "getFilenameHint\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createIntent](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#createIntent())
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn createIntent<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebChromeClient$FileChooserParams", java.flags == PUBLIC | ABSTRACT, .name == "createIntent", .descriptor == "()Landroid/content/Intent;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebChromeClient$FileChooserParams\0", "createIntent\0", "()Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [MODE_OPEN](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#MODE_OPEN)
        pub const MODE_OPEN : i32 = 0;

        /// public static final [MODE_OPEN_MULTIPLE](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#MODE_OPEN_MULTIPLE)
        pub const MODE_OPEN_MULTIPLE : i32 = 1;

        /// public static final [MODE_SAVE](https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#MODE_SAVE)
        pub const MODE_SAVE : i32 = 3;
    }
}
