// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-webkit-GeolocationPermissions"))]
__jni_bindgen! {
    /// public class [GeolocationPermissions](https://developer.android.com/reference/android/webkit/GeolocationPermissions.html)
    ///
    /// Required feature: android-webkit-GeolocationPermissions
    public class GeolocationPermissions ("android/webkit/GeolocationPermissions") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [GeolocationPermissions](https://developer.android.com/reference/android/webkit/GeolocationPermissions.html#GeolocationPermissions())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::webkit::GeolocationPermissions>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/webkit/GeolocationPermissions", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/GeolocationPermissions\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getInstance](https://developer.android.com/reference/android/webkit/GeolocationPermissions.html#getInstance())
        ///
        /// Required features: "android-webkit-GeolocationPermissions"
        #[cfg(any(feature = "all", all(feature = "android-webkit-GeolocationPermissions")))]
        pub fn getInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::webkit::GeolocationPermissions>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/GeolocationPermissions", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "()Landroid/webkit/GeolocationPermissions;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/webkit/GeolocationPermissions\0", "getInstance\0", "()Landroid/webkit/GeolocationPermissions;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOrigins](https://developer.android.com/reference/android/webkit/GeolocationPermissions.html#getOrigins(android.webkit.ValueCallback))
        ///
        /// Required features: "android-webkit-ValueCallback"
        #[cfg(any(feature = "all", all(feature = "android-webkit-ValueCallback")))]
        pub fn getOrigins<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::webkit::ValueCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/GeolocationPermissions", java.flags == PUBLIC, .name == "getOrigins", .descriptor == "(Landroid/webkit/ValueCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/GeolocationPermissions\0", "getOrigins\0", "(Landroid/webkit/ValueCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAllowed](https://developer.android.com/reference/android/webkit/GeolocationPermissions.html#getAllowed(java.lang.String,%20android.webkit.ValueCallback))
        ///
        /// Required features: "android-webkit-ValueCallback", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-webkit-ValueCallback", feature = "java-lang-String")))]
        pub fn getAllowed<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::webkit::ValueCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/GeolocationPermissions", java.flags == PUBLIC, .name == "getAllowed", .descriptor == "(Ljava/lang/String;Landroid/webkit/ValueCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/GeolocationPermissions\0", "getAllowed\0", "(Ljava/lang/String;Landroid/webkit/ValueCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clear](https://developer.android.com/reference/android/webkit/GeolocationPermissions.html#clear(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn clear<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/GeolocationPermissions", java.flags == PUBLIC, .name == "clear", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/GeolocationPermissions\0", "clear\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [allow](https://developer.android.com/reference/android/webkit/GeolocationPermissions.html#allow(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn allow<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/GeolocationPermissions", java.flags == PUBLIC, .name == "allow", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/GeolocationPermissions\0", "allow\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearAll](https://developer.android.com/reference/android/webkit/GeolocationPermissions.html#clearAll())
        pub fn clearAll<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/GeolocationPermissions", java.flags == PUBLIC, .name == "clearAll", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/GeolocationPermissions\0", "clearAll\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
