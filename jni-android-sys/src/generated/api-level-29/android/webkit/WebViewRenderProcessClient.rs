// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-webkit-WebViewRenderProcessClient"))]
__jni_bindgen! {
    /// public class [WebViewRenderProcessClient](https://developer.android.com/reference/android/webkit/WebViewRenderProcessClient.html)
    ///
    /// Required feature: android-webkit-WebViewRenderProcessClient
    public class WebViewRenderProcessClient ("android/webkit/WebViewRenderProcessClient") extends crate::java::lang::Object {

        /// [WebViewRenderProcessClient](https://developer.android.com/reference/android/webkit/WebViewRenderProcessClient.html#WebViewRenderProcessClient())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::webkit::WebViewRenderProcessClient>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewRenderProcessClient", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewRenderProcessClient\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRenderProcessUnresponsive](https://developer.android.com/reference/android/webkit/WebViewRenderProcessClient.html#onRenderProcessUnresponsive(android.webkit.WebView,%20android.webkit.WebViewRenderProcess))
        ///
        /// Required features: "android-webkit-WebView", "android-webkit-WebViewRenderProcess"
        #[cfg(any(feature = "all", all(feature = "android-webkit-WebView", feature = "android-webkit-WebViewRenderProcess")))]
        pub fn onRenderProcessUnresponsive<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::webkit::WebView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::webkit::WebViewRenderProcess>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewRenderProcessClient", java.flags == PUBLIC | ABSTRACT, .name == "onRenderProcessUnresponsive", .descriptor == "(Landroid/webkit/WebView;Landroid/webkit/WebViewRenderProcess;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewRenderProcessClient\0", "onRenderProcessUnresponsive\0", "(Landroid/webkit/WebView;Landroid/webkit/WebViewRenderProcess;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRenderProcessResponsive](https://developer.android.com/reference/android/webkit/WebViewRenderProcessClient.html#onRenderProcessResponsive(android.webkit.WebView,%20android.webkit.WebViewRenderProcess))
        ///
        /// Required features: "android-webkit-WebView", "android-webkit-WebViewRenderProcess"
        #[cfg(any(feature = "all", all(feature = "android-webkit-WebView", feature = "android-webkit-WebViewRenderProcess")))]
        pub fn onRenderProcessResponsive<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::webkit::WebView>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::webkit::WebViewRenderProcess>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/WebViewRenderProcessClient", java.flags == PUBLIC | ABSTRACT, .name == "onRenderProcessResponsive", .descriptor == "(Landroid/webkit/WebView;Landroid/webkit/WebViewRenderProcess;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/WebViewRenderProcessClient\0", "onRenderProcessResponsive\0", "(Landroid/webkit/WebView;Landroid/webkit/WebViewRenderProcess;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
