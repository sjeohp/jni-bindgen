// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-webkit-ServiceWorkerClient"))]
__jni_bindgen! {
    /// public class [ServiceWorkerClient](https://developer.android.com/reference/android/webkit/ServiceWorkerClient.html)
    ///
    /// Required feature: android-webkit-ServiceWorkerClient
    public class ServiceWorkerClient ("android/webkit/ServiceWorkerClient") extends crate::java::lang::Object {

        /// [ServiceWorkerClient](https://developer.android.com/reference/android/webkit/ServiceWorkerClient.html#ServiceWorkerClient())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::webkit::ServiceWorkerClient>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/ServiceWorkerClient", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/ServiceWorkerClient\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [shouldInterceptRequest](https://developer.android.com/reference/android/webkit/ServiceWorkerClient.html#shouldInterceptRequest(android.webkit.WebResourceRequest))
        ///
        /// Required features: "android-webkit-WebResourceRequest", "android-webkit-WebResourceResponse"
        #[cfg(any(feature = "all", all(feature = "android-webkit-WebResourceRequest", feature = "android-webkit-WebResourceResponse")))]
        pub fn shouldInterceptRequest<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::webkit::WebResourceRequest>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::webkit::WebResourceResponse>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/webkit/ServiceWorkerClient", java.flags == PUBLIC, .name == "shouldInterceptRequest", .descriptor == "(Landroid/webkit/WebResourceRequest;)Landroid/webkit/WebResourceResponse;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/webkit/ServiceWorkerClient\0", "shouldInterceptRequest\0", "(Landroid/webkit/WebResourceRequest;)Landroid/webkit/WebResourceResponse;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
