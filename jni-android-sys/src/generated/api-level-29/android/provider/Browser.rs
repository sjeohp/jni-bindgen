// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-provider-Browser"))]
__jni_bindgen! {
    /// public class [Browser](https://developer.android.com/reference/android/provider/Browser.html)
    ///
    /// Required feature: android-provider-Browser
    public class Browser ("android/provider/Browser") extends crate::java::lang::Object {

        /// [Browser](https://developer.android.com/reference/android/provider/Browser.html#Browser())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::provider::Browser>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/Browser", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/Browser\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [sendString](https://developer.android.com/reference/android/provider/Browser.html#sendString(android.content.Context,%20java.lang.String))
        ///
        /// Required features: "android-content-Context", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-lang-String")))]
        pub fn sendString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/Browser", java.flags == PUBLIC | STATIC | FINAL, .name == "sendString", .descriptor == "(Landroid/content/Context;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/Browser\0", "sendString\0", "(Landroid/content/Context;Ljava/lang/String;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [EXTRA_APPLICATION_ID](https://developer.android.com/reference/android/provider/Browser.html#EXTRA_APPLICATION_ID)
        pub const EXTRA_APPLICATION_ID : &'static str = "com.android.browser.application_id";

        /// public static final [EXTRA_CREATE_NEW_TAB](https://developer.android.com/reference/android/provider/Browser.html#EXTRA_CREATE_NEW_TAB)
        pub const EXTRA_CREATE_NEW_TAB : &'static str = "create_new_tab";

        /// public static final [EXTRA_HEADERS](https://developer.android.com/reference/android/provider/Browser.html#EXTRA_HEADERS)
        pub const EXTRA_HEADERS : &'static str = "com.android.browser.headers";

        /// public static final [INITIAL_ZOOM_LEVEL](https://developer.android.com/reference/android/provider/Browser.html#INITIAL_ZOOM_LEVEL)
        pub const INITIAL_ZOOM_LEVEL : &'static str = "browser.initialZoomLevel";
    }
}
