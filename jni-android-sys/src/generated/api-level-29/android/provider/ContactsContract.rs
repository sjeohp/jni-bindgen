// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-provider-ContactsContract"))]
__jni_bindgen! {
    /// public final class [ContactsContract](https://developer.android.com/reference/android/provider/ContactsContract.html)
    ///
    /// Required feature: android-provider-ContactsContract
    public final class ContactsContract ("android/provider/ContactsContract") extends crate::java::lang::Object {

        /// [ContactsContract](https://developer.android.com/reference/android/provider/ContactsContract.html#ContactsContract())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::provider::ContactsContract>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/ContactsContract\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isProfileId](https://developer.android.com/reference/android/provider/ContactsContract.html#isProfileId(long))
        pub fn isProfileId<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract", java.flags == PUBLIC | STATIC, .name == "isProfileId", .descriptor == "(J)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/ContactsContract\0", "isProfileId\0", "(J)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [AUTHORITY](https://developer.android.com/reference/android/provider/ContactsContract.html#AUTHORITY)
        pub const AUTHORITY : &'static str = "com.android.contacts";

        /// **get** public static final [AUTHORITY_URI](https://developer.android.com/reference/android/provider/ContactsContract.html#AUTHORITY_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn AUTHORITY_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract\0", "AUTHORITY_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [CALLER_IS_SYNCADAPTER](https://developer.android.com/reference/android/provider/ContactsContract.html#CALLER_IS_SYNCADAPTER)
        pub const CALLER_IS_SYNCADAPTER : &'static str = "caller_is_syncadapter";

        /// public static final [DEFERRED_SNIPPETING](https://developer.android.com/reference/android/provider/ContactsContract.html#DEFERRED_SNIPPETING)
        pub const DEFERRED_SNIPPETING : &'static str = "deferred_snippeting";

        /// public static final [DEFERRED_SNIPPETING_QUERY](https://developer.android.com/reference/android/provider/ContactsContract.html#DEFERRED_SNIPPETING_QUERY)
        pub const DEFERRED_SNIPPETING_QUERY : &'static str = "deferred_snippeting_query";

        /// public static final [DIRECTORY_PARAM_KEY](https://developer.android.com/reference/android/provider/ContactsContract.html#DIRECTORY_PARAM_KEY)
        pub const DIRECTORY_PARAM_KEY : &'static str = "directory";

        /// public static final [LIMIT_PARAM_KEY](https://developer.android.com/reference/android/provider/ContactsContract.html#LIMIT_PARAM_KEY)
        pub const LIMIT_PARAM_KEY : &'static str = "limit";

        /// public static final [PRIMARY_ACCOUNT_NAME](https://developer.android.com/reference/android/provider/ContactsContract.html#PRIMARY_ACCOUNT_NAME)
        pub const PRIMARY_ACCOUNT_NAME : &'static str = "name_for_primary_account";

        /// public static final [PRIMARY_ACCOUNT_TYPE](https://developer.android.com/reference/android/provider/ContactsContract.html#PRIMARY_ACCOUNT_TYPE)
        pub const PRIMARY_ACCOUNT_TYPE : &'static str = "type_for_primary_account";

        /// public static final [REMOVE_DUPLICATE_ENTRIES](https://developer.android.com/reference/android/provider/ContactsContract.html#REMOVE_DUPLICATE_ENTRIES)
        pub const REMOVE_DUPLICATE_ENTRIES : &'static str = "remove_duplicate_entries";

        /// public static final [STREQUENT_PHONE_ONLY](https://developer.android.com/reference/android/provider/ContactsContract.html#STREQUENT_PHONE_ONLY)
        pub const STREQUENT_PHONE_ONLY : &'static str = "strequent_phone_only";
    }
}
