// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-provider-ContactsContract_Contacts"))]
__jni_bindgen! {
    /// public class [ContactsContract.Contacts](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html)
    ///
    /// Required feature: android-provider-ContactsContract_Contacts
    public class ContactsContract_Contacts ("android/provider/ContactsContract$Contacts") extends crate::java::lang::Object, implements crate::android::provider::BaseColumns, crate::android::provider::ContactsContract_ContactsColumns, crate::android::provider::ContactsContract_ContactOptionsColumns, crate::android::provider::ContactsContract_ContactNameColumns, crate::android::provider::ContactsContract_ContactStatusColumns {

        // // Not emitting: Non-public method
        // /// [Contacts](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#Contacts())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::provider::ContactsContract_Contacts>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/provider/ContactsContract$Contacts", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/ContactsContract$Contacts\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getLookupUri](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#getLookupUri(android.content.ContentResolver,%20android.net.Uri))
        ///
        /// Required features: "android-content-ContentResolver", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-net-Uri")))]
        pub fn getLookupUri_ContentResolver_Uri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract$Contacts", java.flags == PUBLIC | STATIC, .name == "getLookupUri", .descriptor == "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/ContactsContract$Contacts\0", "getLookupUri\0", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLookupUri](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#getLookupUri(long,%20java.lang.String))
        ///
        /// Required features: "android-net-Uri", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri", feature = "java-lang-String")))]
        pub fn getLookupUri_long_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract$Contacts", java.flags == PUBLIC | STATIC, .name == "getLookupUri", .descriptor == "(JLjava/lang/String;)Landroid/net/Uri;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/ContactsContract$Contacts\0", "getLookupUri\0", "(JLjava/lang/String;)Landroid/net/Uri;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [lookupContact](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#lookupContact(android.content.ContentResolver,%20android.net.Uri))
        ///
        /// Required features: "android-content-ContentResolver", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-net-Uri")))]
        pub fn lookupContact<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract$Contacts", java.flags == PUBLIC | STATIC, .name == "lookupContact", .descriptor == "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/ContactsContract$Contacts\0", "lookupContact\0", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [markAsContacted](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#markAsContacted(android.content.ContentResolver,%20long))
        ///
        /// Required features: "android-content-ContentResolver"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver")))]
        #[deprecated] pub fn markAsContacted<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract$Contacts", java.flags == PUBLIC | STATIC, .name == "markAsContacted", .descriptor == "(Landroid/content/ContentResolver;J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/ContactsContract$Contacts\0", "markAsContacted\0", "(Landroid/content/ContentResolver;J)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isEnterpriseContactId](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#isEnterpriseContactId(long))
        pub fn isEnterpriseContactId<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract$Contacts", java.flags == PUBLIC | STATIC, .name == "isEnterpriseContactId", .descriptor == "(J)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/ContactsContract$Contacts\0", "isEnterpriseContactId\0", "(J)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [openContactPhotoInputStream](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#openContactPhotoInputStream(android.content.ContentResolver,%20android.net.Uri,%20boolean))
        ///
        /// Required features: "android-content-ContentResolver", "android-net-Uri", "java-io-InputStream"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-net-Uri", feature = "java-io-InputStream")))]
        pub fn openContactPhotoInputStream_ContentResolver_Uri_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::InputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract$Contacts", java.flags == PUBLIC | STATIC, .name == "openContactPhotoInputStream", .descriptor == "(Landroid/content/ContentResolver;Landroid/net/Uri;Z)Ljava/io/InputStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/ContactsContract$Contacts\0", "openContactPhotoInputStream\0", "(Landroid/content/ContentResolver;Landroid/net/Uri;Z)Ljava/io/InputStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [openContactPhotoInputStream](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#openContactPhotoInputStream(android.content.ContentResolver,%20android.net.Uri))
        ///
        /// Required features: "android-content-ContentResolver", "android-net-Uri", "java-io-InputStream"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-net-Uri", feature = "java-io-InputStream")))]
        pub fn openContactPhotoInputStream_ContentResolver_Uri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::InputStream>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/ContactsContract$Contacts", java.flags == PUBLIC | STATIC, .name == "openContactPhotoInputStream", .descriptor == "(Landroid/content/ContentResolver;Landroid/net/Uri;)Ljava/io/InputStream;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/ContactsContract$Contacts\0", "openContactPhotoInputStream\0", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Ljava/io/InputStream;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CONTENT_FILTER_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_FILTER_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_FILTER_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_FILTER_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTENT_FREQUENT_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_FREQUENT_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        #[deprecated] pub fn CONTENT_FREQUENT_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_FREQUENT_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTENT_GROUP_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_GROUP_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_GROUP_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_GROUP_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [CONTENT_ITEM_TYPE](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_ITEM_TYPE)
        pub const CONTENT_ITEM_TYPE : &'static str = "vnd.android.cursor.item/contact";

        /// **get** public static final [CONTENT_LOOKUP_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_LOOKUP_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_LOOKUP_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_LOOKUP_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTENT_MULTI_VCARD_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_MULTI_VCARD_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_MULTI_VCARD_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_MULTI_VCARD_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTENT_STREQUENT_FILTER_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_STREQUENT_FILTER_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_STREQUENT_FILTER_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_STREQUENT_FILTER_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CONTENT_STREQUENT_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_STREQUENT_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_STREQUENT_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_STREQUENT_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [CONTENT_TYPE](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_TYPE)
        pub const CONTENT_TYPE : &'static str = "vnd.android.cursor.dir/contact";

        /// **get** public static final [CONTENT_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [CONTENT_VCARD_TYPE](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_VCARD_TYPE)
        pub const CONTENT_VCARD_TYPE : &'static str = "text/x-vcard";

        /// **get** public static final [CONTENT_VCARD_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#CONTENT_VCARD_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_VCARD_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "CONTENT_VCARD_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ENTERPRISE_CONTENT_FILTER_URI](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#ENTERPRISE_CONTENT_FILTER_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn ENTERPRISE_CONTENT_FILTER_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/ContactsContract$Contacts\0", "ENTERPRISE_CONTENT_FILTER_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [EXTRA_ADDRESS_BOOK_INDEX](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#EXTRA_ADDRESS_BOOK_INDEX)
        pub const EXTRA_ADDRESS_BOOK_INDEX : &'static str = "android.provider.extra.ADDRESS_BOOK_INDEX";

        /// public static final [EXTRA_ADDRESS_BOOK_INDEX_COUNTS](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#EXTRA_ADDRESS_BOOK_INDEX_COUNTS)
        pub const EXTRA_ADDRESS_BOOK_INDEX_COUNTS : &'static str = "android.provider.extra.ADDRESS_BOOK_INDEX_COUNTS";

        /// public static final [EXTRA_ADDRESS_BOOK_INDEX_TITLES](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#EXTRA_ADDRESS_BOOK_INDEX_TITLES)
        pub const EXTRA_ADDRESS_BOOK_INDEX_TITLES : &'static str = "android.provider.extra.ADDRESS_BOOK_INDEX_TITLES";

        /// public static final [QUERY_PARAMETER_VCARD_NO_PHOTO](https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html#QUERY_PARAMETER_VCARD_NO_PHOTO)
        pub const QUERY_PARAMETER_VCARD_NO_PHOTO : &'static str = "no_photo";
    }
}
