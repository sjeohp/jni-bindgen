// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-provider-Contacts_ContactMethods"))]
__jni_bindgen! {
    /// public final class [Contacts.ContactMethods](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html)
    ///
    /// Required feature: android-provider-Contacts_ContactMethods
    #[deprecated] public final class Contacts_ContactMethods ("android/provider/Contacts$ContactMethods") extends crate::java::lang::Object, implements crate::android::provider::BaseColumns, crate::android::provider::Contacts_ContactMethodsColumns, crate::android::provider::Contacts_PeopleColumns {

        // // Not emitting: Non-public method
        // /// [ContactMethods](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#ContactMethods())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::provider::Contacts_ContactMethods>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/provider/Contacts$ContactMethods", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/Contacts$ContactMethods\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [encodePredefinedImProtocol](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#encodePredefinedImProtocol(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn encodePredefinedImProtocol<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/Contacts$ContactMethods", java.flags == PUBLIC | STATIC, .name == "encodePredefinedImProtocol", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/Contacts$ContactMethods\0", "encodePredefinedImProtocol\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [encodeCustomImProtocol](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#encodeCustomImProtocol(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn encodeCustomImProtocol<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/Contacts$ContactMethods", java.flags == PUBLIC | STATIC, .name == "encodeCustomImProtocol", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/Contacts$ContactMethods\0", "encodeCustomImProtocol\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [decodeImProtocol](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#decodeImProtocol(java.lang.String))
        ///
        /// Required features: "java-lang-Object", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String")))]
        #[deprecated] pub fn decodeImProtocol<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/Contacts$ContactMethods", java.flags == PUBLIC | STATIC, .name == "decodeImProtocol", .descriptor == "(Ljava/lang/String;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/Contacts$ContactMethods\0", "decodeImProtocol\0", "(Ljava/lang/String;)Ljava/lang/Object;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayLabel](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#getDisplayLabel(android.content.Context,%20int,%20int,%20java.lang.CharSequence))
        ///
        /// Required features: "android-content-Context", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-lang-CharSequence")))]
        #[deprecated] pub fn getDisplayLabel<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/Contacts$ContactMethods", java.flags == PUBLIC | STATIC, .name == "getDisplayLabel", .descriptor == "(Landroid/content/Context;IILjava/lang/CharSequence;)Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/Contacts$ContactMethods\0", "getDisplayLabel\0", "(Landroid/content/Context;IILjava/lang/CharSequence;)Ljava/lang/CharSequence;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addPostalLocation](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#addPostalLocation(android.content.Context,%20long,%20double,%20double))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        #[deprecated] pub fn addPostalLocation<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: i64, arg2: f64, arg3: f64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/Contacts$ContactMethods", java.flags == PUBLIC, .name == "addPostalLocation", .descriptor == "(Landroid/content/Context;JDD)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/Contacts$ContactMethods\0", "addPostalLocation\0", "(Landroid/content/Context;JDD)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CONTENT_EMAIL_ITEM_TYPE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_EMAIL_ITEM_TYPE)
        #[deprecated] pub const CONTENT_EMAIL_ITEM_TYPE : &'static str = "vnd.android.cursor.item/email";

        /// public static final [CONTENT_EMAIL_TYPE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_EMAIL_TYPE)
        #[deprecated] pub const CONTENT_EMAIL_TYPE : &'static str = "vnd.android.cursor.dir/email";

        /// **get** public static final [CONTENT_EMAIL_URI](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_EMAIL_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        #[deprecated] pub fn CONTENT_EMAIL_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/Contacts$ContactMethods\0", "CONTENT_EMAIL_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [CONTENT_IM_ITEM_TYPE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_IM_ITEM_TYPE)
        #[deprecated] pub const CONTENT_IM_ITEM_TYPE : &'static str = "vnd.android.cursor.item/jabber-im";

        /// public static final [CONTENT_POSTAL_ITEM_TYPE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_POSTAL_ITEM_TYPE)
        #[deprecated] pub const CONTENT_POSTAL_ITEM_TYPE : &'static str = "vnd.android.cursor.item/postal-address";

        /// public static final [CONTENT_POSTAL_TYPE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_POSTAL_TYPE)
        #[deprecated] pub const CONTENT_POSTAL_TYPE : &'static str = "vnd.android.cursor.dir/postal-address";

        /// public static final [CONTENT_TYPE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_TYPE)
        #[deprecated] pub const CONTENT_TYPE : &'static str = "vnd.android.cursor.dir/contact-methods";

        /// **get** public static final [CONTENT_URI](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        #[deprecated] pub fn CONTENT_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/Contacts$ContactMethods\0", "CONTENT_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [DEFAULT_SORT_ORDER](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#DEFAULT_SORT_ORDER)
        #[deprecated] pub const DEFAULT_SORT_ORDER : &'static str = "name ASC";

        /// public static final [PERSON_ID](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PERSON_ID)
        #[deprecated] pub const PERSON_ID : &'static str = "person";

        /// public static final [POSTAL_LOCATION_LATITUDE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#POSTAL_LOCATION_LATITUDE)
        #[deprecated] pub const POSTAL_LOCATION_LATITUDE : &'static str = "data";

        /// public static final [POSTAL_LOCATION_LONGITUDE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#POSTAL_LOCATION_LONGITUDE)
        #[deprecated] pub const POSTAL_LOCATION_LONGITUDE : &'static str = "aux_data";

        /// public static final [PROTOCOL_AIM](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_AIM)
        #[deprecated] pub const PROTOCOL_AIM : i32 = 0;

        /// public static final [PROTOCOL_GOOGLE_TALK](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_GOOGLE_TALK)
        #[deprecated] pub const PROTOCOL_GOOGLE_TALK : i32 = 5;

        /// public static final [PROTOCOL_ICQ](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_ICQ)
        #[deprecated] pub const PROTOCOL_ICQ : i32 = 6;

        /// public static final [PROTOCOL_JABBER](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_JABBER)
        #[deprecated] pub const PROTOCOL_JABBER : i32 = 7;

        /// public static final [PROTOCOL_MSN](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_MSN)
        #[deprecated] pub const PROTOCOL_MSN : i32 = 1;

        /// public static final [PROTOCOL_QQ](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_QQ)
        #[deprecated] pub const PROTOCOL_QQ : i32 = 4;

        /// public static final [PROTOCOL_SKYPE](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_SKYPE)
        #[deprecated] pub const PROTOCOL_SKYPE : i32 = 3;

        /// public static final [PROTOCOL_YAHOO](https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_YAHOO)
        #[deprecated] pub const PROTOCOL_YAHOO : i32 = 2;
    }
}
