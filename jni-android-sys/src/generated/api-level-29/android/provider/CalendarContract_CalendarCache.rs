// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-provider-CalendarContract_CalendarCache"))]
__jni_bindgen! {
    /// public final class [CalendarContract.CalendarCache](https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html)
    ///
    /// Required feature: android-provider-CalendarContract_CalendarCache
    public final class CalendarContract_CalendarCache ("android/provider/CalendarContract$CalendarCache") extends crate::java::lang::Object, implements crate::android::provider::CalendarContract_CalendarCacheColumns {

        // // Not emitting: Non-public method
        // /// [CalendarCache](https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html#CalendarCache())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::provider::CalendarContract_CalendarCache>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/provider/CalendarContract$CalendarCache", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/CalendarContract$CalendarCache\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [KEY_TIMEZONE_INSTANCES](https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html#KEY_TIMEZONE_INSTANCES)
        pub const KEY_TIMEZONE_INSTANCES : &'static str = "timezoneInstances";

        /// public static final [KEY_TIMEZONE_INSTANCES_PREVIOUS](https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html#KEY_TIMEZONE_INSTANCES_PREVIOUS)
        pub const KEY_TIMEZONE_INSTANCES_PREVIOUS : &'static str = "timezoneInstancesPrevious";

        /// public static final [KEY_TIMEZONE_TYPE](https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html#KEY_TIMEZONE_TYPE)
        pub const KEY_TIMEZONE_TYPE : &'static str = "timezoneType";

        /// public static final [TIMEZONE_TYPE_AUTO](https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html#TIMEZONE_TYPE_AUTO)
        pub const TIMEZONE_TYPE_AUTO : &'static str = "auto";

        /// public static final [TIMEZONE_TYPE_HOME](https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html#TIMEZONE_TYPE_HOME)
        pub const TIMEZONE_TYPE_HOME : &'static str = "home";

        /// **get** public static final [URI](https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html#URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/CalendarContract$CalendarCache\0", "URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
