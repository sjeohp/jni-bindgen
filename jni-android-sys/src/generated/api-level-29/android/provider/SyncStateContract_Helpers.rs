// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-provider-SyncStateContract_Helpers"))]
__jni_bindgen! {
    /// public final class [SyncStateContract.Helpers](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html)
    ///
    /// Required feature: android-provider-SyncStateContract_Helpers
    public final class SyncStateContract_Helpers ("android/provider/SyncStateContract$Helpers") extends crate::java::lang::Object {

        /// [Helpers](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html#Helpers())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::provider::SyncStateContract_Helpers>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/SyncStateContract$Helpers", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/SyncStateContract$Helpers\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html#get(android.content.ContentProviderClient,%20android.net.Uri,%20android.accounts.Account))
        ///
        /// Required features: "android-accounts-Account", "android-content-ContentProviderClient", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-accounts-Account", feature = "android-content-ContentProviderClient", feature = "android-net-Uri")))]
        pub fn get<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentProviderClient>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::accounts::Account>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/SyncStateContract$Helpers", java.flags == PUBLIC | STATIC, .name == "get", .descriptor == "(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;)[B"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/SyncStateContract$Helpers\0", "get\0", "(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;)[B\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [set](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html#set(android.content.ContentProviderClient,%20android.net.Uri,%20android.accounts.Account,%20byte%5B%5D))
        ///
        /// Required features: "android-accounts-Account", "android-content-ContentProviderClient", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-accounts-Account", feature = "android-content-ContentProviderClient", feature = "android-net-Uri")))]
        pub fn set<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentProviderClient>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::accounts::Account>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/SyncStateContract$Helpers", java.flags == PUBLIC | STATIC, .name == "set", .descriptor == "(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;[B)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/SyncStateContract$Helpers\0", "set\0", "(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;[B)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [insert](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html#insert(android.content.ContentProviderClient,%20android.net.Uri,%20android.accounts.Account,%20byte%5B%5D))
        ///
        /// Required features: "android-accounts-Account", "android-content-ContentProviderClient", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-accounts-Account", feature = "android-content-ContentProviderClient", feature = "android-net-Uri")))]
        pub fn insert<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentProviderClient>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::accounts::Account>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/SyncStateContract$Helpers", java.flags == PUBLIC | STATIC, .name == "insert", .descriptor == "(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;[B)Landroid/net/Uri;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/SyncStateContract$Helpers\0", "insert\0", "(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;[B)Landroid/net/Uri;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [update](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html#update(android.content.ContentProviderClient,%20android.net.Uri,%20byte%5B%5D))
        ///
        /// Required features: "android-content-ContentProviderClient", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentProviderClient", feature = "android-net-Uri")))]
        pub fn update<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentProviderClient>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/SyncStateContract$Helpers", java.flags == PUBLIC | STATIC, .name == "update", .descriptor == "(Landroid/content/ContentProviderClient;Landroid/net/Uri;[B)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/SyncStateContract$Helpers\0", "update\0", "(Landroid/content/ContentProviderClient;Landroid/net/Uri;[B)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWithUri](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html#getWithUri(android.content.ContentProviderClient,%20android.net.Uri,%20android.accounts.Account))
        ///
        /// Required features: "android-accounts-Account", "android-content-ContentProviderClient", "android-net-Uri", "android-util-Pair"
        #[cfg(any(feature = "all", all(feature = "android-accounts-Account", feature = "android-content-ContentProviderClient", feature = "android-net-Uri", feature = "android-util-Pair")))]
        pub fn getWithUri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentProviderClient>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::accounts::Account>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::util::Pair>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/SyncStateContract$Helpers", java.flags == PUBLIC | STATIC, .name == "getWithUri", .descriptor == "(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;)Landroid/util/Pair;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/SyncStateContract$Helpers\0", "getWithUri\0", "(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;)Landroid/util/Pair;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newSetOperation](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html#newSetOperation(android.net.Uri,%20android.accounts.Account,%20byte%5B%5D))
        ///
        /// Required features: "android-accounts-Account", "android-content-ContentProviderOperation", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-accounts-Account", feature = "android-content-ContentProviderOperation", feature = "android-net-Uri")))]
        pub fn newSetOperation<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::accounts::Account>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ContentProviderOperation>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/SyncStateContract$Helpers", java.flags == PUBLIC | STATIC, .name == "newSetOperation", .descriptor == "(Landroid/net/Uri;Landroid/accounts/Account;[B)Landroid/content/ContentProviderOperation;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/SyncStateContract$Helpers\0", "newSetOperation\0", "(Landroid/net/Uri;Landroid/accounts/Account;[B)Landroid/content/ContentProviderOperation;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [newUpdateOperation](https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html#newUpdateOperation(android.net.Uri,%20byte%5B%5D))
        ///
        /// Required features: "android-content-ContentProviderOperation", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentProviderOperation", feature = "android-net-Uri")))]
        pub fn newUpdateOperation<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ContentProviderOperation>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/SyncStateContract$Helpers", java.flags == PUBLIC | STATIC, .name == "newUpdateOperation", .descriptor == "(Landroid/net/Uri;[B)Landroid/content/ContentProviderOperation;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/SyncStateContract$Helpers\0", "newUpdateOperation\0", "(Landroid/net/Uri;[B)Landroid/content/ContentProviderOperation;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
