// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-provider-CalendarContract_Attendees"))]
__jni_bindgen! {
    /// public final class [CalendarContract.Attendees](https://developer.android.com/reference/android/provider/CalendarContract.Attendees.html)
    ///
    /// Required feature: android-provider-CalendarContract_Attendees
    public final class CalendarContract_Attendees ("android/provider/CalendarContract$Attendees") extends crate::java::lang::Object, implements crate::android::provider::BaseColumns, crate::android::provider::CalendarContract_AttendeesColumns, crate::android::provider::CalendarContract_EventsColumns {

        // // Not emitting: Non-public method
        // /// [Attendees](https://developer.android.com/reference/android/provider/CalendarContract.Attendees.html#Attendees())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::provider::CalendarContract_Attendees>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/provider/CalendarContract$Attendees", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/CalendarContract$Attendees\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [query](https://developer.android.com/reference/android/provider/CalendarContract.Attendees.html#query(android.content.ContentResolver,%20long,%20java.lang.String%5B%5D))
        ///
        /// Required features: "android-content-ContentResolver", "android-database-Cursor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-database-Cursor", feature = "java-lang-String")))]
        pub fn query<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: i64, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::database::Cursor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/CalendarContract$Attendees", java.flags == PUBLIC | STATIC, .name == "query", .descriptor == "(Landroid/content/ContentResolver;J[Ljava/lang/String;)Landroid/database/Cursor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/CalendarContract$Attendees\0", "query\0", "(Landroid/content/ContentResolver;J[Ljava/lang/String;)Landroid/database/Cursor;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CONTENT_URI](https://developer.android.com/reference/android/provider/CalendarContract.Attendees.html#CONTENT_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        pub fn CONTENT_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/CalendarContract$Attendees\0", "CONTENT_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
