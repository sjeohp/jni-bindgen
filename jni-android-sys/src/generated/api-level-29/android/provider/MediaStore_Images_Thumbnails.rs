// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-provider-MediaStore_Images_Thumbnails"))]
__jni_bindgen! {
    /// public class [MediaStore.Images.Thumbnails](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html)
    ///
    /// Required feature: android-provider-MediaStore_Images_Thumbnails
    #[deprecated] public class MediaStore_Images_Thumbnails ("android/provider/MediaStore$Images$Thumbnails") extends crate::java::lang::Object, implements crate::android::provider::BaseColumns {

        /// [Thumbnails](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#Thumbnails())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::provider::MediaStore_Images_Thumbnails>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/provider/MediaStore$Images$Thumbnails\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [query](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#query(android.content.ContentResolver,%20android.net.Uri,%20java.lang.String%5B%5D))
        ///
        /// Required features: "android-content-ContentResolver", "android-database-Cursor", "android-net-Uri", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-database-Cursor", feature = "android-net-Uri", feature = "java-lang-String")))]
        #[deprecated] pub fn query<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::database::Cursor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC | STATIC | FINAL, .name == "query", .descriptor == "(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;)Landroid/database/Cursor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/MediaStore$Images$Thumbnails\0", "query\0", "(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;)Landroid/database/Cursor;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryMiniThumbnails](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#queryMiniThumbnails(android.content.ContentResolver,%20android.net.Uri,%20int,%20java.lang.String%5B%5D))
        ///
        /// Required features: "android-content-ContentResolver", "android-database-Cursor", "android-net-Uri", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-database-Cursor", feature = "android-net-Uri", feature = "java-lang-String")))]
        #[deprecated] pub fn queryMiniThumbnails<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::database::Cursor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC | STATIC | FINAL, .name == "queryMiniThumbnails", .descriptor == "(Landroid/content/ContentResolver;Landroid/net/Uri;I[Ljava/lang/String;)Landroid/database/Cursor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/MediaStore$Images$Thumbnails\0", "queryMiniThumbnails\0", "(Landroid/content/ContentResolver;Landroid/net/Uri;I[Ljava/lang/String;)Landroid/database/Cursor;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryMiniThumbnail](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#queryMiniThumbnail(android.content.ContentResolver,%20long,%20int,%20java.lang.String%5B%5D))
        ///
        /// Required features: "android-content-ContentResolver", "android-database-Cursor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-database-Cursor", feature = "java-lang-String")))]
        #[deprecated] pub fn queryMiniThumbnail<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: i64, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::database::Cursor>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC | STATIC | FINAL, .name == "queryMiniThumbnail", .descriptor == "(Landroid/content/ContentResolver;JI[Ljava/lang/String;)Landroid/database/Cursor;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/MediaStore$Images$Thumbnails\0", "queryMiniThumbnail\0", "(Landroid/content/ContentResolver;JI[Ljava/lang/String;)Landroid/database/Cursor;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cancelThumbnailRequest](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#cancelThumbnailRequest(android.content.ContentResolver,%20long))
        ///
        /// Required features: "android-content-ContentResolver"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver")))]
        #[deprecated] pub fn cancelThumbnailRequest_ContentResolver_long<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC | STATIC, .name == "cancelThumbnailRequest", .descriptor == "(Landroid/content/ContentResolver;J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/MediaStore$Images$Thumbnails\0", "cancelThumbnailRequest\0", "(Landroid/content/ContentResolver;J)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThumbnail](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#getThumbnail(android.content.ContentResolver,%20long,%20int,%20android.graphics.BitmapFactory.Options))
        ///
        /// Required features: "android-content-ContentResolver", "android-graphics-Bitmap", "android-graphics-BitmapFactory_Options"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-graphics-Bitmap", feature = "android-graphics-BitmapFactory_Options")))]
        #[deprecated] pub fn getThumbnail_ContentResolver_long_int_Options<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: i64, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::BitmapFactory_Options>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Bitmap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC | STATIC, .name == "getThumbnail", .descriptor == "(Landroid/content/ContentResolver;JILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/MediaStore$Images$Thumbnails\0", "getThumbnail\0", "(Landroid/content/ContentResolver;JILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cancelThumbnailRequest](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#cancelThumbnailRequest(android.content.ContentResolver,%20long,%20long))
        ///
        /// Required features: "android-content-ContentResolver"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver")))]
        #[deprecated] pub fn cancelThumbnailRequest_ContentResolver_long_long<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: i64, arg2: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC | STATIC, .name == "cancelThumbnailRequest", .descriptor == "(Landroid/content/ContentResolver;JJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/MediaStore$Images$Thumbnails\0", "cancelThumbnailRequest\0", "(Landroid/content/ContentResolver;JJ)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThumbnail](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#getThumbnail(android.content.ContentResolver,%20long,%20long,%20int,%20android.graphics.BitmapFactory.Options))
        ///
        /// Required features: "android-content-ContentResolver", "android-graphics-Bitmap", "android-graphics-BitmapFactory_Options"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "android-graphics-Bitmap", feature = "android-graphics-BitmapFactory_Options")))]
        #[deprecated] pub fn getThumbnail_ContentResolver_long_long_int_Options<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>, arg1: i64, arg2: i64, arg3: i32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::BitmapFactory_Options>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Bitmap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC | STATIC, .name == "getThumbnail", .descriptor == "(Landroid/content/ContentResolver;JJILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/MediaStore$Images$Thumbnails\0", "getThumbnail\0", "(Landroid/content/ContentResolver;JJILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContentUri](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#getContentUri(java.lang.String))
        ///
        /// Required features: "android-net-Uri", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri", feature = "java-lang-String")))]
        #[deprecated] pub fn getContentUri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/provider/MediaStore$Images$Thumbnails", java.flags == PUBLIC | STATIC, .name == "getContentUri", .descriptor == "(Ljava/lang/String;)Landroid/net/Uri;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/provider/MediaStore$Images$Thumbnails\0", "getContentUri\0", "(Ljava/lang/String;)Landroid/net/Uri;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [DATA](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#DATA)
        #[deprecated] pub const DATA : &'static str = "_data";

        /// public static final [DEFAULT_SORT_ORDER](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#DEFAULT_SORT_ORDER)
        #[deprecated] pub const DEFAULT_SORT_ORDER : &'static str = "image_id ASC";

        /// **get** public static final [EXTERNAL_CONTENT_URI](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#EXTERNAL_CONTENT_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        #[deprecated] pub fn EXTERNAL_CONTENT_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/MediaStore$Images$Thumbnails\0", "EXTERNAL_CONTENT_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [FULL_SCREEN_KIND](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#FULL_SCREEN_KIND)
        #[deprecated] pub const FULL_SCREEN_KIND : i32 = 2;

        /// public static final [HEIGHT](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#HEIGHT)
        #[deprecated] pub const HEIGHT : &'static str = "height";

        /// public static final [IMAGE_ID](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#IMAGE_ID)
        #[deprecated] pub const IMAGE_ID : &'static str = "image_id";

        /// **get** public static final [INTERNAL_CONTENT_URI](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#INTERNAL_CONTENT_URI)
        ///
        /// Required feature: android-net-Uri
        #[cfg(any(feature = "all", feature = "android-net-Uri"))]
        #[deprecated] pub fn INTERNAL_CONTENT_URI<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/provider/MediaStore$Images$Thumbnails\0", "INTERNAL_CONTENT_URI\0", "Landroid/net/Uri;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [KIND](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#KIND)
        #[deprecated] pub const KIND : &'static str = "kind";

        /// public static final [MICRO_KIND](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#MICRO_KIND)
        #[deprecated] pub const MICRO_KIND : i32 = 3;

        /// public static final [MINI_KIND](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#MINI_KIND)
        #[deprecated] pub const MINI_KIND : i32 = 1;

        /// public static final [THUMB_DATA](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#THUMB_DATA)
        #[deprecated] pub const THUMB_DATA : &'static str = "thumb_data";

        /// public static final [WIDTH](https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html#WIDTH)
        #[deprecated] pub const WIDTH : &'static str = "width";
    }
}
