// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-graphics-LinearGradient"))]
__jni_bindgen! {
    /// public class [LinearGradient](https://developer.android.com/reference/android/graphics/LinearGradient.html)
    ///
    /// Required feature: android-graphics-LinearGradient
    public class LinearGradient ("android/graphics/LinearGradient") extends crate::android::graphics::Shader {

        /// [LinearGradient](https://developer.android.com/reference/android/graphics/LinearGradient.html#LinearGradient(float,%20float,%20float,%20float,%20int%5B%5D,%20float%5B%5D,%20android.graphics.Shader.TileMode))
        ///
        /// Required features: "android-graphics-Shader_TileMode"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Shader_TileMode")))]
        pub fn new_float_float_float_float_int_array_float_array_TileMode<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Shader_TileMode>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::LinearGradient>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/LinearGradient", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFFF[I[FLandroid/graphics/Shader$TileMode;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/LinearGradient\0", "<init>\0", "(FFFF[I[FLandroid/graphics/Shader$TileMode;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LinearGradient](https://developer.android.com/reference/android/graphics/LinearGradient.html#LinearGradient(float,%20float,%20float,%20float,%20long%5B%5D,%20float%5B%5D,%20android.graphics.Shader.TileMode))
        ///
        /// Required features: "android-graphics-Shader_TileMode"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Shader_TileMode")))]
        pub fn new_float_float_float_float_long_array_float_array_TileMode<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::LongArray>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Shader_TileMode>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::LinearGradient>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/LinearGradient", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFFF[J[FLandroid/graphics/Shader$TileMode;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/LinearGradient\0", "<init>\0", "(FFFF[J[FLandroid/graphics/Shader$TileMode;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LinearGradient](https://developer.android.com/reference/android/graphics/LinearGradient.html#LinearGradient(float,%20float,%20float,%20float,%20int,%20int,%20android.graphics.Shader.TileMode))
        ///
        /// Required features: "android-graphics-Shader_TileMode"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Shader_TileMode")))]
        pub fn new_float_float_float_float_int_int_TileMode<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: i32, arg5: i32, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Shader_TileMode>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::LinearGradient>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/LinearGradient", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFFFIILandroid/graphics/Shader$TileMode;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/LinearGradient\0", "<init>\0", "(FFFFIILandroid/graphics/Shader$TileMode;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [LinearGradient](https://developer.android.com/reference/android/graphics/LinearGradient.html#LinearGradient(float,%20float,%20float,%20float,%20long,%20long,%20android.graphics.Shader.TileMode))
        ///
        /// Required features: "android-graphics-Shader_TileMode"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Shader_TileMode")))]
        pub fn new_float_float_float_float_long_long_TileMode<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32, arg1: f32, arg2: f32, arg3: f32, arg4: i64, arg5: i64, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Shader_TileMode>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::LinearGradient>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/LinearGradient", java.flags == PUBLIC, .name == "<init>", .descriptor == "(FFFFJJLandroid/graphics/Shader$TileMode;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/LinearGradient\0", "<init>\0", "(FFFFJJLandroid/graphics/Shader$TileMode;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
