// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-graphics-Typeface_Builder"))]
__jni_bindgen! {
    /// public final class [Typeface.Builder](https://developer.android.com/reference/android/graphics/Typeface.Builder.html)
    ///
    /// Required feature: android-graphics-Typeface_Builder
    public final class Typeface_Builder ("android/graphics/Typeface$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#Builder(java.io.File))
        ///
        /// Required features: "java-io-File"
        #[cfg(any(feature = "all", all(feature = "java-io-File")))]
        pub fn new_File<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/File;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "<init>\0", "(Ljava/io/File;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#Builder(java.io.FileDescriptor))
        ///
        /// Required features: "java-io-FileDescriptor"
        #[cfg(any(feature = "all", all(feature = "java-io-FileDescriptor")))]
        pub fn new_FileDescriptor<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::FileDescriptor>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/FileDescriptor;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "<init>\0", "(Ljava/io/FileDescriptor;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#Builder(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#Builder(android.content.res.AssetManager,%20java.lang.String))
        ///
        /// Required features: "android-content-res-AssetManager", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-res-AssetManager", feature = "java-lang-String")))]
        pub fn new_AssetManager_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::res::AssetManager>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/res/AssetManager;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "<init>\0", "(Landroid/content/res/AssetManager;Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setWeight](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#setWeight(int))
        ///
        /// Required features: "android-graphics-Typeface_Builder"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Typeface_Builder")))]
        pub fn setWeight<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "setWeight", .descriptor == "(I)Landroid/graphics/Typeface$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "setWeight\0", "(I)Landroid/graphics/Typeface$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setItalic](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#setItalic(boolean))
        ///
        /// Required features: "android-graphics-Typeface_Builder"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Typeface_Builder")))]
        pub fn setItalic<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "setItalic", .descriptor == "(Z)Landroid/graphics/Typeface$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "setItalic\0", "(Z)Landroid/graphics/Typeface$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTtcIndex](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#setTtcIndex(int))
        ///
        /// Required features: "android-graphics-Typeface_Builder"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Typeface_Builder")))]
        pub fn setTtcIndex<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "setTtcIndex", .descriptor == "(I)Landroid/graphics/Typeface$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "setTtcIndex\0", "(I)Landroid/graphics/Typeface$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFontVariationSettings](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#setFontVariationSettings(java.lang.String))
        ///
        /// Required features: "android-graphics-Typeface_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Typeface_Builder", feature = "java-lang-String")))]
        pub fn setFontVariationSettings_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "setFontVariationSettings", .descriptor == "(Ljava/lang/String;)Landroid/graphics/Typeface$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "setFontVariationSettings\0", "(Ljava/lang/String;)Landroid/graphics/Typeface$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFontVariationSettings](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#setFontVariationSettings(android.graphics.fonts.FontVariationAxis%5B%5D))
        ///
        /// Required features: "android-graphics-Typeface_Builder", "android-graphics-fonts-FontVariationAxis"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Typeface_Builder", feature = "android-graphics-fonts-FontVariationAxis")))]
        pub fn setFontVariationSettings_FontVariationAxis_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::graphics::fonts::FontVariationAxis, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "setFontVariationSettings", .descriptor == "([Landroid/graphics/fonts/FontVariationAxis;)Landroid/graphics/Typeface$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "setFontVariationSettings\0", "([Landroid/graphics/fonts/FontVariationAxis;)Landroid/graphics/Typeface$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFallback](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#setFallback(java.lang.String))
        ///
        /// Required features: "android-graphics-Typeface_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Typeface_Builder", feature = "java-lang-String")))]
        pub fn setFallback<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Typeface_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "setFallback", .descriptor == "(Ljava/lang/String;)Landroid/graphics/Typeface$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "setFallback\0", "(Ljava/lang/String;)Landroid/graphics/Typeface$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/graphics/Typeface.Builder.html#build())
        ///
        /// Required features: "android-graphics-Typeface"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Typeface")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Typeface>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/Typeface$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/graphics/Typeface;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/Typeface$Builder\0", "build\0", "()Landroid/graphics/Typeface;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
