// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-graphics-ImageDecoder_OnHeaderDecodedListener"))]
__jni_bindgen! {
    /// public interface [ImageDecoder.OnHeaderDecodedListener](https://developer.android.com/reference/android/graphics/ImageDecoder.OnHeaderDecodedListener.html)
    ///
    /// Required feature: android-graphics-ImageDecoder_OnHeaderDecodedListener
    public interface ImageDecoder_OnHeaderDecodedListener ("android/graphics/ImageDecoder$OnHeaderDecodedListener") extends crate::java::lang::Object {

        /// [onHeaderDecoded](https://developer.android.com/reference/android/graphics/ImageDecoder.OnHeaderDecodedListener.html#onHeaderDecoded(android.graphics.ImageDecoder,%20android.graphics.ImageDecoder.ImageInfo,%20android.graphics.ImageDecoder.Source))
        ///
        /// Required features: "android-graphics-ImageDecoder", "android-graphics-ImageDecoder_ImageInfo", "android-graphics-ImageDecoder_Source"
        #[cfg(any(feature = "all", all(feature = "android-graphics-ImageDecoder", feature = "android-graphics-ImageDecoder_ImageInfo", feature = "android-graphics-ImageDecoder_Source")))]
        pub fn onHeaderDecoded<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::ImageDecoder>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::ImageDecoder_ImageInfo>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::ImageDecoder_Source>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/ImageDecoder$OnHeaderDecodedListener", java.flags == PUBLIC | ABSTRACT, .name == "onHeaderDecoded", .descriptor == "(Landroid/graphics/ImageDecoder;Landroid/graphics/ImageDecoder$ImageInfo;Landroid/graphics/ImageDecoder$Source;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/ImageDecoder$OnHeaderDecodedListener\0", "onHeaderDecoded\0", "(Landroid/graphics/ImageDecoder;Landroid/graphics/ImageDecoder$ImageInfo;Landroid/graphics/ImageDecoder$Source;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
