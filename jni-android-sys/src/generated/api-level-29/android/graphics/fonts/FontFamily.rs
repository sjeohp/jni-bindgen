// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-graphics-fonts-FontFamily"))]
__jni_bindgen! {
    /// public final class [FontFamily](https://developer.android.com/reference/android/graphics/fonts/FontFamily.html)
    ///
    /// Required feature: android-graphics-fonts-FontFamily
    public final class FontFamily ("android/graphics/fonts/FontFamily") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [FontFamily](https://developer.android.com/reference/android/graphics/fonts/FontFamily.html#FontFamily(java.util.ArrayList,%20long))
        // ///
        // /// Required features: "java-util-ArrayList"
        // #[cfg(any(feature = "all", all(feature = "java-util-ArrayList")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::fonts::FontFamily>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/graphics/fonts/FontFamily", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/util/ArrayList;J)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/fonts/FontFamily\0", "<init>\0", "(Ljava/util/ArrayList;J)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getFont](https://developer.android.com/reference/android/graphics/fonts/FontFamily.html#getFont(int))
        ///
        /// Required features: "android-graphics-fonts-Font"
        #[cfg(any(feature = "all", all(feature = "android-graphics-fonts-Font")))]
        pub fn getFont<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::fonts::Font>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/fonts/FontFamily", java.flags == PUBLIC, .name == "getFont", .descriptor == "(I)Landroid/graphics/fonts/Font;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/fonts/FontFamily\0", "getFont\0", "(I)Landroid/graphics/fonts/Font;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSize](https://developer.android.com/reference/android/graphics/fonts/FontFamily.html#getSize())
        pub fn getSize<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/fonts/FontFamily", java.flags == PUBLIC, .name == "getSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/fonts/FontFamily\0", "getSize\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
