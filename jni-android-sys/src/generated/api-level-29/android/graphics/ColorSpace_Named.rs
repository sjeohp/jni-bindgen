// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
__jni_bindgen! {
    /// public enum [ColorSpace.Named](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html)
    ///
    /// Required feature: android-graphics-ColorSpace_Named
    public enum ColorSpace_Named ("android/graphics/ColorSpace$Named") extends crate::java::lang::Enum {

        /// [values](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#values())
        ///
        /// Required features: "android-graphics-ColorSpace_Named"
        #[cfg(any(feature = "all", all(feature = "android-graphics-ColorSpace_Named")))]
        pub fn values<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::graphics::ColorSpace_Named, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/ColorSpace$Named", java.flags == PUBLIC | STATIC, .name == "values", .descriptor == "()[Landroid/graphics/ColorSpace$Named;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/graphics/ColorSpace$Named\0", "values\0", "()[Landroid/graphics/ColorSpace$Named;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [valueOf](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#valueOf(java.lang.String))
        ///
        /// Required features: "android-graphics-ColorSpace_Named", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-graphics-ColorSpace_Named", feature = "java-lang-String")))]
        pub fn valueOf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/graphics/ColorSpace$Named", java.flags == PUBLIC | STATIC, .name == "valueOf", .descriptor == "(Ljava/lang/String;)Landroid/graphics/ColorSpace$Named;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/graphics/ColorSpace$Named\0", "valueOf\0", "(Ljava/lang/String;)Landroid/graphics/ColorSpace$Named;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [Named](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#Named(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/graphics/ColorSpace$Named", java.flags == PRIVATE, .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/graphics/ColorSpace$Named\0", "<init>\0", "(Ljava/lang/String;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// **get** public static final [SRGB](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#SRGB)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn SRGB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "SRGB\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LINEAR_SRGB](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#LINEAR_SRGB)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn LINEAR_SRGB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "LINEAR_SRGB\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [EXTENDED_SRGB](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#EXTENDED_SRGB)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn EXTENDED_SRGB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "EXTENDED_SRGB\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [LINEAR_EXTENDED_SRGB](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#LINEAR_EXTENDED_SRGB)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn LINEAR_EXTENDED_SRGB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "LINEAR_EXTENDED_SRGB\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [BT709](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#BT709)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn BT709<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "BT709\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [BT2020](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#BT2020)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn BT2020<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "BT2020\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DCI_P3](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#DCI_P3)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn DCI_P3<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "DCI_P3\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [DISPLAY_P3](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#DISPLAY_P3)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn DISPLAY_P3<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "DISPLAY_P3\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [NTSC_1953](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#NTSC_1953)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn NTSC_1953<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "NTSC_1953\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [SMPTE_C](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#SMPTE_C)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn SMPTE_C<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "SMPTE_C\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ADOBE_RGB](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#ADOBE_RGB)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn ADOBE_RGB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "ADOBE_RGB\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [PRO_PHOTO_RGB](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#PRO_PHOTO_RGB)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn PRO_PHOTO_RGB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "PRO_PHOTO_RGB\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ACES](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#ACES)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn ACES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "ACES\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [ACESCG](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#ACESCG)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn ACESCG<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "ACESCG\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CIE_XYZ](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#CIE_XYZ)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn CIE_XYZ<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "CIE_XYZ\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public static final [CIE_LAB](https://developer.android.com/reference/android/graphics/ColorSpace.Named.html#CIE_LAB)
        ///
        /// Required feature: android-graphics-ColorSpace_Named
        #[cfg(any(feature = "all", feature = "android-graphics-ColorSpace_Named"))]
        pub fn CIE_LAB<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::ColorSpace_Named>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/graphics/ColorSpace$Named\0", "CIE_LAB\0", "Landroid/graphics/ColorSpace$Named;\0");
                env.get_static_object_field(class, field)
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: enum $VALUES
        // pub fn get_"$VALUES"<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::graphics::ColorSpace_Named, crate::java::lang::Throwable>>> { ... }
    }
}
