// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-sax-Element"))]
__jni_bindgen! {
    /// public class [Element](https://developer.android.com/reference/android/sax/Element.html)
    ///
    /// Required feature: android-sax-Element
    public class Element ("android/sax/Element") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Element](https://developer.android.com/reference/android/sax/Element.html#Element(android.sax.Element,%20java.lang.String,%20java.lang.String,%20int))
        // ///
        // /// Required features: "android-sax-Element", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-sax-Element", feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::sax::Element>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::sax::Element>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/sax/Element", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/sax/Element;Ljava/lang/String;Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "<init>\0", "(Landroid/sax/Element;Ljava/lang/String;Ljava/lang/String;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getChild](https://developer.android.com/reference/android/sax/Element.html#getChild(java.lang.String))
        ///
        /// Required features: "android-sax-Element", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-sax-Element", feature = "java-lang-String")))]
        pub fn getChild_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::sax::Element>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "getChild", .descriptor == "(Ljava/lang/String;)Landroid/sax/Element;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "getChild\0", "(Ljava/lang/String;)Landroid/sax/Element;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChild](https://developer.android.com/reference/android/sax/Element.html#getChild(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-sax-Element", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-sax-Element", feature = "java-lang-String")))]
        pub fn getChild_String_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::sax::Element>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "getChild", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Landroid/sax/Element;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "getChild\0", "(Ljava/lang/String;Ljava/lang/String;)Landroid/sax/Element;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [requireChild](https://developer.android.com/reference/android/sax/Element.html#requireChild(java.lang.String))
        ///
        /// Required features: "android-sax-Element", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-sax-Element", feature = "java-lang-String")))]
        pub fn requireChild_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::sax::Element>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "requireChild", .descriptor == "(Ljava/lang/String;)Landroid/sax/Element;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "requireChild\0", "(Ljava/lang/String;)Landroid/sax/Element;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [requireChild](https://developer.android.com/reference/android/sax/Element.html#requireChild(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-sax-Element", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-sax-Element", feature = "java-lang-String")))]
        pub fn requireChild_String_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::sax::Element>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "requireChild", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Landroid/sax/Element;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "requireChild\0", "(Ljava/lang/String;Ljava/lang/String;)Landroid/sax/Element;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setElementListener](https://developer.android.com/reference/android/sax/Element.html#setElementListener(android.sax.ElementListener))
        ///
        /// Required features: "android-sax-ElementListener"
        #[cfg(any(feature = "all", all(feature = "android-sax-ElementListener")))]
        pub fn setElementListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::sax::ElementListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "setElementListener", .descriptor == "(Landroid/sax/ElementListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "setElementListener\0", "(Landroid/sax/ElementListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTextElementListener](https://developer.android.com/reference/android/sax/Element.html#setTextElementListener(android.sax.TextElementListener))
        ///
        /// Required features: "android-sax-TextElementListener"
        #[cfg(any(feature = "all", all(feature = "android-sax-TextElementListener")))]
        pub fn setTextElementListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::sax::TextElementListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "setTextElementListener", .descriptor == "(Landroid/sax/TextElementListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "setTextElementListener\0", "(Landroid/sax/TextElementListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setStartElementListener](https://developer.android.com/reference/android/sax/Element.html#setStartElementListener(android.sax.StartElementListener))
        ///
        /// Required features: "android-sax-StartElementListener"
        #[cfg(any(feature = "all", all(feature = "android-sax-StartElementListener")))]
        pub fn setStartElementListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::sax::StartElementListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "setStartElementListener", .descriptor == "(Landroid/sax/StartElementListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "setStartElementListener\0", "(Landroid/sax/StartElementListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEndElementListener](https://developer.android.com/reference/android/sax/Element.html#setEndElementListener(android.sax.EndElementListener))
        ///
        /// Required features: "android-sax-EndElementListener"
        #[cfg(any(feature = "all", all(feature = "android-sax-EndElementListener")))]
        pub fn setEndElementListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::sax::EndElementListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "setEndElementListener", .descriptor == "(Landroid/sax/EndElementListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "setEndElementListener\0", "(Landroid/sax/EndElementListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEndTextElementListener](https://developer.android.com/reference/android/sax/Element.html#setEndTextElementListener(android.sax.EndTextElementListener))
        ///
        /// Required features: "android-sax-EndTextElementListener"
        #[cfg(any(feature = "all", all(feature = "android-sax-EndTextElementListener")))]
        pub fn setEndTextElementListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::sax::EndTextElementListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "setEndTextElementListener", .descriptor == "(Landroid/sax/EndTextElementListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "setEndTextElementListener\0", "(Landroid/sax/EndTextElementListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/sax/Element.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/sax/Element", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/sax/Element\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
