// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-printservice-PrinterDiscoverySession"))]
__jni_bindgen! {
    /// public class [PrinterDiscoverySession](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html)
    ///
    /// Required feature: android-printservice-PrinterDiscoverySession
    public class PrinterDiscoverySession ("android/printservice/PrinterDiscoverySession") extends crate::java::lang::Object {

        /// [PrinterDiscoverySession](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#PrinterDiscoverySession())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::printservice::PrinterDiscoverySession>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPrinters](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#getPrinters())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getPrinters<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | FINAL, .name == "getPrinters", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "getPrinters\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addPrinters](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#addPrinters(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn addPrinters<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | FINAL, .name == "addPrinters", .descriptor == "(Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "addPrinters\0", "(Ljava/util/List;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removePrinters](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#removePrinters(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn removePrinters<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | FINAL, .name == "removePrinters", .descriptor == "(Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "removePrinters\0", "(Ljava/util/List;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onStartPrinterDiscovery](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onStartPrinterDiscovery(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn onStartPrinterDiscovery<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | ABSTRACT, .name == "onStartPrinterDiscovery", .descriptor == "(Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "onStartPrinterDiscovery\0", "(Ljava/util/List;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onStopPrinterDiscovery](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onStopPrinterDiscovery())
        pub fn onStopPrinterDiscovery<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | ABSTRACT, .name == "onStopPrinterDiscovery", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "onStopPrinterDiscovery\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onValidatePrinters](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onValidatePrinters(java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn onValidatePrinters<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | ABSTRACT, .name == "onValidatePrinters", .descriptor == "(Ljava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "onValidatePrinters\0", "(Ljava/util/List;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onStartPrinterStateTracking](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onStartPrinterStateTracking(android.print.PrinterId))
        ///
        /// Required features: "android-print-PrinterId"
        #[cfg(any(feature = "all", all(feature = "android-print-PrinterId")))]
        pub fn onStartPrinterStateTracking<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::print::PrinterId>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | ABSTRACT, .name == "onStartPrinterStateTracking", .descriptor == "(Landroid/print/PrinterId;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "onStartPrinterStateTracking\0", "(Landroid/print/PrinterId;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRequestCustomPrinterIcon](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onRequestCustomPrinterIcon(android.print.PrinterId,%20android.os.CancellationSignal,%20android.printservice.CustomPrinterIconCallback))
        ///
        /// Required features: "android-os-CancellationSignal", "android-print-PrinterId", "android-printservice-CustomPrinterIconCallback"
        #[cfg(any(feature = "all", all(feature = "android-os-CancellationSignal", feature = "android-print-PrinterId", feature = "android-printservice-CustomPrinterIconCallback")))]
        pub fn onRequestCustomPrinterIcon<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::print::PrinterId>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::CancellationSignal>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::printservice::CustomPrinterIconCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC, .name == "onRequestCustomPrinterIcon", .descriptor == "(Landroid/print/PrinterId;Landroid/os/CancellationSignal;Landroid/printservice/CustomPrinterIconCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "onRequestCustomPrinterIcon\0", "(Landroid/print/PrinterId;Landroid/os/CancellationSignal;Landroid/printservice/CustomPrinterIconCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onStopPrinterStateTracking](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onStopPrinterStateTracking(android.print.PrinterId))
        ///
        /// Required features: "android-print-PrinterId"
        #[cfg(any(feature = "all", all(feature = "android-print-PrinterId")))]
        pub fn onStopPrinterStateTracking<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::print::PrinterId>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | ABSTRACT, .name == "onStopPrinterStateTracking", .descriptor == "(Landroid/print/PrinterId;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "onStopPrinterStateTracking\0", "(Landroid/print/PrinterId;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTrackedPrinters](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#getTrackedPrinters())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getTrackedPrinters<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | FINAL, .name == "getTrackedPrinters", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "getTrackedPrinters\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onDestroy](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onDestroy())
        pub fn onDestroy<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | ABSTRACT, .name == "onDestroy", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "onDestroy\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDestroyed](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#isDestroyed())
        pub fn isDestroyed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | FINAL, .name == "isDestroyed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "isDestroyed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isPrinterDiscoveryStarted](https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#isPrinterDiscoveryStarted())
        pub fn isPrinterDiscoveryStarted<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrinterDiscoverySession", java.flags == PUBLIC | FINAL, .name == "isPrinterDiscoveryStarted", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrinterDiscoverySession\0", "isPrinterDiscoveryStarted\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
