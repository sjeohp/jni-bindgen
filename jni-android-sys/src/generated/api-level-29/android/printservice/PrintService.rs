// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-printservice-PrintService"))]
__jni_bindgen! {
    /// public class [PrintService](https://developer.android.com/reference/android/printservice/PrintService.html)
    ///
    /// Required feature: android-printservice-PrintService
    public class PrintService ("android/printservice/PrintService") extends crate::android::app::Service {

        /// [PrintService](https://developer.android.com/reference/android/printservice/PrintService.html#PrintService())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::printservice::PrintService>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrintService", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [attachBaseContext](https://developer.android.com/reference/android/printservice/PrintService.html#attachBaseContext(android.content.Context))
        // ///
        // /// Required features: "android-content-Context"
        // #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        // fn attachBaseContext<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/printservice/PrintService", java.flags == PROTECTED | FINAL, .name == "attachBaseContext", .descriptor == "(Landroid/content/Context;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "attachBaseContext\0", "(Landroid/content/Context;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [onConnected](https://developer.android.com/reference/android/printservice/PrintService.html#onConnected())
        // fn onConnected<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/printservice/PrintService", java.flags == PROTECTED, .name == "onConnected", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "onConnected\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [onDisconnected](https://developer.android.com/reference/android/printservice/PrintService.html#onDisconnected())
        // fn onDisconnected<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/printservice/PrintService", java.flags == PROTECTED, .name == "onDisconnected", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "onDisconnected\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [onCreatePrinterDiscoverySession](https://developer.android.com/reference/android/printservice/PrintService.html#onCreatePrinterDiscoverySession())
        // ///
        // /// Required features: "android-printservice-PrinterDiscoverySession"
        // #[cfg(any(feature = "all", all(feature = "android-printservice-PrinterDiscoverySession")))]
        // fn onCreatePrinterDiscoverySession<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::printservice::PrinterDiscoverySession>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/printservice/PrintService", java.flags == PROTECTED | ABSTRACT, .name == "onCreatePrinterDiscoverySession", .descriptor == "()Landroid/printservice/PrinterDiscoverySession;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "onCreatePrinterDiscoverySession\0", "()Landroid/printservice/PrinterDiscoverySession;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [onRequestCancelPrintJob](https://developer.android.com/reference/android/printservice/PrintService.html#onRequestCancelPrintJob(android.printservice.PrintJob))
        // ///
        // /// Required features: "android-printservice-PrintJob"
        // #[cfg(any(feature = "all", all(feature = "android-printservice-PrintJob")))]
        // fn onRequestCancelPrintJob<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::printservice::PrintJob>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/printservice/PrintService", java.flags == PROTECTED | ABSTRACT, .name == "onRequestCancelPrintJob", .descriptor == "(Landroid/printservice/PrintJob;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "onRequestCancelPrintJob\0", "(Landroid/printservice/PrintJob;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [onPrintJobQueued](https://developer.android.com/reference/android/printservice/PrintService.html#onPrintJobQueued(android.printservice.PrintJob))
        // ///
        // /// Required features: "android-printservice-PrintJob"
        // #[cfg(any(feature = "all", all(feature = "android-printservice-PrintJob")))]
        // fn onPrintJobQueued<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::printservice::PrintJob>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/printservice/PrintService", java.flags == PROTECTED | ABSTRACT, .name == "onPrintJobQueued", .descriptor == "(Landroid/printservice/PrintJob;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "onPrintJobQueued\0", "(Landroid/printservice/PrintJob;)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getActivePrintJobs](https://developer.android.com/reference/android/printservice/PrintService.html#getActivePrintJobs())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getActivePrintJobs<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrintService", java.flags == PUBLIC | FINAL, .name == "getActivePrintJobs", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "getActivePrintJobs\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [generatePrinterId](https://developer.android.com/reference/android/printservice/PrintService.html#generatePrinterId(java.lang.String))
        ///
        /// Required features: "android-print-PrinterId", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-print-PrinterId", feature = "java-lang-String")))]
        pub fn generatePrinterId<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::print::PrinterId>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrintService", java.flags == PUBLIC | FINAL, .name == "generatePrinterId", .descriptor == "(Ljava/lang/String;)Landroid/print/PrinterId;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "generatePrinterId\0", "(Ljava/lang/String;)Landroid/print/PrinterId;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onBind](https://developer.android.com/reference/android/printservice/PrintService.html#onBind(android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-os-IBinder"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-IBinder")))]
        pub fn onBind<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::IBinder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/printservice/PrintService", java.flags == PUBLIC | FINAL, .name == "onBind", .descriptor == "(Landroid/content/Intent;)Landroid/os/IBinder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/printservice/PrintService\0", "onBind\0", "(Landroid/content/Intent;)Landroid/os/IBinder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [EXTRA_CAN_SELECT_PRINTER](https://developer.android.com/reference/android/printservice/PrintService.html#EXTRA_CAN_SELECT_PRINTER)
        pub const EXTRA_CAN_SELECT_PRINTER : &'static str = "android.printservice.extra.CAN_SELECT_PRINTER";

        /// public static final [EXTRA_PRINTER_INFO](https://developer.android.com/reference/android/printservice/PrintService.html#EXTRA_PRINTER_INFO)
        pub const EXTRA_PRINTER_INFO : &'static str = "android.intent.extra.print.EXTRA_PRINTER_INFO";

        /// public static final [EXTRA_PRINT_DOCUMENT_INFO](https://developer.android.com/reference/android/printservice/PrintService.html#EXTRA_PRINT_DOCUMENT_INFO)
        pub const EXTRA_PRINT_DOCUMENT_INFO : &'static str = "android.printservice.extra.PRINT_DOCUMENT_INFO";

        /// public static final [EXTRA_PRINT_JOB_INFO](https://developer.android.com/reference/android/printservice/PrintService.html#EXTRA_PRINT_JOB_INFO)
        pub const EXTRA_PRINT_JOB_INFO : &'static str = "android.intent.extra.print.PRINT_JOB_INFO";

        /// public static final [EXTRA_SELECT_PRINTER](https://developer.android.com/reference/android/printservice/PrintService.html#EXTRA_SELECT_PRINTER)
        pub const EXTRA_SELECT_PRINTER : &'static str = "android.printservice.extra.SELECT_PRINTER";

        /// public static final [SERVICE_INTERFACE](https://developer.android.com/reference/android/printservice/PrintService.html#SERVICE_INTERFACE)
        pub const SERVICE_INTERFACE : &'static str = "android.printservice.PrintService";

        /// public static final [SERVICE_META_DATA](https://developer.android.com/reference/android/printservice/PrintService.html#SERVICE_META_DATA)
        pub const SERVICE_META_DATA : &'static str = "android.printservice";
    }
}
