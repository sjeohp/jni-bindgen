// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-speech-RecognitionService_Callback"))]
__jni_bindgen! {
    /// public class [RecognitionService.Callback](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html)
    ///
    /// Required feature: android-speech-RecognitionService_Callback
    public class RecognitionService_Callback ("android/speech/RecognitionService$Callback") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Callback](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#Callback(android.speech.RecognitionService))
        // ///
        // /// Required features: "android-speech-RecognitionService"
        // #[cfg(any(feature = "all", all(feature = "android-speech-RecognitionService")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::speech::RecognitionService>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::speech::RecognitionService_Callback>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/speech/RecognitionService$Callback", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/speech/RecognitionService;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "<init>\0", "(Landroid/speech/RecognitionService;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [beginningOfSpeech](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#beginningOfSpeech())
        pub fn beginningOfSpeech<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "beginningOfSpeech", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "beginningOfSpeech\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [bufferReceived](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#bufferReceived(byte%5B%5D))
        pub fn bufferReceived<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "bufferReceived", .descriptor == "([B)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "bufferReceived\0", "([B)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [endOfSpeech](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#endOfSpeech())
        pub fn endOfSpeech<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "endOfSpeech", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "endOfSpeech\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [error](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#error(int))
        pub fn error<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "error", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "error\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [partialResults](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#partialResults(android.os.Bundle))
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn partialResults<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "partialResults", .descriptor == "(Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "partialResults\0", "(Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readyForSpeech](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#readyForSpeech(android.os.Bundle))
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn readyForSpeech<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "readyForSpeech", .descriptor == "(Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "readyForSpeech\0", "(Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [results](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#results(android.os.Bundle))
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn results<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "results", .descriptor == "(Landroid/os/Bundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "results\0", "(Landroid/os/Bundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [rmsChanged](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#rmsChanged(float))
        pub fn rmsChanged<'env>(&'env self, arg0: f32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "rmsChanged", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "rmsChanged\0", "(F)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCallingUid](https://developer.android.com/reference/android/speech/RecognitionService.Callback.html#getCallingUid())
        pub fn getCallingUid<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/speech/RecognitionService$Callback", java.flags == PUBLIC, .name == "getCallingUid", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/speech/RecognitionService$Callback\0", "getCallingUid\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::speech::RecognitionService>> { ... }
    }
}
