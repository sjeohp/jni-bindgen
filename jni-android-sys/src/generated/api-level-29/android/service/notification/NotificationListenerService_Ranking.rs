// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-notification-NotificationListenerService_Ranking"))]
__jni_bindgen! {
    /// public class [NotificationListenerService.Ranking](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html)
    ///
    /// Required feature: android-service-notification-NotificationListenerService_Ranking
    public class NotificationListenerService_Ranking ("android/service/notification/NotificationListenerService$Ranking") extends crate::java::lang::Object {

        /// [Ranking](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#Ranking())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::notification::NotificationListenerService_Ranking>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKey](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getKey())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getKey<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getKey", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getKey\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRank](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getRank())
        pub fn getRank<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getRank", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getRank\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isAmbient](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#isAmbient())
        pub fn isAmbient<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "isAmbient", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "isAmbient\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSuppressedVisualEffects](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getSuppressedVisualEffects())
        pub fn getSuppressedVisualEffects<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getSuppressedVisualEffects", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getSuppressedVisualEffects\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [matchesInterruptionFilter](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#matchesInterruptionFilter())
        pub fn matchesInterruptionFilter<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "matchesInterruptionFilter", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "matchesInterruptionFilter\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getImportance](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getImportance())
        pub fn getImportance<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getImportance", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getImportance\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getImportanceExplanation](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getImportanceExplanation())
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getImportanceExplanation<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getImportanceExplanation", .descriptor == "()Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getImportanceExplanation\0", "()Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOverrideGroupKey](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getOverrideGroupKey())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getOverrideGroupKey<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getOverrideGroupKey", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getOverrideGroupKey\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChannel](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getChannel())
        ///
        /// Required features: "android-app-NotificationChannel"
        #[cfg(any(feature = "all", all(feature = "android-app-NotificationChannel")))]
        pub fn getChannel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::NotificationChannel>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getChannel", .descriptor == "()Landroid/app/NotificationChannel;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getChannel\0", "()Landroid/app/NotificationChannel;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUserSentiment](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getUserSentiment())
        pub fn getUserSentiment<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getUserSentiment", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getUserSentiment\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSmartActions](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getSmartActions())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getSmartActions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getSmartActions", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getSmartActions\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSmartReplies](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getSmartReplies())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getSmartReplies<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getSmartReplies", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getSmartReplies\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [canShowBadge](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#canShowBadge())
        pub fn canShowBadge<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "canShowBadge", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "canShowBadge\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSuspended](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#isSuspended())
        pub fn isSuspended<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "isSuspended", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "isSuspended\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLastAudiblyAlertedMillis](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#getLastAudiblyAlertedMillis())
        pub fn getLastAudiblyAlertedMillis<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "getLastAudiblyAlertedMillis", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "getLastAudiblyAlertedMillis\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [canBubble](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#canBubble())
        pub fn canBubble<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "canBubble", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "canBubble\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/notification/NotificationListenerService$Ranking", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/notification/NotificationListenerService$Ranking\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [USER_SENTIMENT_NEGATIVE](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#USER_SENTIMENT_NEGATIVE)
        pub const USER_SENTIMENT_NEGATIVE : i32 = -1;

        /// public static final [USER_SENTIMENT_NEUTRAL](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#USER_SENTIMENT_NEUTRAL)
        pub const USER_SENTIMENT_NEUTRAL : i32 = 0;

        /// public static final [USER_SENTIMENT_POSITIVE](https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html#USER_SENTIMENT_POSITIVE)
        pub const USER_SENTIMENT_POSITIVE : i32 = 1;
    }
}
