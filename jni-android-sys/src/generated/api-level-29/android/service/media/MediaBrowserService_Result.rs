// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-media-MediaBrowserService_Result"))]
__jni_bindgen! {
    /// public class [MediaBrowserService.Result](https://developer.android.com/reference/android/service/media/MediaBrowserService.Result.html)
    ///
    /// Required feature: android-service-media-MediaBrowserService_Result
    public class MediaBrowserService_Result ("android/service/media/MediaBrowserService$Result") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Result](https://developer.android.com/reference/android/service/media/MediaBrowserService.Result.html#Result(android.service.media.MediaBrowserService,%20java.lang.Object))
        // ///
        // /// Required features: "android-service-media-MediaBrowserService", "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "android-service-media-MediaBrowserService", feature = "java-lang-Object")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::media::MediaBrowserService>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::media::MediaBrowserService_Result>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/service/media/MediaBrowserService$Result", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/service/media/MediaBrowserService;Ljava/lang/Object;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/media/MediaBrowserService$Result\0", "<init>\0", "(Landroid/service/media/MediaBrowserService;Ljava/lang/Object;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [sendResult](https://developer.android.com/reference/android/service/media/MediaBrowserService.Result.html#sendResult(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn sendResult<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/media/MediaBrowserService$Result", java.flags == PUBLIC, .name == "sendResult", .descriptor == "(Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/media/MediaBrowserService$Result\0", "sendResult\0", "(Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [detach](https://developer.android.com/reference/android/service/media/MediaBrowserService.Result.html#detach())
        pub fn detach<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/media/MediaBrowserService$Result", java.flags == PUBLIC, .name == "detach", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/media/MediaBrowserService$Result\0", "detach\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public field
        // // Not emitting: Failed to mangle field name: this$N outer class pointer
        // pub fn get_"this$0"<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::media::MediaBrowserService>> { ... }
    }
}
