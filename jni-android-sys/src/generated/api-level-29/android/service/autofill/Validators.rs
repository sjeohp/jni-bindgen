// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-autofill-Validators"))]
__jni_bindgen! {
    /// public final class [Validators](https://developer.android.com/reference/android/service/autofill/Validators.html)
    ///
    /// Required feature: android-service-autofill-Validators
    public final class Validators ("android/service/autofill/Validators") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Validators](https://developer.android.com/reference/android/service/autofill/Validators.html#Validators())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::Validators>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/service/autofill/Validators", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Validators\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [and](https://developer.android.com/reference/android/service/autofill/Validators.html#and(android.service.autofill.Validator...))
        ///
        /// Required features: "android-service-autofill-Validator"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Validator")))]
        pub fn and<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::service::autofill::Validator, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Validator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Validators", java.flags == PUBLIC | STATIC | VARARGS, .name == "and", .descriptor == "([Landroid/service/autofill/Validator;)Landroid/service/autofill/Validator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/service/autofill/Validators\0", "and\0", "([Landroid/service/autofill/Validator;)Landroid/service/autofill/Validator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [or](https://developer.android.com/reference/android/service/autofill/Validators.html#or(android.service.autofill.Validator...))
        ///
        /// Required features: "android-service-autofill-Validator"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Validator")))]
        pub fn or<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::service::autofill::Validator, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Validator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Validators", java.flags == PUBLIC | STATIC | VARARGS, .name == "or", .descriptor == "([Landroid/service/autofill/Validator;)Landroid/service/autofill/Validator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/service/autofill/Validators\0", "or\0", "([Landroid/service/autofill/Validator;)Landroid/service/autofill/Validator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [not](https://developer.android.com/reference/android/service/autofill/Validators.html#not(android.service.autofill.Validator))
        ///
        /// Required features: "android-service-autofill-Validator"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Validator")))]
        pub fn not<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::autofill::Validator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Validator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Validators", java.flags == PUBLIC | STATIC, .name == "not", .descriptor == "(Landroid/service/autofill/Validator;)Landroid/service/autofill/Validator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/service/autofill/Validators\0", "not\0", "(Landroid/service/autofill/Validator;)Landroid/service/autofill/Validator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
