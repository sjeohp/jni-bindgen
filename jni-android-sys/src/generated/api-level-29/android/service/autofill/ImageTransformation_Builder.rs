// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-autofill-ImageTransformation_Builder"))]
__jni_bindgen! {
    /// public class [ImageTransformation.Builder](https://developer.android.com/reference/android/service/autofill/ImageTransformation.Builder.html)
    ///
    /// Required feature: android-service-autofill-ImageTransformation_Builder
    public class ImageTransformation_Builder ("android/service/autofill/ImageTransformation$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/service/autofill/ImageTransformation.Builder.html#Builder(android.view.autofill.AutofillId,%20java.util.regex.Pattern,%20int))
        ///
        /// Required features: "android-view-autofill-AutofillId", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-view-autofill-AutofillId", feature = "java-util-regex-Pattern")))]
        #[deprecated] pub fn new_AutofillId_Pattern_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillId>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::ImageTransformation_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/ImageTransformation$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/autofill/AutofillId;Ljava/util/regex/Pattern;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/ImageTransformation$Builder\0", "<init>\0", "(Landroid/view/autofill/AutofillId;Ljava/util/regex/Pattern;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/service/autofill/ImageTransformation.Builder.html#Builder(android.view.autofill.AutofillId,%20java.util.regex.Pattern,%20int,%20java.lang.CharSequence))
        ///
        /// Required features: "android-view-autofill-AutofillId", "java-lang-CharSequence", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-view-autofill-AutofillId", feature = "java-lang-CharSequence", feature = "java-util-regex-Pattern")))]
        pub fn new_AutofillId_Pattern_int_CharSequence<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillId>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::ImageTransformation_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/ImageTransformation$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/autofill/AutofillId;Ljava/util/regex/Pattern;ILjava/lang/CharSequence;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/ImageTransformation$Builder\0", "<init>\0", "(Landroid/view/autofill/AutofillId;Ljava/util/regex/Pattern;ILjava/lang/CharSequence;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addOption](https://developer.android.com/reference/android/service/autofill/ImageTransformation.Builder.html#addOption(java.util.regex.Pattern,%20int))
        ///
        /// Required features: "android-service-autofill-ImageTransformation_Builder", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-ImageTransformation_Builder", feature = "java-util-regex-Pattern")))]
        #[deprecated] pub fn addOption_Pattern_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::ImageTransformation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/ImageTransformation$Builder", java.flags == PUBLIC, .name == "addOption", .descriptor == "(Ljava/util/regex/Pattern;I)Landroid/service/autofill/ImageTransformation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/ImageTransformation$Builder\0", "addOption\0", "(Ljava/util/regex/Pattern;I)Landroid/service/autofill/ImageTransformation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addOption](https://developer.android.com/reference/android/service/autofill/ImageTransformation.Builder.html#addOption(java.util.regex.Pattern,%20int,%20java.lang.CharSequence))
        ///
        /// Required features: "android-service-autofill-ImageTransformation_Builder", "java-lang-CharSequence", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-ImageTransformation_Builder", feature = "java-lang-CharSequence", feature = "java-util-regex-Pattern")))]
        pub fn addOption_Pattern_int_CharSequence<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::ImageTransformation_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/ImageTransformation$Builder", java.flags == PUBLIC, .name == "addOption", .descriptor == "(Ljava/util/regex/Pattern;ILjava/lang/CharSequence;)Landroid/service/autofill/ImageTransformation$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/ImageTransformation$Builder\0", "addOption\0", "(Ljava/util/regex/Pattern;ILjava/lang/CharSequence;)Landroid/service/autofill/ImageTransformation$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/service/autofill/ImageTransformation.Builder.html#build())
        ///
        /// Required features: "android-service-autofill-ImageTransformation"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-ImageTransformation")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::ImageTransformation>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/ImageTransformation$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/service/autofill/ImageTransformation;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/ImageTransformation$Builder\0", "build\0", "()Landroid/service/autofill/ImageTransformation;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
