// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-autofill-FieldClassification_Match"))]
__jni_bindgen! {
    /// public final class [FieldClassification.Match](https://developer.android.com/reference/android/service/autofill/FieldClassification.Match.html)
    ///
    /// Required feature: android-service-autofill-FieldClassification_Match
    public final class FieldClassification_Match ("android/service/autofill/FieldClassification$Match") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Match](https://developer.android.com/reference/android/service/autofill/FieldClassification.Match.html#Match(java.lang.String,%20float))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::FieldClassification_Match>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/service/autofill/FieldClassification$Match", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/String;F)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FieldClassification$Match\0", "<init>\0", "(Ljava/lang/String;F)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getCategoryId](https://developer.android.com/reference/android/service/autofill/FieldClassification.Match.html#getCategoryId())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCategoryId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FieldClassification$Match", java.flags == PUBLIC, .name == "getCategoryId", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FieldClassification$Match\0", "getCategoryId\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScore](https://developer.android.com/reference/android/service/autofill/FieldClassification.Match.html#getScore())
        pub fn getScore<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FieldClassification$Match", java.flags == PUBLIC, .name == "getScore", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FieldClassification$Match\0", "getScore\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/service/autofill/FieldClassification.Match.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FieldClassification$Match", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FieldClassification$Match\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
