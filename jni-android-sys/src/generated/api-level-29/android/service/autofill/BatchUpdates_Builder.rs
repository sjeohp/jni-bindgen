// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-autofill-BatchUpdates_Builder"))]
__jni_bindgen! {
    /// public class [BatchUpdates.Builder](https://developer.android.com/reference/android/service/autofill/BatchUpdates.Builder.html)
    ///
    /// Required feature: android-service-autofill-BatchUpdates_Builder
    public class BatchUpdates_Builder ("android/service/autofill/BatchUpdates$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/service/autofill/BatchUpdates.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::BatchUpdates_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/BatchUpdates$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/BatchUpdates$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [updateTemplate](https://developer.android.com/reference/android/service/autofill/BatchUpdates.Builder.html#updateTemplate(android.widget.RemoteViews))
        ///
        /// Required features: "android-service-autofill-BatchUpdates_Builder", "android-widget-RemoteViews"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-BatchUpdates_Builder", feature = "android-widget-RemoteViews")))]
        pub fn updateTemplate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::RemoteViews>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::BatchUpdates_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/BatchUpdates$Builder", java.flags == PUBLIC, .name == "updateTemplate", .descriptor == "(Landroid/widget/RemoteViews;)Landroid/service/autofill/BatchUpdates$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/BatchUpdates$Builder\0", "updateTemplate\0", "(Landroid/widget/RemoteViews;)Landroid/service/autofill/BatchUpdates$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [transformChild](https://developer.android.com/reference/android/service/autofill/BatchUpdates.Builder.html#transformChild(int,%20android.service.autofill.Transformation))
        ///
        /// Required features: "android-service-autofill-BatchUpdates_Builder", "android-service-autofill-Transformation"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-BatchUpdates_Builder", feature = "android-service-autofill-Transformation")))]
        pub fn transformChild<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::autofill::Transformation>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::BatchUpdates_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/BatchUpdates$Builder", java.flags == PUBLIC, .name == "transformChild", .descriptor == "(ILandroid/service/autofill/Transformation;)Landroid/service/autofill/BatchUpdates$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/BatchUpdates$Builder\0", "transformChild\0", "(ILandroid/service/autofill/Transformation;)Landroid/service/autofill/BatchUpdates$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/service/autofill/BatchUpdates.Builder.html#build())
        ///
        /// Required features: "android-service-autofill-BatchUpdates"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-BatchUpdates")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::BatchUpdates>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/BatchUpdates$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/service/autofill/BatchUpdates;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/BatchUpdates$Builder\0", "build\0", "()Landroid/service/autofill/BatchUpdates;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
