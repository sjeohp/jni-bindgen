// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-autofill-FillEventHistory_Event"))]
__jni_bindgen! {
    /// public final class [FillEventHistory.Event](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html)
    ///
    /// Required feature: android-service-autofill-FillEventHistory_Event
    public final class FillEventHistory_Event ("android/service/autofill/FillEventHistory$Event") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Event](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#Event(int,%20java.lang.String,%20android.os.Bundle,%20java.util.List,%20android.util.ArraySet,%20java.util.ArrayList,%20java.util.ArrayList,%20java.util.ArrayList,%20java.util.ArrayList,%20android.view.autofill.AutofillId%5B%5D,%20android.service.autofill.FieldClassification%5B%5D))
        // ///
        // /// Required features: "android-os-Bundle", "android-service-autofill-FieldClassification", "android-util-ArraySet", "android-view-autofill-AutofillId", "java-lang-String", "java-util-ArrayList", "java-util-List"
        // #[cfg(any(feature = "all", all(feature = "android-os-Bundle", feature = "android-service-autofill-FieldClassification", feature = "android-util-ArraySet", feature = "android-view-autofill-AutofillId", feature = "java-lang-String", feature = "java-util-ArrayList", feature = "java-util-List")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::ArraySet>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>, arg8: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>, arg9: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::autofill::AutofillId, crate::java::lang::Throwable>>>, arg10: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::service::autofill::FieldClassification, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::FillEventHistory_Event>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == (empty), .name == "<init>", .descriptor == "(ILjava/lang/String;Landroid/os/Bundle;Ljava/util/List;Landroid/util/ArraySet;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;[Landroid/view/autofill/AutofillId;[Landroid/service/autofill/FieldClassification;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into()), __jni_bindgen::AsJValue::as_jvalue(&arg6.into()), __jni_bindgen::AsJValue::as_jvalue(&arg7.into()), __jni_bindgen::AsJValue::as_jvalue(&arg8.into()), __jni_bindgen::AsJValue::as_jvalue(&arg9.into()), __jni_bindgen::AsJValue::as_jvalue(&arg10.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "<init>\0", "(ILjava/lang/String;Landroid/os/Bundle;Ljava/util/List;Landroid/util/ArraySet;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;[Landroid/view/autofill/AutofillId;[Landroid/service/autofill/FieldClassification;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getType](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#getType())
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "getType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "getType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDatasetId](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#getDatasetId())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDatasetId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "getDatasetId", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "getDatasetId\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getClientState](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#getClientState())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getClientState<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "getClientState", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "getClientState\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSelectedDatasetIds](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#getSelectedDatasetIds())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn getSelectedDatasetIds<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "getSelectedDatasetIds", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "getSelectedDatasetIds\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIgnoredDatasetIds](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#getIgnoredDatasetIds())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn getIgnoredDatasetIds<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "getIgnoredDatasetIds", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "getIgnoredDatasetIds\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getChangedFields](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#getChangedFields())
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn getChangedFields<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "getChangedFields", .descriptor == "()Ljava/util/Map;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "getChangedFields\0", "()Ljava/util/Map;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFieldsClassification](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#getFieldsClassification())
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn getFieldsClassification<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "getFieldsClassification", .descriptor == "()Ljava/util/Map;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "getFieldsClassification\0", "()Ljava/util/Map;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getManuallyEnteredField](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#getManuallyEnteredField())
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn getManuallyEnteredField<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "getManuallyEnteredField", .descriptor == "()Ljava/util/Map;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "getManuallyEnteredField\0", "()Ljava/util/Map;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillEventHistory$Event", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillEventHistory$Event\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [TYPE_AUTHENTICATION_SELECTED](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#TYPE_AUTHENTICATION_SELECTED)
        pub const TYPE_AUTHENTICATION_SELECTED : i32 = 2;

        /// public static final [TYPE_CONTEXT_COMMITTED](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#TYPE_CONTEXT_COMMITTED)
        pub const TYPE_CONTEXT_COMMITTED : i32 = 4;

        /// public static final [TYPE_DATASET_AUTHENTICATION_SELECTED](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#TYPE_DATASET_AUTHENTICATION_SELECTED)
        pub const TYPE_DATASET_AUTHENTICATION_SELECTED : i32 = 1;

        /// public static final [TYPE_DATASET_SELECTED](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#TYPE_DATASET_SELECTED)
        pub const TYPE_DATASET_SELECTED : i32 = 0;

        /// public static final [TYPE_SAVE_SHOWN](https://developer.android.com/reference/android/service/autofill/FillEventHistory.Event.html#TYPE_SAVE_SHOWN)
        pub const TYPE_SAVE_SHOWN : i32 = 3;
    }
}
