// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-autofill-Dataset_Builder"))]
__jni_bindgen! {
    /// public final class [Dataset.Builder](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html)
    ///
    /// Required feature: android-service-autofill-Dataset_Builder
    public final class Dataset_Builder ("android/service/autofill/Dataset$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#Builder(android.widget.RemoteViews))
        ///
        /// Required features: "android-widget-RemoteViews"
        #[cfg(any(feature = "all", all(feature = "android-widget-RemoteViews")))]
        pub fn new_RemoteViews<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::RemoteViews>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/widget/RemoteViews;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "<init>\0", "(Landroid/widget/RemoteViews;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAuthentication](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#setAuthentication(android.content.IntentSender))
        ///
        /// Required features: "android-content-IntentSender", "android-service-autofill-Dataset_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-IntentSender", feature = "android-service-autofill-Dataset_Builder")))]
        pub fn setAuthentication<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::IntentSender>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "setAuthentication", .descriptor == "(Landroid/content/IntentSender;)Landroid/service/autofill/Dataset$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "setAuthentication\0", "(Landroid/content/IntentSender;)Landroid/service/autofill/Dataset$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setId](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#setId(java.lang.String))
        ///
        /// Required features: "android-service-autofill-Dataset_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Dataset_Builder", feature = "java-lang-String")))]
        pub fn setId<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "setId", .descriptor == "(Ljava/lang/String;)Landroid/service/autofill/Dataset$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "setId\0", "(Ljava/lang/String;)Landroid/service/autofill/Dataset$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setValue](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#setValue(android.view.autofill.AutofillId,%20android.view.autofill.AutofillValue))
        ///
        /// Required features: "android-service-autofill-Dataset_Builder", "android-view-autofill-AutofillId", "android-view-autofill-AutofillValue"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Dataset_Builder", feature = "android-view-autofill-AutofillId", feature = "android-view-autofill-AutofillValue")))]
        pub fn setValue_AutofillId_AutofillValue<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillId>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillValue>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "setValue", .descriptor == "(Landroid/view/autofill/AutofillId;Landroid/view/autofill/AutofillValue;)Landroid/service/autofill/Dataset$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "setValue\0", "(Landroid/view/autofill/AutofillId;Landroid/view/autofill/AutofillValue;)Landroid/service/autofill/Dataset$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setValue](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#setValue(android.view.autofill.AutofillId,%20android.view.autofill.AutofillValue,%20android.widget.RemoteViews))
        ///
        /// Required features: "android-service-autofill-Dataset_Builder", "android-view-autofill-AutofillId", "android-view-autofill-AutofillValue", "android-widget-RemoteViews"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Dataset_Builder", feature = "android-view-autofill-AutofillId", feature = "android-view-autofill-AutofillValue", feature = "android-widget-RemoteViews")))]
        pub fn setValue_AutofillId_AutofillValue_RemoteViews<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillId>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillValue>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::RemoteViews>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "setValue", .descriptor == "(Landroid/view/autofill/AutofillId;Landroid/view/autofill/AutofillValue;Landroid/widget/RemoteViews;)Landroid/service/autofill/Dataset$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "setValue\0", "(Landroid/view/autofill/AutofillId;Landroid/view/autofill/AutofillValue;Landroid/widget/RemoteViews;)Landroid/service/autofill/Dataset$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setValue](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#setValue(android.view.autofill.AutofillId,%20android.view.autofill.AutofillValue,%20java.util.regex.Pattern))
        ///
        /// Required features: "android-service-autofill-Dataset_Builder", "android-view-autofill-AutofillId", "android-view-autofill-AutofillValue", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Dataset_Builder", feature = "android-view-autofill-AutofillId", feature = "android-view-autofill-AutofillValue", feature = "java-util-regex-Pattern")))]
        pub fn setValue_AutofillId_AutofillValue_Pattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillId>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillValue>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "setValue", .descriptor == "(Landroid/view/autofill/AutofillId;Landroid/view/autofill/AutofillValue;Ljava/util/regex/Pattern;)Landroid/service/autofill/Dataset$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "setValue\0", "(Landroid/view/autofill/AutofillId;Landroid/view/autofill/AutofillValue;Ljava/util/regex/Pattern;)Landroid/service/autofill/Dataset$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setValue](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#setValue(android.view.autofill.AutofillId,%20android.view.autofill.AutofillValue,%20java.util.regex.Pattern,%20android.widget.RemoteViews))
        ///
        /// Required features: "android-service-autofill-Dataset_Builder", "android-view-autofill-AutofillId", "android-view-autofill-AutofillValue", "android-widget-RemoteViews", "java-util-regex-Pattern"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Dataset_Builder", feature = "android-view-autofill-AutofillId", feature = "android-view-autofill-AutofillValue", feature = "android-widget-RemoteViews", feature = "java-util-regex-Pattern")))]
        pub fn setValue_AutofillId_AutofillValue_Pattern_RemoteViews<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillId>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillValue>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::regex::Pattern>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::RemoteViews>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "setValue", .descriptor == "(Landroid/view/autofill/AutofillId;Landroid/view/autofill/AutofillValue;Ljava/util/regex/Pattern;Landroid/widget/RemoteViews;)Landroid/service/autofill/Dataset$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "setValue\0", "(Landroid/view/autofill/AutofillId;Landroid/view/autofill/AutofillValue;Ljava/util/regex/Pattern;Landroid/widget/RemoteViews;)Landroid/service/autofill/Dataset$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/service/autofill/Dataset.Builder.html#build())
        ///
        /// Required features: "android-service-autofill-Dataset"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Dataset")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::Dataset>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/Dataset$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/service/autofill/Dataset;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/Dataset$Builder\0", "build\0", "()Landroid/service/autofill/Dataset;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
