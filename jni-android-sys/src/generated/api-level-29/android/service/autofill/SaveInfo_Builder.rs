// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-autofill-SaveInfo_Builder"))]
__jni_bindgen! {
    /// public final class [SaveInfo.Builder](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html)
    ///
    /// Required feature: android-service-autofill-SaveInfo_Builder
    public final class SaveInfo_Builder ("android/service/autofill/SaveInfo$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#Builder(int,%20android.view.autofill.AutofillId%5B%5D))
        ///
        /// Required features: "android-view-autofill-AutofillId"
        #[cfg(any(feature = "all", all(feature = "android-view-autofill-AutofillId")))]
        pub fn new_int_AutofillId_array<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::autofill::AutofillId, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(I[Landroid/view/autofill/AutofillId;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "<init>\0", "(I[Landroid/view/autofill/AutofillId;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Builder](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#Builder(int))
        pub fn new_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "<init>\0", "(I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFlags](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setFlags(int))
        ///
        /// Required features: "android-service-autofill-SaveInfo_Builder"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-SaveInfo_Builder")))]
        pub fn setFlags<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "setFlags", .descriptor == "(I)Landroid/service/autofill/SaveInfo$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "setFlags\0", "(I)Landroid/service/autofill/SaveInfo$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOptionalIds](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setOptionalIds(android.view.autofill.AutofillId%5B%5D))
        ///
        /// Required features: "android-service-autofill-SaveInfo_Builder", "android-view-autofill-AutofillId"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-SaveInfo_Builder", feature = "android-view-autofill-AutofillId")))]
        pub fn setOptionalIds<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::autofill::AutofillId, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "setOptionalIds", .descriptor == "([Landroid/view/autofill/AutofillId;)Landroid/service/autofill/SaveInfo$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "setOptionalIds\0", "([Landroid/view/autofill/AutofillId;)Landroid/service/autofill/SaveInfo$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDescription](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setDescription(java.lang.CharSequence))
        ///
        /// Required features: "android-service-autofill-SaveInfo_Builder", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-SaveInfo_Builder", feature = "java-lang-CharSequence")))]
        pub fn setDescription<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "setDescription", .descriptor == "(Ljava/lang/CharSequence;)Landroid/service/autofill/SaveInfo$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "setDescription\0", "(Ljava/lang/CharSequence;)Landroid/service/autofill/SaveInfo$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCustomDescription](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setCustomDescription(android.service.autofill.CustomDescription))
        ///
        /// Required features: "android-service-autofill-CustomDescription", "android-service-autofill-SaveInfo_Builder"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-CustomDescription", feature = "android-service-autofill-SaveInfo_Builder")))]
        pub fn setCustomDescription<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::autofill::CustomDescription>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "setCustomDescription", .descriptor == "(Landroid/service/autofill/CustomDescription;)Landroid/service/autofill/SaveInfo$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "setCustomDescription\0", "(Landroid/service/autofill/CustomDescription;)Landroid/service/autofill/SaveInfo$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNegativeAction](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setNegativeAction(int,%20android.content.IntentSender))
        ///
        /// Required features: "android-content-IntentSender", "android-service-autofill-SaveInfo_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-IntentSender", feature = "android-service-autofill-SaveInfo_Builder")))]
        pub fn setNegativeAction<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::IntentSender>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "setNegativeAction", .descriptor == "(ILandroid/content/IntentSender;)Landroid/service/autofill/SaveInfo$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "setNegativeAction\0", "(ILandroid/content/IntentSender;)Landroid/service/autofill/SaveInfo$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setValidator](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setValidator(android.service.autofill.Validator))
        ///
        /// Required features: "android-service-autofill-SaveInfo_Builder", "android-service-autofill-Validator"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-SaveInfo_Builder", feature = "android-service-autofill-Validator")))]
        pub fn setValidator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::autofill::Validator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "setValidator", .descriptor == "(Landroid/service/autofill/Validator;)Landroid/service/autofill/SaveInfo$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "setValidator\0", "(Landroid/service/autofill/Validator;)Landroid/service/autofill/SaveInfo$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addSanitizer](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#addSanitizer(android.service.autofill.Sanitizer,%20android.view.autofill.AutofillId...))
        ///
        /// Required features: "android-service-autofill-Sanitizer", "android-service-autofill-SaveInfo_Builder", "android-view-autofill-AutofillId"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Sanitizer", feature = "android-service-autofill-SaveInfo_Builder", feature = "android-view-autofill-AutofillId")))]
        pub fn addSanitizer<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::autofill::Sanitizer>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::autofill::AutofillId, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC | VARARGS, .name == "addSanitizer", .descriptor == "(Landroid/service/autofill/Sanitizer;[Landroid/view/autofill/AutofillId;)Landroid/service/autofill/SaveInfo$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "addSanitizer\0", "(Landroid/service/autofill/Sanitizer;[Landroid/view/autofill/AutofillId;)Landroid/service/autofill/SaveInfo$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTriggerId](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setTriggerId(android.view.autofill.AutofillId))
        ///
        /// Required features: "android-service-autofill-SaveInfo_Builder", "android-view-autofill-AutofillId"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-SaveInfo_Builder", feature = "android-view-autofill-AutofillId")))]
        pub fn setTriggerId<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::autofill::AutofillId>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "setTriggerId", .descriptor == "(Landroid/view/autofill/AutofillId;)Landroid/service/autofill/SaveInfo$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "setTriggerId\0", "(Landroid/view/autofill/AutofillId;)Landroid/service/autofill/SaveInfo$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#build())
        ///
        /// Required features: "android-service-autofill-SaveInfo"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-SaveInfo")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::SaveInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/SaveInfo$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/service/autofill/SaveInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/SaveInfo$Builder\0", "build\0", "()Landroid/service/autofill/SaveInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
