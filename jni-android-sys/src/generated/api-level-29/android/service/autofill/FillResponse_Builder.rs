// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-autofill-FillResponse_Builder"))]
__jni_bindgen! {
    /// public final class [FillResponse.Builder](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html)
    ///
    /// Required feature: android-service-autofill-FillResponse_Builder
    public final class FillResponse_Builder ("android/service/autofill/FillResponse$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAuthentication](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setAuthentication(android.view.autofill.AutofillId%5B%5D,%20android.content.IntentSender,%20android.widget.RemoteViews))
        ///
        /// Required features: "android-content-IntentSender", "android-service-autofill-FillResponse_Builder", "android-view-autofill-AutofillId", "android-widget-RemoteViews"
        #[cfg(any(feature = "all", all(feature = "android-content-IntentSender", feature = "android-service-autofill-FillResponse_Builder", feature = "android-view-autofill-AutofillId", feature = "android-widget-RemoteViews")))]
        pub fn setAuthentication<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::autofill::AutofillId, crate::java::lang::Throwable>>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::IntentSender>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::RemoteViews>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "setAuthentication", .descriptor == "([Landroid/view/autofill/AutofillId;Landroid/content/IntentSender;Landroid/widget/RemoteViews;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setAuthentication\0", "([Landroid/view/autofill/AutofillId;Landroid/content/IntentSender;Landroid/widget/RemoteViews;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIgnoredIds](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setIgnoredIds(android.view.autofill.AutofillId...))
        ///
        /// Required features: "android-service-autofill-FillResponse_Builder", "android-view-autofill-AutofillId"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse_Builder", feature = "android-view-autofill-AutofillId")))]
        pub fn setIgnoredIds<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::autofill::AutofillId, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC | VARARGS, .name == "setIgnoredIds", .descriptor == "([Landroid/view/autofill/AutofillId;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setIgnoredIds\0", "([Landroid/view/autofill/AutofillId;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addDataset](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#addDataset(android.service.autofill.Dataset))
        ///
        /// Required features: "android-service-autofill-Dataset", "android-service-autofill-FillResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-Dataset", feature = "android-service-autofill-FillResponse_Builder")))]
        pub fn addDataset<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::autofill::Dataset>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "addDataset", .descriptor == "(Landroid/service/autofill/Dataset;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "addDataset\0", "(Landroid/service/autofill/Dataset;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSaveInfo](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setSaveInfo(android.service.autofill.SaveInfo))
        ///
        /// Required features: "android-service-autofill-FillResponse_Builder", "android-service-autofill-SaveInfo"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse_Builder", feature = "android-service-autofill-SaveInfo")))]
        pub fn setSaveInfo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::autofill::SaveInfo>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "setSaveInfo", .descriptor == "(Landroid/service/autofill/SaveInfo;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setSaveInfo\0", "(Landroid/service/autofill/SaveInfo;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setClientState](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setClientState(android.os.Bundle))
        ///
        /// Required features: "android-os-Bundle", "android-service-autofill-FillResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle", feature = "android-service-autofill-FillResponse_Builder")))]
        pub fn setClientState<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "setClientState", .descriptor == "(Landroid/os/Bundle;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setClientState\0", "(Landroid/os/Bundle;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFieldClassificationIds](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setFieldClassificationIds(android.view.autofill.AutofillId...))
        ///
        /// Required features: "android-service-autofill-FillResponse_Builder", "android-view-autofill-AutofillId"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse_Builder", feature = "android-view-autofill-AutofillId")))]
        pub fn setFieldClassificationIds<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::view::autofill::AutofillId, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC | VARARGS, .name == "setFieldClassificationIds", .descriptor == "([Landroid/view/autofill/AutofillId;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setFieldClassificationIds\0", "([Landroid/view/autofill/AutofillId;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFlags](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setFlags(int))
        ///
        /// Required features: "android-service-autofill-FillResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse_Builder")))]
        pub fn setFlags<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "setFlags", .descriptor == "(I)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setFlags\0", "(I)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [disableAutofill](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#disableAutofill(long))
        ///
        /// Required features: "android-service-autofill-FillResponse_Builder"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse_Builder")))]
        pub fn disableAutofill<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "disableAutofill", .descriptor == "(J)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "disableAutofill\0", "(J)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setHeader](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setHeader(android.widget.RemoteViews))
        ///
        /// Required features: "android-service-autofill-FillResponse_Builder", "android-widget-RemoteViews"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse_Builder", feature = "android-widget-RemoteViews")))]
        pub fn setHeader<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::RemoteViews>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "setHeader", .descriptor == "(Landroid/widget/RemoteViews;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setHeader\0", "(Landroid/widget/RemoteViews;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFooter](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setFooter(android.widget.RemoteViews))
        ///
        /// Required features: "android-service-autofill-FillResponse_Builder", "android-widget-RemoteViews"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse_Builder", feature = "android-widget-RemoteViews")))]
        pub fn setFooter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::widget::RemoteViews>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "setFooter", .descriptor == "(Landroid/widget/RemoteViews;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setFooter\0", "(Landroid/widget/RemoteViews;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUserData](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#setUserData(android.service.autofill.UserData))
        ///
        /// Required features: "android-service-autofill-FillResponse_Builder", "android-service-autofill-UserData"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse_Builder", feature = "android-service-autofill-UserData")))]
        pub fn setUserData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::autofill::UserData>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "setUserData", .descriptor == "(Landroid/service/autofill/UserData;)Landroid/service/autofill/FillResponse$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "setUserData\0", "(Landroid/service/autofill/UserData;)Landroid/service/autofill/FillResponse$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/service/autofill/FillResponse.Builder.html#build())
        ///
        /// Required features: "android-service-autofill-FillResponse"
        #[cfg(any(feature = "all", all(feature = "android-service-autofill-FillResponse")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::autofill::FillResponse>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/autofill/FillResponse$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/service/autofill/FillResponse;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/autofill/FillResponse$Builder\0", "build\0", "()Landroid/service/autofill/FillResponse;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
