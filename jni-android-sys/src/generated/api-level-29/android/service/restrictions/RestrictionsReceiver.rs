// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-restrictions-RestrictionsReceiver"))]
__jni_bindgen! {
    /// public class [RestrictionsReceiver](https://developer.android.com/reference/android/service/restrictions/RestrictionsReceiver.html)
    ///
    /// Required feature: android-service-restrictions-RestrictionsReceiver
    public class RestrictionsReceiver ("android/service/restrictions/RestrictionsReceiver") extends crate::android::content::BroadcastReceiver {

        /// [RestrictionsReceiver](https://developer.android.com/reference/android/service/restrictions/RestrictionsReceiver.html#RestrictionsReceiver())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::restrictions::RestrictionsReceiver>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/restrictions/RestrictionsReceiver", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/restrictions/RestrictionsReceiver\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onRequestPermission](https://developer.android.com/reference/android/service/restrictions/RestrictionsReceiver.html#onRequestPermission(android.content.Context,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20android.os.PersistableBundle))
        ///
        /// Required features: "android-content-Context", "android-os-PersistableBundle", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-os-PersistableBundle", feature = "java-lang-String")))]
        pub fn onRequestPermission<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::PersistableBundle>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/restrictions/RestrictionsReceiver", java.flags == PUBLIC | ABSTRACT, .name == "onRequestPermission", .descriptor == "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/PersistableBundle;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/restrictions/RestrictionsReceiver\0", "onRequestPermission\0", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/PersistableBundle;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onReceive](https://developer.android.com/reference/android/service/restrictions/RestrictionsReceiver.html#onReceive(android.content.Context,%20android.content.Intent))
        ///
        /// Required features: "android-content-Context", "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-content-Intent")))]
        pub fn onReceive<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/restrictions/RestrictionsReceiver", java.flags == PUBLIC, .name == "onReceive", .descriptor == "(Landroid/content/Context;Landroid/content/Intent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/restrictions/RestrictionsReceiver\0", "onReceive\0", "(Landroid/content/Context;Landroid/content/Intent;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
