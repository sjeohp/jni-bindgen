// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-carrier-CarrierService"))]
__jni_bindgen! {
    /// public class [CarrierService](https://developer.android.com/reference/android/service/carrier/CarrierService.html)
    ///
    /// Required feature: android-service-carrier-CarrierService
    public class CarrierService ("android/service/carrier/CarrierService") extends crate::android::app::Service {

        /// [CarrierService](https://developer.android.com/reference/android/service/carrier/CarrierService.html#CarrierService())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::carrier::CarrierService>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/carrier/CarrierService", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/carrier/CarrierService\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onLoadConfig](https://developer.android.com/reference/android/service/carrier/CarrierService.html#onLoadConfig(android.service.carrier.CarrierIdentifier))
        ///
        /// Required features: "android-os-PersistableBundle", "android-service-carrier-CarrierIdentifier"
        #[cfg(any(feature = "all", all(feature = "android-os-PersistableBundle", feature = "android-service-carrier-CarrierIdentifier")))]
        pub fn onLoadConfig<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::carrier::CarrierIdentifier>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::PersistableBundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/carrier/CarrierService", java.flags == PUBLIC | ABSTRACT, .name == "onLoadConfig", .descriptor == "(Landroid/service/carrier/CarrierIdentifier;)Landroid/os/PersistableBundle;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/carrier/CarrierService\0", "onLoadConfig\0", "(Landroid/service/carrier/CarrierIdentifier;)Landroid/os/PersistableBundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [notifyCarrierNetworkChange](https://developer.android.com/reference/android/service/carrier/CarrierService.html#notifyCarrierNetworkChange(boolean))
        pub fn notifyCarrierNetworkChange<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/carrier/CarrierService", java.flags == PUBLIC | FINAL, .name == "notifyCarrierNetworkChange", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/carrier/CarrierService\0", "notifyCarrierNetworkChange\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onBind](https://developer.android.com/reference/android/service/carrier/CarrierService.html#onBind(android.content.Intent))
        ///
        /// Required features: "android-content-Intent", "android-os-IBinder"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-IBinder")))]
        pub fn onBind<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::IBinder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/carrier/CarrierService", java.flags == PUBLIC, .name == "onBind", .descriptor == "(Landroid/content/Intent;)Landroid/os/IBinder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/carrier/CarrierService\0", "onBind\0", "(Landroid/content/Intent;)Landroid/os/IBinder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [CARRIER_SERVICE_INTERFACE](https://developer.android.com/reference/android/service/carrier/CarrierService.html#CARRIER_SERVICE_INTERFACE)
        pub const CARRIER_SERVICE_INTERFACE : &'static str = "android.service.carrier.CarrierService";
    }
}
