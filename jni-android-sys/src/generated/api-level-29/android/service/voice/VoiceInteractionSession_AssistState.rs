// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-service-voice-VoiceInteractionSession_AssistState"))]
__jni_bindgen! {
    /// public final class [VoiceInteractionSession.AssistState](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html)
    ///
    /// Required feature: android-service-voice-VoiceInteractionSession_AssistState
    public final class VoiceInteractionSession_AssistState ("android/service/voice/VoiceInteractionSession$AssistState") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [AssistState](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#AssistState(android.service.voice.VoiceInteractionSession.ActivityId,%20android.os.Bundle,%20android.app.assist.AssistStructure,%20android.app.assist.AssistContent,%20int,%20int))
        // ///
        // /// Required features: "android-app-assist-AssistContent", "android-app-assist-AssistStructure", "android-os-Bundle", "android-service-voice-VoiceInteractionSession_ActivityId"
        // #[cfg(any(feature = "all", all(feature = "android-app-assist-AssistContent", feature = "android-app-assist-AssistStructure", feature = "android-os-Bundle", feature = "android-service-voice-VoiceInteractionSession_ActivityId")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::service::voice::VoiceInteractionSession_ActivityId>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::assist::AssistStructure>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::assist::AssistContent>>, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::service::voice::VoiceInteractionSession_AssistState>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/service/voice/VoiceInteractionSession$AssistState", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/service/voice/VoiceInteractionSession$ActivityId;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;II)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/voice/VoiceInteractionSession$AssistState\0", "<init>\0", "(Landroid/service/voice/VoiceInteractionSession$ActivityId;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;II)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [isFocused](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#isFocused())
        pub fn isFocused<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/voice/VoiceInteractionSession$AssistState", java.flags == PUBLIC, .name == "isFocused", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/voice/VoiceInteractionSession$AssistState\0", "isFocused\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIndex](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getIndex())
        pub fn getIndex<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/voice/VoiceInteractionSession$AssistState", java.flags == PUBLIC, .name == "getIndex", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/voice/VoiceInteractionSession$AssistState\0", "getIndex\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCount](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getCount())
        pub fn getCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/voice/VoiceInteractionSession$AssistState", java.flags == PUBLIC, .name == "getCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/voice/VoiceInteractionSession$AssistState\0", "getCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActivityId](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getActivityId())
        ///
        /// Required features: "android-service-voice-VoiceInteractionSession_ActivityId"
        #[cfg(any(feature = "all", all(feature = "android-service-voice-VoiceInteractionSession_ActivityId")))]
        pub fn getActivityId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::service::voice::VoiceInteractionSession_ActivityId>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/voice/VoiceInteractionSession$AssistState", java.flags == PUBLIC, .name == "getActivityId", .descriptor == "()Landroid/service/voice/VoiceInteractionSession$ActivityId;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/voice/VoiceInteractionSession$AssistState\0", "getActivityId\0", "()Landroid/service/voice/VoiceInteractionSession$ActivityId;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAssistData](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getAssistData())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getAssistData<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/voice/VoiceInteractionSession$AssistState", java.flags == PUBLIC, .name == "getAssistData", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/voice/VoiceInteractionSession$AssistState\0", "getAssistData\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAssistStructure](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getAssistStructure())
        ///
        /// Required features: "android-app-assist-AssistStructure"
        #[cfg(any(feature = "all", all(feature = "android-app-assist-AssistStructure")))]
        pub fn getAssistStructure<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::assist::AssistStructure>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/voice/VoiceInteractionSession$AssistState", java.flags == PUBLIC, .name == "getAssistStructure", .descriptor == "()Landroid/app/assist/AssistStructure;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/voice/VoiceInteractionSession$AssistState\0", "getAssistStructure\0", "()Landroid/app/assist/AssistStructure;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAssistContent](https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getAssistContent())
        ///
        /// Required features: "android-app-assist-AssistContent"
        #[cfg(any(feature = "all", all(feature = "android-app-assist-AssistContent")))]
        pub fn getAssistContent<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::app::assist::AssistContent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/service/voice/VoiceInteractionSession$AssistState", java.flags == PUBLIC, .name == "getAssistContent", .descriptor == "()Landroid/app/assist/AssistContent;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/service/voice/VoiceInteractionSession$AssistState\0", "getAssistContent\0", "()Landroid/app/assist/AssistContent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
