// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-transition-TransitionPropagation"))]
__jni_bindgen! {
    /// public class [TransitionPropagation](https://developer.android.com/reference/android/transition/TransitionPropagation.html)
    ///
    /// Required feature: android-transition-TransitionPropagation
    public class TransitionPropagation ("android/transition/TransitionPropagation") extends crate::java::lang::Object {

        /// [TransitionPropagation](https://developer.android.com/reference/android/transition/TransitionPropagation.html#TransitionPropagation())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::transition::TransitionPropagation>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionPropagation", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionPropagation\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStartDelay](https://developer.android.com/reference/android/transition/TransitionPropagation.html#getStartDelay(android.view.ViewGroup,%20android.transition.Transition,%20android.transition.TransitionValues,%20android.transition.TransitionValues))
        ///
        /// Required features: "android-transition-Transition", "android-transition-TransitionValues", "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "android-transition-TransitionValues", feature = "android-view-ViewGroup")))]
        pub fn getStartDelay<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::TransitionValues>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::TransitionValues>>) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionPropagation", java.flags == PUBLIC | ABSTRACT, .name == "getStartDelay", .descriptor == "(Landroid/view/ViewGroup;Landroid/transition/Transition;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionPropagation\0", "getStartDelay\0", "(Landroid/view/ViewGroup;Landroid/transition/Transition;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [captureValues](https://developer.android.com/reference/android/transition/TransitionPropagation.html#captureValues(android.transition.TransitionValues))
        ///
        /// Required features: "android-transition-TransitionValues"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionValues")))]
        pub fn captureValues<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::TransitionValues>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionPropagation", java.flags == PUBLIC | ABSTRACT, .name == "captureValues", .descriptor == "(Landroid/transition/TransitionValues;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionPropagation\0", "captureValues\0", "(Landroid/transition/TransitionValues;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPropagationProperties](https://developer.android.com/reference/android/transition/TransitionPropagation.html#getPropagationProperties())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPropagationProperties<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionPropagation", java.flags == PUBLIC | ABSTRACT, .name == "getPropagationProperties", .descriptor == "()[Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionPropagation\0", "getPropagationProperties\0", "()[Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
