// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-transition-TransitionSet"))]
__jni_bindgen! {
    /// public class [TransitionSet](https://developer.android.com/reference/android/transition/TransitionSet.html)
    ///
    /// Required feature: android-transition-TransitionSet
    public class TransitionSet ("android/transition/TransitionSet") extends crate::android::transition::Transition {

        /// [TransitionSet](https://developer.android.com/reference/android/transition/TransitionSet.html#TransitionSet())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [TransitionSet](https://developer.android.com/reference/android/transition/TransitionSet.html#TransitionSet(android.content.Context,%20android.util.AttributeSet))
        ///
        /// Required features: "android-content-Context", "android-util-AttributeSet"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-util-AttributeSet")))]
        pub fn new_Context_AttributeSet<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Landroid/util/AttributeSet;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "<init>\0", "(Landroid/content/Context;Landroid/util/AttributeSet;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOrdering](https://developer.android.com/reference/android/transition/TransitionSet.html#setOrdering(int))
        ///
        /// Required features: "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet")))]
        pub fn setOrdering<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "setOrdering", .descriptor == "(I)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setOrdering\0", "(I)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOrdering](https://developer.android.com/reference/android/transition/TransitionSet.html#getOrdering())
        pub fn getOrdering<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "getOrdering", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "getOrdering\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addTransition](https://developer.android.com/reference/android/transition/TransitionSet.html#addTransition(android.transition.Transition))
        ///
        /// Required features: "android-transition-Transition", "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "android-transition-TransitionSet")))]
        pub fn addTransition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "addTransition", .descriptor == "(Landroid/transition/Transition;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTransition\0", "(Landroid/transition/Transition;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTransitionCount](https://developer.android.com/reference/android/transition/TransitionSet.html#getTransitionCount())
        pub fn getTransitionCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "getTransitionCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "getTransitionCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTransitionAt](https://developer.android.com/reference/android/transition/TransitionSet.html#getTransitionAt(int))
        ///
        /// Required features: "android-transition-Transition"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        pub fn getTransitionAt<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "getTransitionAt", .descriptor == "(I)Landroid/transition/Transition;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "getTransitionAt\0", "(I)Landroid/transition/Transition;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDuration](https://developer.android.com/reference/android/transition/TransitionSet.html#setDuration(long))
        ///
        /// Required features: "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet")))]
        pub fn setDuration_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "setDuration", .descriptor == "(J)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setDuration\0", "(J)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setStartDelay](https://developer.android.com/reference/android/transition/TransitionSet.html#setStartDelay(long))
        ///
        /// Required features: "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet")))]
        pub fn setStartDelay_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "setStartDelay", .descriptor == "(J)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setStartDelay\0", "(J)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setInterpolator](https://developer.android.com/reference/android/transition/TransitionSet.html#setInterpolator(android.animation.TimeInterpolator))
        ///
        /// Required features: "android-animation-TimeInterpolator", "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-animation-TimeInterpolator", feature = "android-transition-TransitionSet")))]
        pub fn setInterpolator_TimeInterpolator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::animation::TimeInterpolator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "setInterpolator", .descriptor == "(Landroid/animation/TimeInterpolator;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setInterpolator\0", "(Landroid/animation/TimeInterpolator;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#addTarget(android.view.View))
        ///
        /// Required features: "android-transition-TransitionSet", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet", feature = "android-view-View")))]
        pub fn addTarget_View<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "addTarget", .descriptor == "(Landroid/view/View;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTarget\0", "(Landroid/view/View;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#addTarget(int))
        ///
        /// Required features: "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet")))]
        pub fn addTarget_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "addTarget", .descriptor == "(I)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTarget\0", "(I)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#addTarget(java.lang.String))
        ///
        /// Required features: "android-transition-TransitionSet", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet", feature = "java-lang-String")))]
        pub fn addTarget_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "addTarget", .descriptor == "(Ljava/lang/String;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTarget\0", "(Ljava/lang/String;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#addTarget(java.lang.Class))
        ///
        /// Required features: "android-transition-TransitionSet", "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet", feature = "java-lang-Class")))]
        pub fn addTarget_Class<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "addTarget", .descriptor == "(Ljava/lang/Class;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTarget\0", "(Ljava/lang/Class;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addListener](https://developer.android.com/reference/android/transition/TransitionSet.html#addListener(android.transition.Transition.TransitionListener))
        ///
        /// Required features: "android-transition-TransitionSet", "android-transition-Transition_TransitionListener"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet", feature = "android-transition-Transition_TransitionListener")))]
        pub fn addListener_TransitionListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition_TransitionListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "addListener", .descriptor == "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addListener\0", "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTarget(int))
        ///
        /// Required features: "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet")))]
        pub fn removeTarget_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "removeTarget", .descriptor == "(I)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTarget\0", "(I)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTarget(android.view.View))
        ///
        /// Required features: "android-transition-TransitionSet", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet", feature = "android-view-View")))]
        pub fn removeTarget_View<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "removeTarget", .descriptor == "(Landroid/view/View;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTarget\0", "(Landroid/view/View;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTarget(java.lang.Class))
        ///
        /// Required features: "android-transition-TransitionSet", "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet", feature = "java-lang-Class")))]
        pub fn removeTarget_Class<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "removeTarget", .descriptor == "(Ljava/lang/Class;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTarget\0", "(Ljava/lang/Class;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTarget(java.lang.String))
        ///
        /// Required features: "android-transition-TransitionSet", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet", feature = "java-lang-String")))]
        pub fn removeTarget_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "removeTarget", .descriptor == "(Ljava/lang/String;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTarget\0", "(Ljava/lang/String;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [excludeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#excludeTarget(android.view.View,%20boolean))
        ///
        /// Required features: "android-transition-Transition", "android-view-View"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "android-view-View")))]
        pub fn excludeTarget_View_boolean<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "excludeTarget", .descriptor == "(Landroid/view/View;Z)Landroid/transition/Transition;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "excludeTarget\0", "(Landroid/view/View;Z)Landroid/transition/Transition;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [excludeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#excludeTarget(java.lang.String,%20boolean))
        ///
        /// Required features: "android-transition-Transition", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "java-lang-String")))]
        pub fn excludeTarget_String_boolean<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "excludeTarget", .descriptor == "(Ljava/lang/String;Z)Landroid/transition/Transition;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "excludeTarget\0", "(Ljava/lang/String;Z)Landroid/transition/Transition;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [excludeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#excludeTarget(int,%20boolean))
        ///
        /// Required features: "android-transition-Transition"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        pub fn excludeTarget_int_boolean<'env>(&'env self, arg0: i32, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "excludeTarget", .descriptor == "(IZ)Landroid/transition/Transition;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "excludeTarget\0", "(IZ)Landroid/transition/Transition;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [excludeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#excludeTarget(java.lang.Class,%20boolean))
        ///
        /// Required features: "android-transition-Transition", "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "java-lang-Class")))]
        pub fn excludeTarget_Class_boolean<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "excludeTarget", .descriptor == "(Ljava/lang/Class;Z)Landroid/transition/Transition;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "excludeTarget\0", "(Ljava/lang/Class;Z)Landroid/transition/Transition;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeListener](https://developer.android.com/reference/android/transition/TransitionSet.html#removeListener(android.transition.Transition.TransitionListener))
        ///
        /// Required features: "android-transition-TransitionSet", "android-transition-Transition_TransitionListener"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet", feature = "android-transition-Transition_TransitionListener")))]
        pub fn removeListener_TransitionListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition_TransitionListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "removeListener", .descriptor == "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeListener\0", "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPathMotion](https://developer.android.com/reference/android/transition/TransitionSet.html#setPathMotion(android.transition.PathMotion))
        ///
        /// Required features: "android-transition-PathMotion"
        #[cfg(any(feature = "all", all(feature = "android-transition-PathMotion")))]
        pub fn setPathMotion<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::PathMotion>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "setPathMotion", .descriptor == "(Landroid/transition/PathMotion;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setPathMotion\0", "(Landroid/transition/PathMotion;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeTransition](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTransition(android.transition.Transition))
        ///
        /// Required features: "android-transition-Transition", "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "android-transition-TransitionSet")))]
        pub fn removeTransition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "removeTransition", .descriptor == "(Landroid/transition/Transition;)Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTransition\0", "(Landroid/transition/Transition;)Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [captureStartValues](https://developer.android.com/reference/android/transition/TransitionSet.html#captureStartValues(android.transition.TransitionValues))
        ///
        /// Required features: "android-transition-TransitionValues"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionValues")))]
        pub fn captureStartValues<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::TransitionValues>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "captureStartValues", .descriptor == "(Landroid/transition/TransitionValues;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "captureStartValues\0", "(Landroid/transition/TransitionValues;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [captureEndValues](https://developer.android.com/reference/android/transition/TransitionSet.html#captureEndValues(android.transition.TransitionValues))
        ///
        /// Required features: "android-transition-TransitionValues"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionValues")))]
        pub fn captureEndValues<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::TransitionValues>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "captureEndValues", .descriptor == "(Landroid/transition/TransitionValues;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "captureEndValues\0", "(Landroid/transition/TransitionValues;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPropagation](https://developer.android.com/reference/android/transition/TransitionSet.html#setPropagation(android.transition.TransitionPropagation))
        ///
        /// Required features: "android-transition-TransitionPropagation"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionPropagation")))]
        pub fn setPropagation<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::TransitionPropagation>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "setPropagation", .descriptor == "(Landroid/transition/TransitionPropagation;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setPropagation\0", "(Landroid/transition/TransitionPropagation;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEpicenterCallback](https://developer.android.com/reference/android/transition/TransitionSet.html#setEpicenterCallback(android.transition.Transition.EpicenterCallback))
        ///
        /// Required features: "android-transition-Transition_EpicenterCallback"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition_EpicenterCallback")))]
        pub fn setEpicenterCallback<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition_EpicenterCallback>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "setEpicenterCallback", .descriptor == "(Landroid/transition/Transition$EpicenterCallback;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setEpicenterCallback\0", "(Landroid/transition/Transition$EpicenterCallback;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/android/transition/TransitionSet.html#clone())
        ///
        /// Required features: "android-transition-TransitionSet"
        #[cfg(any(feature = "all", all(feature = "android-transition-TransitionSet")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::TransitionSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionSet", java.flags == PUBLIC, .name == "clone", .descriptor == "()Landroid/transition/TransitionSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "clone\0", "()Landroid/transition/TransitionSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [clone](https://developer.android.com/reference/android/transition/TransitionSet.html#clone())
        // ///
        // /// Required features: "android-transition-Transition"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        // pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "clone", .descriptor == "()Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "clone\0", "()Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [removeListener](https://developer.android.com/reference/android/transition/TransitionSet.html#removeListener(android.transition.Transition.TransitionListener))
        // ///
        // /// Required features: "android-transition-Transition", "android-transition-Transition_TransitionListener"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "android-transition-Transition_TransitionListener")))]
        // pub fn removeListener_TransitionListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition_TransitionListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "removeListener", .descriptor == "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeListener\0", "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [addListener](https://developer.android.com/reference/android/transition/TransitionSet.html#addListener(android.transition.Transition.TransitionListener))
        // ///
        // /// Required features: "android-transition-Transition", "android-transition-Transition_TransitionListener"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "android-transition-Transition_TransitionListener")))]
        // pub fn addListener_TransitionListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition_TransitionListener>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "addListener", .descriptor == "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addListener\0", "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [removeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTarget(java.lang.Class))
        // ///
        // /// Required features: "android-transition-Transition", "java-lang-Class"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "java-lang-Class")))]
        // pub fn removeTarget_Class<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "removeTarget", .descriptor == "(Ljava/lang/Class;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTarget\0", "(Ljava/lang/Class;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [removeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTarget(android.view.View))
        // ///
        // /// Required features: "android-transition-Transition", "android-view-View"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "android-view-View")))]
        // pub fn removeTarget_View<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "removeTarget", .descriptor == "(Landroid/view/View;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTarget\0", "(Landroid/view/View;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [addTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#addTarget(android.view.View))
        // ///
        // /// Required features: "android-transition-Transition", "android-view-View"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "android-view-View")))]
        // pub fn addTarget_View<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "addTarget", .descriptor == "(Landroid/view/View;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTarget\0", "(Landroid/view/View;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [removeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTarget(java.lang.String))
        // ///
        // /// Required features: "android-transition-Transition", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "java-lang-String")))]
        // pub fn removeTarget_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "removeTarget", .descriptor == "(Ljava/lang/String;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTarget\0", "(Ljava/lang/String;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [removeTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#removeTarget(int))
        // ///
        // /// Required features: "android-transition-Transition"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        // pub fn removeTarget_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "removeTarget", .descriptor == "(I)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "removeTarget\0", "(I)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [addTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#addTarget(java.lang.Class))
        // ///
        // /// Required features: "android-transition-Transition", "java-lang-Class"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "java-lang-Class")))]
        // pub fn addTarget_Class<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "addTarget", .descriptor == "(Ljava/lang/Class;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTarget\0", "(Ljava/lang/Class;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [addTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#addTarget(java.lang.String))
        // ///
        // /// Required features: "android-transition-Transition", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition", feature = "java-lang-String")))]
        // pub fn addTarget_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "addTarget", .descriptor == "(Ljava/lang/String;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTarget\0", "(Ljava/lang/String;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [addTarget](https://developer.android.com/reference/android/transition/TransitionSet.html#addTarget(int))
        // ///
        // /// Required features: "android-transition-Transition"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        // pub fn addTarget_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "addTarget", .descriptor == "(I)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "addTarget\0", "(I)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [setInterpolator](https://developer.android.com/reference/android/transition/TransitionSet.html#setInterpolator(android.animation.TimeInterpolator))
        // ///
        // /// Required features: "android-animation-TimeInterpolator", "android-transition-Transition"
        // #[cfg(any(feature = "all", all(feature = "android-animation-TimeInterpolator", feature = "android-transition-Transition")))]
        // pub fn setInterpolator_TimeInterpolator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::animation::TimeInterpolator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "setInterpolator", .descriptor == "(Landroid/animation/TimeInterpolator;)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setInterpolator\0", "(Landroid/animation/TimeInterpolator;)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [setStartDelay](https://developer.android.com/reference/android/transition/TransitionSet.html#setStartDelay(long))
        // ///
        // /// Required features: "android-transition-Transition"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        // pub fn setStartDelay_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "setStartDelay", .descriptor == "(J)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setStartDelay\0", "(J)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [setDuration](https://developer.android.com/reference/android/transition/TransitionSet.html#setDuration(long))
        // ///
        // /// Required features: "android-transition-Transition"
        // #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        // pub fn setDuration_long<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Transition>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "setDuration", .descriptor == "(J)Landroid/transition/Transition;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "setDuration\0", "(J)Landroid/transition/Transition;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [clone](https://developer.android.com/reference/android/transition/TransitionSet.html#clone())
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/transition/TransitionSet", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionSet\0", "clone\0", "()Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [ORDERING_SEQUENTIAL](https://developer.android.com/reference/android/transition/TransitionSet.html#ORDERING_SEQUENTIAL)
        pub const ORDERING_SEQUENTIAL : i32 = 1;

        /// public static final [ORDERING_TOGETHER](https://developer.android.com/reference/android/transition/TransitionSet.html#ORDERING_TOGETHER)
        pub const ORDERING_TOGETHER : i32 = 0;
    }
}
