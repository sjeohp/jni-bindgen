// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-transition-TransitionListenerAdapter"))]
__jni_bindgen! {
    /// public class [TransitionListenerAdapter](https://developer.android.com/reference/android/transition/TransitionListenerAdapter.html)
    ///
    /// Required feature: android-transition-TransitionListenerAdapter
    public class TransitionListenerAdapter ("android/transition/TransitionListenerAdapter") extends crate::java::lang::Object, implements crate::android::transition::Transition_TransitionListener {

        /// [TransitionListenerAdapter](https://developer.android.com/reference/android/transition/TransitionListenerAdapter.html#TransitionListenerAdapter())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::transition::TransitionListenerAdapter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionListenerAdapter", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionListenerAdapter\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onTransitionStart](https://developer.android.com/reference/android/transition/TransitionListenerAdapter.html#onTransitionStart(android.transition.Transition))
        ///
        /// Required features: "android-transition-Transition"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        pub fn onTransitionStart<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionListenerAdapter", java.flags == PUBLIC, .name == "onTransitionStart", .descriptor == "(Landroid/transition/Transition;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionListenerAdapter\0", "onTransitionStart\0", "(Landroid/transition/Transition;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onTransitionEnd](https://developer.android.com/reference/android/transition/TransitionListenerAdapter.html#onTransitionEnd(android.transition.Transition))
        ///
        /// Required features: "android-transition-Transition"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        pub fn onTransitionEnd<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionListenerAdapter", java.flags == PUBLIC, .name == "onTransitionEnd", .descriptor == "(Landroid/transition/Transition;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionListenerAdapter\0", "onTransitionEnd\0", "(Landroid/transition/Transition;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onTransitionCancel](https://developer.android.com/reference/android/transition/TransitionListenerAdapter.html#onTransitionCancel(android.transition.Transition))
        ///
        /// Required features: "android-transition-Transition"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        pub fn onTransitionCancel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionListenerAdapter", java.flags == PUBLIC, .name == "onTransitionCancel", .descriptor == "(Landroid/transition/Transition;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionListenerAdapter\0", "onTransitionCancel\0", "(Landroid/transition/Transition;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onTransitionPause](https://developer.android.com/reference/android/transition/TransitionListenerAdapter.html#onTransitionPause(android.transition.Transition))
        ///
        /// Required features: "android-transition-Transition"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        pub fn onTransitionPause<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionListenerAdapter", java.flags == PUBLIC, .name == "onTransitionPause", .descriptor == "(Landroid/transition/Transition;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionListenerAdapter\0", "onTransitionPause\0", "(Landroid/transition/Transition;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onTransitionResume](https://developer.android.com/reference/android/transition/TransitionListenerAdapter.html#onTransitionResume(android.transition.Transition))
        ///
        /// Required features: "android-transition-Transition"
        #[cfg(any(feature = "all", all(feature = "android-transition-Transition")))]
        pub fn onTransitionResume<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::transition::Transition>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/TransitionListenerAdapter", java.flags == PUBLIC, .name == "onTransitionResume", .descriptor == "(Landroid/transition/Transition;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/TransitionListenerAdapter\0", "onTransitionResume\0", "(Landroid/transition/Transition;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
