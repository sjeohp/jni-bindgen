// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-transition-Scene"))]
__jni_bindgen! {
    /// public final class [Scene](https://developer.android.com/reference/android/transition/Scene.html)
    ///
    /// Required feature: android-transition-Scene
    public final class Scene ("android/transition/Scene") extends crate::java::lang::Object {

        /// [Scene](https://developer.android.com/reference/android/transition/Scene.html#Scene(android.view.ViewGroup))
        ///
        /// Required features: "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup")))]
        pub fn new_ViewGroup<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::transition::Scene>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/ViewGroup;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/Scene\0", "<init>\0", "(Landroid/view/ViewGroup;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Scene](https://developer.android.com/reference/android/transition/Scene.html#Scene(android.view.ViewGroup,%20android.view.View))
        ///
        /// Required features: "android-view-View", "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-view-View", feature = "android-view-ViewGroup")))]
        pub fn new_ViewGroup_View<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::View>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::transition::Scene>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/ViewGroup;Landroid/view/View;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/Scene\0", "<init>\0", "(Landroid/view/ViewGroup;Landroid/view/View;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Scene](https://developer.android.com/reference/android/transition/Scene.html#Scene(android.view.ViewGroup,%20android.view.ViewGroup))
        ///
        /// Required features: "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup")))]
        #[deprecated] pub fn new_ViewGroup_ViewGroup<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::transition::Scene>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/view/ViewGroup;Landroid/view/ViewGroup;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/Scene\0", "<init>\0", "(Landroid/view/ViewGroup;Landroid/view/ViewGroup;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSceneForLayout](https://developer.android.com/reference/android/transition/Scene.html#getSceneForLayout(android.view.ViewGroup,%20int,%20android.content.Context))
        ///
        /// Required features: "android-content-Context", "android-transition-Scene", "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-transition-Scene", feature = "android-view-ViewGroup")))]
        pub fn getSceneForLayout<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Scene>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC | STATIC, .name == "getSceneForLayout", .descriptor == "(Landroid/view/ViewGroup;ILandroid/content/Context;)Landroid/transition/Scene;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/transition/Scene\0", "getSceneForLayout\0", "(Landroid/view/ViewGroup;ILandroid/content/Context;)Landroid/transition/Scene;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSceneRoot](https://developer.android.com/reference/android/transition/Scene.html#getSceneRoot())
        ///
        /// Required features: "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-view-ViewGroup")))]
        pub fn getSceneRoot<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::view::ViewGroup>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC, .name == "getSceneRoot", .descriptor == "()Landroid/view/ViewGroup;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/Scene\0", "getSceneRoot\0", "()Landroid/view/ViewGroup;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [exit](https://developer.android.com/reference/android/transition/Scene.html#exit())
        pub fn exit<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC, .name == "exit", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/Scene\0", "exit\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [enter](https://developer.android.com/reference/android/transition/Scene.html#enter())
        pub fn enter<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC, .name == "enter", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/Scene\0", "enter\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCurrentScene](https://developer.android.com/reference/android/transition/Scene.html#getCurrentScene(android.view.ViewGroup))
        ///
        /// Required features: "android-transition-Scene", "android-view-ViewGroup"
        #[cfg(any(feature = "all", all(feature = "android-transition-Scene", feature = "android-view-ViewGroup")))]
        pub fn getCurrentScene<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::view::ViewGroup>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::transition::Scene>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC | STATIC, .name == "getCurrentScene", .descriptor == "(Landroid/view/ViewGroup;)Landroid/transition/Scene;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/transition/Scene\0", "getCurrentScene\0", "(Landroid/view/ViewGroup;)Landroid/transition/Scene;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setEnterAction](https://developer.android.com/reference/android/transition/Scene.html#setEnterAction(java.lang.Runnable))
        ///
        /// Required features: "java-lang-Runnable"
        #[cfg(any(feature = "all", all(feature = "java-lang-Runnable")))]
        pub fn setEnterAction<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Runnable>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC, .name == "setEnterAction", .descriptor == "(Ljava/lang/Runnable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/Scene\0", "setEnterAction\0", "(Ljava/lang/Runnable;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExitAction](https://developer.android.com/reference/android/transition/Scene.html#setExitAction(java.lang.Runnable))
        ///
        /// Required features: "java-lang-Runnable"
        #[cfg(any(feature = "all", all(feature = "java-lang-Runnable")))]
        pub fn setExitAction<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Runnable>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/transition/Scene", java.flags == PUBLIC, .name == "setExitAction", .descriptor == "(Ljava/lang/Runnable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/transition/Scene\0", "setExitAction\0", "(Ljava/lang/Runnable;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
