// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-DateFormat"))]
__jni_bindgen! {
    /// public class [DateFormat](https://developer.android.com/reference/android/icu/text/DateFormat.html)
    ///
    /// Required feature: android-icu-text-DateFormat
    public class DateFormat ("android/icu/text/DateFormat") extends crate::android::icu::text::UFormat {

        // // Not emitting: Non-public method
        // /// [DateFormat](https://developer.android.com/reference/android/icu/text/DateFormat.html#DateFormat())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/DateFormat", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [format](https://developer.android.com/reference/android/icu/text/DateFormat.html#format(java.lang.Object,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "java-lang-Object", "java-lang-StringBuffer", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition")))]
        pub fn format_Object_StringBuffer_FieldPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | FINAL, .name == "format", .descriptor == "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "format\0", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DateFormat.html#format(android.icu.util.Calendar,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "android-icu-util-Calendar", "java-lang-StringBuffer", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition")))]
        pub fn format_Calendar_StringBuffer_FieldPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | ABSTRACT, .name == "format", .descriptor == "(Landroid/icu/util/Calendar;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "format\0", "(Landroid/icu/util/Calendar;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DateFormat.html#format(java.util.Date,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "java-lang-StringBuffer", "java-text-FieldPosition", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition", feature = "java-util-Date")))]
        pub fn format_Date_StringBuffer_FieldPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "format\0", "(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DateFormat.html#format(java.util.Date))
        ///
        /// Required features: "java-lang-String", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Date")))]
        pub fn format_Date<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | FINAL, .name == "format", .descriptor == "(Ljava/util/Date;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "format\0", "(Ljava/util/Date;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/android/icu/text/DateFormat.html#parse(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Date")))]
        pub fn parse_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/lang/String;)Ljava/util/Date;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "parse\0", "(Ljava/lang/String;)Ljava/util/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/android/icu/text/DateFormat.html#parse(java.lang.String,%20android.icu.util.Calendar,%20java.text.ParsePosition))
        ///
        /// Required features: "android-icu-util-Calendar", "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parse_String_Calendar_ParsePosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | ABSTRACT, .name == "parse", .descriptor == "(Ljava/lang/String;Landroid/icu/util/Calendar;Ljava/text/ParsePosition;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "parse\0", "(Ljava/lang/String;Landroid/icu/util/Calendar;Ljava/text/ParsePosition;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/android/icu/text/DateFormat.html#parse(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "java-lang-String", "java-text-ParsePosition", "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-text-ParsePosition", feature = "java-util-Date")))]
        pub fn parse_String_ParsePosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "parse\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseObject](https://developer.android.com/reference/android/icu/text/DateFormat.html#parseObject(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "java-lang-Object", "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parseObject<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "parseObject", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "parseObject\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance())
        ///
        /// Required features: "android-icu-text-DateFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat")))]
        pub fn getTimeInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getTimeInstance", .descriptor == "()Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getTimeInstance\0", "()Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(int))
        ///
        /// Required features: "android-icu-text-DateFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat")))]
        pub fn getTimeInstance_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getTimeInstance", .descriptor == "(I)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getTimeInstance\0", "(I)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(int,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-util-Locale")))]
        pub fn getTimeInstance_int_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getTimeInstance", .descriptor == "(ILjava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getTimeInstance\0", "(ILjava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(int,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-ULocale")))]
        pub fn getTimeInstance_int_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getTimeInstance", .descriptor == "(ILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getTimeInstance\0", "(ILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance())
        ///
        /// Required features: "android-icu-text-DateFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat")))]
        pub fn getDateInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateInstance", .descriptor == "()Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateInstance\0", "()Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(int))
        ///
        /// Required features: "android-icu-text-DateFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat")))]
        pub fn getDateInstance_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateInstance", .descriptor == "(I)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateInstance\0", "(I)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(int,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-util-Locale")))]
        pub fn getDateInstance_int_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateInstance", .descriptor == "(ILjava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateInstance\0", "(ILjava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(int,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-ULocale")))]
        pub fn getDateInstance_int_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateInstance", .descriptor == "(ILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateInstance\0", "(ILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance())
        ///
        /// Required features: "android-icu-text-DateFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat")))]
        pub fn getDateTimeInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateTimeInstance", .descriptor == "()Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateTimeInstance\0", "()Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(int,%20int))
        ///
        /// Required features: "android-icu-text-DateFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat")))]
        pub fn getDateTimeInstance_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateTimeInstance", .descriptor == "(II)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateTimeInstance\0", "(II)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(int,%20int,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-util-Locale")))]
        pub fn getDateTimeInstance_int_int_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateTimeInstance", .descriptor == "(IILjava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateTimeInstance\0", "(IILjava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(int,%20int,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-ULocale")))]
        pub fn getDateTimeInstance_int_int_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateTimeInstance", .descriptor == "(IILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateTimeInstance\0", "(IILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstance())
        ///
        /// Required features: "android-icu-text-DateFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat")))]
        pub fn getInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstance", .descriptor == "()Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getInstance\0", "()Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableLocales](https://developer.android.com/reference/android/icu/text/DateFormat.html#getAvailableLocales())
        ///
        /// Required features: "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-util-Locale")))]
        pub fn getAvailableLocales<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::util::Locale, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC, .name == "getAvailableLocales", .descriptor == "()[Ljava/util/Locale;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getAvailableLocales\0", "()[Ljava/util/Locale;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCalendar](https://developer.android.com/reference/android/icu/text/DateFormat.html#setCalendar(android.icu.util.Calendar))
        ///
        /// Required features: "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar")))]
        pub fn setCalendar<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "setCalendar", .descriptor == "(Landroid/icu/util/Calendar;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "setCalendar\0", "(Landroid/icu/util/Calendar;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCalendar](https://developer.android.com/reference/android/icu/text/DateFormat.html#getCalendar())
        ///
        /// Required features: "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar")))]
        pub fn getCalendar<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "getCalendar", .descriptor == "()Landroid/icu/util/Calendar;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "getCalendar\0", "()Landroid/icu/util/Calendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNumberFormat](https://developer.android.com/reference/android/icu/text/DateFormat.html#setNumberFormat(android.icu.text.NumberFormat))
        ///
        /// Required features: "android-icu-text-NumberFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberFormat")))]
        pub fn setNumberFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::NumberFormat>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "setNumberFormat", .descriptor == "(Landroid/icu/text/NumberFormat;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "setNumberFormat\0", "(Landroid/icu/text/NumberFormat;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNumberFormat](https://developer.android.com/reference/android/icu/text/DateFormat.html#getNumberFormat())
        ///
        /// Required features: "android-icu-text-NumberFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberFormat")))]
        pub fn getNumberFormat<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "getNumberFormat", .descriptor == "()Landroid/icu/text/NumberFormat;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "getNumberFormat\0", "()Landroid/icu/text/NumberFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTimeZone](https://developer.android.com/reference/android/icu/text/DateFormat.html#setTimeZone(android.icu.util.TimeZone))
        ///
        /// Required features: "android-icu-util-TimeZone"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-TimeZone")))]
        pub fn setTimeZone<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "setTimeZone", .descriptor == "(Landroid/icu/util/TimeZone;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "setTimeZone\0", "(Landroid/icu/util/TimeZone;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeZone](https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeZone())
        ///
        /// Required features: "android-icu-util-TimeZone"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-TimeZone")))]
        pub fn getTimeZone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::TimeZone>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "getTimeZone", .descriptor == "()Landroid/icu/util/TimeZone;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "getTimeZone\0", "()Landroid/icu/util/TimeZone;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLenient](https://developer.android.com/reference/android/icu/text/DateFormat.html#setLenient(boolean))
        pub fn setLenient<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "setLenient", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "setLenient\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLenient](https://developer.android.com/reference/android/icu/text/DateFormat.html#isLenient())
        pub fn isLenient<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "isLenient", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "isLenient\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCalendarLenient](https://developer.android.com/reference/android/icu/text/DateFormat.html#setCalendarLenient(boolean))
        pub fn setCalendarLenient<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "setCalendarLenient", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "setCalendarLenient\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isCalendarLenient](https://developer.android.com/reference/android/icu/text/DateFormat.html#isCalendarLenient())
        pub fn isCalendarLenient<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "isCalendarLenient", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "isCalendarLenient\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setBooleanAttribute](https://developer.android.com/reference/android/icu/text/DateFormat.html#setBooleanAttribute(android.icu.text.DateFormat.BooleanAttribute,%20boolean))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-text-DateFormat_BooleanAttribute"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-text-DateFormat_BooleanAttribute")))]
        pub fn setBooleanAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DateFormat_BooleanAttribute>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "setBooleanAttribute", .descriptor == "(Landroid/icu/text/DateFormat$BooleanAttribute;Z)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "setBooleanAttribute\0", "(Landroid/icu/text/DateFormat$BooleanAttribute;Z)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBooleanAttribute](https://developer.android.com/reference/android/icu/text/DateFormat.html#getBooleanAttribute(android.icu.text.DateFormat.BooleanAttribute))
        ///
        /// Required features: "android-icu-text-DateFormat_BooleanAttribute"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat_BooleanAttribute")))]
        pub fn getBooleanAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DateFormat_BooleanAttribute>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "getBooleanAttribute", .descriptor == "(Landroid/icu/text/DateFormat$BooleanAttribute;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "getBooleanAttribute\0", "(Landroid/icu/text/DateFormat$BooleanAttribute;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setContext](https://developer.android.com/reference/android/icu/text/DateFormat.html#setContext(android.icu.text.DisplayContext))
        ///
        /// Required features: "android-icu-text-DisplayContext"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DisplayContext")))]
        pub fn setContext<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DisplayContext>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "setContext", .descriptor == "(Landroid/icu/text/DisplayContext;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "setContext\0", "(Landroid/icu/text/DisplayContext;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getContext](https://developer.android.com/reference/android/icu/text/DateFormat.html#getContext(android.icu.text.DisplayContext.Type))
        ///
        /// Required features: "android-icu-text-DisplayContext", "android-icu-text-DisplayContext_Type"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DisplayContext", feature = "android-icu-text-DisplayContext_Type")))]
        pub fn getContext<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DisplayContext_Type>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DisplayContext>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "getContext", .descriptor == "(Landroid/icu/text/DisplayContext$Type;)Landroid/icu/text/DisplayContext;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "getContext\0", "(Landroid/icu/text/DisplayContext$Type;)Landroid/icu/text/DisplayContext;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/icu/text/DateFormat.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/icu/text/DateFormat.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/android/icu/text/DateFormat.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateFormat\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(android.icu.util.Calendar,%20int,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "java-util-Locale")))]
        pub fn getDateInstance_Calendar_int_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateInstance", .descriptor == "(Landroid/icu/util/Calendar;ILjava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateInstance\0", "(Landroid/icu/util/Calendar;ILjava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(android.icu.util.Calendar,%20int,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "android-icu-util-ULocale")))]
        pub fn getDateInstance_Calendar_int_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateInstance", .descriptor == "(Landroid/icu/util/Calendar;ILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateInstance\0", "(Landroid/icu/util/Calendar;ILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(android.icu.util.Calendar,%20int,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "java-util-Locale")))]
        pub fn getTimeInstance_Calendar_int_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getTimeInstance", .descriptor == "(Landroid/icu/util/Calendar;ILjava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getTimeInstance\0", "(Landroid/icu/util/Calendar;ILjava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(android.icu.util.Calendar,%20int,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "android-icu-util-ULocale")))]
        pub fn getTimeInstance_Calendar_int_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getTimeInstance", .descriptor == "(Landroid/icu/util/Calendar;ILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getTimeInstance\0", "(Landroid/icu/util/Calendar;ILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(android.icu.util.Calendar,%20int,%20int,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "java-util-Locale")))]
        pub fn getDateTimeInstance_Calendar_int_int_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateTimeInstance", .descriptor == "(Landroid/icu/util/Calendar;IILjava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateTimeInstance\0", "(Landroid/icu/util/Calendar;IILjava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(android.icu.util.Calendar,%20int,%20int,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "android-icu-util-ULocale")))]
        pub fn getDateTimeInstance_Calendar_int_int_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateTimeInstance", .descriptor == "(Landroid/icu/util/Calendar;IILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateTimeInstance\0", "(Landroid/icu/util/Calendar;IILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstance(android.icu.util.Calendar,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "java-util-Locale")))]
        pub fn getInstance_Calendar_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstance", .descriptor == "(Landroid/icu/util/Calendar;Ljava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getInstance\0", "(Landroid/icu/util/Calendar;Ljava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstance(android.icu.util.Calendar))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar")))]
        pub fn getInstance_Calendar<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstance", .descriptor == "(Landroid/icu/util/Calendar;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getInstance\0", "(Landroid/icu/util/Calendar;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(android.icu.util.Calendar,%20int))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar")))]
        pub fn getDateInstance_Calendar_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateInstance", .descriptor == "(Landroid/icu/util/Calendar;I)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateInstance\0", "(Landroid/icu/util/Calendar;I)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(android.icu.util.Calendar,%20int))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar")))]
        pub fn getTimeInstance_Calendar_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getTimeInstance", .descriptor == "(Landroid/icu/util/Calendar;I)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getTimeInstance\0", "(Landroid/icu/util/Calendar;I)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(android.icu.util.Calendar,%20int,%20int))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar")))]
        pub fn getDateTimeInstance_Calendar_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getDateTimeInstance", .descriptor == "(Landroid/icu/util/Calendar;II)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getDateTimeInstance\0", "(Landroid/icu/util/Calendar;II)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstanceForSkeleton](https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(java.lang.String))
        ///
        /// Required features: "android-icu-text-DateFormat", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-lang-String")))]
        pub fn getInstanceForSkeleton_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstanceForSkeleton", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getInstanceForSkeleton\0", "(Ljava/lang/String;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstanceForSkeleton](https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(java.lang.String,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn getInstanceForSkeleton_String_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstanceForSkeleton", .descriptor == "(Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getInstanceForSkeleton\0", "(Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstanceForSkeleton](https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(java.lang.String,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn getInstanceForSkeleton_String_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstanceForSkeleton", .descriptor == "(Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getInstanceForSkeleton\0", "(Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstanceForSkeleton](https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(android.icu.util.Calendar,%20java.lang.String,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn getInstanceForSkeleton_Calendar_String_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstanceForSkeleton", .descriptor == "(Landroid/icu/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getInstanceForSkeleton\0", "(Landroid/icu/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstanceForSkeleton](https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(android.icu.util.Calendar,%20java.lang.String,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn getInstanceForSkeleton_Calendar_String_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstanceForSkeleton", .descriptor == "(Landroid/icu/util/Calendar;Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getInstanceForSkeleton\0", "(Landroid/icu/util/Calendar;Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPatternInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(java.lang.String))
        ///
        /// Required features: "android-icu-text-DateFormat", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-lang-String")))]
        pub fn getPatternInstance_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getPatternInstance", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getPatternInstance\0", "(Ljava/lang/String;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPatternInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(java.lang.String,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn getPatternInstance_String_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getPatternInstance", .descriptor == "(Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getPatternInstance\0", "(Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPatternInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(java.lang.String,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn getPatternInstance_String_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getPatternInstance", .descriptor == "(Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getPatternInstance\0", "(Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPatternInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(android.icu.util.Calendar,%20java.lang.String,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn getPatternInstance_Calendar_String_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getPatternInstance", .descriptor == "(Landroid/icu/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getPatternInstance\0", "(Landroid/icu/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPatternInstance](https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(android.icu.util.Calendar,%20java.lang.String,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-Calendar", "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-Calendar", feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn getPatternInstance_Calendar_String_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateFormat", java.flags == PUBLIC | STATIC | FINAL, .name == "getPatternInstance", .descriptor == "(Landroid/icu/util/Calendar;Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateFormat\0", "getPatternInstance\0", "(Landroid/icu/util/Calendar;Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ABBR_GENERIC_TZ](https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_GENERIC_TZ)
        pub const ABBR_GENERIC_TZ : &'static str = "v";

        /// public static final [ABBR_MONTH](https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_MONTH)
        pub const ABBR_MONTH : &'static str = "MMM";

        /// public static final [ABBR_MONTH_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_MONTH_DAY)
        pub const ABBR_MONTH_DAY : &'static str = "MMMd";

        /// public static final [ABBR_MONTH_WEEKDAY_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_MONTH_WEEKDAY_DAY)
        pub const ABBR_MONTH_WEEKDAY_DAY : &'static str = "MMMEd";

        /// public static final [ABBR_QUARTER](https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_QUARTER)
        pub const ABBR_QUARTER : &'static str = "QQQ";

        /// public static final [ABBR_SPECIFIC_TZ](https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_SPECIFIC_TZ)
        pub const ABBR_SPECIFIC_TZ : &'static str = "z";

        /// public static final [ABBR_UTC_TZ](https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_UTC_TZ)
        pub const ABBR_UTC_TZ : &'static str = "ZZZZ";

        /// public static final [ABBR_WEEKDAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_WEEKDAY)
        pub const ABBR_WEEKDAY : &'static str = "E";

        /// public static final [AM_PM_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#AM_PM_FIELD)
        pub const AM_PM_FIELD : i32 = 14;

        /// public static final [AM_PM_MIDNIGHT_NOON_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#AM_PM_MIDNIGHT_NOON_FIELD)
        pub const AM_PM_MIDNIGHT_NOON_FIELD : i32 = 35;

        /// public static final [DATE_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#DATE_FIELD)
        pub const DATE_FIELD : i32 = 3;

        /// public static final [DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#DAY)
        pub const DAY : &'static str = "d";

        /// public static final [DAY_OF_WEEK_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#DAY_OF_WEEK_FIELD)
        pub const DAY_OF_WEEK_FIELD : i32 = 9;

        /// public static final [DAY_OF_WEEK_IN_MONTH_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#DAY_OF_WEEK_IN_MONTH_FIELD)
        pub const DAY_OF_WEEK_IN_MONTH_FIELD : i32 = 11;

        /// public static final [DAY_OF_YEAR_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#DAY_OF_YEAR_FIELD)
        pub const DAY_OF_YEAR_FIELD : i32 = 10;

        /// public static final [DEFAULT](https://developer.android.com/reference/android/icu/text/DateFormat.html#DEFAULT)
        pub const DEFAULT : i32 = 2;

        /// public static final [DOW_LOCAL_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#DOW_LOCAL_FIELD)
        pub const DOW_LOCAL_FIELD : i32 = 19;

        /// public static final [ERA_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#ERA_FIELD)
        pub const ERA_FIELD : i32 = 0;

        /// public static final [EXTENDED_YEAR_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#EXTENDED_YEAR_FIELD)
        pub const EXTENDED_YEAR_FIELD : i32 = 20;

        /// public static final [FLEXIBLE_DAY_PERIOD_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#FLEXIBLE_DAY_PERIOD_FIELD)
        pub const FLEXIBLE_DAY_PERIOD_FIELD : i32 = 36;

        /// public static final [FRACTIONAL_SECOND_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#FRACTIONAL_SECOND_FIELD)
        pub const FRACTIONAL_SECOND_FIELD : i32 = 8;

        /// public static final [FULL](https://developer.android.com/reference/android/icu/text/DateFormat.html#FULL)
        pub const FULL : i32 = 0;

        /// public static final [GENERIC_TZ](https://developer.android.com/reference/android/icu/text/DateFormat.html#GENERIC_TZ)
        pub const GENERIC_TZ : &'static str = "vvvv";

        /// public static final [HOUR](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR)
        pub const HOUR : &'static str = "j";

        /// public static final [HOUR0_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR0_FIELD)
        pub const HOUR0_FIELD : i32 = 16;

        /// public static final [HOUR1_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR1_FIELD)
        pub const HOUR1_FIELD : i32 = 15;

        /// public static final [HOUR24](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR24)
        pub const HOUR24 : &'static str = "H";

        /// public static final [HOUR24_MINUTE](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR24_MINUTE)
        pub const HOUR24_MINUTE : &'static str = "Hm";

        /// public static final [HOUR24_MINUTE_SECOND](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR24_MINUTE_SECOND)
        pub const HOUR24_MINUTE_SECOND : &'static str = "Hms";

        /// public static final [HOUR_MINUTE](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR_MINUTE)
        pub const HOUR_MINUTE : &'static str = "jm";

        /// public static final [HOUR_MINUTE_SECOND](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR_MINUTE_SECOND)
        pub const HOUR_MINUTE_SECOND : &'static str = "jms";

        /// public static final [HOUR_OF_DAY0_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR_OF_DAY0_FIELD)
        pub const HOUR_OF_DAY0_FIELD : i32 = 5;

        /// public static final [HOUR_OF_DAY1_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR_OF_DAY1_FIELD)
        pub const HOUR_OF_DAY1_FIELD : i32 = 4;

        /// public static final [JULIAN_DAY_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#JULIAN_DAY_FIELD)
        pub const JULIAN_DAY_FIELD : i32 = 21;

        /// public static final [LOCATION_TZ](https://developer.android.com/reference/android/icu/text/DateFormat.html#LOCATION_TZ)
        pub const LOCATION_TZ : &'static str = "VVVV";

        /// public static final [LONG](https://developer.android.com/reference/android/icu/text/DateFormat.html#LONG)
        pub const LONG : i32 = 1;

        /// public static final [MEDIUM](https://developer.android.com/reference/android/icu/text/DateFormat.html#MEDIUM)
        pub const MEDIUM : i32 = 2;

        /// public static final [MILLISECONDS_IN_DAY_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#MILLISECONDS_IN_DAY_FIELD)
        pub const MILLISECONDS_IN_DAY_FIELD : i32 = 22;

        /// public static final [MILLISECOND_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#MILLISECOND_FIELD)
        pub const MILLISECOND_FIELD : i32 = 8;

        /// public static final [MINUTE](https://developer.android.com/reference/android/icu/text/DateFormat.html#MINUTE)
        pub const MINUTE : &'static str = "m";

        /// public static final [MINUTE_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#MINUTE_FIELD)
        pub const MINUTE_FIELD : i32 = 6;

        /// public static final [MINUTE_SECOND](https://developer.android.com/reference/android/icu/text/DateFormat.html#MINUTE_SECOND)
        pub const MINUTE_SECOND : &'static str = "ms";

        /// public static final [MONTH](https://developer.android.com/reference/android/icu/text/DateFormat.html#MONTH)
        pub const MONTH : &'static str = "MMMM";

        /// public static final [MONTH_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#MONTH_DAY)
        pub const MONTH_DAY : &'static str = "MMMMd";

        /// public static final [MONTH_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#MONTH_FIELD)
        pub const MONTH_FIELD : i32 = 2;

        /// public static final [MONTH_WEEKDAY_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#MONTH_WEEKDAY_DAY)
        pub const MONTH_WEEKDAY_DAY : &'static str = "MMMMEEEEd";

        /// public static final [NONE](https://developer.android.com/reference/android/icu/text/DateFormat.html#NONE)
        pub const NONE : i32 = -1;

        /// public static final [NUM_MONTH](https://developer.android.com/reference/android/icu/text/DateFormat.html#NUM_MONTH)
        pub const NUM_MONTH : &'static str = "M";

        /// public static final [NUM_MONTH_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#NUM_MONTH_DAY)
        pub const NUM_MONTH_DAY : &'static str = "Md";

        /// public static final [NUM_MONTH_WEEKDAY_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#NUM_MONTH_WEEKDAY_DAY)
        pub const NUM_MONTH_WEEKDAY_DAY : &'static str = "MEd";

        /// public static final [QUARTER](https://developer.android.com/reference/android/icu/text/DateFormat.html#QUARTER)
        pub const QUARTER : &'static str = "QQQQ";

        /// public static final [QUARTER_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#QUARTER_FIELD)
        pub const QUARTER_FIELD : i32 = 27;

        /// public static final [RELATIVE](https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE)
        pub const RELATIVE : i32 = 128;

        /// public static final [RELATIVE_DEFAULT](https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_DEFAULT)
        pub const RELATIVE_DEFAULT : i32 = 130;

        /// public static final [RELATIVE_FULL](https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_FULL)
        pub const RELATIVE_FULL : i32 = 128;

        /// public static final [RELATIVE_LONG](https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_LONG)
        pub const RELATIVE_LONG : i32 = 129;

        /// public static final [RELATIVE_MEDIUM](https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_MEDIUM)
        pub const RELATIVE_MEDIUM : i32 = 130;

        /// public static final [RELATIVE_SHORT](https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_SHORT)
        pub const RELATIVE_SHORT : i32 = 131;

        /// public static final [SECOND](https://developer.android.com/reference/android/icu/text/DateFormat.html#SECOND)
        pub const SECOND : &'static str = "s";

        /// public static final [SECOND_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#SECOND_FIELD)
        pub const SECOND_FIELD : i32 = 7;

        /// public static final [SHORT](https://developer.android.com/reference/android/icu/text/DateFormat.html#SHORT)
        pub const SHORT : i32 = 3;

        /// public static final [SPECIFIC_TZ](https://developer.android.com/reference/android/icu/text/DateFormat.html#SPECIFIC_TZ)
        pub const SPECIFIC_TZ : &'static str = "zzzz";

        /// public static final [STANDALONE_DAY_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#STANDALONE_DAY_FIELD)
        pub const STANDALONE_DAY_FIELD : i32 = 25;

        /// public static final [STANDALONE_MONTH_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#STANDALONE_MONTH_FIELD)
        pub const STANDALONE_MONTH_FIELD : i32 = 26;

        /// public static final [STANDALONE_QUARTER_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#STANDALONE_QUARTER_FIELD)
        pub const STANDALONE_QUARTER_FIELD : i32 = 28;

        /// public static final [TIMEZONE_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_FIELD)
        pub const TIMEZONE_FIELD : i32 = 17;

        /// public static final [TIMEZONE_GENERIC_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_GENERIC_FIELD)
        pub const TIMEZONE_GENERIC_FIELD : i32 = 24;

        /// public static final [TIMEZONE_ISO_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_ISO_FIELD)
        pub const TIMEZONE_ISO_FIELD : i32 = 32;

        /// public static final [TIMEZONE_ISO_LOCAL_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_ISO_LOCAL_FIELD)
        pub const TIMEZONE_ISO_LOCAL_FIELD : i32 = 33;

        /// public static final [TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD)
        pub const TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD : i32 = 31;

        /// public static final [TIMEZONE_RFC_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_RFC_FIELD)
        pub const TIMEZONE_RFC_FIELD : i32 = 23;

        /// public static final [TIMEZONE_SPECIAL_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_SPECIAL_FIELD)
        pub const TIMEZONE_SPECIAL_FIELD : i32 = 29;

        /// public static final [WEEKDAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#WEEKDAY)
        pub const WEEKDAY : &'static str = "EEEE";

        /// public static final [WEEK_OF_MONTH_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#WEEK_OF_MONTH_FIELD)
        pub const WEEK_OF_MONTH_FIELD : i32 = 13;

        /// public static final [WEEK_OF_YEAR_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#WEEK_OF_YEAR_FIELD)
        pub const WEEK_OF_YEAR_FIELD : i32 = 12;

        /// public static final [YEAR](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR)
        pub const YEAR : &'static str = "y";

        /// public static final [YEAR_ABBR_MONTH](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_ABBR_MONTH)
        pub const YEAR_ABBR_MONTH : &'static str = "yMMM";

        /// public static final [YEAR_ABBR_MONTH_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_ABBR_MONTH_DAY)
        pub const YEAR_ABBR_MONTH_DAY : &'static str = "yMMMd";

        /// public static final [YEAR_ABBR_MONTH_WEEKDAY_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_ABBR_MONTH_WEEKDAY_DAY)
        pub const YEAR_ABBR_MONTH_WEEKDAY_DAY : &'static str = "yMMMEd";

        /// public static final [YEAR_ABBR_QUARTER](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_ABBR_QUARTER)
        pub const YEAR_ABBR_QUARTER : &'static str = "yQQQ";

        /// public static final [YEAR_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_FIELD)
        pub const YEAR_FIELD : i32 = 1;

        /// public static final [YEAR_MONTH](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_MONTH)
        pub const YEAR_MONTH : &'static str = "yMMMM";

        /// public static final [YEAR_MONTH_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_MONTH_DAY)
        pub const YEAR_MONTH_DAY : &'static str = "yMMMMd";

        /// public static final [YEAR_MONTH_WEEKDAY_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_MONTH_WEEKDAY_DAY)
        pub const YEAR_MONTH_WEEKDAY_DAY : &'static str = "yMMMMEEEEd";

        /// public static final [YEAR_NAME_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_NAME_FIELD)
        pub const YEAR_NAME_FIELD : i32 = 30;

        /// public static final [YEAR_NUM_MONTH](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_NUM_MONTH)
        pub const YEAR_NUM_MONTH : &'static str = "yM";

        /// public static final [YEAR_NUM_MONTH_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_NUM_MONTH_DAY)
        pub const YEAR_NUM_MONTH_DAY : &'static str = "yMd";

        /// public static final [YEAR_NUM_MONTH_WEEKDAY_DAY](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_NUM_MONTH_WEEKDAY_DAY)
        pub const YEAR_NUM_MONTH_WEEKDAY_DAY : &'static str = "yMEd";

        /// public static final [YEAR_QUARTER](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_QUARTER)
        pub const YEAR_QUARTER : &'static str = "yQQQQ";

        /// public static final [YEAR_WOY_FIELD](https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_WOY_FIELD)
        pub const YEAR_WOY_FIELD : i32 = 18;

        // // Not emitting: Non-public field
        // /// **get** protected [calendar](https://developer.android.com/reference/android/icu/text/DateFormat.html#calendar)
        // ///
        // /// Required feature: android-icu-util-Calendar
        // #[cfg(any(feature = "all", feature = "android-icu-util-Calendar"))]
        // pub fn calendar<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/icu/text/DateFormat\0", "calendar\0", "Landroid/icu/util/Calendar;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [calendar](https://developer.android.com/reference/android/icu/text/DateFormat.html#calendar)
        // ///
        // /// Required feature: android-icu-util-Calendar
        // #[cfg(any(feature = "all", feature = "android-icu-util-Calendar"))]
        // pub fn set_calendar<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::icu::util::Calendar>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/icu/text/DateFormat\0", "calendar\0", "Landroid/icu/util/Calendar;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// **get** protected [numberFormat](https://developer.android.com/reference/android/icu/text/DateFormat.html#numberFormat)
        // ///
        // /// Required feature: android-icu-text-NumberFormat
        // #[cfg(any(feature = "all", feature = "android-icu-text-NumberFormat"))]
        // pub fn numberFormat<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberFormat>> {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/icu/text/DateFormat\0", "numberFormat\0", "Landroid/icu/text/NumberFormat;\0");
        //         env.get_object_field(class, field)
        //     }
        // }

        // /// **set** protected [numberFormat](https://developer.android.com/reference/android/icu/text/DateFormat.html#numberFormat)
        // ///
        // /// Required feature: android-icu-text-NumberFormat
        // #[cfg(any(feature = "all", feature = "android-icu-text-NumberFormat"))]
        // pub fn set_numberFormat<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::android::icu::text::NumberFormat>>) {
        //     unsafe {
        //         let env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (class, field) = env.require_class_field("android/icu/text/DateFormat\0", "numberFormat\0", "Landroid/icu/text/NumberFormat;\0");
        //         env.set_object_field(class, field, value)
        //     }
        // }
    }
}
