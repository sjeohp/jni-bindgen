// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-DateTimePatternGenerator"))]
__jni_bindgen! {
    /// public class [DateTimePatternGenerator](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html)
    ///
    /// Required feature: android-icu-text-DateTimePatternGenerator
    public class DateTimePatternGenerator ("android/icu/text/DateTimePatternGenerator") extends crate::java::lang::Object, implements crate::android::icu::util::Freezable, crate::java::lang::Cloneable {

        // // Not emitting: Non-public method
        // /// [DateTimePatternGenerator](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#DateTimePatternGenerator())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::DateTimePatternGenerator>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getEmptyInstance](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getEmptyInstance())
        ///
        /// Required features: "android-icu-text-DateTimePatternGenerator"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateTimePatternGenerator")))]
        pub fn getEmptyInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateTimePatternGenerator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC | STATIC, .name == "getEmptyInstance", .descriptor == "()Landroid/icu/text/DateTimePatternGenerator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateTimePatternGenerator\0", "getEmptyInstance\0", "()Landroid/icu/text/DateTimePatternGenerator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getInstance())
        ///
        /// Required features: "android-icu-text-DateTimePatternGenerator"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateTimePatternGenerator")))]
        pub fn getInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateTimePatternGenerator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "()Landroid/icu/text/DateTimePatternGenerator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateTimePatternGenerator\0", "getInstance\0", "()Landroid/icu/text/DateTimePatternGenerator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getInstance(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateTimePatternGenerator", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateTimePatternGenerator", feature = "android-icu-util-ULocale")))]
        pub fn getInstance_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateTimePatternGenerator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/icu/text/DateTimePatternGenerator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateTimePatternGenerator\0", "getInstance\0", "(Landroid/icu/util/ULocale;)Landroid/icu/text/DateTimePatternGenerator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getInstance(java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateTimePatternGenerator", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateTimePatternGenerator", feature = "java-util-Locale")))]
        pub fn getInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateTimePatternGenerator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Ljava/util/Locale;)Landroid/icu/text/DateTimePatternGenerator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/DateTimePatternGenerator\0", "getInstance\0", "(Ljava/util/Locale;)Landroid/icu/text/DateTimePatternGenerator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBestPattern](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getBestPattern(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getBestPattern_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getBestPattern", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getBestPattern\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBestPattern](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getBestPattern(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getBestPattern_String_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getBestPattern", .descriptor == "(Ljava/lang/String;I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getBestPattern\0", "(Ljava/lang/String;I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addPattern](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#addPattern(java.lang.String,%20boolean,%20android.icu.text.DateTimePatternGenerator.PatternInfo))
        ///
        /// Required features: "android-icu-text-DateTimePatternGenerator", "android-icu-text-DateTimePatternGenerator_PatternInfo", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateTimePatternGenerator", feature = "android-icu-text-DateTimePatternGenerator_PatternInfo", feature = "java-lang-String")))]
        pub fn addPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DateTimePatternGenerator_PatternInfo>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateTimePatternGenerator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "addPattern", .descriptor == "(Ljava/lang/String;ZLandroid/icu/text/DateTimePatternGenerator$PatternInfo;)Landroid/icu/text/DateTimePatternGenerator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "addPattern\0", "(Ljava/lang/String;ZLandroid/icu/text/DateTimePatternGenerator$PatternInfo;)Landroid/icu/text/DateTimePatternGenerator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSkeleton](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getSkeleton(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getSkeleton<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getSkeleton", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getSkeleton\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBaseSkeleton](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getBaseSkeleton(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getBaseSkeleton<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getBaseSkeleton", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getBaseSkeleton\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSkeletons](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getSkeletons(java.util.Map))
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn getSkeletons<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Map>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getSkeletons", .descriptor == "(Ljava/util/Map;)Ljava/util/Map;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getSkeletons\0", "(Ljava/util/Map;)Ljava/util/Map;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBaseSkeletons](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getBaseSkeletons(java.util.Set))
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn getBaseSkeletons<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Set>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getBaseSkeletons", .descriptor == "(Ljava/util/Set;)Ljava/util/Set;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getBaseSkeletons\0", "(Ljava/util/Set;)Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replaceFieldTypes](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#replaceFieldTypes(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn replaceFieldTypes_String_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "replaceFieldTypes", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "replaceFieldTypes\0", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replaceFieldTypes](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#replaceFieldTypes(java.lang.String,%20java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn replaceFieldTypes_String_String_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "replaceFieldTypes", .descriptor == "(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "replaceFieldTypes\0", "(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDateTimeFormat](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#setDateTimeFormat(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setDateTimeFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "setDateTimeFormat", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "setDateTimeFormat\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeFormat](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getDateTimeFormat())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDateTimeFormat<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getDateTimeFormat", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getDateTimeFormat\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDecimal](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#setDecimal(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setDecimal<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "setDecimal", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "setDecimal\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDecimal](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getDecimal())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDecimal<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getDecimal", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getDecimal\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAppendItemFormat](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#setAppendItemFormat(int,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setAppendItemFormat<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "setAppendItemFormat", .descriptor == "(ILjava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "setAppendItemFormat\0", "(ILjava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAppendItemFormat](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getAppendItemFormat(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAppendItemFormat<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getAppendItemFormat", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getAppendItemFormat\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAppendItemName](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#setAppendItemName(int,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setAppendItemName<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "setAppendItemName", .descriptor == "(ILjava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "setAppendItemName\0", "(ILjava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAppendItemName](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#getAppendItemName(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAppendItemName<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "getAppendItemName", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "getAppendItemName\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isFrozen](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#isFrozen())
        pub fn isFrozen<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "isFrozen", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "isFrozen\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [freeze](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#freeze())
        ///
        /// Required features: "android-icu-text-DateTimePatternGenerator"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateTimePatternGenerator")))]
        pub fn freeze<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateTimePatternGenerator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "freeze", .descriptor == "()Landroid/icu/text/DateTimePatternGenerator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "freeze\0", "()Landroid/icu/text/DateTimePatternGenerator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cloneAsThawed](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#cloneAsThawed())
        ///
        /// Required features: "android-icu-text-DateTimePatternGenerator"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateTimePatternGenerator")))]
        pub fn cloneAsThawed<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateTimePatternGenerator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "cloneAsThawed", .descriptor == "()Landroid/icu/text/DateTimePatternGenerator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "cloneAsThawed\0", "()Landroid/icu/text/DateTimePatternGenerator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [cloneAsThawed](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#cloneAsThawed())
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn cloneAsThawed<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "cloneAsThawed", .descriptor == "()Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "cloneAsThawed\0", "()Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [freeze](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#freeze())
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn freeze<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/DateTimePatternGenerator", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "freeze", .descriptor == "()Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DateTimePatternGenerator\0", "freeze\0", "()Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [DAY](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#DAY)
        pub const DAY : i32 = 7;

        /// public static final [DAYPERIOD](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#DAYPERIOD)
        pub const DAYPERIOD : i32 = 10;

        /// public static final [DAY_OF_WEEK_IN_MONTH](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#DAY_OF_WEEK_IN_MONTH)
        pub const DAY_OF_WEEK_IN_MONTH : i32 = 9;

        /// public static final [DAY_OF_YEAR](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#DAY_OF_YEAR)
        pub const DAY_OF_YEAR : i32 = 8;

        /// public static final [ERA](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#ERA)
        pub const ERA : i32 = 0;

        /// public static final [FRACTIONAL_SECOND](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#FRACTIONAL_SECOND)
        pub const FRACTIONAL_SECOND : i32 = 14;

        /// public static final [HOUR](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#HOUR)
        pub const HOUR : i32 = 11;

        /// public static final [MATCH_ALL_FIELDS_LENGTH](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#MATCH_ALL_FIELDS_LENGTH)
        pub const MATCH_ALL_FIELDS_LENGTH : i32 = 65535;

        /// public static final [MATCH_HOUR_FIELD_LENGTH](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#MATCH_HOUR_FIELD_LENGTH)
        pub const MATCH_HOUR_FIELD_LENGTH : i32 = 2048;

        /// public static final [MATCH_NO_OPTIONS](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#MATCH_NO_OPTIONS)
        pub const MATCH_NO_OPTIONS : i32 = 0;

        /// public static final [MINUTE](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#MINUTE)
        pub const MINUTE : i32 = 12;

        /// public static final [MONTH](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#MONTH)
        pub const MONTH : i32 = 3;

        /// public static final [QUARTER](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#QUARTER)
        pub const QUARTER : i32 = 2;

        /// public static final [SECOND](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#SECOND)
        pub const SECOND : i32 = 13;

        /// public static final [WEEKDAY](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#WEEKDAY)
        pub const WEEKDAY : i32 = 6;

        /// public static final [WEEK_OF_MONTH](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#WEEK_OF_MONTH)
        pub const WEEK_OF_MONTH : i32 = 5;

        /// public static final [WEEK_OF_YEAR](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#WEEK_OF_YEAR)
        pub const WEEK_OF_YEAR : i32 = 4;

        /// public static final [YEAR](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#YEAR)
        pub const YEAR : i32 = 1;

        /// public static final [ZONE](https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html#ZONE)
        pub const ZONE : i32 = 15;
    }
}
