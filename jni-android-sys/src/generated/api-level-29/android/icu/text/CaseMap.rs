// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-CaseMap"))]
__jni_bindgen! {
    /// public class [CaseMap](https://developer.android.com/reference/android/icu/text/CaseMap.html)
    ///
    /// Required feature: android-icu-text-CaseMap
    public class CaseMap ("android/icu/text/CaseMap") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [CaseMap](https://developer.android.com/reference/android/icu/text/CaseMap.html#CaseMap(int))
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::CaseMap>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/CaseMap", java.flags == (empty), .name == "<init>", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/CaseMap\0", "<init>\0", "(I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [toLower](https://developer.android.com/reference/android/icu/text/CaseMap.html#toLower())
        ///
        /// Required features: "android-icu-text-CaseMap_Lower"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-CaseMap_Lower")))]
        pub fn toLower<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::CaseMap_Lower>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/CaseMap", java.flags == PUBLIC | STATIC, .name == "toLower", .descriptor == "()Landroid/icu/text/CaseMap$Lower;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/CaseMap\0", "toLower\0", "()Landroid/icu/text/CaseMap$Lower;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toUpper](https://developer.android.com/reference/android/icu/text/CaseMap.html#toUpper())
        ///
        /// Required features: "android-icu-text-CaseMap_Upper"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-CaseMap_Upper")))]
        pub fn toUpper<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::CaseMap_Upper>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/CaseMap", java.flags == PUBLIC | STATIC, .name == "toUpper", .descriptor == "()Landroid/icu/text/CaseMap$Upper;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/CaseMap\0", "toUpper\0", "()Landroid/icu/text/CaseMap$Upper;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toTitle](https://developer.android.com/reference/android/icu/text/CaseMap.html#toTitle())
        ///
        /// Required features: "android-icu-text-CaseMap_Title"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-CaseMap_Title")))]
        pub fn toTitle<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::CaseMap_Title>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/CaseMap", java.flags == PUBLIC | STATIC, .name == "toTitle", .descriptor == "()Landroid/icu/text/CaseMap$Title;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/CaseMap\0", "toTitle\0", "()Landroid/icu/text/CaseMap$Title;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fold](https://developer.android.com/reference/android/icu/text/CaseMap.html#fold())
        ///
        /// Required features: "android-icu-text-CaseMap_Fold"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-CaseMap_Fold")))]
        pub fn fold<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::CaseMap_Fold>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/CaseMap", java.flags == PUBLIC | STATIC, .name == "fold", .descriptor == "()Landroid/icu/text/CaseMap$Fold;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/CaseMap\0", "fold\0", "()Landroid/icu/text/CaseMap$Fold;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [omitUnchangedText](https://developer.android.com/reference/android/icu/text/CaseMap.html#omitUnchangedText())
        ///
        /// Required features: "android-icu-text-CaseMap"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-CaseMap")))]
        pub fn omitUnchangedText<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::CaseMap>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/CaseMap", java.flags == PUBLIC | ABSTRACT, .name == "omitUnchangedText", .descriptor == "()Landroid/icu/text/CaseMap;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/CaseMap\0", "omitUnchangedText\0", "()Landroid/icu/text/CaseMap;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
