// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-DecimalFormat"))]
__jni_bindgen! {
    /// public class [DecimalFormat](https://developer.android.com/reference/android/icu/text/DecimalFormat.html)
    ///
    /// Required feature: android-icu-text-DecimalFormat
    public class DecimalFormat ("android/icu/text/DecimalFormat") extends crate::android::icu::text::NumberFormat {

        /// [DecimalFormat](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#DecimalFormat())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::DecimalFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [DecimalFormat](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#DecimalFormat(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::DecimalFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [DecimalFormat](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#DecimalFormat(java.lang.String,%20android.icu.text.DecimalFormatSymbols))
        ///
        /// Required features: "android-icu-text-DecimalFormatSymbols", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DecimalFormatSymbols", feature = "java-lang-String")))]
        pub fn new_String_DecimalFormatSymbols<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DecimalFormatSymbols>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::DecimalFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Landroid/icu/text/DecimalFormatSymbols;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "<init>\0", "(Ljava/lang/String;Landroid/icu/text/DecimalFormatSymbols;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [DecimalFormat](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#DecimalFormat(java.lang.String,%20android.icu.text.DecimalFormatSymbols,%20android.icu.text.CurrencyPluralInfo,%20int))
        ///
        /// Required features: "android-icu-text-CurrencyPluralInfo", "android-icu-text-DecimalFormatSymbols", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-CurrencyPluralInfo", feature = "android-icu-text-DecimalFormatSymbols", feature = "java-lang-String")))]
        pub fn new_String_DecimalFormatSymbols_CurrencyPluralInfo_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DecimalFormatSymbols>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::CurrencyPluralInfo>>, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::DecimalFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Landroid/icu/text/DecimalFormatSymbols;Landroid/icu/text/CurrencyPluralInfo;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "<init>\0", "(Ljava/lang/String;Landroid/icu/text/DecimalFormatSymbols;Landroid/icu/text/CurrencyPluralInfo;I)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [applyPattern](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#applyPattern(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn applyPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "applyPattern", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "applyPattern\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [applyLocalizedPattern](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#applyLocalizedPattern(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn applyLocalizedPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "applyLocalizedPattern", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "applyLocalizedPattern\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#format(double,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "java-lang-StringBuffer", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition")))]
        pub fn format_double_StringBuffer_FieldPosition<'env>(&'env self, arg0: f64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "format\0", "(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#format(long,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "java-lang-StringBuffer", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition")))]
        pub fn format_long_StringBuffer_FieldPosition<'env>(&'env self, arg0: i64, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "format\0", "(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#format(java.math.BigInteger,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "java-lang-StringBuffer", "java-math-BigInteger", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-StringBuffer", feature = "java-math-BigInteger", feature = "java-text-FieldPosition")))]
        pub fn format_BigInteger_StringBuffer_FieldPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigInteger>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Ljava/math/BigInteger;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "format\0", "(Ljava/math/BigInteger;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#format(java.math.BigDecimal,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "java-lang-StringBuffer", "java-math-BigDecimal", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-StringBuffer", feature = "java-math-BigDecimal", feature = "java-text-FieldPosition")))]
        pub fn format_javaBigDecimal_StringBuffer_FieldPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigDecimal>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Ljava/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "format\0", "(Ljava/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#format(android.icu.math.BigDecimal,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "android-icu-math-BigDecimal", "java-lang-StringBuffer", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-math-BigDecimal", feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition")))]
        pub fn format_BigDecimal_StringBuffer_FieldPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::math::BigDecimal>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Landroid/icu/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "format\0", "(Landroid/icu/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [formatToCharacterIterator](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#formatToCharacterIterator(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-text-AttributedCharacterIterator"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-text-AttributedCharacterIterator")))]
        pub fn formatToCharacterIterator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::AttributedCharacterIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "formatToCharacterIterator", .descriptor == "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "formatToCharacterIterator\0", "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#format(android.icu.util.CurrencyAmount,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "android-icu-util-CurrencyAmount", "java-lang-StringBuffer", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-CurrencyAmount", feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition")))]
        pub fn format_CurrencyAmount_StringBuffer_FieldPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::CurrencyAmount>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Landroid/icu/util/CurrencyAmount;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "format\0", "(Landroid/icu/util/CurrencyAmount;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#parse(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "java-lang-Number", "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-Number", feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parse<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Number>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "parse\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseCurrency](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#parseCurrency(java.lang.CharSequence,%20java.text.ParsePosition))
        ///
        /// Required features: "android-icu-util-CurrencyAmount", "java-lang-CharSequence", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-CurrencyAmount", feature = "java-lang-CharSequence", feature = "java-text-ParsePosition")))]
        pub fn parseCurrency<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::CurrencyAmount>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "parseCurrency", .descriptor == "(Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Landroid/icu/util/CurrencyAmount;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "parseCurrency\0", "(Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Landroid/icu/util/CurrencyAmount;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDecimalFormatSymbols](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getDecimalFormatSymbols())
        ///
        /// Required features: "android-icu-text-DecimalFormatSymbols"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DecimalFormatSymbols")))]
        pub fn getDecimalFormatSymbols<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DecimalFormatSymbols>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getDecimalFormatSymbols", .descriptor == "()Landroid/icu/text/DecimalFormatSymbols;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getDecimalFormatSymbols\0", "()Landroid/icu/text/DecimalFormatSymbols;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDecimalFormatSymbols](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setDecimalFormatSymbols(android.icu.text.DecimalFormatSymbols))
        ///
        /// Required features: "android-icu-text-DecimalFormatSymbols"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DecimalFormatSymbols")))]
        pub fn setDecimalFormatSymbols<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DecimalFormatSymbols>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setDecimalFormatSymbols", .descriptor == "(Landroid/icu/text/DecimalFormatSymbols;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setDecimalFormatSymbols\0", "(Landroid/icu/text/DecimalFormatSymbols;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPositivePrefix](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getPositivePrefix())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPositivePrefix<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getPositivePrefix", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getPositivePrefix\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPositivePrefix](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setPositivePrefix(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setPositivePrefix<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setPositivePrefix", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setPositivePrefix\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNegativePrefix](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getNegativePrefix())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getNegativePrefix<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getNegativePrefix", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getNegativePrefix\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNegativePrefix](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setNegativePrefix(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setNegativePrefix<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setNegativePrefix", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setNegativePrefix\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPositiveSuffix](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getPositiveSuffix())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPositiveSuffix<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getPositiveSuffix", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getPositiveSuffix\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPositiveSuffix](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setPositiveSuffix(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setPositiveSuffix<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setPositiveSuffix", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setPositiveSuffix\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNegativeSuffix](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getNegativeSuffix())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getNegativeSuffix<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getNegativeSuffix", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getNegativeSuffix\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNegativeSuffix](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setNegativeSuffix(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn setNegativeSuffix<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setNegativeSuffix", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setNegativeSuffix\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMultiplier](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMultiplier())
        pub fn getMultiplier<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMultiplier", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMultiplier\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMultiplier](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMultiplier(int))
        pub fn setMultiplier<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMultiplier", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMultiplier\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRoundingIncrement](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getRoundingIncrement())
        ///
        /// Required features: "java-math-BigDecimal"
        #[cfg(any(feature = "all", all(feature = "java-math-BigDecimal")))]
        pub fn getRoundingIncrement<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::math::BigDecimal>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getRoundingIncrement", .descriptor == "()Ljava/math/BigDecimal;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getRoundingIncrement\0", "()Ljava/math/BigDecimal;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRoundingIncrement](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setRoundingIncrement(java.math.BigDecimal))
        ///
        /// Required features: "java-math-BigDecimal"
        #[cfg(any(feature = "all", all(feature = "java-math-BigDecimal")))]
        pub fn setRoundingIncrement_javaBigDecimal<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::BigDecimal>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setRoundingIncrement", .descriptor == "(Ljava/math/BigDecimal;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setRoundingIncrement\0", "(Ljava/math/BigDecimal;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRoundingIncrement](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setRoundingIncrement(android.icu.math.BigDecimal))
        ///
        /// Required features: "android-icu-math-BigDecimal"
        #[cfg(any(feature = "all", all(feature = "android-icu-math-BigDecimal")))]
        pub fn setRoundingIncrement_BigDecimal<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::math::BigDecimal>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setRoundingIncrement", .descriptor == "(Landroid/icu/math/BigDecimal;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setRoundingIncrement\0", "(Landroid/icu/math/BigDecimal;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRoundingIncrement](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setRoundingIncrement(double))
        pub fn setRoundingIncrement_double<'env>(&'env self, arg0: f64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setRoundingIncrement", .descriptor == "(D)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setRoundingIncrement\0", "(D)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRoundingMode](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getRoundingMode())
        pub fn getRoundingMode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getRoundingMode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getRoundingMode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRoundingMode](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setRoundingMode(int))
        pub fn setRoundingMode<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setRoundingMode", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setRoundingMode\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMathContext](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMathContext())
        ///
        /// Required features: "java-math-MathContext"
        #[cfg(any(feature = "all", all(feature = "java-math-MathContext")))]
        pub fn getMathContext<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::math::MathContext>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMathContext", .descriptor == "()Ljava/math/MathContext;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMathContext\0", "()Ljava/math/MathContext;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMathContext](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMathContext(java.math.MathContext))
        ///
        /// Required features: "java-math-MathContext"
        #[cfg(any(feature = "all", all(feature = "java-math-MathContext")))]
        pub fn setMathContext<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::math::MathContext>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMathContext", .descriptor == "(Ljava/math/MathContext;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMathContext\0", "(Ljava/math/MathContext;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMathContextICU](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMathContextICU())
        ///
        /// Required features: "android-icu-math-MathContext"
        #[cfg(any(feature = "all", all(feature = "android-icu-math-MathContext")))]
        pub fn getMathContextICU<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::math::MathContext>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMathContextICU", .descriptor == "()Landroid/icu/math/MathContext;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMathContextICU\0", "()Landroid/icu/math/MathContext;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMathContextICU](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMathContextICU(android.icu.math.MathContext))
        ///
        /// Required features: "android-icu-math-MathContext"
        #[cfg(any(feature = "all", all(feature = "android-icu-math-MathContext")))]
        pub fn setMathContextICU<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::math::MathContext>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMathContextICU", .descriptor == "(Landroid/icu/math/MathContext;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMathContextICU\0", "(Landroid/icu/math/MathContext;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinimumIntegerDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMinimumIntegerDigits())
        pub fn getMinimumIntegerDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMinimumIntegerDigits", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMinimumIntegerDigits\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMinimumIntegerDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMinimumIntegerDigits(int))
        pub fn setMinimumIntegerDigits<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMinimumIntegerDigits", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMinimumIntegerDigits\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaximumIntegerDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMaximumIntegerDigits())
        pub fn getMaximumIntegerDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMaximumIntegerDigits", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMaximumIntegerDigits\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMaximumIntegerDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMaximumIntegerDigits(int))
        pub fn setMaximumIntegerDigits<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMaximumIntegerDigits", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMaximumIntegerDigits\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinimumFractionDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMinimumFractionDigits())
        pub fn getMinimumFractionDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMinimumFractionDigits", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMinimumFractionDigits\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMinimumFractionDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMinimumFractionDigits(int))
        pub fn setMinimumFractionDigits<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMinimumFractionDigits", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMinimumFractionDigits\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaximumFractionDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMaximumFractionDigits())
        pub fn getMaximumFractionDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMaximumFractionDigits", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMaximumFractionDigits\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMaximumFractionDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMaximumFractionDigits(int))
        pub fn setMaximumFractionDigits<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMaximumFractionDigits", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMaximumFractionDigits\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [areSignificantDigitsUsed](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#areSignificantDigitsUsed())
        pub fn areSignificantDigitsUsed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "areSignificantDigitsUsed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "areSignificantDigitsUsed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSignificantDigitsUsed](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setSignificantDigitsUsed(boolean))
        pub fn setSignificantDigitsUsed<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setSignificantDigitsUsed", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setSignificantDigitsUsed\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinimumSignificantDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMinimumSignificantDigits())
        pub fn getMinimumSignificantDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMinimumSignificantDigits", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMinimumSignificantDigits\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMinimumSignificantDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMinimumSignificantDigits(int))
        pub fn setMinimumSignificantDigits<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMinimumSignificantDigits", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMinimumSignificantDigits\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaximumSignificantDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMaximumSignificantDigits())
        pub fn getMaximumSignificantDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMaximumSignificantDigits", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMaximumSignificantDigits\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMaximumSignificantDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMaximumSignificantDigits(int))
        pub fn setMaximumSignificantDigits<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMaximumSignificantDigits", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMaximumSignificantDigits\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFormatWidth](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getFormatWidth())
        pub fn getFormatWidth<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getFormatWidth", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getFormatWidth\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFormatWidth](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setFormatWidth(int))
        pub fn setFormatWidth<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setFormatWidth", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setFormatWidth\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPadCharacter](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getPadCharacter())
        pub fn getPadCharacter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::jchar, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getPadCharacter", .descriptor == "()C"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getPadCharacter\0", "()C\0");
                __jni_env.call_char_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPadCharacter](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setPadCharacter(char))
        pub fn setPadCharacter<'env>(&'env self, arg0: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setPadCharacter", .descriptor == "(C)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setPadCharacter\0", "(C)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPadPosition](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getPadPosition())
        pub fn getPadPosition<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getPadPosition", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getPadPosition\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPadPosition](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setPadPosition(int))
        pub fn setPadPosition<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setPadPosition", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setPadPosition\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isScientificNotation](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#isScientificNotation())
        pub fn isScientificNotation<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "isScientificNotation", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "isScientificNotation\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setScientificNotation](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setScientificNotation(boolean))
        pub fn setScientificNotation<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setScientificNotation", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setScientificNotation\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinimumExponentDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getMinimumExponentDigits())
        pub fn getMinimumExponentDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<i8, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getMinimumExponentDigits", .descriptor == "()B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getMinimumExponentDigits\0", "()B\0");
                __jni_env.call_byte_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMinimumExponentDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setMinimumExponentDigits(byte))
        pub fn setMinimumExponentDigits<'env>(&'env self, arg0: i8) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setMinimumExponentDigits", .descriptor == "(B)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setMinimumExponentDigits\0", "(B)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isExponentSignAlwaysShown](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#isExponentSignAlwaysShown())
        pub fn isExponentSignAlwaysShown<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "isExponentSignAlwaysShown", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "isExponentSignAlwaysShown\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExponentSignAlwaysShown](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setExponentSignAlwaysShown(boolean))
        pub fn setExponentSignAlwaysShown<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setExponentSignAlwaysShown", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setExponentSignAlwaysShown\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isGroupingUsed](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#isGroupingUsed())
        pub fn isGroupingUsed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "isGroupingUsed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "isGroupingUsed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setGroupingUsed](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setGroupingUsed(boolean))
        pub fn setGroupingUsed<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setGroupingUsed", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setGroupingUsed\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGroupingSize](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getGroupingSize())
        pub fn getGroupingSize<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getGroupingSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getGroupingSize\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setGroupingSize](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setGroupingSize(int))
        pub fn setGroupingSize<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setGroupingSize", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setGroupingSize\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSecondaryGroupingSize](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getSecondaryGroupingSize())
        pub fn getSecondaryGroupingSize<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getSecondaryGroupingSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getSecondaryGroupingSize\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSecondaryGroupingSize](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setSecondaryGroupingSize(int))
        pub fn setSecondaryGroupingSize<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setSecondaryGroupingSize", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setSecondaryGroupingSize\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDecimalSeparatorAlwaysShown](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#isDecimalSeparatorAlwaysShown())
        pub fn isDecimalSeparatorAlwaysShown<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "isDecimalSeparatorAlwaysShown", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "isDecimalSeparatorAlwaysShown\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDecimalSeparatorAlwaysShown](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setDecimalSeparatorAlwaysShown(boolean))
        pub fn setDecimalSeparatorAlwaysShown<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setDecimalSeparatorAlwaysShown", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setDecimalSeparatorAlwaysShown\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCurrency](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getCurrency())
        ///
        /// Required features: "android-icu-util-Currency"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Currency")))]
        pub fn getCurrency<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Currency>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getCurrency", .descriptor == "()Landroid/icu/util/Currency;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getCurrency\0", "()Landroid/icu/util/Currency;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCurrency](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setCurrency(android.icu.util.Currency))
        ///
        /// Required features: "android-icu-util-Currency"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Currency")))]
        pub fn setCurrency<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Currency>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setCurrency", .descriptor == "(Landroid/icu/util/Currency;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setCurrency\0", "(Landroid/icu/util/Currency;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCurrencyUsage](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getCurrencyUsage())
        ///
        /// Required features: "android-icu-util-Currency_CurrencyUsage"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Currency_CurrencyUsage")))]
        pub fn getCurrencyUsage<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Currency_CurrencyUsage>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getCurrencyUsage", .descriptor == "()Landroid/icu/util/Currency$CurrencyUsage;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getCurrencyUsage\0", "()Landroid/icu/util/Currency$CurrencyUsage;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCurrencyUsage](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setCurrencyUsage(android.icu.util.Currency.CurrencyUsage))
        ///
        /// Required features: "android-icu-util-Currency_CurrencyUsage"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Currency_CurrencyUsage")))]
        pub fn setCurrencyUsage<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Currency_CurrencyUsage>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setCurrencyUsage", .descriptor == "(Landroid/icu/util/Currency$CurrencyUsage;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setCurrencyUsage\0", "(Landroid/icu/util/Currency$CurrencyUsage;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCurrencyPluralInfo](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getCurrencyPluralInfo())
        ///
        /// Required features: "android-icu-text-CurrencyPluralInfo"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-CurrencyPluralInfo")))]
        pub fn getCurrencyPluralInfo<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::CurrencyPluralInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "getCurrencyPluralInfo", .descriptor == "()Landroid/icu/text/CurrencyPluralInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getCurrencyPluralInfo\0", "()Landroid/icu/text/CurrencyPluralInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCurrencyPluralInfo](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setCurrencyPluralInfo(android.icu.text.CurrencyPluralInfo))
        ///
        /// Required features: "android-icu-text-CurrencyPluralInfo"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-CurrencyPluralInfo")))]
        pub fn setCurrencyPluralInfo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::CurrencyPluralInfo>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setCurrencyPluralInfo", .descriptor == "(Landroid/icu/text/CurrencyPluralInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setCurrencyPluralInfo\0", "(Landroid/icu/text/CurrencyPluralInfo;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isParseBigDecimal](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#isParseBigDecimal())
        pub fn isParseBigDecimal<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "isParseBigDecimal", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "isParseBigDecimal\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setParseBigDecimal](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setParseBigDecimal(boolean))
        pub fn setParseBigDecimal<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setParseBigDecimal", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setParseBigDecimal\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getParseMaxDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#getParseMaxDigits())
        #[deprecated] pub fn getParseMaxDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "getParseMaxDigits", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "getParseMaxDigits\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setParseMaxDigits](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setParseMaxDigits(int))
        #[deprecated] pub fn setParseMaxDigits<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "setParseMaxDigits", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setParseMaxDigits\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isParseStrict](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#isParseStrict())
        pub fn isParseStrict<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "isParseStrict", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "isParseStrict\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setParseStrict](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setParseStrict(boolean))
        pub fn setParseStrict<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setParseStrict", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setParseStrict\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isParseIntegerOnly](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#isParseIntegerOnly())
        pub fn isParseIntegerOnly<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "isParseIntegerOnly", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "isParseIntegerOnly\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setParseIntegerOnly](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setParseIntegerOnly(boolean))
        pub fn setParseIntegerOnly<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setParseIntegerOnly", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setParseIntegerOnly\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDecimalPatternMatchRequired](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#isDecimalPatternMatchRequired())
        pub fn isDecimalPatternMatchRequired<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "isDecimalPatternMatchRequired", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "isDecimalPatternMatchRequired\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDecimalPatternMatchRequired](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#setDecimalPatternMatchRequired(boolean))
        pub fn setDecimalPatternMatchRequired<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "setDecimalPatternMatchRequired", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "setDecimalPatternMatchRequired\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toPattern](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#toPattern())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toPattern<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "toPattern", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "toPattern\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toLocalizedPattern](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#toLocalizedPattern())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toLocalizedPattern<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/DecimalFormat", java.flags == PUBLIC | SYNCRONIZED, .name == "toLocalizedPattern", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/DecimalFormat\0", "toLocalizedPattern\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [PAD_AFTER_PREFIX](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#PAD_AFTER_PREFIX)
        pub const PAD_AFTER_PREFIX : i32 = 1;

        /// public static final [PAD_AFTER_SUFFIX](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#PAD_AFTER_SUFFIX)
        pub const PAD_AFTER_SUFFIX : i32 = 3;

        /// public static final [PAD_BEFORE_PREFIX](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#PAD_BEFORE_PREFIX)
        pub const PAD_BEFORE_PREFIX : i32 = 0;

        /// public static final [PAD_BEFORE_SUFFIX](https://developer.android.com/reference/android/icu/text/DecimalFormat.html#PAD_BEFORE_SUFFIX)
        pub const PAD_BEFORE_SUFFIX : i32 = 2;
    }
}
