// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-SymbolTable"))]
__jni_bindgen! {
    /// public interface [SymbolTable](https://developer.android.com/reference/android/icu/text/SymbolTable.html)
    ///
    /// Required feature: android-icu-text-SymbolTable
    public interface SymbolTable ("android/icu/text/SymbolTable") extends crate::java::lang::Object {

        /// [lookup](https://developer.android.com/reference/android/icu/text/SymbolTable.html#lookup(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn lookup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::CharArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SymbolTable", java.flags == PUBLIC | ABSTRACT, .name == "lookup", .descriptor == "(Ljava/lang/String;)[C"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SymbolTable\0", "lookup\0", "(Ljava/lang/String;)[C\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [lookupMatcher](https://developer.android.com/reference/android/icu/text/SymbolTable.html#lookupMatcher(int))
        ///
        /// Required features: "android-icu-text-UnicodeMatcher"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-UnicodeMatcher")))]
        pub fn lookupMatcher<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::UnicodeMatcher>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SymbolTable", java.flags == PUBLIC | ABSTRACT, .name == "lookupMatcher", .descriptor == "(I)Landroid/icu/text/UnicodeMatcher;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SymbolTable\0", "lookupMatcher\0", "(I)Landroid/icu/text/UnicodeMatcher;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseReference](https://developer.android.com/reference/android/icu/text/SymbolTable.html#parseReference(java.lang.String,%20java.text.ParsePosition,%20int))
        ///
        /// Required features: "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parseReference<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SymbolTable", java.flags == PUBLIC | ABSTRACT, .name == "parseReference", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SymbolTable\0", "parseReference\0", "(Ljava/lang/String;Ljava/text/ParsePosition;I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [SYMBOL_REF](https://developer.android.com/reference/android/icu/text/SymbolTable.html#SYMBOL_REF)
        pub const SYMBOL_REF : __jni_bindgen::jchar = __jni_bindgen::jchar(36);
    }
}
