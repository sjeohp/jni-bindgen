// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-AlphabeticIndex"))]
__jni_bindgen! {
    /// public final class [AlphabeticIndex](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html)
    ///
    /// Required feature: android-icu-text-AlphabeticIndex
    public final class AlphabeticIndex ("android/icu/text/AlphabeticIndex") extends crate::java::lang::Object, implements crate::java::lang::Iterable {

        /// [AlphabeticIndex](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#AlphabeticIndex(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale")))]
        pub fn new_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/icu/util/ULocale;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "<init>\0", "(Landroid/icu/util/ULocale;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [AlphabeticIndex](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#AlphabeticIndex(java.util.Locale))
        ///
        /// Required features: "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-util-Locale")))]
        pub fn new_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/util/Locale;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "<init>\0", "(Ljava/util/Locale;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [AlphabeticIndex](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#AlphabeticIndex(android.icu.text.RuleBasedCollator))
        ///
        /// Required features: "android-icu-text-RuleBasedCollator"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-RuleBasedCollator")))]
        pub fn new_RuleBasedCollator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::RuleBasedCollator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/icu/text/RuleBasedCollator;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "<init>\0", "(Landroid/icu/text/RuleBasedCollator;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLabels](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#addLabels(android.icu.text.UnicodeSet))
        ///
        /// Required features: "android-icu-text-AlphabeticIndex", "android-icu-text-UnicodeSet"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex", feature = "android-icu-text-UnicodeSet")))]
        pub fn addLabels_UnicodeSet<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::UnicodeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "addLabels", .descriptor == "(Landroid/icu/text/UnicodeSet;)Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "addLabels\0", "(Landroid/icu/text/UnicodeSet;)Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLabels](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#addLabels(android.icu.util.ULocale...))
        ///
        /// Required features: "android-icu-text-AlphabeticIndex", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex", feature = "android-icu-util-ULocale")))]
        pub fn addLabels_ULocale_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::icu::util::ULocale, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC | VARARGS, .name == "addLabels", .descriptor == "([Landroid/icu/util/ULocale;)Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "addLabels\0", "([Landroid/icu/util/ULocale;)Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addLabels](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#addLabels(java.util.Locale...))
        ///
        /// Required features: "android-icu-text-AlphabeticIndex", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex", feature = "java-util-Locale")))]
        pub fn addLabels_Locale_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::util::Locale, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC | VARARGS, .name == "addLabels", .descriptor == "([Ljava/util/Locale;)Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "addLabels\0", "([Ljava/util/Locale;)Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOverflowLabel](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#setOverflowLabel(java.lang.String))
        ///
        /// Required features: "android-icu-text-AlphabeticIndex", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex", feature = "java-lang-String")))]
        pub fn setOverflowLabel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "setOverflowLabel", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "setOverflowLabel\0", "(Ljava/lang/String;)Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUnderflowLabel](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getUnderflowLabel())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getUnderflowLabel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getUnderflowLabel", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getUnderflowLabel\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUnderflowLabel](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#setUnderflowLabel(java.lang.String))
        ///
        /// Required features: "android-icu-text-AlphabeticIndex", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex", feature = "java-lang-String")))]
        pub fn setUnderflowLabel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "setUnderflowLabel", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "setUnderflowLabel\0", "(Ljava/lang/String;)Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOverflowLabel](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getOverflowLabel())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getOverflowLabel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getOverflowLabel", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getOverflowLabel\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setInflowLabel](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#setInflowLabel(java.lang.String))
        ///
        /// Required features: "android-icu-text-AlphabeticIndex", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex", feature = "java-lang-String")))]
        pub fn setInflowLabel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "setInflowLabel", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "setInflowLabel\0", "(Ljava/lang/String;)Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInflowLabel](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getInflowLabel())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getInflowLabel<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getInflowLabel", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getInflowLabel\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaxLabelCount](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getMaxLabelCount())
        pub fn getMaxLabelCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getMaxLabelCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getMaxLabelCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMaxLabelCount](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#setMaxLabelCount(int))
        ///
        /// Required features: "android-icu-text-AlphabeticIndex"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex")))]
        pub fn setMaxLabelCount<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "setMaxLabelCount", .descriptor == "(I)Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "setMaxLabelCount\0", "(I)Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [buildImmutableIndex](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#buildImmutableIndex())
        ///
        /// Required features: "android-icu-text-AlphabeticIndex_ImmutableIndex"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex_ImmutableIndex")))]
        pub fn buildImmutableIndex<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex_ImmutableIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "buildImmutableIndex", .descriptor == "()Landroid/icu/text/AlphabeticIndex$ImmutableIndex;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "buildImmutableIndex\0", "()Landroid/icu/text/AlphabeticIndex$ImmutableIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBucketLabels](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getBucketLabels())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getBucketLabels<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getBucketLabels", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getBucketLabels\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCollator](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getCollator())
        ///
        /// Required features: "android-icu-text-RuleBasedCollator"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-RuleBasedCollator")))]
        pub fn getCollator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::RuleBasedCollator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getCollator", .descriptor == "()Landroid/icu/text/RuleBasedCollator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getCollator\0", "()Landroid/icu/text/RuleBasedCollator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addRecord](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#addRecord(java.lang.CharSequence,%20java.lang.Object))
        ///
        /// Required features: "android-icu-text-AlphabeticIndex", "java-lang-CharSequence", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex", feature = "java-lang-CharSequence", feature = "java-lang-Object")))]
        pub fn addRecord<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "addRecord", .descriptor == "(Ljava/lang/CharSequence;Ljava/lang/Object;)Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "addRecord\0", "(Ljava/lang/CharSequence;Ljava/lang/Object;)Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBucketIndex](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getBucketIndex(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getBucketIndex<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getBucketIndex", .descriptor == "(Ljava/lang/CharSequence;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getBucketIndex\0", "(Ljava/lang/CharSequence;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearRecords](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#clearRecords())
        ///
        /// Required features: "android-icu-text-AlphabeticIndex"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-AlphabeticIndex")))]
        pub fn clearRecords<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::AlphabeticIndex>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "clearRecords", .descriptor == "()Landroid/icu/text/AlphabeticIndex;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "clearRecords\0", "()Landroid/icu/text/AlphabeticIndex;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBucketCount](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getBucketCount())
        pub fn getBucketCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getBucketCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getBucketCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRecordCount](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#getRecordCount())
        pub fn getRecordCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "getRecordCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "getRecordCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [iterator](https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html#iterator())
        ///
        /// Required features: "java-util-Iterator"
        #[cfg(any(feature = "all", all(feature = "java-util-Iterator")))]
        pub fn iterator<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Iterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/AlphabeticIndex", java.flags == PUBLIC, .name == "iterator", .descriptor == "()Ljava/util/Iterator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/AlphabeticIndex\0", "iterator\0", "()Ljava/util/Iterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
