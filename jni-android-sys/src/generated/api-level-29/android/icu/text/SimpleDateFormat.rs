// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-SimpleDateFormat"))]
__jni_bindgen! {
    /// public class [SimpleDateFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html)
    ///
    /// Required feature: android-icu-text-SimpleDateFormat
    public class SimpleDateFormat ("android/icu/text/SimpleDateFormat") extends crate::android::icu::text::DateFormat {

        /// [SimpleDateFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#SimpleDateFormat())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleDateFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#SimpleDateFormat(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleDateFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#SimpleDateFormat(java.lang.String,%20java.util.Locale))
        ///
        /// Required features: "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn new_String_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/util/Locale;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "<init>\0", "(Ljava/lang/String;Ljava/util/Locale;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleDateFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#SimpleDateFormat(java.lang.String,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn new_String_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Landroid/icu/util/ULocale;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "<init>\0", "(Ljava/lang/String;Landroid/icu/util/ULocale;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleDateFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#SimpleDateFormat(java.lang.String,%20java.lang.String,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn new_String_String_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Landroid/icu/util/ULocale;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "<init>\0", "(Ljava/lang/String;Ljava/lang/String;Landroid/icu/util/ULocale;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SimpleDateFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#SimpleDateFormat(java.lang.String,%20android.icu.text.DateFormatSymbols))
        ///
        /// Required features: "android-icu-text-DateFormatSymbols", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormatSymbols", feature = "java-lang-String")))]
        pub fn new_String_DateFormatSymbols<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DateFormatSymbols>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::SimpleDateFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Landroid/icu/text/DateFormatSymbols;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "<init>\0", "(Ljava/lang/String;Landroid/icu/text/DateFormatSymbols;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [set2DigitYearStart](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#set2DigitYearStart(java.util.Date))
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn set2DigitYearStart<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "set2DigitYearStart", .descriptor == "(Ljava/util/Date;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "set2DigitYearStart\0", "(Ljava/util/Date;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get2DigitYearStart](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#get2DigitYearStart())
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn get2DigitYearStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "get2DigitYearStart", .descriptor == "()Ljava/util/Date;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "get2DigitYearStart\0", "()Ljava/util/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setContext](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#setContext(android.icu.text.DisplayContext))
        ///
        /// Required features: "android-icu-text-DisplayContext"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DisplayContext")))]
        pub fn setContext<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DisplayContext>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "setContext", .descriptor == "(Landroid/icu/text/DisplayContext;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "setContext\0", "(Landroid/icu/text/DisplayContext;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#format(android.icu.util.Calendar,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "android-icu-util-Calendar", "java-lang-StringBuffer", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition")))]
        pub fn format<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Landroid/icu/util/Calendar;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "format\0", "(Landroid/icu/util/Calendar;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [patternCharToDateFormatField](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#patternCharToDateFormatField(char))
        // ///
        // /// Required features: "android-icu-text-DateFormat_Field"
        // #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat_Field")))]
        // fn patternCharToDateFormatField<'env>(&'env self, arg0: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat_Field>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/SimpleDateFormat", java.flags == PROTECTED, .name == "patternCharToDateFormatField", .descriptor == "(C)Landroid/icu/text/DateFormat$Field;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "patternCharToDateFormatField\0", "(C)Landroid/icu/text/DateFormat$Field;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [subFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#subFormat(char,%20int,%20int,%20java.text.FieldPosition,%20android.icu.text.DateFormatSymbols,%20android.icu.util.Calendar))
        // ///
        // /// Required features: "android-icu-text-DateFormatSymbols", "android-icu-util-Calendar", "java-lang-String", "java-text-FieldPosition"
        // #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormatSymbols", feature = "android-icu-util-Calendar", feature = "java-lang-String", feature = "java-text-FieldPosition")))]
        // fn subFormat<'env>(&'env self, arg0: __jni_bindgen::jchar, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DateFormatSymbols>>, arg5: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/SimpleDateFormat", java.flags == PROTECTED, .name == "subFormat", .descriptor == "(CIILjava/text/FieldPosition;Landroid/icu/text/DateFormatSymbols;Landroid/icu/util/Calendar;)Ljava/lang/String;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into()), __jni_bindgen::AsJValue::as_jvalue(&arg5.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "subFormat\0", "(CIILjava/text/FieldPosition;Landroid/icu/text/DateFormatSymbols;Landroid/icu/util/Calendar;)Ljava/lang/String;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [setNumberFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#setNumberFormat(android.icu.text.NumberFormat))
        ///
        /// Required features: "android-icu-text-NumberFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberFormat")))]
        pub fn setNumberFormat_NumberFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::NumberFormat>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "setNumberFormat", .descriptor == "(Landroid/icu/text/NumberFormat;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "setNumberFormat\0", "(Landroid/icu/text/NumberFormat;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [zeroPaddingNumber](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#zeroPaddingNumber(long,%20int,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn zeroPaddingNumber<'env>(&'env self, arg0: i64, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/SimpleDateFormat", java.flags == PROTECTED, .name == "zeroPaddingNumber", .descriptor == "(JII)Ljava/lang/String;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "zeroPaddingNumber\0", "(JII)Ljava/lang/String;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [parse](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#parse(java.lang.String,%20android.icu.util.Calendar,%20java.text.ParsePosition))
        ///
        /// Required features: "android-icu-util-Calendar", "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parse<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "parse", .descriptor == "(Ljava/lang/String;Landroid/icu/util/Calendar;Ljava/text/ParsePosition;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "parse\0", "(Ljava/lang/String;Landroid/icu/util/Calendar;Ljava/text/ParsePosition;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [matchString](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#matchString(java.lang.String,%20int,%20int,%20java.lang.String%5B%5D,%20android.icu.util.Calendar))
        // ///
        // /// Required features: "android-icu-util-Calendar", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "java-lang-String")))]
        // fn matchString<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/SimpleDateFormat", java.flags == PROTECTED, .name == "matchString", .descriptor == "(Ljava/lang/String;II[Ljava/lang/String;Landroid/icu/util/Calendar;)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "matchString\0", "(Ljava/lang/String;II[Ljava/lang/String;Landroid/icu/util/Calendar;)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [matchQuarterString](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#matchQuarterString(java.lang.String,%20int,%20int,%20java.lang.String%5B%5D,%20android.icu.util.Calendar))
        // ///
        // /// Required features: "android-icu-util-Calendar", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "java-lang-String")))]
        // fn matchQuarterString<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: i32, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/SimpleDateFormat", java.flags == PROTECTED, .name == "matchQuarterString", .descriptor == "(Ljava/lang/String;II[Ljava/lang/String;Landroid/icu/util/Calendar;)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "matchQuarterString\0", "(Ljava/lang/String;II[Ljava/lang/String;Landroid/icu/util/Calendar;)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [subParse](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#subParse(java.lang.String,%20int,%20char,%20int,%20boolean,%20boolean,%20bool%5B%5D,%20android.icu.util.Calendar))
        // ///
        // /// Required features: "android-icu-util-Calendar", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "java-lang-String")))]
        // fn subParse<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: __jni_bindgen::jchar, arg3: i32, arg4: bool, arg5: bool, arg6: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::BooleanArray>>, arg7: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/SimpleDateFormat", java.flags == PROTECTED, .name == "subParse", .descriptor == "(Ljava/lang/String;ICIZZ[ZLandroid/icu/util/Calendar;)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5), __jni_bindgen::AsJValue::as_jvalue(&arg6.into()), __jni_bindgen::AsJValue::as_jvalue(&arg7.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "subParse\0", "(Ljava/lang/String;ICIZZ[ZLandroid/icu/util/Calendar;)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [toPattern](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#toPattern())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toPattern<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "toPattern", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "toPattern\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toLocalizedPattern](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#toLocalizedPattern())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toLocalizedPattern<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "toLocalizedPattern", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "toLocalizedPattern\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [applyPattern](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#applyPattern(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn applyPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "applyPattern", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "applyPattern\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [applyLocalizedPattern](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#applyLocalizedPattern(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn applyLocalizedPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "applyLocalizedPattern", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "applyLocalizedPattern\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateFormatSymbols](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#getDateFormatSymbols())
        ///
        /// Required features: "android-icu-text-DateFormatSymbols"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormatSymbols")))]
        pub fn getDateFormatSymbols<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormatSymbols>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "getDateFormatSymbols", .descriptor == "()Landroid/icu/text/DateFormatSymbols;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "getDateFormatSymbols\0", "()Landroid/icu/text/DateFormatSymbols;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDateFormatSymbols](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#setDateFormatSymbols(android.icu.text.DateFormatSymbols))
        ///
        /// Required features: "android-icu-text-DateFormatSymbols"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormatSymbols")))]
        pub fn setDateFormatSymbols<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::DateFormatSymbols>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "setDateFormatSymbols", .descriptor == "(Landroid/icu/text/DateFormatSymbols;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "setDateFormatSymbols\0", "(Landroid/icu/text/DateFormatSymbols;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [getSymbols](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#getSymbols())
        // ///
        // /// Required features: "android-icu-text-DateFormatSymbols"
        // #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormatSymbols")))]
        // fn getSymbols<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormatSymbols>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/SimpleDateFormat", java.flags == PROTECTED, .name == "getSymbols", .descriptor == "()Landroid/icu/text/DateFormatSymbols;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "getSymbols\0", "()Landroid/icu/text/DateFormatSymbols;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getTimeZoneFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#getTimeZoneFormat())
        ///
        /// Required features: "android-icu-text-TimeZoneFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat")))]
        pub fn getTimeZoneFormat<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "getTimeZoneFormat", .descriptor == "()Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "getTimeZoneFormat\0", "()Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTimeZoneFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#setTimeZoneFormat(android.icu.text.TimeZoneFormat))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat")))]
        pub fn setTimeZoneFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneFormat>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "setTimeZoneFormat", .descriptor == "(Landroid/icu/text/TimeZoneFormat;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "setTimeZoneFormat\0", "(Landroid/icu/text/TimeZoneFormat;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [formatToCharacterIterator](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#formatToCharacterIterator(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-text-AttributedCharacterIterator"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-text-AttributedCharacterIterator")))]
        pub fn formatToCharacterIterator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::AttributedCharacterIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "formatToCharacterIterator", .descriptor == "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "formatToCharacterIterator\0", "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNumberFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#setNumberFormat(java.lang.String,%20android.icu.text.NumberFormat))
        ///
        /// Required features: "android-icu-text-NumberFormat", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberFormat", feature = "java-lang-String")))]
        pub fn setNumberFormat_String_NumberFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::NumberFormat>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "setNumberFormat", .descriptor == "(Ljava/lang/String;Landroid/icu/text/NumberFormat;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "setNumberFormat\0", "(Ljava/lang/String;Landroid/icu/text/NumberFormat;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNumberFormat](https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html#getNumberFormat(char))
        ///
        /// Required features: "android-icu-text-NumberFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberFormat")))]
        pub fn getNumberFormat<'env>(&'env self, arg0: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/SimpleDateFormat", java.flags == PUBLIC, .name == "getNumberFormat", .descriptor == "(C)Landroid/icu/text/NumberFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/SimpleDateFormat\0", "getNumberFormat\0", "(C)Landroid/icu/text/NumberFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
