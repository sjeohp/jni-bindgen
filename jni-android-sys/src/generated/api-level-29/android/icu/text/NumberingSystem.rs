// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-NumberingSystem"))]
__jni_bindgen! {
    /// public class [NumberingSystem](https://developer.android.com/reference/android/icu/text/NumberingSystem.html)
    ///
    /// Required feature: android-icu-text-NumberingSystem
    public class NumberingSystem ("android/icu/text/NumberingSystem") extends crate::java::lang::Object {

        /// [NumberingSystem](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#NumberingSystem())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::NumberingSystem>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/NumberingSystem\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getInstance(int,%20boolean,%20java.lang.String))
        ///
        /// Required features: "android-icu-text-NumberingSystem", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberingSystem", feature = "java-lang-String")))]
        pub fn getInstance_int_boolean_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: bool, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberingSystem>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(IZLjava/lang/String;)Landroid/icu/text/NumberingSystem;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/NumberingSystem\0", "getInstance\0", "(IZLjava/lang/String;)Landroid/icu/text/NumberingSystem;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getInstance(java.util.Locale))
        ///
        /// Required features: "android-icu-text-NumberingSystem", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberingSystem", feature = "java-util-Locale")))]
        pub fn getInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberingSystem>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Ljava/util/Locale;)Landroid/icu/text/NumberingSystem;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/NumberingSystem\0", "getInstance\0", "(Ljava/util/Locale;)Landroid/icu/text/NumberingSystem;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getInstance(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-NumberingSystem", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberingSystem", feature = "android-icu-util-ULocale")))]
        pub fn getInstance_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberingSystem>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/icu/text/NumberingSystem;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/NumberingSystem\0", "getInstance\0", "(Landroid/icu/util/ULocale;)Landroid/icu/text/NumberingSystem;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getInstance())
        ///
        /// Required features: "android-icu-text-NumberingSystem"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberingSystem")))]
        pub fn getInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberingSystem>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "()Landroid/icu/text/NumberingSystem;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/NumberingSystem\0", "getInstance\0", "()Landroid/icu/text/NumberingSystem;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstanceByName](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getInstanceByName(java.lang.String))
        ///
        /// Required features: "android-icu-text-NumberingSystem", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-NumberingSystem", feature = "java-lang-String")))]
        pub fn getInstanceByName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberingSystem>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC | STATIC, .name == "getInstanceByName", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/NumberingSystem;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/NumberingSystem\0", "getInstanceByName\0", "(Ljava/lang/String;)Landroid/icu/text/NumberingSystem;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableNames](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getAvailableNames())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAvailableNames<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC | STATIC, .name == "getAvailableNames", .descriptor == "()[Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/NumberingSystem\0", "getAvailableNames\0", "()[Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isValidDigitString](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#isValidDigitString(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isValidDigitString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC | STATIC, .name == "isValidDigitString", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/NumberingSystem\0", "isValidDigitString\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRadix](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getRadix())
        pub fn getRadix<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC, .name == "getRadix", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/NumberingSystem\0", "getRadix\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDescription](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getDescription())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDescription<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC, .name == "getDescription", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/NumberingSystem\0", "getDescription\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getName](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#getName())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getName<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC, .name == "getName", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/NumberingSystem\0", "getName\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isAlgorithmic](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#isAlgorithmic())
        pub fn isAlgorithmic<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/NumberingSystem", java.flags == PUBLIC, .name == "isAlgorithmic", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/NumberingSystem\0", "isAlgorithmic\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [LATIN](https://developer.android.com/reference/android/icu/text/NumberingSystem.html#LATIN)
        ///
        /// Required feature: android-icu-text-NumberingSystem
        #[cfg(any(feature = "all", feature = "android-icu-text-NumberingSystem"))]
        pub fn LATIN<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::NumberingSystem>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/icu/text/NumberingSystem\0", "LATIN\0", "Landroid/icu/text/NumberingSystem;\0");
                env.get_static_object_field(class, field)
            }
        }
    }
}
