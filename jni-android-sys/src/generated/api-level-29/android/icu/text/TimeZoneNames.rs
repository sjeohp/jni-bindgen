// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-TimeZoneNames"))]
__jni_bindgen! {
    /// public class [TimeZoneNames](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html)
    ///
    /// Required feature: android-icu-text-TimeZoneNames
    public class TimeZoneNames ("android/icu/text/TimeZoneNames") extends crate::java::lang::Object, implements crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [TimeZoneNames](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#TimeZoneNames())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneNames>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/TimeZoneNames", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getInstance(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-TimeZoneNames", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneNames", feature = "android-icu-util-ULocale")))]
        pub fn getInstance_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneNames>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneNames;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/TimeZoneNames\0", "getInstance\0", "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneNames;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getInstance(java.util.Locale))
        ///
        /// Required features: "android-icu-text-TimeZoneNames", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneNames", feature = "java-util-Locale")))]
        pub fn getInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneNames>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Ljava/util/Locale;)Landroid/icu/text/TimeZoneNames;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/TimeZoneNames\0", "getInstance\0", "(Ljava/util/Locale;)Landroid/icu/text/TimeZoneNames;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTZDBInstance](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getTZDBInstance(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-TimeZoneNames", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneNames", feature = "android-icu-util-ULocale")))]
        pub fn getTZDBInstance<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneNames>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | STATIC, .name == "getTZDBInstance", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneNames;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/TimeZoneNames\0", "getTZDBInstance\0", "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneNames;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableMetaZoneIDs](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getAvailableMetaZoneIDs())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn getAvailableMetaZoneIDs<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | ABSTRACT, .name == "getAvailableMetaZoneIDs", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "getAvailableMetaZoneIDs\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableMetaZoneIDs](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getAvailableMetaZoneIDs(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Set")))]
        pub fn getAvailableMetaZoneIDs_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | ABSTRACT, .name == "getAvailableMetaZoneIDs", .descriptor == "(Ljava/lang/String;)Ljava/util/Set;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "getAvailableMetaZoneIDs\0", "(Ljava/lang/String;)Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaZoneID](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getMetaZoneID(java.lang.String,%20long))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getMetaZoneID<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | ABSTRACT, .name == "getMetaZoneID", .descriptor == "(Ljava/lang/String;J)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "getMetaZoneID\0", "(Ljava/lang/String;J)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getReferenceZoneID](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getReferenceZoneID(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getReferenceZoneID<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | ABSTRACT, .name == "getReferenceZoneID", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "getReferenceZoneID\0", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMetaZoneDisplayName](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getMetaZoneDisplayName(java.lang.String,%20android.icu.text.TimeZoneNames.NameType))
        ///
        /// Required features: "android-icu-text-TimeZoneNames_NameType", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneNames_NameType", feature = "java-lang-String")))]
        pub fn getMetaZoneDisplayName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneNames_NameType>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | ABSTRACT, .name == "getMetaZoneDisplayName", .descriptor == "(Ljava/lang/String;Landroid/icu/text/TimeZoneNames$NameType;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "getMetaZoneDisplayName\0", "(Ljava/lang/String;Landroid/icu/text/TimeZoneNames$NameType;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayName](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getDisplayName(java.lang.String,%20android.icu.text.TimeZoneNames.NameType,%20long))
        ///
        /// Required features: "android-icu-text-TimeZoneNames_NameType", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneNames_NameType", feature = "java-lang-String")))]
        pub fn getDisplayName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneNames_NameType>>, arg2: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | FINAL, .name == "getDisplayName", .descriptor == "(Ljava/lang/String;Landroid/icu/text/TimeZoneNames$NameType;J)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "getDisplayName\0", "(Ljava/lang/String;Landroid/icu/text/TimeZoneNames$NameType;J)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeZoneDisplayName](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getTimeZoneDisplayName(java.lang.String,%20android.icu.text.TimeZoneNames.NameType))
        ///
        /// Required features: "android-icu-text-TimeZoneNames_NameType", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneNames_NameType", feature = "java-lang-String")))]
        pub fn getTimeZoneDisplayName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneNames_NameType>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC | ABSTRACT, .name == "getTimeZoneDisplayName", .descriptor == "(Ljava/lang/String;Landroid/icu/text/TimeZoneNames$NameType;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "getTimeZoneDisplayName\0", "(Ljava/lang/String;Landroid/icu/text/TimeZoneNames$NameType;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExemplarLocationName](https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getExemplarLocationName(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getExemplarLocationName<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneNames", java.flags == PUBLIC, .name == "getExemplarLocationName", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneNames\0", "getExemplarLocationName\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
