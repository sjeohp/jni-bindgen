// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-TimeZoneFormat"))]
__jni_bindgen! {
    /// public class [TimeZoneFormat](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html)
    ///
    /// Required feature: android-icu-text-TimeZoneFormat
    public class TimeZoneFormat ("android/icu/text/TimeZoneFormat") extends crate::android::icu::text::UFormat, implements crate::android::icu::util::Freezable, crate::java::io::Serializable {

        // // Not emitting: Non-public method
        // /// [TimeZoneFormat](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#TimeZoneFormat(android.icu.util.ULocale))
        // ///
        // /// Required features: "android-icu-util-ULocale"
        // #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/TimeZoneFormat", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Landroid/icu/util/ULocale;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "<init>\0", "(Landroid/icu/util/ULocale;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getInstance(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat", feature = "android-icu-util-ULocale")))]
        pub fn getInstance_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/TimeZoneFormat\0", "getInstance\0", "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getInstance(java.util.Locale))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat", feature = "java-util-Locale")))]
        pub fn getInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Ljava/util/Locale;)Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/TimeZoneFormat\0", "getInstance\0", "(Ljava/util/Locale;)Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeZoneNames](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getTimeZoneNames())
        ///
        /// Required features: "android-icu-text-TimeZoneNames"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneNames")))]
        pub fn getTimeZoneNames<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneNames>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "getTimeZoneNames", .descriptor == "()Landroid/icu/text/TimeZoneNames;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "getTimeZoneNames\0", "()Landroid/icu/text/TimeZoneNames;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTimeZoneNames](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setTimeZoneNames(android.icu.text.TimeZoneNames))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat", "android-icu-text-TimeZoneNames"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat", feature = "android-icu-text-TimeZoneNames")))]
        pub fn setTimeZoneNames<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneNames>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "setTimeZoneNames", .descriptor == "(Landroid/icu/text/TimeZoneNames;)Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "setTimeZoneNames\0", "(Landroid/icu/text/TimeZoneNames;)Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGMTPattern](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getGMTPattern())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getGMTPattern<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "getGMTPattern", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "getGMTPattern\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setGMTPattern](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setGMTPattern(java.lang.String))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat", feature = "java-lang-String")))]
        pub fn setGMTPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "setGMTPattern", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "setGMTPattern\0", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGMTOffsetPattern](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getGMTOffsetPattern(android.icu.text.TimeZoneFormat.GMTOffsetPatternType))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat_GMTOffsetPatternType", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat_GMTOffsetPatternType", feature = "java-lang-String")))]
        pub fn getGMTOffsetPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneFormat_GMTOffsetPatternType>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "getGMTOffsetPattern", .descriptor == "(Landroid/icu/text/TimeZoneFormat$GMTOffsetPatternType;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "getGMTOffsetPattern\0", "(Landroid/icu/text/TimeZoneFormat$GMTOffsetPatternType;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setGMTOffsetPattern](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setGMTOffsetPattern(android.icu.text.TimeZoneFormat.GMTOffsetPatternType,%20java.lang.String))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat", "android-icu-text-TimeZoneFormat_GMTOffsetPatternType", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat", feature = "android-icu-text-TimeZoneFormat_GMTOffsetPatternType", feature = "java-lang-String")))]
        pub fn setGMTOffsetPattern<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneFormat_GMTOffsetPatternType>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "setGMTOffsetPattern", .descriptor == "(Landroid/icu/text/TimeZoneFormat$GMTOffsetPatternType;Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "setGMTOffsetPattern\0", "(Landroid/icu/text/TimeZoneFormat$GMTOffsetPatternType;Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGMTOffsetDigits](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getGMTOffsetDigits())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getGMTOffsetDigits<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "getGMTOffsetDigits", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "getGMTOffsetDigits\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setGMTOffsetDigits](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setGMTOffsetDigits(java.lang.String))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat", feature = "java-lang-String")))]
        pub fn setGMTOffsetDigits<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "setGMTOffsetDigits", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "setGMTOffsetDigits\0", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGMTZeroFormat](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getGMTZeroFormat())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getGMTZeroFormat<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "getGMTZeroFormat", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "getGMTZeroFormat\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setGMTZeroFormat](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setGMTZeroFormat(java.lang.String))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat", feature = "java-lang-String")))]
        pub fn setGMTZeroFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "setGMTZeroFormat", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "setGMTZeroFormat\0", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDefaultParseOptions](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setDefaultParseOptions(java.util.EnumSet))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat", feature = "java-util-EnumSet")))]
        pub fn setDefaultParseOptions<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::EnumSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "setDefaultParseOptions", .descriptor == "(Ljava/util/EnumSet;)Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "setDefaultParseOptions\0", "(Ljava/util/EnumSet;)Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultParseOptions](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getDefaultParseOptions())
        ///
        /// Required features: "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "java-util-EnumSet")))]
        pub fn getDefaultParseOptions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::EnumSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "getDefaultParseOptions", .descriptor == "()Ljava/util/EnumSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "getDefaultParseOptions\0", "()Ljava/util/EnumSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [formatOffsetISO8601Basic](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatOffsetISO8601Basic(int,%20boolean,%20boolean,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn formatOffsetISO8601Basic<'env>(&'env self, arg0: i32, arg1: bool, arg2: bool, arg3: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | FINAL, .name == "formatOffsetISO8601Basic", .descriptor == "(IZZZ)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "formatOffsetISO8601Basic\0", "(IZZZ)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [formatOffsetISO8601Extended](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatOffsetISO8601Extended(int,%20boolean,%20boolean,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn formatOffsetISO8601Extended<'env>(&'env self, arg0: i32, arg1: bool, arg2: bool, arg3: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | FINAL, .name == "formatOffsetISO8601Extended", .descriptor == "(IZZZ)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "formatOffsetISO8601Extended\0", "(IZZZ)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [formatOffsetLocalizedGMT](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatOffsetLocalizedGMT(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn formatOffsetLocalizedGMT<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "formatOffsetLocalizedGMT", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "formatOffsetLocalizedGMT\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [formatOffsetShortLocalizedGMT](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatOffsetShortLocalizedGMT(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn formatOffsetShortLocalizedGMT<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "formatOffsetShortLocalizedGMT", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "formatOffsetShortLocalizedGMT\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#format(android.icu.text.TimeZoneFormat.Style,%20android.icu.util.TimeZone,%20long))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat_Style", "android-icu-util-TimeZone", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat_Style", feature = "android-icu-util-TimeZone", feature = "java-lang-String")))]
        pub fn format_Style_TimeZone_long<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneFormat_Style>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>, arg2: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | FINAL, .name == "format", .descriptor == "(Landroid/icu/text/TimeZoneFormat$Style;Landroid/icu/util/TimeZone;J)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "format\0", "(Landroid/icu/text/TimeZoneFormat$Style;Landroid/icu/util/TimeZone;J)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#format(android.icu.text.TimeZoneFormat.Style,%20android.icu.util.TimeZone,%20long,%20android.icu.util.Output))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat_Style", "android-icu-util-Output", "android-icu-util-TimeZone", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat_Style", feature = "android-icu-util-Output", feature = "android-icu-util-TimeZone", feature = "java-lang-String")))]
        pub fn format_Style_TimeZone_long_Output<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneFormat_Style>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>, arg2: i64, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Output>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Landroid/icu/text/TimeZoneFormat$Style;Landroid/icu/util/TimeZone;JLandroid/icu/util/Output;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "format\0", "(Landroid/icu/text/TimeZoneFormat$Style;Landroid/icu/util/TimeZone;JLandroid/icu/util/Output;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseOffsetISO8601](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parseOffsetISO8601(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parseOffsetISO8601<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | FINAL, .name == "parseOffsetISO8601", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "parseOffsetISO8601\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseOffsetLocalizedGMT](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parseOffsetLocalizedGMT(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parseOffsetLocalizedGMT<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "parseOffsetLocalizedGMT", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "parseOffsetLocalizedGMT\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseOffsetShortLocalizedGMT](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parseOffsetShortLocalizedGMT(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parseOffsetShortLocalizedGMT<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "parseOffsetShortLocalizedGMT", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "parseOffsetShortLocalizedGMT\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parse(android.icu.text.TimeZoneFormat.Style,%20java.lang.String,%20java.text.ParsePosition,%20java.util.EnumSet,%20android.icu.util.Output))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat_Style", "android-icu-util-Output", "android-icu-util-TimeZone", "java-lang-String", "java-text-ParsePosition", "java-util-EnumSet"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat_Style", feature = "android-icu-util-Output", feature = "android-icu-util-TimeZone", feature = "java-lang-String", feature = "java-text-ParsePosition", feature = "java-util-EnumSet")))]
        pub fn parse_Style_String_ParsePosition_EnumSet_Output<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneFormat_Style>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::EnumSet>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Output>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::TimeZone>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "parse", .descriptor == "(Landroid/icu/text/TimeZoneFormat$Style;Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/EnumSet;Landroid/icu/util/Output;)Landroid/icu/util/TimeZone;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "parse\0", "(Landroid/icu/text/TimeZoneFormat$Style;Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/EnumSet;Landroid/icu/util/Output;)Landroid/icu/util/TimeZone;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parse(android.icu.text.TimeZoneFormat.Style,%20java.lang.String,%20java.text.ParsePosition,%20android.icu.util.Output))
        ///
        /// Required features: "android-icu-text-TimeZoneFormat_Style", "android-icu-util-Output", "android-icu-util-TimeZone", "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat_Style", feature = "android-icu-util-Output", feature = "android-icu-util-TimeZone", feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parse_Style_String_ParsePosition_Output<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::TimeZoneFormat_Style>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Output>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::TimeZone>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "parse", .descriptor == "(Landroid/icu/text/TimeZoneFormat$Style;Ljava/lang/String;Ljava/text/ParsePosition;Landroid/icu/util/Output;)Landroid/icu/util/TimeZone;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "parse\0", "(Landroid/icu/text/TimeZoneFormat$Style;Ljava/lang/String;Ljava/text/ParsePosition;Landroid/icu/util/Output;)Landroid/icu/util/TimeZone;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parse(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "android-icu-util-TimeZone", "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-TimeZone", feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parse_String_ParsePosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::TimeZone>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | FINAL, .name == "parse", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)Landroid/icu/util/TimeZone;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "parse\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)Landroid/icu/util/TimeZone;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parse](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parse(java.lang.String))
        ///
        /// Required features: "android-icu-util-TimeZone", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-TimeZone", feature = "java-lang-String")))]
        pub fn parse_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::TimeZone>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | FINAL, .name == "parse", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/TimeZone;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "parse\0", "(Ljava/lang/String;)Landroid/icu/util/TimeZone;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [format](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#format(java.lang.Object,%20java.lang.StringBuffer,%20java.text.FieldPosition))
        ///
        /// Required features: "java-lang-Object", "java-lang-StringBuffer", "java-text-FieldPosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-StringBuffer", feature = "java-text-FieldPosition")))]
        pub fn format_Object_StringBuffer_FieldPosition<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::StringBuffer>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::FieldPosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::StringBuffer>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "format", .descriptor == "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "format\0", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [formatToCharacterIterator](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatToCharacterIterator(java.lang.Object))
        ///
        /// Required features: "java-lang-Object", "java-text-AttributedCharacterIterator"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-text-AttributedCharacterIterator")))]
        pub fn formatToCharacterIterator<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::text::AttributedCharacterIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "formatToCharacterIterator", .descriptor == "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "formatToCharacterIterator\0", "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseObject](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parseObject(java.lang.String,%20java.text.ParsePosition))
        ///
        /// Required features: "java-lang-Object", "java-lang-String", "java-text-ParsePosition"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object", feature = "java-lang-String", feature = "java-text-ParsePosition")))]
        pub fn parseObject<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::text::ParsePosition>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "parseObject", .descriptor == "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "parseObject\0", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isFrozen](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#isFrozen())
        pub fn isFrozen<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "isFrozen", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "isFrozen\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [freeze](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#freeze())
        ///
        /// Required features: "android-icu-text-TimeZoneFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat")))]
        pub fn freeze<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "freeze", .descriptor == "()Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "freeze\0", "()Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cloneAsThawed](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#cloneAsThawed())
        ///
        /// Required features: "android-icu-text-TimeZoneFormat"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-TimeZoneFormat")))]
        pub fn cloneAsThawed<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::TimeZoneFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC, .name == "cloneAsThawed", .descriptor == "()Landroid/icu/text/TimeZoneFormat;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "cloneAsThawed\0", "()Landroid/icu/text/TimeZoneFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [cloneAsThawed](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#cloneAsThawed())
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn cloneAsThawed<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "cloneAsThawed", .descriptor == "()Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "cloneAsThawed\0", "()Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Bridge method - type erasure
        // /// [freeze](https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#freeze())
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn freeze<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/TimeZoneFormat", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "freeze", .descriptor == "()Ljava/lang/Object;"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/TimeZoneFormat\0", "freeze\0", "()Ljava/lang/Object;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }
    }
}
