// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-Transliterator"))]
__jni_bindgen! {
    /// public class [Transliterator](https://developer.android.com/reference/android/icu/text/Transliterator.html)
    ///
    /// Required feature: android-icu-text-Transliterator
    public class Transliterator ("android/icu/text/Transliterator") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Transliterator](https://developer.android.com/reference/android/icu/text/Transliterator.html#Transliterator(java.lang.String,%20android.icu.text.UnicodeFilter))
        // ///
        // /// Required features: "android-icu-text-UnicodeFilter", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-icu-text-UnicodeFilter", feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::UnicodeFilter>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::Transliterator>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/Transliterator", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/String;Landroid/icu/text/UnicodeFilter;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "<init>\0", "(Ljava/lang/String;Landroid/icu/text/UnicodeFilter;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [transliterate](https://developer.android.com/reference/android/icu/text/Transliterator.html#transliterate(android.icu.text.Replaceable,%20int,%20int))
        ///
        /// Required features: "android-icu-text-Replaceable"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable")))]
        pub fn transliterate_Replaceable_int_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "transliterate", .descriptor == "(Landroid/icu/text/Replaceable;II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "transliterate\0", "(Landroid/icu/text/Replaceable;II)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [transliterate](https://developer.android.com/reference/android/icu/text/Transliterator.html#transliterate(android.icu.text.Replaceable))
        ///
        /// Required features: "android-icu-text-Replaceable"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable")))]
        pub fn transliterate_Replaceable<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "transliterate", .descriptor == "(Landroid/icu/text/Replaceable;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "transliterate\0", "(Landroid/icu/text/Replaceable;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [transliterate](https://developer.android.com/reference/android/icu/text/Transliterator.html#transliterate(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn transliterate_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "transliterate", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "transliterate\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [transliterate](https://developer.android.com/reference/android/icu/text/Transliterator.html#transliterate(android.icu.text.Replaceable,%20android.icu.text.Transliterator.Position,%20java.lang.String))
        ///
        /// Required features: "android-icu-text-Replaceable", "android-icu-text-Transliterator_Position", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable", feature = "android-icu-text-Transliterator_Position", feature = "java-lang-String")))]
        pub fn transliterate_Replaceable_Position_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Transliterator_Position>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "transliterate", .descriptor == "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "transliterate\0", "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [transliterate](https://developer.android.com/reference/android/icu/text/Transliterator.html#transliterate(android.icu.text.Replaceable,%20android.icu.text.Transliterator.Position,%20int))
        ///
        /// Required features: "android-icu-text-Replaceable", "android-icu-text-Transliterator_Position"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable", feature = "android-icu-text-Transliterator_Position")))]
        pub fn transliterate_Replaceable_Position_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Transliterator_Position>>, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "transliterate", .descriptor == "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "transliterate\0", "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [transliterate](https://developer.android.com/reference/android/icu/text/Transliterator.html#transliterate(android.icu.text.Replaceable,%20android.icu.text.Transliterator.Position))
        ///
        /// Required features: "android-icu-text-Replaceable", "android-icu-text-Transliterator_Position"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable", feature = "android-icu-text-Transliterator_Position")))]
        pub fn transliterate_Replaceable_Position<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Transliterator_Position>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "transliterate", .descriptor == "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "transliterate\0", "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [finishTransliteration](https://developer.android.com/reference/android/icu/text/Transliterator.html#finishTransliteration(android.icu.text.Replaceable,%20android.icu.text.Transliterator.Position))
        ///
        /// Required features: "android-icu-text-Replaceable", "android-icu-text-Transliterator_Position"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable", feature = "android-icu-text-Transliterator_Position")))]
        pub fn finishTransliteration<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Transliterator_Position>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "finishTransliteration", .descriptor == "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "finishTransliteration\0", "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [filteredTransliterate](https://developer.android.com/reference/android/icu/text/Transliterator.html#filteredTransliterate(android.icu.text.Replaceable,%20android.icu.text.Transliterator.Position,%20boolean))
        ///
        /// Required features: "android-icu-text-Replaceable", "android-icu-text-Transliterator_Position"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable", feature = "android-icu-text-Transliterator_Position")))]
        pub fn filteredTransliterate<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Transliterator_Position>>, arg2: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC, .name == "filteredTransliterate", .descriptor == "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "filteredTransliterate\0", "(Landroid/icu/text/Replaceable;Landroid/icu/text/Transliterator$Position;Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaximumContextLength](https://developer.android.com/reference/android/icu/text/Transliterator.html#getMaximumContextLength())
        pub fn getMaximumContextLength<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "getMaximumContextLength", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "getMaximumContextLength\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getID](https://developer.android.com/reference/android/icu/text/Transliterator.html#getID())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getID<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "getID", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "getID\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayName](https://developer.android.com/reference/android/icu/text/Transliterator.html#getDisplayName(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDisplayName_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC | FINAL, .name == "getDisplayName", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getDisplayName\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayName](https://developer.android.com/reference/android/icu/text/Transliterator.html#getDisplayName(java.lang.String,%20java.util.Locale))
        ///
        /// Required features: "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn getDisplayName_String_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC, .name == "getDisplayName", .descriptor == "(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getDisplayName\0", "(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayName](https://developer.android.com/reference/android/icu/text/Transliterator.html#getDisplayName(java.lang.String,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn getDisplayName_String_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC, .name == "getDisplayName", .descriptor == "(Ljava/lang/String;Landroid/icu/util/ULocale;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getDisplayName\0", "(Ljava/lang/String;Landroid/icu/util/ULocale;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFilter](https://developer.android.com/reference/android/icu/text/Transliterator.html#getFilter())
        ///
        /// Required features: "android-icu-text-UnicodeFilter"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-UnicodeFilter")))]
        pub fn getFilter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::UnicodeFilter>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "getFilter", .descriptor == "()Landroid/icu/text/UnicodeFilter;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "getFilter\0", "()Landroid/icu/text/UnicodeFilter;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFilter](https://developer.android.com/reference/android/icu/text/Transliterator.html#setFilter(android.icu.text.UnicodeFilter))
        ///
        /// Required features: "android-icu-text-UnicodeFilter"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-UnicodeFilter")))]
        pub fn setFilter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::UnicodeFilter>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC, .name == "setFilter", .descriptor == "(Landroid/icu/text/UnicodeFilter;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "setFilter\0", "(Landroid/icu/text/UnicodeFilter;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/Transliterator.html#getInstance(java.lang.String))
        ///
        /// Required features: "android-icu-text-Transliterator", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Transliterator", feature = "java-lang-String")))]
        pub fn getInstance_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::Transliterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC | FINAL, .name == "getInstance", .descriptor == "(Ljava/lang/String;)Landroid/icu/text/Transliterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getInstance\0", "(Ljava/lang/String;)Landroid/icu/text/Transliterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/text/Transliterator.html#getInstance(java.lang.String,%20int))
        ///
        /// Required features: "android-icu-text-Transliterator", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Transliterator", feature = "java-lang-String")))]
        pub fn getInstance_String_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::Transliterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Ljava/lang/String;I)Landroid/icu/text/Transliterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getInstance\0", "(Ljava/lang/String;I)Landroid/icu/text/Transliterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createFromRules](https://developer.android.com/reference/android/icu/text/Transliterator.html#createFromRules(java.lang.String,%20java.lang.String,%20int))
        ///
        /// Required features: "android-icu-text-Transliterator", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Transliterator", feature = "java-lang-String")))]
        pub fn createFromRules<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::Transliterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC | FINAL, .name == "createFromRules", .descriptor == "(Ljava/lang/String;Ljava/lang/String;I)Landroid/icu/text/Transliterator;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "createFromRules\0", "(Ljava/lang/String;Ljava/lang/String;I)Landroid/icu/text/Transliterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toRules](https://developer.android.com/reference/android/icu/text/Transliterator.html#toRules(boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toRules<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC, .name == "toRules", .descriptor == "(Z)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "toRules\0", "(Z)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getElements](https://developer.android.com/reference/android/icu/text/Transliterator.html#getElements())
        ///
        /// Required features: "android-icu-text-Transliterator"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Transliterator")))]
        pub fn getElements<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::icu::text::Transliterator, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC, .name == "getElements", .descriptor == "()[Landroid/icu/text/Transliterator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "getElements\0", "()[Landroid/icu/text/Transliterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSourceSet](https://developer.android.com/reference/android/icu/text/Transliterator.html#getSourceSet())
        ///
        /// Required features: "android-icu-text-UnicodeSet"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-UnicodeSet")))]
        pub fn getSourceSet<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::UnicodeSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "getSourceSet", .descriptor == "()Landroid/icu/text/UnicodeSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "getSourceSet\0", "()Landroid/icu/text/UnicodeSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTargetSet](https://developer.android.com/reference/android/icu/text/Transliterator.html#getTargetSet())
        ///
        /// Required features: "android-icu-text-UnicodeSet"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-UnicodeSet")))]
        pub fn getTargetSet<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::UnicodeSet>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC, .name == "getTargetSet", .descriptor == "()Landroid/icu/text/UnicodeSet;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "getTargetSet\0", "()Landroid/icu/text/UnicodeSet;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInverse](https://developer.android.com/reference/android/icu/text/Transliterator.html#getInverse())
        ///
        /// Required features: "android-icu-text-Transliterator"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Transliterator")))]
        pub fn getInverse<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::Transliterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | FINAL, .name == "getInverse", .descriptor == "()Landroid/icu/text/Transliterator;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/Transliterator\0", "getInverse\0", "()Landroid/icu/text/Transliterator;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableIDs](https://developer.android.com/reference/android/icu/text/Transliterator.html#getAvailableIDs())
        ///
        /// Required features: "java-util-Enumeration"
        #[cfg(any(feature = "all", all(feature = "java-util-Enumeration")))]
        pub fn getAvailableIDs<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Enumeration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC | FINAL, .name == "getAvailableIDs", .descriptor == "()Ljava/util/Enumeration;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getAvailableIDs\0", "()Ljava/util/Enumeration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableSources](https://developer.android.com/reference/android/icu/text/Transliterator.html#getAvailableSources())
        ///
        /// Required features: "java-util-Enumeration"
        #[cfg(any(feature = "all", all(feature = "java-util-Enumeration")))]
        pub fn getAvailableSources<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Enumeration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC | FINAL, .name == "getAvailableSources", .descriptor == "()Ljava/util/Enumeration;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getAvailableSources\0", "()Ljava/util/Enumeration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableTargets](https://developer.android.com/reference/android/icu/text/Transliterator.html#getAvailableTargets(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-Enumeration"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Enumeration")))]
        pub fn getAvailableTargets<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Enumeration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC | FINAL, .name == "getAvailableTargets", .descriptor == "(Ljava/lang/String;)Ljava/util/Enumeration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getAvailableTargets\0", "(Ljava/lang/String;)Ljava/util/Enumeration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableVariants](https://developer.android.com/reference/android/icu/text/Transliterator.html#getAvailableVariants(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-Enumeration"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Enumeration")))]
        pub fn getAvailableVariants<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Enumeration>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/Transliterator", java.flags == PUBLIC | STATIC | FINAL, .name == "getAvailableVariants", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Enumeration;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/text/Transliterator\0", "getAvailableVariants\0", "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Enumeration;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [FORWARD](https://developer.android.com/reference/android/icu/text/Transliterator.html#FORWARD)
        pub const FORWARD : i32 = 0;

        /// public static final [REVERSE](https://developer.android.com/reference/android/icu/text/Transliterator.html#REVERSE)
        pub const REVERSE : i32 = 1;
    }
}
