// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-UnicodeFilter"))]
__jni_bindgen! {
    /// public class [UnicodeFilter](https://developer.android.com/reference/android/icu/text/UnicodeFilter.html)
    ///
    /// Required feature: android-icu-text-UnicodeFilter
    public class UnicodeFilter ("android/icu/text/UnicodeFilter") extends crate::java::lang::Object, implements crate::android::icu::text::UnicodeMatcher {

        // // Not emitting: Non-public method
        // /// [UnicodeFilter](https://developer.android.com/reference/android/icu/text/UnicodeFilter.html#UnicodeFilter())
        // #[deprecated] fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::text::UnicodeFilter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/text/UnicodeFilter", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/UnicodeFilter\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [contains](https://developer.android.com/reference/android/icu/text/UnicodeFilter.html#contains(int))
        pub fn contains<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/UnicodeFilter", java.flags == PUBLIC | ABSTRACT, .name == "contains", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/UnicodeFilter\0", "contains\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [matches](https://developer.android.com/reference/android/icu/text/UnicodeFilter.html#matches(android.icu.text.Replaceable,%20int%5B%5D,%20int,%20boolean))
        ///
        /// Required features: "android-icu-text-Replaceable"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable")))]
        pub fn matches<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32, arg3: bool) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/UnicodeFilter", java.flags == PUBLIC, .name == "matches", .descriptor == "(Landroid/icu/text/Replaceable;[IIZ)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/UnicodeFilter\0", "matches\0", "(Landroid/icu/text/Replaceable;[IIZ)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
