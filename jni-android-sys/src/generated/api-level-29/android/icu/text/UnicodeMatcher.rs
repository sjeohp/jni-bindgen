// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-text-UnicodeMatcher"))]
__jni_bindgen! {
    /// public interface [UnicodeMatcher](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html)
    ///
    /// Required feature: android-icu-text-UnicodeMatcher
    public interface UnicodeMatcher ("android/icu/text/UnicodeMatcher") extends crate::java::lang::Object {

        /// [matches](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html#matches(android.icu.text.Replaceable,%20int%5B%5D,%20int,%20boolean))
        ///
        /// Required features: "android-icu-text-Replaceable"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-Replaceable")))]
        pub fn matches<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::Replaceable>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>, arg2: i32, arg3: bool) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/UnicodeMatcher", java.flags == PUBLIC | ABSTRACT, .name == "matches", .descriptor == "(Landroid/icu/text/Replaceable;[IIZ)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/UnicodeMatcher\0", "matches\0", "(Landroid/icu/text/Replaceable;[IIZ)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toPattern](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html#toPattern(boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toPattern<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/UnicodeMatcher", java.flags == PUBLIC | ABSTRACT, .name == "toPattern", .descriptor == "(Z)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/UnicodeMatcher\0", "toPattern\0", "(Z)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [matchesIndexValue](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html#matchesIndexValue(int))
        pub fn matchesIndexValue<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/UnicodeMatcher", java.flags == PUBLIC | ABSTRACT, .name == "matchesIndexValue", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/UnicodeMatcher\0", "matchesIndexValue\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addMatchSetTo](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html#addMatchSetTo(android.icu.text.UnicodeSet))
        ///
        /// Required features: "android-icu-text-UnicodeSet"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-UnicodeSet")))]
        pub fn addMatchSetTo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::UnicodeSet>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/text/UnicodeMatcher", java.flags == PUBLIC | ABSTRACT, .name == "addMatchSetTo", .descriptor == "(Landroid/icu/text/UnicodeSet;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/text/UnicodeMatcher\0", "addMatchSetTo\0", "(Landroid/icu/text/UnicodeSet;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ETHER](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html#ETHER)
        pub const ETHER : __jni_bindgen::jchar = __jni_bindgen::jchar(65535);

        /// public static final [U_MATCH](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html#U_MATCH)
        pub const U_MATCH : i32 = 2;

        /// public static final [U_MISMATCH](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html#U_MISMATCH)
        pub const U_MISMATCH : i32 = 0;

        /// public static final [U_PARTIAL_MATCH](https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html#U_PARTIAL_MATCH)
        pub const U_PARTIAL_MATCH : i32 = 1;
    }
}
