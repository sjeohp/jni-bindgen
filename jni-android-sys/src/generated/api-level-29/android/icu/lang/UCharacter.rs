// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-lang-UCharacter"))]
__jni_bindgen! {
    /// public final class [UCharacter](https://developer.android.com/reference/android/icu/lang/UCharacter.html)
    ///
    /// Required feature: android-icu-lang-UCharacter
    public final class UCharacter ("android/icu/lang/UCharacter") extends crate::java::lang::Object, implements crate::android::icu::lang::UCharacterEnums_ECharacterCategory, crate::android::icu::lang::UCharacterEnums_ECharacterDirection {

        // // Not emitting: Non-public method
        // /// [UCharacter](https://developer.android.com/reference/android/icu/lang/UCharacter.html#UCharacter())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::lang::UCharacter>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/lang/UCharacter", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/lang/UCharacter\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [digit](https://developer.android.com/reference/android/icu/lang/UCharacter.html#digit(int,%20int))
        pub fn digit_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "digit", .descriptor == "(II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "digit\0", "(II)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [digit](https://developer.android.com/reference/android/icu/lang/UCharacter.html#digit(int))
        pub fn digit_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "digit", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "digit\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNumericValue](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getNumericValue(int))
        pub fn getNumericValue<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getNumericValue", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getNumericValue\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUnicodeNumericValue](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getUnicodeNumericValue(int))
        pub fn getUnicodeNumericValue<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<f64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getUnicodeNumericValue", .descriptor == "(I)D"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getUnicodeNumericValue\0", "(I)D\0");
                __jni_env.call_static_double_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getType](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getType(int))
        pub fn getType<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getType", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getType\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDefined](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isDefined(int))
        pub fn isDefined<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isDefined", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isDefined\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDigit](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isDigit(int))
        pub fn isDigit<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isDigit", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isDigit\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isISOControl](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isISOControl(int))
        pub fn isISOControl<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isISOControl", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isISOControl\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLetter](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLetter(int))
        pub fn isLetter<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isLetter", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isLetter\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLetterOrDigit](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLetterOrDigit(int))
        pub fn isLetterOrDigit<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isLetterOrDigit", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isLetterOrDigit\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isJavaIdentifierStart](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isJavaIdentifierStart(int))
        pub fn isJavaIdentifierStart<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isJavaIdentifierStart", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isJavaIdentifierStart\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isJavaIdentifierPart](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isJavaIdentifierPart(int))
        pub fn isJavaIdentifierPart<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isJavaIdentifierPart", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isJavaIdentifierPart\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLowerCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLowerCase(int))
        pub fn isLowerCase<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isLowerCase", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isLowerCase\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isWhitespace](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isWhitespace(int))
        pub fn isWhitespace<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isWhitespace", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isWhitespace\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSpaceChar](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSpaceChar(int))
        pub fn isSpaceChar<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isSpaceChar", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isSpaceChar\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isTitleCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isTitleCase(int))
        pub fn isTitleCase<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isTitleCase", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isTitleCase\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUnicodeIdentifierPart](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUnicodeIdentifierPart(int))
        pub fn isUnicodeIdentifierPart<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isUnicodeIdentifierPart", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isUnicodeIdentifierPart\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUnicodeIdentifierStart](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUnicodeIdentifierStart(int))
        pub fn isUnicodeIdentifierStart<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isUnicodeIdentifierStart", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isUnicodeIdentifierStart\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isIdentifierIgnorable](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isIdentifierIgnorable(int))
        pub fn isIdentifierIgnorable<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isIdentifierIgnorable", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isIdentifierIgnorable\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUpperCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUpperCase(int))
        pub fn isUpperCase<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isUpperCase", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isUpperCase\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toLowerCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toLowerCase(int))
        pub fn toLowerCase_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toLowerCase", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toLowerCase\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toString(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toString", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toString\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toTitleCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(int))
        pub fn toTitleCase_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toTitleCase", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toTitleCase\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toUpperCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toUpperCase(int))
        pub fn toUpperCase_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toUpperCase", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toUpperCase\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSupplementary](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSupplementary(int))
        pub fn isSupplementary<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isSupplementary", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isSupplementary\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isBMP](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isBMP(int))
        pub fn isBMP<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isBMP", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isBMP\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isPrintable](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isPrintable(int))
        pub fn isPrintable<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isPrintable", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isPrintable\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isBaseForm](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isBaseForm(int))
        pub fn isBaseForm<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isBaseForm", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isBaseForm\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDirection](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getDirection(int))
        pub fn getDirection<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getDirection", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getDirection\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isMirrored](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isMirrored(int))
        pub fn isMirrored<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isMirrored", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isMirrored\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMirror](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getMirror(int))
        pub fn getMirror<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getMirror", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getMirror\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBidiPairedBracket](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getBidiPairedBracket(int))
        pub fn getBidiPairedBracket<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getBidiPairedBracket", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getBidiPairedBracket\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCombiningClass](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCombiningClass(int))
        pub fn getCombiningClass<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getCombiningClass", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getCombiningClass\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLegal](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLegal(int))
        pub fn isLegal_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isLegal", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isLegal\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLegal](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLegal(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn isLegal_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isLegal", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isLegal\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUnicodeVersion](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getUnicodeVersion())
        ///
        /// Required features: "android-icu-util-VersionInfo"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-VersionInfo")))]
        pub fn getUnicodeVersion<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::VersionInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getUnicodeVersion", .descriptor == "()Landroid/icu/util/VersionInfo;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getUnicodeVersion\0", "()Landroid/icu/util/VersionInfo;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getName](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getName(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getName_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getName", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getName\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getName](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getName(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getName_String_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getName", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getName\0", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtendedName](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getExtendedName(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getExtendedName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getExtendedName", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getExtendedName\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNameAlias](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getNameAlias(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getNameAlias<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getNameAlias", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getNameAlias\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharFromName](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCharFromName(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCharFromName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getCharFromName", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getCharFromName\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharFromExtendedName](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCharFromExtendedName(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCharFromExtendedName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getCharFromExtendedName", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getCharFromExtendedName\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharFromNameAlias](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCharFromNameAlias(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCharFromNameAlias<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getCharFromNameAlias", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getCharFromNameAlias\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPropertyName](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getPropertyName(int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPropertyName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getPropertyName", .descriptor == "(II)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getPropertyName\0", "(II)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPropertyEnum](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getPropertyEnum(java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getPropertyEnum<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getPropertyEnum", .descriptor == "(Ljava/lang/CharSequence;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getPropertyEnum\0", "(Ljava/lang/CharSequence;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPropertyValueName](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getPropertyValueName(int,%20int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPropertyValueName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getPropertyValueName", .descriptor == "(III)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getPropertyValueName\0", "(III)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPropertyValueEnum](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getPropertyValueEnum(int,%20java.lang.CharSequence))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn getPropertyValueEnum<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getPropertyValueEnum", .descriptor == "(ILjava/lang/CharSequence;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getPropertyValueEnum\0", "(ILjava/lang/CharSequence;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCodePoint](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCodePoint(char,%20char))
        pub fn getCodePoint_char_char<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: __jni_bindgen::jchar, arg1: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getCodePoint", .descriptor == "(CC)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getCodePoint\0", "(CC)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCodePoint](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCodePoint(char))
        pub fn getCodePoint_char<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getCodePoint", .descriptor == "(C)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getCodePoint\0", "(C)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toUpperCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toUpperCase(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toUpperCase_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toUpperCase", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toUpperCase\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toLowerCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toLowerCase(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toLowerCase_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toLowerCase", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toLowerCase\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toTitleCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(java.lang.String,%20android.icu.text.BreakIterator))
        ///
        /// Required features: "android-icu-text-BreakIterator", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-BreakIterator", feature = "java-lang-String")))]
        pub fn toTitleCase_String_BreakIterator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::BreakIterator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toTitleCase", .descriptor == "(Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toTitleCase\0", "(Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toUpperCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toUpperCase(java.util.Locale,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn toUpperCase_Locale_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toUpperCase", .descriptor == "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toUpperCase\0", "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toUpperCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toUpperCase(android.icu.util.ULocale,%20java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn toUpperCase_ULocale_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toUpperCase", .descriptor == "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toUpperCase\0", "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toLowerCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toLowerCase(java.util.Locale,%20java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn toLowerCase_Locale_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toLowerCase", .descriptor == "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toLowerCase\0", "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toLowerCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toLowerCase(android.icu.util.ULocale,%20java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn toLowerCase_ULocale_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toLowerCase", .descriptor == "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toLowerCase\0", "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toTitleCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(java.util.Locale,%20java.lang.String,%20android.icu.text.BreakIterator))
        ///
        /// Required features: "android-icu-text-BreakIterator", "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-BreakIterator", feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn toTitleCase_Locale_String_BreakIterator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::BreakIterator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toTitleCase", .descriptor == "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toTitleCase\0", "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toTitleCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(android.icu.util.ULocale,%20java.lang.String,%20android.icu.text.BreakIterator))
        ///
        /// Required features: "android-icu-text-BreakIterator", "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-BreakIterator", feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn toTitleCase_ULocale_String_BreakIterator<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::BreakIterator>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toTitleCase", .descriptor == "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toTitleCase\0", "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toTitleCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(android.icu.util.ULocale,%20java.lang.String,%20android.icu.text.BreakIterator,%20int))
        ///
        /// Required features: "android-icu-text-BreakIterator", "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-BreakIterator", feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn toTitleCase_ULocale_String_BreakIterator_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::BreakIterator>>, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toTitleCase", .descriptor == "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toTitleCase\0", "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toTitleCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(java.util.Locale,%20java.lang.String,%20android.icu.text.BreakIterator,%20int))
        ///
        /// Required features: "android-icu-text-BreakIterator", "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-BreakIterator", feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn toTitleCase_Locale_String_BreakIterator_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::text::BreakIterator>>, arg3: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toTitleCase", .descriptor == "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toTitleCase\0", "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [foldCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#foldCase(int,%20boolean))
        pub fn foldCase_int_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: bool) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "foldCase", .descriptor == "(IZ)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "foldCase\0", "(IZ)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [foldCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#foldCase(java.lang.String,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn foldCase_String_boolean<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "foldCase", .descriptor == "(Ljava/lang/String;Z)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "foldCase\0", "(Ljava/lang/String;Z)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [foldCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#foldCase(int,%20int))
        pub fn foldCase_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "foldCase", .descriptor == "(II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "foldCase\0", "(II)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [foldCase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#foldCase(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn foldCase_String_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "foldCase", .descriptor == "(Ljava/lang/String;I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "foldCase\0", "(Ljava/lang/String;I)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getHanNumericValue](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getHanNumericValue(int))
        pub fn getHanNumericValue<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getHanNumericValue", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getHanNumericValue\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTypeIterator](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getTypeIterator())
        ///
        /// Required features: "android-icu-util-RangeValueIterator"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-RangeValueIterator")))]
        pub fn getTypeIterator<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::RangeValueIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getTypeIterator", .descriptor == "()Landroid/icu/util/RangeValueIterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getTypeIterator\0", "()Landroid/icu/util/RangeValueIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNameIterator](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getNameIterator())
        ///
        /// Required features: "android-icu-util-ValueIterator"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ValueIterator")))]
        pub fn getNameIterator<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ValueIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getNameIterator", .descriptor == "()Landroid/icu/util/ValueIterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getNameIterator\0", "()Landroid/icu/util/ValueIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtendedNameIterator](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getExtendedNameIterator())
        ///
        /// Required features: "android-icu-util-ValueIterator"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ValueIterator")))]
        pub fn getExtendedNameIterator<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ValueIterator>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getExtendedNameIterator", .descriptor == "()Landroid/icu/util/ValueIterator;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getExtendedNameIterator\0", "()Landroid/icu/util/ValueIterator;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAge](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getAge(int))
        ///
        /// Required features: "android-icu-util-VersionInfo"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-VersionInfo")))]
        pub fn getAge<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::VersionInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getAge", .descriptor == "(I)Landroid/icu/util/VersionInfo;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getAge\0", "(I)Landroid/icu/util/VersionInfo;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasBinaryProperty](https://developer.android.com/reference/android/icu/lang/UCharacter.html#hasBinaryProperty(int,%20int))
        pub fn hasBinaryProperty<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "hasBinaryProperty", .descriptor == "(II)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "hasBinaryProperty\0", "(II)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUAlphabetic](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUAlphabetic(int))
        pub fn isUAlphabetic<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isUAlphabetic", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isUAlphabetic\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isULowercase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isULowercase(int))
        pub fn isULowercase<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isULowercase", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isULowercase\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUUppercase](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUUppercase(int))
        pub fn isUUppercase<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isUUppercase", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isUUppercase\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUWhiteSpace](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUWhiteSpace(int))
        pub fn isUWhiteSpace<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isUWhiteSpace", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isUWhiteSpace\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntPropertyValue](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getIntPropertyValue(int,%20int))
        pub fn getIntPropertyValue<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getIntPropertyValue", .descriptor == "(II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getIntPropertyValue\0", "(II)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntPropertyMinValue](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getIntPropertyMinValue(int))
        pub fn getIntPropertyMinValue<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getIntPropertyMinValue", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getIntPropertyMinValue\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntPropertyMaxValue](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getIntPropertyMaxValue(int))
        pub fn getIntPropertyMaxValue<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getIntPropertyMaxValue", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getIntPropertyMaxValue\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [forDigit](https://developer.android.com/reference/android/icu/lang/UCharacter.html#forDigit(int,%20int))
        pub fn forDigit<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::jchar, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "forDigit", .descriptor == "(II)C"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "forDigit\0", "(II)C\0");
                __jni_env.call_static_char_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isValidCodePoint](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isValidCodePoint(int))
        pub fn isValidCodePoint<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isValidCodePoint", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isValidCodePoint\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSupplementaryCodePoint](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSupplementaryCodePoint(int))
        pub fn isSupplementaryCodePoint<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isSupplementaryCodePoint", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isSupplementaryCodePoint\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isHighSurrogate](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isHighSurrogate(char))
        pub fn isHighSurrogate<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isHighSurrogate", .descriptor == "(C)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isHighSurrogate\0", "(C)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLowSurrogate](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLowSurrogate(char))
        pub fn isLowSurrogate<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isLowSurrogate", .descriptor == "(C)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isLowSurrogate\0", "(C)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSurrogatePair](https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSurrogatePair(char,%20char))
        pub fn isSurrogatePair<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: __jni_bindgen::jchar, arg1: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "isSurrogatePair", .descriptor == "(CC)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "isSurrogatePair\0", "(CC)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [charCount](https://developer.android.com/reference/android/icu/lang/UCharacter.html#charCount(int))
        pub fn charCount<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "charCount", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "charCount\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toCodePoint](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toCodePoint(char,%20char))
        pub fn toCodePoint<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: __jni_bindgen::jchar, arg1: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toCodePoint", .descriptor == "(CC)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toCodePoint\0", "(CC)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [codePointAt](https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointAt(java.lang.CharSequence,%20int))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn codePointAt_CharSequence_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "codePointAt", .descriptor == "(Ljava/lang/CharSequence;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "codePointAt\0", "(Ljava/lang/CharSequence;I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [codePointAt](https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointAt(char%5B%5D,%20int))
        pub fn codePointAt_char_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "codePointAt", .descriptor == "([CI)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "codePointAt\0", "([CI)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [codePointAt](https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointAt(char%5B%5D,%20int,%20int))
        pub fn codePointAt_char_array_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "codePointAt", .descriptor == "([CII)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "codePointAt\0", "([CII)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [codePointBefore](https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointBefore(java.lang.CharSequence,%20int))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn codePointBefore_CharSequence_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "codePointBefore", .descriptor == "(Ljava/lang/CharSequence;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "codePointBefore\0", "(Ljava/lang/CharSequence;I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [codePointBefore](https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointBefore(char%5B%5D,%20int))
        pub fn codePointBefore_char_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "codePointBefore", .descriptor == "([CI)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "codePointBefore\0", "([CI)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [codePointBefore](https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointBefore(char%5B%5D,%20int,%20int))
        pub fn codePointBefore_char_array_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "codePointBefore", .descriptor == "([CII)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "codePointBefore\0", "([CII)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toChars](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toChars(int,%20char%5B%5D,%20int))
        pub fn toChars_int_char_array_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toChars", .descriptor == "(I[CI)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toChars\0", "(I[CI)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toChars](https://developer.android.com/reference/android/icu/lang/UCharacter.html#toChars(int))
        pub fn toChars_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::CharArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "toChars", .descriptor == "(I)[C"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "toChars\0", "(I)[C\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDirectionality](https://developer.android.com/reference/android/icu/lang/UCharacter.html#getDirectionality(int))
        pub fn getDirectionality<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i8, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "getDirectionality", .descriptor == "(I)B"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "getDirectionality\0", "(I)B\0");
                __jni_env.call_static_byte_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [codePointCount](https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointCount(java.lang.CharSequence,%20int,%20int))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn codePointCount_CharSequence_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "codePointCount", .descriptor == "(Ljava/lang/CharSequence;II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "codePointCount\0", "(Ljava/lang/CharSequence;II)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [codePointCount](https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointCount(char%5B%5D,%20int,%20int))
        pub fn codePointCount_char_array_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "codePointCount", .descriptor == "([CII)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "codePointCount\0", "([CII)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [offsetByCodePoints](https://developer.android.com/reference/android/icu/lang/UCharacter.html#offsetByCodePoints(java.lang.CharSequence,%20int,%20int))
        ///
        /// Required features: "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence")))]
        pub fn offsetByCodePoints_CharSequence_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "offsetByCodePoints", .descriptor == "(Ljava/lang/CharSequence;II)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "offsetByCodePoints\0", "(Ljava/lang/CharSequence;II)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [offsetByCodePoints](https://developer.android.com/reference/android/icu/lang/UCharacter.html#offsetByCodePoints(char%5B%5D,%20int,%20int,%20int,%20int))
        pub fn offsetByCodePoints_char_array_int_int_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/lang/UCharacter", java.flags == PUBLIC | STATIC, .name == "offsetByCodePoints", .descriptor == "([CIIII)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/lang/UCharacter\0", "offsetByCodePoints\0", "([CIIII)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [FOLD_CASE_DEFAULT](https://developer.android.com/reference/android/icu/lang/UCharacter.html#FOLD_CASE_DEFAULT)
        pub const FOLD_CASE_DEFAULT : i32 = 0;

        /// public static final [FOLD_CASE_EXCLUDE_SPECIAL_I](https://developer.android.com/reference/android/icu/lang/UCharacter.html#FOLD_CASE_EXCLUDE_SPECIAL_I)
        pub const FOLD_CASE_EXCLUDE_SPECIAL_I : i32 = 1;

        /// public static final [MAX_CODE_POINT](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_CODE_POINT)
        pub const MAX_CODE_POINT : i32 = 1114111;

        /// public static final [MAX_HIGH_SURROGATE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_HIGH_SURROGATE)
        pub const MAX_HIGH_SURROGATE : __jni_bindgen::jchar = __jni_bindgen::jchar(56319);

        /// public static final [MAX_LOW_SURROGATE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_LOW_SURROGATE)
        pub const MAX_LOW_SURROGATE : __jni_bindgen::jchar = __jni_bindgen::jchar(57343);

        /// public static final [MAX_RADIX](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_RADIX)
        pub const MAX_RADIX : i32 = 36;

        /// public static final [MAX_SURROGATE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_SURROGATE)
        pub const MAX_SURROGATE : __jni_bindgen::jchar = __jni_bindgen::jchar(57343);

        /// public static final [MAX_VALUE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_VALUE)
        pub const MAX_VALUE : i32 = 1114111;

        /// public static final [MIN_CODE_POINT](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_CODE_POINT)
        pub const MIN_CODE_POINT : i32 = 0;

        /// public static final [MIN_HIGH_SURROGATE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_HIGH_SURROGATE)
        pub const MIN_HIGH_SURROGATE : __jni_bindgen::jchar = __jni_bindgen::jchar(55296);

        /// public static final [MIN_LOW_SURROGATE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_LOW_SURROGATE)
        pub const MIN_LOW_SURROGATE : __jni_bindgen::jchar = __jni_bindgen::jchar(56320);

        /// public static final [MIN_RADIX](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_RADIX)
        pub const MIN_RADIX : i32 = 2;

        /// public static final [MIN_SUPPLEMENTARY_CODE_POINT](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_SUPPLEMENTARY_CODE_POINT)
        pub const MIN_SUPPLEMENTARY_CODE_POINT : i32 = 65536;

        /// public static final [MIN_SURROGATE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_SURROGATE)
        pub const MIN_SURROGATE : __jni_bindgen::jchar = __jni_bindgen::jchar(55296);

        /// public static final [MIN_VALUE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_VALUE)
        pub const MIN_VALUE : i32 = 0;

        /// public static final [NO_NUMERIC_VALUE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#NO_NUMERIC_VALUE)
        pub const NO_NUMERIC_VALUE : f64 = -123456789f64;

        /// public static final [REPLACEMENT_CHAR](https://developer.android.com/reference/android/icu/lang/UCharacter.html#REPLACEMENT_CHAR)
        pub const REPLACEMENT_CHAR : i32 = 65533;

        /// public static final [SUPPLEMENTARY_MIN_VALUE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#SUPPLEMENTARY_MIN_VALUE)
        pub const SUPPLEMENTARY_MIN_VALUE : i32 = 65536;

        /// public static final [TITLECASE_NO_BREAK_ADJUSTMENT](https://developer.android.com/reference/android/icu/lang/UCharacter.html#TITLECASE_NO_BREAK_ADJUSTMENT)
        pub const TITLECASE_NO_BREAK_ADJUSTMENT : i32 = 512;

        /// public static final [TITLECASE_NO_LOWERCASE](https://developer.android.com/reference/android/icu/lang/UCharacter.html#TITLECASE_NO_LOWERCASE)
        pub const TITLECASE_NO_LOWERCASE : i32 = 256;
    }
}
