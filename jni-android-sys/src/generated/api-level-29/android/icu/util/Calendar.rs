// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-util-Calendar"))]
__jni_bindgen! {
    /// public class [Calendar](https://developer.android.com/reference/android/icu/util/Calendar.html)
    ///
    /// Required feature: android-icu-util-Calendar
    public class Calendar ("android/icu/util/Calendar") extends crate::java::lang::Object, implements crate::java::io::Serializable, crate::java::lang::Cloneable, crate::java::lang::Comparable {

        // // Not emitting: Non-public method
        // /// [Calendar](https://developer.android.com/reference/android/icu/util/Calendar.html#Calendar())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [Calendar](https://developer.android.com/reference/android/icu/util/Calendar.html#Calendar(android.icu.util.TimeZone,%20java.util.Locale))
        // ///
        // /// Required features: "android-icu-util-TimeZone", "java-util-Locale"
        // #[cfg(any(feature = "all", all(feature = "android-icu-util-TimeZone", feature = "java-util-Locale")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Landroid/icu/util/TimeZone;Ljava/util/Locale;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "<init>\0", "(Landroid/icu/util/TimeZone;Ljava/util/Locale;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [Calendar](https://developer.android.com/reference/android/icu/util/Calendar.html#Calendar(android.icu.util.TimeZone,%20android.icu.util.ULocale))
        // ///
        // /// Required features: "android-icu-util-TimeZone", "android-icu-util-ULocale"
        // #[cfg(any(feature = "all", all(feature = "android-icu-util-TimeZone", feature = "android-icu-util-ULocale")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "<init>", .descriptor == "(Landroid/icu/util/TimeZone;Landroid/icu/util/ULocale;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "<init>\0", "(Landroid/icu/util/TimeZone;Landroid/icu/util/ULocale;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getInstance](https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance())
        ///
        /// Required features: "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar")))]
        pub fn getInstance<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "()Landroid/icu/util/Calendar;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getInstance\0", "()Landroid/icu/util/Calendar;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(android.icu.util.TimeZone))
        ///
        /// Required features: "android-icu-util-Calendar", "android-icu-util-TimeZone"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "android-icu-util-TimeZone")))]
        pub fn getInstance_TimeZone<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/icu/util/TimeZone;)Landroid/icu/util/Calendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getInstance\0", "(Landroid/icu/util/TimeZone;)Landroid/icu/util/Calendar;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(java.util.Locale))
        ///
        /// Required features: "android-icu-util-Calendar", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "java-util-Locale")))]
        pub fn getInstance_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Ljava/util/Locale;)Landroid/icu/util/Calendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getInstance\0", "(Ljava/util/Locale;)Landroid/icu/util/Calendar;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-Calendar", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "android-icu-util-ULocale")))]
        pub fn getInstance_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/icu/util/Calendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getInstance\0", "(Landroid/icu/util/ULocale;)Landroid/icu/util/Calendar;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(android.icu.util.TimeZone,%20java.util.Locale))
        ///
        /// Required features: "android-icu-util-Calendar", "android-icu-util-TimeZone", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "android-icu-util-TimeZone", feature = "java-util-Locale")))]
        pub fn getInstance_TimeZone_Locale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/icu/util/TimeZone;Ljava/util/Locale;)Landroid/icu/util/Calendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getInstance\0", "(Landroid/icu/util/TimeZone;Ljava/util/Locale;)Landroid/icu/util/Calendar;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInstance](https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(android.icu.util.TimeZone,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-Calendar", "android-icu-util-TimeZone", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "android-icu-util-TimeZone", feature = "android-icu-util-ULocale")))]
        pub fn getInstance_TimeZone_ULocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC, .name == "getInstance", .descriptor == "(Landroid/icu/util/TimeZone;Landroid/icu/util/ULocale;)Landroid/icu/util/Calendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getInstance\0", "(Landroid/icu/util/TimeZone;Landroid/icu/util/ULocale;)Landroid/icu/util/Calendar;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAvailableLocales](https://developer.android.com/reference/android/icu/util/Calendar.html#getAvailableLocales())
        ///
        /// Required features: "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-util-Locale")))]
        pub fn getAvailableLocales<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::util::Locale, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC, .name == "getAvailableLocales", .descriptor == "()[Ljava/util/Locale;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getAvailableLocales\0", "()[Ljava/util/Locale;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getKeywordValuesForLocale](https://developer.android.com/reference/android/icu/util/Calendar.html#getKeywordValuesForLocale(java.lang.String,%20android.icu.util.ULocale,%20boolean))
        ///
        /// Required features: "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn getKeywordValuesForLocale<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>, arg2: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC | FINAL, .name == "getKeywordValuesForLocale", .descriptor == "(Ljava/lang/String;Landroid/icu/util/ULocale;Z)[Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getKeywordValuesForLocale\0", "(Ljava/lang/String;Landroid/icu/util/ULocale;Z)[Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTime](https://developer.android.com/reference/android/icu/util/Calendar.html#getTime())
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn getTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "getTime", .descriptor == "()Ljava/util/Date;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getTime\0", "()Ljava/util/Date;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTime](https://developer.android.com/reference/android/icu/util/Calendar.html#setTime(java.util.Date))
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn setTime<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "setTime", .descriptor == "(Ljava/util/Date;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setTime\0", "(Ljava/util/Date;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeInMillis](https://developer.android.com/reference/android/icu/util/Calendar.html#getTimeInMillis())
        pub fn getTimeInMillis<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getTimeInMillis", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getTimeInMillis\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTimeInMillis](https://developer.android.com/reference/android/icu/util/Calendar.html#setTimeInMillis(long))
        pub fn setTimeInMillis<'env>(&'env self, arg0: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "setTimeInMillis", .descriptor == "(J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setTimeInMillis\0", "(J)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get](https://developer.android.com/reference/android/icu/util/Calendar.html#get(int))
        pub fn get<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "get", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "get\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [internalGet](https://developer.android.com/reference/android/icu/util/Calendar.html#internalGet(int))
        // fn internalGet<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "internalGet", .descriptor == "(I)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "internalGet\0", "(I)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [internalGet](https://developer.android.com/reference/android/icu/util/Calendar.html#internalGet(int,%20int))
        // fn internalGet<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "internalGet", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "internalGet\0", "(II)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [set](https://developer.android.com/reference/android/icu/util/Calendar.html#set(int,%20int))
        pub fn set_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "set", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "set\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [set](https://developer.android.com/reference/android/icu/util/Calendar.html#set(int,%20int,%20int))
        pub fn set_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "set", .descriptor == "(III)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "set\0", "(III)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [set](https://developer.android.com/reference/android/icu/util/Calendar.html#set(int,%20int,%20int,%20int,%20int))
        pub fn set_int_int_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "set", .descriptor == "(IIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "set\0", "(IIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [set](https://developer.android.com/reference/android/icu/util/Calendar.html#set(int,%20int,%20int,%20int,%20int,%20int))
        pub fn set_int_int_int_int_int_int<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32, arg3: i32, arg4: i32, arg5: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "set", .descriptor == "(IIIIII)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2), __jni_bindgen::AsJValue::as_jvalue(&arg3), __jni_bindgen::AsJValue::as_jvalue(&arg4), __jni_bindgen::AsJValue::as_jvalue(&arg5)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "set\0", "(IIIIII)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clear](https://developer.android.com/reference/android/icu/util/Calendar.html#clear())
        pub fn clear<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "clear", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "clear\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clear](https://developer.android.com/reference/android/icu/util/Calendar.html#clear(int))
        pub fn clear_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "clear", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "clear\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isSet](https://developer.android.com/reference/android/icu/util/Calendar.html#isSet(int))
        pub fn isSet<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "isSet", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "isSet\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [complete](https://developer.android.com/reference/android/icu/util/Calendar.html#complete())
        // fn complete<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "complete", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "complete\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [equals](https://developer.android.com/reference/android/icu/util/Calendar.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isEquivalentTo](https://developer.android.com/reference/android/icu/util/Calendar.html#isEquivalentTo(android.icu.util.Calendar))
        ///
        /// Required features: "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar")))]
        pub fn isEquivalentTo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "isEquivalentTo", .descriptor == "(Landroid/icu/util/Calendar;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "isEquivalentTo\0", "(Landroid/icu/util/Calendar;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/icu/util/Calendar.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [before](https://developer.android.com/reference/android/icu/util/Calendar.html#before(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn before<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "before", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "before\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [after](https://developer.android.com/reference/android/icu/util/Calendar.html#after(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn after<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "after", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "after\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActualMaximum](https://developer.android.com/reference/android/icu/util/Calendar.html#getActualMaximum(int))
        pub fn getActualMaximum<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getActualMaximum", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getActualMaximum\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActualMinimum](https://developer.android.com/reference/android/icu/util/Calendar.html#getActualMinimum(int))
        pub fn getActualMinimum<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getActualMinimum", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getActualMinimum\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [prepareGetActual](https://developer.android.com/reference/android/icu/util/Calendar.html#prepareGetActual(int,%20boolean))
        // fn prepareGetActual<'env>(&'env self, arg0: i32, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "prepareGetActual", .descriptor == "(IZ)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "prepareGetActual\0", "(IZ)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [roll](https://developer.android.com/reference/android/icu/util/Calendar.html#roll(int,%20boolean))
        pub fn roll_int_boolean<'env>(&'env self, arg0: i32, arg1: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "roll", .descriptor == "(IZ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "roll\0", "(IZ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [roll](https://developer.android.com/reference/android/icu/util/Calendar.html#roll(int,%20int))
        pub fn roll_int_int<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "roll", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "roll\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [add](https://developer.android.com/reference/android/icu/util/Calendar.html#add(int,%20int))
        pub fn add<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "add", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "add\0", "(II)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayName](https://developer.android.com/reference/android/icu/util/Calendar.html#getDisplayName(java.util.Locale))
        ///
        /// Required features: "java-lang-String", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-Locale")))]
        pub fn getDisplayName_Locale<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getDisplayName", .descriptor == "(Ljava/util/Locale;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getDisplayName\0", "(Ljava/util/Locale;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDisplayName](https://developer.android.com/reference/android/icu/util/Calendar.html#getDisplayName(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-ULocale", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        pub fn getDisplayName_ULocale<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getDisplayName", .descriptor == "(Landroid/icu/util/ULocale;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getDisplayName\0", "(Landroid/icu/util/ULocale;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [compareTo](https://developer.android.com/reference/android/icu/util/Calendar.html#compareTo(android.icu.util.Calendar))
        ///
        /// Required features: "android-icu-util-Calendar"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar")))]
        pub fn compareTo_Calendar<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "compareTo", .descriptor == "(Landroid/icu/util/Calendar;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "compareTo\0", "(Landroid/icu/util/Calendar;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeFormat](https://developer.android.com/reference/android/icu/util/Calendar.html#getDateTimeFormat(int,%20int,%20java.util.Locale))
        ///
        /// Required features: "android-icu-text-DateFormat", "java-util-Locale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-util-Locale")))]
        pub fn getDateTimeFormat_int_int_Locale<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getDateTimeFormat", .descriptor == "(IILjava/util/Locale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getDateTimeFormat\0", "(IILjava/util/Locale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDateTimeFormat](https://developer.android.com/reference/android/icu/util/Calendar.html#getDateTimeFormat(int,%20int,%20android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-text-DateFormat", "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-ULocale")))]
        pub fn getDateTimeFormat_int_int_ULocale<'env>(&'env self, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getDateTimeFormat", .descriptor == "(IILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getDateTimeFormat\0", "(IILandroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [handleGetDateFormat](https://developer.android.com/reference/android/icu/util/Calendar.html#handleGetDateFormat(java.lang.String,%20java.util.Locale))
        // ///
        // /// Required features: "android-icu-text-DateFormat", "java-lang-String", "java-util-Locale"
        // #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-lang-String", feature = "java-util-Locale")))]
        // fn handleGetDateFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "handleGetDateFormat", .descriptor == "(Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleGetDateFormat\0", "(Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleGetDateFormat](https://developer.android.com/reference/android/icu/util/Calendar.html#handleGetDateFormat(java.lang.String,%20java.lang.String,%20java.util.Locale))
        // ///
        // /// Required features: "android-icu-text-DateFormat", "java-lang-String", "java-util-Locale"
        // #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "java-lang-String", feature = "java-util-Locale")))]
        // fn handleGetDateFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Locale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "handleGetDateFormat", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleGetDateFormat\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateFormat;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleGetDateFormat](https://developer.android.com/reference/android/icu/util/Calendar.html#handleGetDateFormat(java.lang.String,%20android.icu.util.ULocale))
        // ///
        // /// Required features: "android-icu-text-DateFormat", "android-icu-util-ULocale", "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "android-icu-text-DateFormat", feature = "android-icu-util-ULocale", feature = "java-lang-String")))]
        // fn handleGetDateFormat<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::text::DateFormat>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "handleGetDateFormat", .descriptor == "(Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleGetDateFormat\0", "(Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateFormat;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [pinField](https://developer.android.com/reference/android/icu/util/Calendar.html#pinField(int))
        // fn pinField<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "pinField", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "pinField\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [weekNumber](https://developer.android.com/reference/android/icu/util/Calendar.html#weekNumber(int,%20int,%20int))
        // fn weekNumber<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "weekNumber", .descriptor == "(III)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "weekNumber\0", "(III)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [weekNumber](https://developer.android.com/reference/android/icu/util/Calendar.html#weekNumber(int,%20int))
        // fn weekNumber<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "weekNumber", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "weekNumber\0", "(II)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [fieldDifference](https://developer.android.com/reference/android/icu/util/Calendar.html#fieldDifference(java.util.Date,%20int))
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn fieldDifference<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "fieldDifference", .descriptor == "(Ljava/util/Date;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "fieldDifference\0", "(Ljava/util/Date;I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTimeZone](https://developer.android.com/reference/android/icu/util/Calendar.html#setTimeZone(android.icu.util.TimeZone))
        ///
        /// Required features: "android-icu-util-TimeZone"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-TimeZone")))]
        pub fn setTimeZone<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::TimeZone>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "setTimeZone", .descriptor == "(Landroid/icu/util/TimeZone;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setTimeZone\0", "(Landroid/icu/util/TimeZone;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getTimeZone](https://developer.android.com/reference/android/icu/util/Calendar.html#getTimeZone())
        ///
        /// Required features: "android-icu-util-TimeZone"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-TimeZone")))]
        pub fn getTimeZone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::TimeZone>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getTimeZone", .descriptor == "()Landroid/icu/util/TimeZone;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getTimeZone\0", "()Landroid/icu/util/TimeZone;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLenient](https://developer.android.com/reference/android/icu/util/Calendar.html#setLenient(boolean))
        pub fn setLenient<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "setLenient", .descriptor == "(Z)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setLenient\0", "(Z)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isLenient](https://developer.android.com/reference/android/icu/util/Calendar.html#isLenient())
        pub fn isLenient<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "isLenient", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "isLenient\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRepeatedWallTimeOption](https://developer.android.com/reference/android/icu/util/Calendar.html#setRepeatedWallTimeOption(int))
        pub fn setRepeatedWallTimeOption<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "setRepeatedWallTimeOption", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setRepeatedWallTimeOption\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRepeatedWallTimeOption](https://developer.android.com/reference/android/icu/util/Calendar.html#getRepeatedWallTimeOption())
        pub fn getRepeatedWallTimeOption<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getRepeatedWallTimeOption", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getRepeatedWallTimeOption\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSkippedWallTimeOption](https://developer.android.com/reference/android/icu/util/Calendar.html#setSkippedWallTimeOption(int))
        pub fn setSkippedWallTimeOption<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "setSkippedWallTimeOption", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setSkippedWallTimeOption\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSkippedWallTimeOption](https://developer.android.com/reference/android/icu/util/Calendar.html#getSkippedWallTimeOption())
        pub fn getSkippedWallTimeOption<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getSkippedWallTimeOption", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getSkippedWallTimeOption\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFirstDayOfWeek](https://developer.android.com/reference/android/icu/util/Calendar.html#setFirstDayOfWeek(int))
        pub fn setFirstDayOfWeek<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "setFirstDayOfWeek", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setFirstDayOfWeek\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFirstDayOfWeek](https://developer.android.com/reference/android/icu/util/Calendar.html#getFirstDayOfWeek())
        pub fn getFirstDayOfWeek<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getFirstDayOfWeek", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getFirstDayOfWeek\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setMinimalDaysInFirstWeek](https://developer.android.com/reference/android/icu/util/Calendar.html#setMinimalDaysInFirstWeek(int))
        pub fn setMinimalDaysInFirstWeek<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "setMinimalDaysInFirstWeek", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setMinimalDaysInFirstWeek\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMinimalDaysInFirstWeek](https://developer.android.com/reference/android/icu/util/Calendar.html#getMinimalDaysInFirstWeek())
        pub fn getMinimalDaysInFirstWeek<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getMinimalDaysInFirstWeek", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getMinimalDaysInFirstWeek\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [handleGetLimit](https://developer.android.com/reference/android/icu/util/Calendar.html#handleGetLimit(int,%20int))
        // fn handleGetLimit<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | ABSTRACT, .name == "handleGetLimit", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleGetLimit\0", "(II)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getLimit](https://developer.android.com/reference/android/icu/util/Calendar.html#getLimit(int,%20int))
        // fn getLimit<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "getLimit", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getLimit\0", "(II)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getMinimum](https://developer.android.com/reference/android/icu/util/Calendar.html#getMinimum(int))
        pub fn getMinimum<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "getMinimum", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getMinimum\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMaximum](https://developer.android.com/reference/android/icu/util/Calendar.html#getMaximum(int))
        pub fn getMaximum<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "getMaximum", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getMaximum\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGreatestMinimum](https://developer.android.com/reference/android/icu/util/Calendar.html#getGreatestMinimum(int))
        pub fn getGreatestMinimum<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "getGreatestMinimum", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getGreatestMinimum\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLeastMaximum](https://developer.android.com/reference/android/icu/util/Calendar.html#getLeastMaximum(int))
        pub fn getLeastMaximum<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "getLeastMaximum", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getLeastMaximum\0", "(I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isWeekend](https://developer.android.com/reference/android/icu/util/Calendar.html#isWeekend(java.util.Date))
        ///
        /// Required features: "java-util-Date"
        #[cfg(any(feature = "all", all(feature = "java-util-Date")))]
        pub fn isWeekend_Date<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::Date>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "isWeekend", .descriptor == "(Ljava/util/Date;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "isWeekend\0", "(Ljava/util/Date;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isWeekend](https://developer.android.com/reference/android/icu/util/Calendar.html#isWeekend())
        pub fn isWeekend<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "isWeekend", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "isWeekend\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/android/icu/util/Calendar.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/icu/util/Calendar.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWeekDataForRegion](https://developer.android.com/reference/android/icu/util/Calendar.html#getWeekDataForRegion(java.lang.String))
        ///
        /// Required features: "android-icu-util-Calendar_WeekData", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar_WeekData", feature = "java-lang-String")))]
        pub fn getWeekDataForRegion<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar_WeekData>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | STATIC, .name == "getWeekDataForRegion", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/Calendar$WeekData;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "getWeekDataForRegion\0", "(Ljava/lang/String;)Landroid/icu/util/Calendar$WeekData;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getWeekData](https://developer.android.com/reference/android/icu/util/Calendar.html#getWeekData())
        ///
        /// Required features: "android-icu-util-Calendar_WeekData"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar_WeekData")))]
        pub fn getWeekData<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar_WeekData>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getWeekData", .descriptor == "()Landroid/icu/util/Calendar$WeekData;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getWeekData\0", "()Landroid/icu/util/Calendar$WeekData;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setWeekData](https://developer.android.com/reference/android/icu/util/Calendar.html#setWeekData(android.icu.util.Calendar.WeekData))
        ///
        /// Required features: "android-icu-util-Calendar", "android-icu-util-Calendar_WeekData"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-Calendar", feature = "android-icu-util-Calendar_WeekData")))]
        pub fn setWeekData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::Calendar_WeekData>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::Calendar>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "setWeekData", .descriptor == "(Landroid/icu/util/Calendar$WeekData;)Landroid/icu/util/Calendar;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "setWeekData\0", "(Landroid/icu/util/Calendar$WeekData;)Landroid/icu/util/Calendar;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [computeFields](https://developer.android.com/reference/android/icu/util/Calendar.html#computeFields())
        // fn computeFields<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "computeFields", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "computeFields\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [computeGregorianFields](https://developer.android.com/reference/android/icu/util/Calendar.html#computeGregorianFields(int))
        // fn computeGregorianFields<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "computeGregorianFields", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "computeGregorianFields\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [resolveFields](https://developer.android.com/reference/android/icu/util/Calendar.html#resolveFields(int%5B%5D%5B%5D%5B%5D))
        // fn resolveFields<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<__jni_bindgen::ObjectArray<__jni_bindgen::IntArray, crate::java::lang::Throwable>, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "resolveFields", .descriptor == "([[[I)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "resolveFields\0", "([[[I)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [newestStamp](https://developer.android.com/reference/android/icu/util/Calendar.html#newestStamp(int,%20int,%20int))
        // fn newestStamp<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "newestStamp", .descriptor == "(III)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "newestStamp\0", "(III)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getStamp](https://developer.android.com/reference/android/icu/util/Calendar.html#getStamp(int))
        // fn getStamp<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "getStamp", .descriptor == "(I)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getStamp\0", "(I)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [newerField](https://developer.android.com/reference/android/icu/util/Calendar.html#newerField(int,%20int))
        // fn newerField<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "newerField", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "newerField\0", "(II)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [validateFields](https://developer.android.com/reference/android/icu/util/Calendar.html#validateFields())
        // fn validateFields<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "validateFields", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "validateFields\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [validateField](https://developer.android.com/reference/android/icu/util/Calendar.html#validateField(int))
        // fn validateField<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "validateField", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "validateField\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [validateField](https://developer.android.com/reference/android/icu/util/Calendar.html#validateField(int,%20int,%20int))
        // fn validateField<'env>(&'env self, arg0: i32, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "validateField", .descriptor == "(III)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "validateField\0", "(III)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [computeTime](https://developer.android.com/reference/android/icu/util/Calendar.html#computeTime())
        // fn computeTime<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "computeTime", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "computeTime\0", "()V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [computeMillisInDay](https://developer.android.com/reference/android/icu/util/Calendar.html#computeMillisInDay())
        // #[deprecated] fn computeMillisInDay<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "computeMillisInDay", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "computeMillisInDay\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [computeZoneOffset](https://developer.android.com/reference/android/icu/util/Calendar.html#computeZoneOffset(long,%20int))
        // #[deprecated] fn computeZoneOffset<'env>(&'env self, arg0: i64, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "computeZoneOffset", .descriptor == "(JI)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "computeZoneOffset\0", "(JI)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [computeJulianDay](https://developer.android.com/reference/android/icu/util/Calendar.html#computeJulianDay())
        // fn computeJulianDay<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "computeJulianDay", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "computeJulianDay\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getFieldResolutionTable](https://developer.android.com/reference/android/icu/util/Calendar.html#getFieldResolutionTable())
        // fn getFieldResolutionTable<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<__jni_bindgen::ObjectArray<__jni_bindgen::IntArray, crate::java::lang::Throwable>, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "getFieldResolutionTable", .descriptor == "()[[[I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getFieldResolutionTable\0", "()[[[I\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleComputeMonthStart](https://developer.android.com/reference/android/icu/util/Calendar.html#handleComputeMonthStart(int,%20int,%20boolean))
        // fn handleComputeMonthStart<'env>(&'env self, arg0: i32, arg1: i32, arg2: bool) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | ABSTRACT, .name == "handleComputeMonthStart", .descriptor == "(IIZ)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleComputeMonthStart\0", "(IIZ)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleGetExtendedYear](https://developer.android.com/reference/android/icu/util/Calendar.html#handleGetExtendedYear())
        // fn handleGetExtendedYear<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | ABSTRACT, .name == "handleGetExtendedYear", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleGetExtendedYear\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleGetMonthLength](https://developer.android.com/reference/android/icu/util/Calendar.html#handleGetMonthLength(int,%20int))
        // fn handleGetMonthLength<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "handleGetMonthLength", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleGetMonthLength\0", "(II)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleGetYearLength](https://developer.android.com/reference/android/icu/util/Calendar.html#handleGetYearLength(int))
        // fn handleGetYearLength<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "handleGetYearLength", .descriptor == "(I)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleGetYearLength\0", "(I)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleCreateFields](https://developer.android.com/reference/android/icu/util/Calendar.html#handleCreateFields())
        // fn handleCreateFields<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::IntArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "handleCreateFields", .descriptor == "()[I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleCreateFields\0", "()[I\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleComputeJulianDay](https://developer.android.com/reference/android/icu/util/Calendar.html#handleComputeJulianDay(int))
        // fn handleComputeJulianDay<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "handleComputeJulianDay", .descriptor == "(I)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleComputeJulianDay\0", "(I)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [computeGregorianMonthStart](https://developer.android.com/reference/android/icu/util/Calendar.html#computeGregorianMonthStart(int,%20int))
        // fn computeGregorianMonthStart<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "computeGregorianMonthStart", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "computeGregorianMonthStart\0", "(II)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [handleComputeFields](https://developer.android.com/reference/android/icu/util/Calendar.html#handleComputeFields(int))
        // fn handleComputeFields<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "handleComputeFields", .descriptor == "(I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "handleComputeFields\0", "(I)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getGregorianYear](https://developer.android.com/reference/android/icu/util/Calendar.html#getGregorianYear())
        // fn getGregorianYear<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "getGregorianYear", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getGregorianYear\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getGregorianMonth](https://developer.android.com/reference/android/icu/util/Calendar.html#getGregorianMonth())
        // fn getGregorianMonth<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "getGregorianMonth", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getGregorianMonth\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getGregorianDayOfYear](https://developer.android.com/reference/android/icu/util/Calendar.html#getGregorianDayOfYear())
        // fn getGregorianDayOfYear<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "getGregorianDayOfYear", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getGregorianDayOfYear\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [getGregorianDayOfMonth](https://developer.android.com/reference/android/icu/util/Calendar.html#getGregorianDayOfMonth())
        // fn getGregorianDayOfMonth<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "getGregorianDayOfMonth", .descriptor == "()I"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getGregorianDayOfMonth\0", "()I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getFieldCount](https://developer.android.com/reference/android/icu/util/Calendar.html#getFieldCount())
        pub fn getFieldCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | FINAL, .name == "getFieldCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getFieldCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Non-public method
        // /// [internalSet](https://developer.android.com/reference/android/icu/util/Calendar.html#internalSet(int,%20int))
        // fn internalSet<'env>(&'env self, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "internalSet", .descriptor == "(II)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "internalSet\0", "(II)V\0");
        //         __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [isGregorianLeapYear](https://developer.android.com/reference/android/icu/util/Calendar.html#isGregorianLeapYear(int))
        // fn isGregorianLeapYear<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "isGregorianLeapYear", .descriptor == "(I)Z"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "isGregorianLeapYear\0", "(I)Z\0");
        //         __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [gregorianMonthLength](https://developer.android.com/reference/android/icu/util/Calendar.html#gregorianMonthLength(int,%20int))
        // fn gregorianMonthLength<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "gregorianMonthLength", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "gregorianMonthLength\0", "(II)I\0");
        //         __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [gregorianPreviousMonthLength](https://developer.android.com/reference/android/icu/util/Calendar.html#gregorianPreviousMonthLength(int,%20int))
        // fn gregorianPreviousMonthLength<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "gregorianPreviousMonthLength", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "gregorianPreviousMonthLength\0", "(II)I\0");
        //         __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [floorDivide](https://developer.android.com/reference/android/icu/util/Calendar.html#floorDivide(long,%20long))
        // fn floorDivide<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "floorDivide", .descriptor == "(JJ)J"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "floorDivide\0", "(JJ)J\0");
        //         __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [floorDivide](https://developer.android.com/reference/android/icu/util/Calendar.html#floorDivide(int,%20int))
        // fn floorDivide<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "floorDivide", .descriptor == "(II)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "floorDivide\0", "(II)I\0");
        //         __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [floorDivide](https://developer.android.com/reference/android/icu/util/Calendar.html#floorDivide(int,%20int,%20int%5B%5D))
        // fn floorDivide<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "floorDivide", .descriptor == "(II[I)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "floorDivide\0", "(II[I)I\0");
        //         __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [floorDivide](https://developer.android.com/reference/android/icu/util/Calendar.html#floorDivide(long,%20int,%20int%5B%5D))
        // fn floorDivide<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64, arg1: i32, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "floorDivide", .descriptor == "(JI[I)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "floorDivide\0", "(JI[I)I\0");
        //         __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [fieldName](https://developer.android.com/reference/android/icu/util/Calendar.html#fieldName(int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn fieldName<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED, .name == "fieldName", .descriptor == "(I)Ljava/lang/String;"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "fieldName\0", "(I)Ljava/lang/String;\0");
        //         __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [millisToJulianDay](https://developer.android.com/reference/android/icu/util/Calendar.html#millisToJulianDay(long))
        // fn millisToJulianDay<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "millisToJulianDay", .descriptor == "(J)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "millisToJulianDay\0", "(J)I\0");
        //         __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [julianDayToMillis](https://developer.android.com/reference/android/icu/util/Calendar.html#julianDayToMillis(int))
        // fn julianDayToMillis<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "julianDayToMillis", .descriptor == "(I)J"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "julianDayToMillis\0", "(I)J\0");
        //         __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [julianDayToDayOfWeek](https://developer.android.com/reference/android/icu/util/Calendar.html#julianDayToDayOfWeek(int))
        // fn julianDayToDayOfWeek<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | STATIC | FINAL, .name == "julianDayToDayOfWeek", .descriptor == "(I)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/icu/util/Calendar\0", "julianDayToDayOfWeek\0", "(I)I\0");
        //         __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        // // Not emitting: Non-public method
        // /// [internalGetTimeInMillis](https://developer.android.com/reference/android/icu/util/Calendar.html#internalGetTimeInMillis())
        // fn internalGetTimeInMillis<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PROTECTED | FINAL, .name == "internalGetTimeInMillis", .descriptor == "()J"
        //     unsafe {
        //         let __jni_args = [];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "internalGetTimeInMillis\0", "()J\0");
        //         __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getType](https://developer.android.com/reference/android/icu/util/Calendar.html#getType())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/Calendar", java.flags == PUBLIC, .name == "getType", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "getType\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [compareTo](https://developer.android.com/reference/android/icu/util/Calendar.html#compareTo(java.lang.Object))
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn compareTo_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/icu/util/Calendar", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "compareTo", .descriptor == "(Ljava/lang/Object;)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/Calendar\0", "compareTo\0", "(Ljava/lang/Object;)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [AM](https://developer.android.com/reference/android/icu/util/Calendar.html#AM)
        pub const AM : i32 = 0;

        /// public static final [AM_PM](https://developer.android.com/reference/android/icu/util/Calendar.html#AM_PM)
        pub const AM_PM : i32 = 9;

        /// public static final [APRIL](https://developer.android.com/reference/android/icu/util/Calendar.html#APRIL)
        pub const APRIL : i32 = 3;

        /// public static final [AUGUST](https://developer.android.com/reference/android/icu/util/Calendar.html#AUGUST)
        pub const AUGUST : i32 = 7;

        // // Not emitting: Non-public field
        // /// protected static final [BASE_FIELD_COUNT](https://developer.android.com/reference/android/icu/util/Calendar.html#BASE_FIELD_COUNT)
        // #[deprecated] pub const BASE_FIELD_COUNT : i32 = 23;

        /// public static final [DATE](https://developer.android.com/reference/android/icu/util/Calendar.html#DATE)
        pub const DATE : i32 = 5;

        /// public static final [DAY_OF_MONTH](https://developer.android.com/reference/android/icu/util/Calendar.html#DAY_OF_MONTH)
        pub const DAY_OF_MONTH : i32 = 5;

        /// public static final [DAY_OF_WEEK](https://developer.android.com/reference/android/icu/util/Calendar.html#DAY_OF_WEEK)
        pub const DAY_OF_WEEK : i32 = 7;

        /// public static final [DAY_OF_WEEK_IN_MONTH](https://developer.android.com/reference/android/icu/util/Calendar.html#DAY_OF_WEEK_IN_MONTH)
        pub const DAY_OF_WEEK_IN_MONTH : i32 = 8;

        /// public static final [DAY_OF_YEAR](https://developer.android.com/reference/android/icu/util/Calendar.html#DAY_OF_YEAR)
        pub const DAY_OF_YEAR : i32 = 6;

        /// public static final [DECEMBER](https://developer.android.com/reference/android/icu/util/Calendar.html#DECEMBER)
        pub const DECEMBER : i32 = 11;

        /// public static final [DOW_LOCAL](https://developer.android.com/reference/android/icu/util/Calendar.html#DOW_LOCAL)
        pub const DOW_LOCAL : i32 = 18;

        /// public static final [DST_OFFSET](https://developer.android.com/reference/android/icu/util/Calendar.html#DST_OFFSET)
        pub const DST_OFFSET : i32 = 16;

        // // Not emitting: Non-public field
        // /// protected static final [EPOCH_JULIAN_DAY](https://developer.android.com/reference/android/icu/util/Calendar.html#EPOCH_JULIAN_DAY)
        // pub const EPOCH_JULIAN_DAY : i32 = 2440588;

        /// public static final [ERA](https://developer.android.com/reference/android/icu/util/Calendar.html#ERA)
        pub const ERA : i32 = 0;

        /// public static final [EXTENDED_YEAR](https://developer.android.com/reference/android/icu/util/Calendar.html#EXTENDED_YEAR)
        pub const EXTENDED_YEAR : i32 = 19;

        /// public static final [FEBRUARY](https://developer.android.com/reference/android/icu/util/Calendar.html#FEBRUARY)
        pub const FEBRUARY : i32 = 1;

        /// public static final [FRIDAY](https://developer.android.com/reference/android/icu/util/Calendar.html#FRIDAY)
        pub const FRIDAY : i32 = 6;

        // // Not emitting: Non-public field
        // /// protected static final [GREATEST_MINIMUM](https://developer.android.com/reference/android/icu/util/Calendar.html#GREATEST_MINIMUM)
        // pub const GREATEST_MINIMUM : i32 = 1;

        /// public static final [HOUR](https://developer.android.com/reference/android/icu/util/Calendar.html#HOUR)
        pub const HOUR : i32 = 10;

        /// public static final [HOUR_OF_DAY](https://developer.android.com/reference/android/icu/util/Calendar.html#HOUR_OF_DAY)
        pub const HOUR_OF_DAY : i32 = 11;

        // // Not emitting: Non-public field
        // /// protected static final [INTERNALLY_SET](https://developer.android.com/reference/android/icu/util/Calendar.html#INTERNALLY_SET)
        // pub const INTERNALLY_SET : i32 = 1;

        /// public static final [IS_LEAP_MONTH](https://developer.android.com/reference/android/icu/util/Calendar.html#IS_LEAP_MONTH)
        pub const IS_LEAP_MONTH : i32 = 22;

        /// public static final [JANUARY](https://developer.android.com/reference/android/icu/util/Calendar.html#JANUARY)
        pub const JANUARY : i32 = 0;

        // // Not emitting: Non-public field
        // /// protected static final [JAN_1_1_JULIAN_DAY](https://developer.android.com/reference/android/icu/util/Calendar.html#JAN_1_1_JULIAN_DAY)
        // pub const JAN_1_1_JULIAN_DAY : i32 = 1721426;

        /// public static final [JULIAN_DAY](https://developer.android.com/reference/android/icu/util/Calendar.html#JULIAN_DAY)
        pub const JULIAN_DAY : i32 = 20;

        /// public static final [JULY](https://developer.android.com/reference/android/icu/util/Calendar.html#JULY)
        pub const JULY : i32 = 6;

        /// public static final [JUNE](https://developer.android.com/reference/android/icu/util/Calendar.html#JUNE)
        pub const JUNE : i32 = 5;

        // // Not emitting: Non-public field
        // /// protected static final [LEAST_MAXIMUM](https://developer.android.com/reference/android/icu/util/Calendar.html#LEAST_MAXIMUM)
        // pub const LEAST_MAXIMUM : i32 = 2;

        /// public static final [MARCH](https://developer.android.com/reference/android/icu/util/Calendar.html#MARCH)
        pub const MARCH : i32 = 2;

        // // Not emitting: Non-public field
        // /// protected static final [MAXIMUM](https://developer.android.com/reference/android/icu/util/Calendar.html#MAXIMUM)
        // pub const MAXIMUM : i32 = 3;

        // // Not emitting: Non-public field
        // /// **get** protected static final [MAX_DATE](https://developer.android.com/reference/android/icu/util/Calendar.html#MAX_DATE)
        // ///
        // /// Required feature: java-util-Date
        // #[cfg(any(feature = "all", feature = "java-util-Date"))]
        // pub fn MAX_DATE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>> {
        //     unsafe {
        //         let (class, field) = env.require_class_static_field("android/icu/util/Calendar\0", "MAX_DATE\0", "Ljava/util/Date;\0");
        //         env.get_static_object_field(class, field)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// protected static final [MAX_FIELD_COUNT](https://developer.android.com/reference/android/icu/util/Calendar.html#MAX_FIELD_COUNT)
        // #[deprecated] pub const MAX_FIELD_COUNT : i32 = 32;

        // // Not emitting: Non-public field
        // /// protected static final [MAX_JULIAN](https://developer.android.com/reference/android/icu/util/Calendar.html#MAX_JULIAN)
        // pub const MAX_JULIAN : i32 = 2130706432;

        // // Not emitting: Non-public field
        // /// protected static final [MAX_MILLIS](https://developer.android.com/reference/android/icu/util/Calendar.html#MAX_MILLIS)
        // pub const MAX_MILLIS : i64 = 183882168921600000i64;

        /// public static final [MAY](https://developer.android.com/reference/android/icu/util/Calendar.html#MAY)
        pub const MAY : i32 = 4;

        /// public static final [MILLISECOND](https://developer.android.com/reference/android/icu/util/Calendar.html#MILLISECOND)
        pub const MILLISECOND : i32 = 14;

        /// public static final [MILLISECONDS_IN_DAY](https://developer.android.com/reference/android/icu/util/Calendar.html#MILLISECONDS_IN_DAY)
        pub const MILLISECONDS_IN_DAY : i32 = 21;

        // // Not emitting: Non-public field
        // /// protected static final [MINIMUM](https://developer.android.com/reference/android/icu/util/Calendar.html#MINIMUM)
        // pub const MINIMUM : i32 = 0;

        // // Not emitting: Non-public field
        // /// protected static final [MINIMUM_USER_STAMP](https://developer.android.com/reference/android/icu/util/Calendar.html#MINIMUM_USER_STAMP)
        // pub const MINIMUM_USER_STAMP : i32 = 2;

        /// public static final [MINUTE](https://developer.android.com/reference/android/icu/util/Calendar.html#MINUTE)
        pub const MINUTE : i32 = 12;

        // // Not emitting: Non-public field
        // /// **get** protected static final [MIN_DATE](https://developer.android.com/reference/android/icu/util/Calendar.html#MIN_DATE)
        // ///
        // /// Required feature: java-util-Date
        // #[cfg(any(feature = "all", feature = "java-util-Date"))]
        // pub fn MIN_DATE<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Date>> {
        //     unsafe {
        //         let (class, field) = env.require_class_static_field("android/icu/util/Calendar\0", "MIN_DATE\0", "Ljava/util/Date;\0");
        //         env.get_static_object_field(class, field)
        //     }
        // }

        // // Not emitting: Non-public field
        // /// protected static final [MIN_JULIAN](https://developer.android.com/reference/android/icu/util/Calendar.html#MIN_JULIAN)
        // pub const MIN_JULIAN : i32 = -2130706432;

        // // Not emitting: Non-public field
        // /// protected static final [MIN_MILLIS](https://developer.android.com/reference/android/icu/util/Calendar.html#MIN_MILLIS)
        // pub const MIN_MILLIS : i64 = -184303902528000000i64;

        /// public static final [MONDAY](https://developer.android.com/reference/android/icu/util/Calendar.html#MONDAY)
        pub const MONDAY : i32 = 2;

        /// public static final [MONTH](https://developer.android.com/reference/android/icu/util/Calendar.html#MONTH)
        pub const MONTH : i32 = 2;

        /// public static final [NOVEMBER](https://developer.android.com/reference/android/icu/util/Calendar.html#NOVEMBER)
        pub const NOVEMBER : i32 = 10;

        /// public static final [OCTOBER](https://developer.android.com/reference/android/icu/util/Calendar.html#OCTOBER)
        pub const OCTOBER : i32 = 9;

        // // Not emitting: Non-public field
        // /// protected static final [ONE_DAY](https://developer.android.com/reference/android/icu/util/Calendar.html#ONE_DAY)
        // pub const ONE_DAY : i64 = 86400000i64;

        // // Not emitting: Non-public field
        // /// protected static final [ONE_HOUR](https://developer.android.com/reference/android/icu/util/Calendar.html#ONE_HOUR)
        // pub const ONE_HOUR : i32 = 3600000;

        // // Not emitting: Non-public field
        // /// protected static final [ONE_MINUTE](https://developer.android.com/reference/android/icu/util/Calendar.html#ONE_MINUTE)
        // pub const ONE_MINUTE : i32 = 60000;

        // // Not emitting: Non-public field
        // /// protected static final [ONE_SECOND](https://developer.android.com/reference/android/icu/util/Calendar.html#ONE_SECOND)
        // pub const ONE_SECOND : i32 = 1000;

        // // Not emitting: Non-public field
        // /// protected static final [ONE_WEEK](https://developer.android.com/reference/android/icu/util/Calendar.html#ONE_WEEK)
        // pub const ONE_WEEK : i64 = 604800000i64;

        /// public static final [PM](https://developer.android.com/reference/android/icu/util/Calendar.html#PM)
        pub const PM : i32 = 1;

        // // Not emitting: Non-public field
        // /// protected static final [RESOLVE_REMAP](https://developer.android.com/reference/android/icu/util/Calendar.html#RESOLVE_REMAP)
        // pub const RESOLVE_REMAP : i32 = 32;

        /// public static final [SATURDAY](https://developer.android.com/reference/android/icu/util/Calendar.html#SATURDAY)
        pub const SATURDAY : i32 = 7;

        /// public static final [SECOND](https://developer.android.com/reference/android/icu/util/Calendar.html#SECOND)
        pub const SECOND : i32 = 13;

        /// public static final [SEPTEMBER](https://developer.android.com/reference/android/icu/util/Calendar.html#SEPTEMBER)
        pub const SEPTEMBER : i32 = 8;

        /// public static final [SUNDAY](https://developer.android.com/reference/android/icu/util/Calendar.html#SUNDAY)
        pub const SUNDAY : i32 = 1;

        /// public static final [THURSDAY](https://developer.android.com/reference/android/icu/util/Calendar.html#THURSDAY)
        pub const THURSDAY : i32 = 5;

        /// public static final [TUESDAY](https://developer.android.com/reference/android/icu/util/Calendar.html#TUESDAY)
        pub const TUESDAY : i32 = 3;

        /// public static final [UNDECIMBER](https://developer.android.com/reference/android/icu/util/Calendar.html#UNDECIMBER)
        pub const UNDECIMBER : i32 = 12;

        // // Not emitting: Non-public field
        // /// protected static final [UNSET](https://developer.android.com/reference/android/icu/util/Calendar.html#UNSET)
        // pub const UNSET : i32 = 0;

        /// public static final [WALLTIME_FIRST](https://developer.android.com/reference/android/icu/util/Calendar.html#WALLTIME_FIRST)
        pub const WALLTIME_FIRST : i32 = 1;

        /// public static final [WALLTIME_LAST](https://developer.android.com/reference/android/icu/util/Calendar.html#WALLTIME_LAST)
        pub const WALLTIME_LAST : i32 = 0;

        /// public static final [WALLTIME_NEXT_VALID](https://developer.android.com/reference/android/icu/util/Calendar.html#WALLTIME_NEXT_VALID)
        pub const WALLTIME_NEXT_VALID : i32 = 2;

        /// public static final [WEDNESDAY](https://developer.android.com/reference/android/icu/util/Calendar.html#WEDNESDAY)
        pub const WEDNESDAY : i32 = 4;

        /// public static final [WEEK_OF_MONTH](https://developer.android.com/reference/android/icu/util/Calendar.html#WEEK_OF_MONTH)
        pub const WEEK_OF_MONTH : i32 = 4;

        /// public static final [WEEK_OF_YEAR](https://developer.android.com/reference/android/icu/util/Calendar.html#WEEK_OF_YEAR)
        pub const WEEK_OF_YEAR : i32 = 3;

        /// public static final [YEAR](https://developer.android.com/reference/android/icu/util/Calendar.html#YEAR)
        pub const YEAR : i32 = 1;

        /// public static final [YEAR_WOY](https://developer.android.com/reference/android/icu/util/Calendar.html#YEAR_WOY)
        pub const YEAR_WOY : i32 = 17;

        /// public static final [ZONE_OFFSET](https://developer.android.com/reference/android/icu/util/Calendar.html#ZONE_OFFSET)
        pub const ZONE_OFFSET : i32 = 15;
    }
}
