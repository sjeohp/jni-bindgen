// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-icu-util-ULocale_Builder"))]
__jni_bindgen! {
    /// public final class [ULocale.Builder](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html)
    ///
    /// Required feature: android-icu-util-ULocale_Builder
    public final class ULocale_Builder ("android/icu/util/ULocale$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLocale](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#setLocale(android.icu.util.ULocale))
        ///
        /// Required features: "android-icu-util-ULocale", "android-icu-util-ULocale_Builder"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale", feature = "android-icu-util-ULocale_Builder")))]
        pub fn setLocale<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::icu::util::ULocale>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "setLocale", .descriptor == "(Landroid/icu/util/ULocale;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "setLocale\0", "(Landroid/icu/util/ULocale;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLanguageTag](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#setLanguageTag(java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn setLanguageTag<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "setLanguageTag", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "setLanguageTag\0", "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setLanguage](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#setLanguage(java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn setLanguage<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "setLanguage", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "setLanguage\0", "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setScript](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#setScript(java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn setScript<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "setScript", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "setScript\0", "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRegion](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#setRegion(java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn setRegion<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "setRegion", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "setRegion\0", "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setVariant](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#setVariant(java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn setVariant<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "setVariant", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "setVariant\0", "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExtension](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#setExtension(char,%20java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn setExtension<'env>(&'env self, arg0: __jni_bindgen::jchar, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "setExtension", .descriptor == "(CLjava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "setExtension\0", "(CLjava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setUnicodeLocaleKeyword](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#setUnicodeLocaleKeyword(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn setUnicodeLocaleKeyword<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "setUnicodeLocaleKeyword", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "setUnicodeLocaleKeyword\0", "(Ljava/lang/String;Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addUnicodeLocaleAttribute](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#addUnicodeLocaleAttribute(java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn addUnicodeLocaleAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "addUnicodeLocaleAttribute", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "addUnicodeLocaleAttribute\0", "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeUnicodeLocaleAttribute](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#removeUnicodeLocaleAttribute(java.lang.String))
        ///
        /// Required features: "android-icu-util-ULocale_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder", feature = "java-lang-String")))]
        pub fn removeUnicodeLocaleAttribute<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "removeUnicodeLocaleAttribute", .descriptor == "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "removeUnicodeLocaleAttribute\0", "(Ljava/lang/String;)Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clear](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#clear())
        ///
        /// Required features: "android-icu-util-ULocale_Builder"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder")))]
        pub fn clear<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "clear", .descriptor == "()Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "clear\0", "()Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clearExtensions](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#clearExtensions())
        ///
        /// Required features: "android-icu-util-ULocale_Builder"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale_Builder")))]
        pub fn clearExtensions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "clearExtensions", .descriptor == "()Landroid/icu/util/ULocale$Builder;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "clearExtensions\0", "()Landroid/icu/util/ULocale$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/icu/util/ULocale.Builder.html#build())
        ///
        /// Required features: "android-icu-util-ULocale"
        #[cfg(any(feature = "all", all(feature = "android-icu-util-ULocale")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::icu::util::ULocale>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/icu/util/ULocale$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/icu/util/ULocale;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/icu/util/ULocale$Builder\0", "build\0", "()Landroid/icu/util/ULocale;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
