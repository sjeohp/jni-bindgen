// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-RecoverySystem"))]
__jni_bindgen! {
    /// public class [RecoverySystem](https://developer.android.com/reference/android/os/RecoverySystem.html)
    ///
    /// Required feature: android-os-RecoverySystem
    public class RecoverySystem ("android/os/RecoverySystem") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [RecoverySystem](https://developer.android.com/reference/android/os/RecoverySystem.html#RecoverySystem())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::RecoverySystem>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/os/RecoverySystem", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RecoverySystem\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [verifyPackage](https://developer.android.com/reference/android/os/RecoverySystem.html#verifyPackage(java.io.File,%20android.os.RecoverySystem.ProgressListener,%20java.io.File))
        ///
        /// Required features: "android-os-RecoverySystem_ProgressListener", "java-io-File"
        #[cfg(any(feature = "all", all(feature = "android-os-RecoverySystem_ProgressListener", feature = "java-io-File")))]
        pub fn verifyPackage<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::RecoverySystem_ProgressListener>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RecoverySystem", java.flags == PUBLIC | STATIC, .name == "verifyPackage", .descriptor == "(Ljava/io/File;Landroid/os/RecoverySystem$ProgressListener;Ljava/io/File;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/RecoverySystem\0", "verifyPackage\0", "(Ljava/io/File;Landroid/os/RecoverySystem$ProgressListener;Ljava/io/File;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [installPackage](https://developer.android.com/reference/android/os/RecoverySystem.html#installPackage(android.content.Context,%20java.io.File))
        ///
        /// Required features: "android-content-Context", "java-io-File"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-io-File")))]
        pub fn installPackage<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RecoverySystem", java.flags == PUBLIC | STATIC, .name == "installPackage", .descriptor == "(Landroid/content/Context;Ljava/io/File;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/RecoverySystem\0", "installPackage\0", "(Landroid/content/Context;Ljava/io/File;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [rebootWipeUserData](https://developer.android.com/reference/android/os/RecoverySystem.html#rebootWipeUserData(android.content.Context))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        pub fn rebootWipeUserData<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RecoverySystem", java.flags == PUBLIC | STATIC, .name == "rebootWipeUserData", .descriptor == "(Landroid/content/Context;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/RecoverySystem\0", "rebootWipeUserData\0", "(Landroid/content/Context;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [rebootWipeCache](https://developer.android.com/reference/android/os/RecoverySystem.html#rebootWipeCache(android.content.Context))
        ///
        /// Required features: "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        pub fn rebootWipeCache<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RecoverySystem", java.flags == PUBLIC | STATIC, .name == "rebootWipeCache", .descriptor == "(Landroid/content/Context;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/RecoverySystem\0", "rebootWipeCache\0", "(Landroid/content/Context;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
