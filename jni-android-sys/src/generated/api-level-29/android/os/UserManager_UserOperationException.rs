// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-UserManager_UserOperationException"))]
__jni_bindgen! {
    /// public class [UserManager.UserOperationException](https://developer.android.com/reference/android/os/UserManager.UserOperationException.html)
    ///
    /// Required feature: android-os-UserManager_UserOperationException
    public class UserManager_UserOperationException ("android/os/UserManager$UserOperationException") extends crate::java::lang::RuntimeException {

        // // Not emitting: Non-public method
        // /// [UserOperationException](https://developer.android.com/reference/android/os/UserManager.UserOperationException.html#UserOperationException(java.lang.String,%20int))
        // ///
        // /// Required features: "java-lang-String"
        // #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::UserManager_UserOperationException>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/os/UserManager$UserOperationException", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/String;I)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/UserManager$UserOperationException\0", "<init>\0", "(Ljava/lang/String;I)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getUserOperationResult](https://developer.android.com/reference/android/os/UserManager.UserOperationException.html#getUserOperationResult())
        pub fn getUserOperationResult<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/UserManager$UserOperationException", java.flags == PUBLIC, .name == "getUserOperationResult", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/UserManager$UserOperationException\0", "getUserOperationResult\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
