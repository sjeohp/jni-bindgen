// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-IBinder"))]
__jni_bindgen! {
    /// public interface [IBinder](https://developer.android.com/reference/android/os/IBinder.html)
    ///
    /// Required feature: android-os-IBinder
    public interface IBinder ("android/os/IBinder") extends crate::java::lang::Object {

        /// [getInterfaceDescriptor](https://developer.android.com/reference/android/os/IBinder.html#getInterfaceDescriptor())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getInterfaceDescriptor<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "getInterfaceDescriptor", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "getInterfaceDescriptor\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [pingBinder](https://developer.android.com/reference/android/os/IBinder.html#pingBinder())
        pub fn pingBinder<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "pingBinder", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "pingBinder\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isBinderAlive](https://developer.android.com/reference/android/os/IBinder.html#isBinderAlive())
        pub fn isBinderAlive<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "isBinderAlive", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "isBinderAlive\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [queryLocalInterface](https://developer.android.com/reference/android/os/IBinder.html#queryLocalInterface(java.lang.String))
        ///
        /// Required features: "android-os-IInterface", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-os-IInterface", feature = "java-lang-String")))]
        pub fn queryLocalInterface<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::IInterface>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "queryLocalInterface", .descriptor == "(Ljava/lang/String;)Landroid/os/IInterface;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "queryLocalInterface\0", "(Ljava/lang/String;)Landroid/os/IInterface;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dump](https://developer.android.com/reference/android/os/IBinder.html#dump(java.io.FileDescriptor,%20java.lang.String%5B%5D))
        ///
        /// Required features: "java-io-FileDescriptor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-io-FileDescriptor", feature = "java-lang-String")))]
        pub fn dump<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::FileDescriptor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "dump", .descriptor == "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "dump\0", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dumpAsync](https://developer.android.com/reference/android/os/IBinder.html#dumpAsync(java.io.FileDescriptor,%20java.lang.String%5B%5D))
        ///
        /// Required features: "java-io-FileDescriptor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-io-FileDescriptor", feature = "java-lang-String")))]
        pub fn dumpAsync<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::FileDescriptor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "dumpAsync", .descriptor == "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "dumpAsync\0", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [transact](https://developer.android.com/reference/android/os/IBinder.html#transact(int,%20android.os.Parcel,%20android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn transact<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg3: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "transact", .descriptor == "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "transact\0", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [linkToDeath](https://developer.android.com/reference/android/os/IBinder.html#linkToDeath(android.os.IBinder.DeathRecipient,%20int))
        ///
        /// Required features: "android-os-IBinder_DeathRecipient"
        #[cfg(any(feature = "all", all(feature = "android-os-IBinder_DeathRecipient")))]
        pub fn linkToDeath<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::IBinder_DeathRecipient>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "linkToDeath", .descriptor == "(Landroid/os/IBinder$DeathRecipient;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "linkToDeath\0", "(Landroid/os/IBinder$DeathRecipient;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unlinkToDeath](https://developer.android.com/reference/android/os/IBinder.html#unlinkToDeath(android.os.IBinder.DeathRecipient,%20int))
        ///
        /// Required features: "android-os-IBinder_DeathRecipient"
        #[cfg(any(feature = "all", all(feature = "android-os-IBinder_DeathRecipient")))]
        pub fn unlinkToDeath<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::IBinder_DeathRecipient>>, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/IBinder", java.flags == PUBLIC | ABSTRACT, .name == "unlinkToDeath", .descriptor == "(Landroid/os/IBinder$DeathRecipient;I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/IBinder\0", "unlinkToDeath\0", "(Landroid/os/IBinder$DeathRecipient;I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [DUMP_TRANSACTION](https://developer.android.com/reference/android/os/IBinder.html#DUMP_TRANSACTION)
        pub const DUMP_TRANSACTION : i32 = 1598311760;

        /// public static final [FIRST_CALL_TRANSACTION](https://developer.android.com/reference/android/os/IBinder.html#FIRST_CALL_TRANSACTION)
        pub const FIRST_CALL_TRANSACTION : i32 = 1;

        /// public static final [FLAG_ONEWAY](https://developer.android.com/reference/android/os/IBinder.html#FLAG_ONEWAY)
        pub const FLAG_ONEWAY : i32 = 1;

        /// public static final [INTERFACE_TRANSACTION](https://developer.android.com/reference/android/os/IBinder.html#INTERFACE_TRANSACTION)
        pub const INTERFACE_TRANSACTION : i32 = 1598968902;

        /// public static final [LAST_CALL_TRANSACTION](https://developer.android.com/reference/android/os/IBinder.html#LAST_CALL_TRANSACTION)
        pub const LAST_CALL_TRANSACTION : i32 = 16777215;

        /// public static final [LIKE_TRANSACTION](https://developer.android.com/reference/android/os/IBinder.html#LIKE_TRANSACTION)
        pub const LIKE_TRANSACTION : i32 = 1598835019;

        /// public static final [PING_TRANSACTION](https://developer.android.com/reference/android/os/IBinder.html#PING_TRANSACTION)
        pub const PING_TRANSACTION : i32 = 1599098439;

        /// public static final [TWEET_TRANSACTION](https://developer.android.com/reference/android/os/IBinder.html#TWEET_TRANSACTION)
        pub const TWEET_TRANSACTION : i32 = 1599362900;
    }
}
