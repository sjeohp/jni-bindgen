// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-Process"))]
__jni_bindgen! {
    /// public class [Process](https://developer.android.com/reference/android/os/Process.html)
    ///
    /// Required feature: android-os-Process
    public class Process ("android/os/Process") extends crate::java::lang::Object {

        /// [Process](https://developer.android.com/reference/android/os/Process.html#Process())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::Process>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/Process\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getElapsedCpuTime](https://developer.android.com/reference/android/os/Process.html#getElapsedCpuTime())
        pub fn getElapsedCpuTime<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL | NATIVE, .name == "getElapsedCpuTime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "getElapsedCpuTime\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStartElapsedRealtime](https://developer.android.com/reference/android/os/Process.html#getStartElapsedRealtime())
        pub fn getStartElapsedRealtime<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "getStartElapsedRealtime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "getStartElapsedRealtime\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStartUptimeMillis](https://developer.android.com/reference/android/os/Process.html#getStartUptimeMillis())
        pub fn getStartUptimeMillis<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "getStartUptimeMillis", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "getStartUptimeMillis\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [is64Bit](https://developer.android.com/reference/android/os/Process.html#is64Bit())
        pub fn is64Bit<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "is64Bit", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "is64Bit\0", "()Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [myPid](https://developer.android.com/reference/android/os/Process.html#myPid())
        pub fn myPid<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "myPid", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "myPid\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [myTid](https://developer.android.com/reference/android/os/Process.html#myTid())
        pub fn myTid<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "myTid", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "myTid\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [myUid](https://developer.android.com/reference/android/os/Process.html#myUid())
        pub fn myUid<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "myUid", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "myUid\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [myUserHandle](https://developer.android.com/reference/android/os/Process.html#myUserHandle())
        ///
        /// Required features: "android-os-UserHandle"
        #[cfg(any(feature = "all", all(feature = "android-os-UserHandle")))]
        pub fn myUserHandle<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::UserHandle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC, .name == "myUserHandle", .descriptor == "()Landroid/os/UserHandle;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "myUserHandle\0", "()Landroid/os/UserHandle;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isApplicationUid](https://developer.android.com/reference/android/os/Process.html#isApplicationUid(int))
        pub fn isApplicationUid<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC, .name == "isApplicationUid", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "isApplicationUid\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isIsolated](https://developer.android.com/reference/android/os/Process.html#isIsolated())
        pub fn isIsolated<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "isIsolated", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "isIsolated\0", "()Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getUidForName](https://developer.android.com/reference/android/os/Process.html#getUidForName(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getUidForName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL | NATIVE, .name == "getUidForName", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "getUidForName\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGidForName](https://developer.android.com/reference/android/os/Process.html#getGidForName(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getGidForName<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL | NATIVE, .name == "getGidForName", .descriptor == "(Ljava/lang/String;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "getGidForName\0", "(Ljava/lang/String;)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setThreadPriority](https://developer.android.com/reference/android/os/Process.html#setThreadPriority(int,%20int))
        pub fn setThreadPriority_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL | NATIVE, .name == "setThreadPriority", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "setThreadPriority\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExclusiveCores](https://developer.android.com/reference/android/os/Process.html#getExclusiveCores())
        pub fn getExclusiveCores<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::IntArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL | NATIVE, .name == "getExclusiveCores", .descriptor == "()[I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "getExclusiveCores\0", "()[I\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setThreadPriority](https://developer.android.com/reference/android/os/Process.html#setThreadPriority(int))
        pub fn setThreadPriority_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL | NATIVE, .name == "setThreadPriority", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "setThreadPriority\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThreadPriority](https://developer.android.com/reference/android/os/Process.html#getThreadPriority(int))
        pub fn getThreadPriority<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL | NATIVE, .name == "getThreadPriority", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "getThreadPriority\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [supportsProcesses](https://developer.android.com/reference/android/os/Process.html#supportsProcesses())
        #[deprecated] pub fn supportsProcesses<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "supportsProcesses", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "supportsProcesses\0", "()Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [killProcess](https://developer.android.com/reference/android/os/Process.html#killProcess(int))
        pub fn killProcess<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL, .name == "killProcess", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "killProcess\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [sendSignal](https://developer.android.com/reference/android/os/Process.html#sendSignal(int,%20int))
        pub fn sendSignal<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Process", java.flags == PUBLIC | STATIC | FINAL | NATIVE, .name == "sendSignal", .descriptor == "(II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Process\0", "sendSignal\0", "(II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [BLUETOOTH_UID](https://developer.android.com/reference/android/os/Process.html#BLUETOOTH_UID)
        pub const BLUETOOTH_UID : i32 = 1002;

        /// public static final [FIRST_APPLICATION_UID](https://developer.android.com/reference/android/os/Process.html#FIRST_APPLICATION_UID)
        pub const FIRST_APPLICATION_UID : i32 = 10000;

        /// public static final [INVALID_UID](https://developer.android.com/reference/android/os/Process.html#INVALID_UID)
        pub const INVALID_UID : i32 = -1;

        /// public static final [LAST_APPLICATION_UID](https://developer.android.com/reference/android/os/Process.html#LAST_APPLICATION_UID)
        pub const LAST_APPLICATION_UID : i32 = 19999;

        /// public static final [PHONE_UID](https://developer.android.com/reference/android/os/Process.html#PHONE_UID)
        pub const PHONE_UID : i32 = 1001;

        /// public static final [ROOT_UID](https://developer.android.com/reference/android/os/Process.html#ROOT_UID)
        pub const ROOT_UID : i32 = 0;

        /// public static final [SHELL_UID](https://developer.android.com/reference/android/os/Process.html#SHELL_UID)
        pub const SHELL_UID : i32 = 2000;

        /// public static final [SIGNAL_KILL](https://developer.android.com/reference/android/os/Process.html#SIGNAL_KILL)
        pub const SIGNAL_KILL : i32 = 9;

        /// public static final [SIGNAL_QUIT](https://developer.android.com/reference/android/os/Process.html#SIGNAL_QUIT)
        pub const SIGNAL_QUIT : i32 = 3;

        /// public static final [SIGNAL_USR1](https://developer.android.com/reference/android/os/Process.html#SIGNAL_USR1)
        pub const SIGNAL_USR1 : i32 = 10;

        /// public static final [SYSTEM_UID](https://developer.android.com/reference/android/os/Process.html#SYSTEM_UID)
        pub const SYSTEM_UID : i32 = 1000;

        /// public static final [THREAD_PRIORITY_AUDIO](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_AUDIO)
        pub const THREAD_PRIORITY_AUDIO : i32 = -16;

        /// public static final [THREAD_PRIORITY_BACKGROUND](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_BACKGROUND)
        pub const THREAD_PRIORITY_BACKGROUND : i32 = 10;

        /// public static final [THREAD_PRIORITY_DEFAULT](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_DEFAULT)
        pub const THREAD_PRIORITY_DEFAULT : i32 = 0;

        /// public static final [THREAD_PRIORITY_DISPLAY](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_DISPLAY)
        pub const THREAD_PRIORITY_DISPLAY : i32 = -4;

        /// public static final [THREAD_PRIORITY_FOREGROUND](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_FOREGROUND)
        pub const THREAD_PRIORITY_FOREGROUND : i32 = -2;

        /// public static final [THREAD_PRIORITY_LESS_FAVORABLE](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_LESS_FAVORABLE)
        pub const THREAD_PRIORITY_LESS_FAVORABLE : i32 = 1;

        /// public static final [THREAD_PRIORITY_LOWEST](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_LOWEST)
        pub const THREAD_PRIORITY_LOWEST : i32 = 19;

        /// public static final [THREAD_PRIORITY_MORE_FAVORABLE](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_MORE_FAVORABLE)
        pub const THREAD_PRIORITY_MORE_FAVORABLE : i32 = -1;

        /// public static final [THREAD_PRIORITY_URGENT_AUDIO](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_URGENT_AUDIO)
        pub const THREAD_PRIORITY_URGENT_AUDIO : i32 = -19;

        /// public static final [THREAD_PRIORITY_URGENT_DISPLAY](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_URGENT_DISPLAY)
        pub const THREAD_PRIORITY_URGENT_DISPLAY : i32 = -8;

        /// public static final [THREAD_PRIORITY_VIDEO](https://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_VIDEO)
        pub const THREAD_PRIORITY_VIDEO : i32 = -10;
    }
}
