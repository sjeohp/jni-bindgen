// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-StrictMode_OnThreadViolationListener"))]
__jni_bindgen! {
    /// public interface [StrictMode.OnThreadViolationListener](https://developer.android.com/reference/android/os/StrictMode.OnThreadViolationListener.html)
    ///
    /// Required feature: android-os-StrictMode_OnThreadViolationListener
    public interface StrictMode_OnThreadViolationListener ("android/os/StrictMode$OnThreadViolationListener") extends crate::java::lang::Object {

        /// [onThreadViolation](https://developer.android.com/reference/android/os/StrictMode.OnThreadViolationListener.html#onThreadViolation(android.os.strictmode.Violation))
        ///
        /// Required features: "android-os-strictmode-Violation"
        #[cfg(any(feature = "all", all(feature = "android-os-strictmode-Violation")))]
        pub fn onThreadViolation<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::strictmode::Violation>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/StrictMode$OnThreadViolationListener", java.flags == PUBLIC | ABSTRACT, .name == "onThreadViolation", .descriptor == "(Landroid/os/strictmode/Violation;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/StrictMode$OnThreadViolationListener\0", "onThreadViolation\0", "(Landroid/os/strictmode/Violation;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
