// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-Environment"))]
__jni_bindgen! {
    /// public class [Environment](https://developer.android.com/reference/android/os/Environment.html)
    ///
    /// Required feature: android-os-Environment
    public class Environment ("android/os/Environment") extends crate::java::lang::Object {

        /// [Environment](https://developer.android.com/reference/android/os/Environment.html#Environment())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::Environment>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/Environment\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRootDirectory](https://developer.android.com/reference/android/os/Environment.html#getRootDirectory())
        ///
        /// Required features: "java-io-File"
        #[cfg(any(feature = "all", all(feature = "java-io-File")))]
        pub fn getRootDirectory<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::File>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "getRootDirectory", .descriptor == "()Ljava/io/File;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "getRootDirectory\0", "()Ljava/io/File;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDataDirectory](https://developer.android.com/reference/android/os/Environment.html#getDataDirectory())
        ///
        /// Required features: "java-io-File"
        #[cfg(any(feature = "all", all(feature = "java-io-File")))]
        pub fn getDataDirectory<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::File>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "getDataDirectory", .descriptor == "()Ljava/io/File;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "getDataDirectory\0", "()Ljava/io/File;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExternalStorageDirectory](https://developer.android.com/reference/android/os/Environment.html#getExternalStorageDirectory())
        ///
        /// Required features: "java-io-File"
        #[cfg(any(feature = "all", all(feature = "java-io-File")))]
        #[deprecated] pub fn getExternalStorageDirectory<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::File>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "getExternalStorageDirectory", .descriptor == "()Ljava/io/File;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "getExternalStorageDirectory\0", "()Ljava/io/File;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExternalStoragePublicDirectory](https://developer.android.com/reference/android/os/Environment.html#getExternalStoragePublicDirectory(java.lang.String))
        ///
        /// Required features: "java-io-File", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-io-File", feature = "java-lang-String")))]
        #[deprecated] pub fn getExternalStoragePublicDirectory<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::File>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "getExternalStoragePublicDirectory", .descriptor == "(Ljava/lang/String;)Ljava/io/File;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "getExternalStoragePublicDirectory\0", "(Ljava/lang/String;)Ljava/io/File;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDownloadCacheDirectory](https://developer.android.com/reference/android/os/Environment.html#getDownloadCacheDirectory())
        ///
        /// Required features: "java-io-File"
        #[cfg(any(feature = "all", all(feature = "java-io-File")))]
        pub fn getDownloadCacheDirectory<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::File>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "getDownloadCacheDirectory", .descriptor == "()Ljava/io/File;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "getDownloadCacheDirectory\0", "()Ljava/io/File;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExternalStorageState](https://developer.android.com/reference/android/os/Environment.html#getExternalStorageState())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getExternalStorageState<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "getExternalStorageState", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "getExternalStorageState\0", "()Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStorageState](https://developer.android.com/reference/android/os/Environment.html#getStorageState(java.io.File))
        ///
        /// Required features: "java-io-File", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-io-File", feature = "java-lang-String")))]
        #[deprecated] pub fn getStorageState<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "getStorageState", .descriptor == "(Ljava/io/File;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "getStorageState\0", "(Ljava/io/File;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExternalStorageState](https://developer.android.com/reference/android/os/Environment.html#getExternalStorageState(java.io.File))
        ///
        /// Required features: "java-io-File", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-io-File", feature = "java-lang-String")))]
        pub fn getExternalStorageState_File<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "getExternalStorageState", .descriptor == "(Ljava/io/File;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "getExternalStorageState\0", "(Ljava/io/File;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isExternalStorageRemovable](https://developer.android.com/reference/android/os/Environment.html#isExternalStorageRemovable())
        pub fn isExternalStorageRemovable<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "isExternalStorageRemovable", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "isExternalStorageRemovable\0", "()Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isExternalStorageRemovable](https://developer.android.com/reference/android/os/Environment.html#isExternalStorageRemovable(java.io.File))
        ///
        /// Required features: "java-io-File"
        #[cfg(any(feature = "all", all(feature = "java-io-File")))]
        pub fn isExternalStorageRemovable_File<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "isExternalStorageRemovable", .descriptor == "(Ljava/io/File;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "isExternalStorageRemovable\0", "(Ljava/io/File;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isExternalStorageEmulated](https://developer.android.com/reference/android/os/Environment.html#isExternalStorageEmulated())
        pub fn isExternalStorageEmulated<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "isExternalStorageEmulated", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "isExternalStorageEmulated\0", "()Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isExternalStorageEmulated](https://developer.android.com/reference/android/os/Environment.html#isExternalStorageEmulated(java.io.File))
        ///
        /// Required features: "java-io-File"
        #[cfg(any(feature = "all", all(feature = "java-io-File")))]
        pub fn isExternalStorageEmulated_File<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "isExternalStorageEmulated", .descriptor == "(Ljava/io/File;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "isExternalStorageEmulated\0", "(Ljava/io/File;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isExternalStorageLegacy](https://developer.android.com/reference/android/os/Environment.html#isExternalStorageLegacy())
        pub fn isExternalStorageLegacy<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "isExternalStorageLegacy", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "isExternalStorageLegacy\0", "()Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isExternalStorageLegacy](https://developer.android.com/reference/android/os/Environment.html#isExternalStorageLegacy(java.io.File))
        ///
        /// Required features: "java-io-File"
        #[cfg(any(feature = "all", all(feature = "java-io-File")))]
        pub fn isExternalStorageLegacy_File<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::File>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Environment", java.flags == PUBLIC | STATIC, .name == "isExternalStorageLegacy", .descriptor == "(Ljava/io/File;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Environment\0", "isExternalStorageLegacy\0", "(Ljava/io/File;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static [DIRECTORY_ALARMS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_ALARMS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_ALARMS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_ALARMS\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_ALARMS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_ALARMS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_ALARMS<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_ALARMS\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_AUDIOBOOKS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_AUDIOBOOKS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_AUDIOBOOKS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_AUDIOBOOKS\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_AUDIOBOOKS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_AUDIOBOOKS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_AUDIOBOOKS<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_AUDIOBOOKS\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_DCIM](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DCIM)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_DCIM<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_DCIM\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_DCIM](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DCIM)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_DCIM<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_DCIM\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_DOCUMENTS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DOCUMENTS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_DOCUMENTS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_DOCUMENTS\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_DOCUMENTS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DOCUMENTS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_DOCUMENTS<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_DOCUMENTS\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_DOWNLOADS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DOWNLOADS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_DOWNLOADS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_DOWNLOADS\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_DOWNLOADS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DOWNLOADS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_DOWNLOADS<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_DOWNLOADS\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_MOVIES](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_MOVIES)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_MOVIES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_MOVIES\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_MOVIES](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_MOVIES)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_MOVIES<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_MOVIES\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_MUSIC](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_MUSIC)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_MUSIC<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_MUSIC\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_MUSIC](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_MUSIC)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_MUSIC<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_MUSIC\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_NOTIFICATIONS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_NOTIFICATIONS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_NOTIFICATIONS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_NOTIFICATIONS\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_NOTIFICATIONS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_NOTIFICATIONS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_NOTIFICATIONS<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_NOTIFICATIONS\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_PICTURES](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_PICTURES)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_PICTURES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_PICTURES\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_PICTURES](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_PICTURES)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_PICTURES<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_PICTURES\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_PODCASTS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_PODCASTS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_PODCASTS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_PODCASTS\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_PODCASTS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_PODCASTS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_PODCASTS<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_PODCASTS\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_RINGTONES](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_RINGTONES)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_RINGTONES<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_RINGTONES\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_RINGTONES](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_RINGTONES)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_RINGTONES<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_RINGTONES\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// **get** public static [DIRECTORY_SCREENSHOTS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_SCREENSHOTS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn DIRECTORY_SCREENSHOTS<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_SCREENSHOTS\0", "Ljava/lang/String;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **set** public static [DIRECTORY_SCREENSHOTS](https://developer.android.com/reference/android/os/Environment.html#DIRECTORY_SCREENSHOTS)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_DIRECTORY_SCREENSHOTS<'env, 'obj>(env: &'env __jni_bindgen::Env, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let (class, field) = env.require_class_static_field("android/os/Environment\0", "DIRECTORY_SCREENSHOTS\0", "Ljava/lang/String;\0");
                env.set_static_object_field(class, field, value)
            }
        }

        /// public static final [MEDIA_BAD_REMOVAL](https://developer.android.com/reference/android/os/Environment.html#MEDIA_BAD_REMOVAL)
        pub const MEDIA_BAD_REMOVAL : &'static str = "bad_removal";

        /// public static final [MEDIA_CHECKING](https://developer.android.com/reference/android/os/Environment.html#MEDIA_CHECKING)
        pub const MEDIA_CHECKING : &'static str = "checking";

        /// public static final [MEDIA_EJECTING](https://developer.android.com/reference/android/os/Environment.html#MEDIA_EJECTING)
        pub const MEDIA_EJECTING : &'static str = "ejecting";

        /// public static final [MEDIA_MOUNTED](https://developer.android.com/reference/android/os/Environment.html#MEDIA_MOUNTED)
        pub const MEDIA_MOUNTED : &'static str = "mounted";

        /// public static final [MEDIA_MOUNTED_READ_ONLY](https://developer.android.com/reference/android/os/Environment.html#MEDIA_MOUNTED_READ_ONLY)
        pub const MEDIA_MOUNTED_READ_ONLY : &'static str = "mounted_ro";

        /// public static final [MEDIA_NOFS](https://developer.android.com/reference/android/os/Environment.html#MEDIA_NOFS)
        pub const MEDIA_NOFS : &'static str = "nofs";

        /// public static final [MEDIA_REMOVED](https://developer.android.com/reference/android/os/Environment.html#MEDIA_REMOVED)
        pub const MEDIA_REMOVED : &'static str = "removed";

        /// public static final [MEDIA_SHARED](https://developer.android.com/reference/android/os/Environment.html#MEDIA_SHARED)
        pub const MEDIA_SHARED : &'static str = "shared";

        /// public static final [MEDIA_UNKNOWN](https://developer.android.com/reference/android/os/Environment.html#MEDIA_UNKNOWN)
        pub const MEDIA_UNKNOWN : &'static str = "unknown";

        /// public static final [MEDIA_UNMOUNTABLE](https://developer.android.com/reference/android/os/Environment.html#MEDIA_UNMOUNTABLE)
        pub const MEDIA_UNMOUNTABLE : &'static str = "unmountable";

        /// public static final [MEDIA_UNMOUNTED](https://developer.android.com/reference/android/os/Environment.html#MEDIA_UNMOUNTED)
        pub const MEDIA_UNMOUNTED : &'static str = "unmounted";
    }
}
