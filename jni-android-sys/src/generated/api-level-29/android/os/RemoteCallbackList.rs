// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-RemoteCallbackList"))]
__jni_bindgen! {
    /// public class [RemoteCallbackList](https://developer.android.com/reference/android/os/RemoteCallbackList.html)
    ///
    /// Required feature: android-os-RemoteCallbackList
    public class RemoteCallbackList ("android/os/RemoteCallbackList") extends crate::java::lang::Object {

        /// [RemoteCallbackList](https://developer.android.com/reference/android/os/RemoteCallbackList.html#RemoteCallbackList())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::RemoteCallbackList>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [register](https://developer.android.com/reference/android/os/RemoteCallbackList.html#register(android.os.IInterface))
        ///
        /// Required features: "android-os-IInterface"
        #[cfg(any(feature = "all", all(feature = "android-os-IInterface")))]
        pub fn register_IInterface<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::IInterface>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "register", .descriptor == "(Landroid/os/IInterface;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "register\0", "(Landroid/os/IInterface;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [register](https://developer.android.com/reference/android/os/RemoteCallbackList.html#register(android.os.IInterface,%20java.lang.Object))
        ///
        /// Required features: "android-os-IInterface", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "android-os-IInterface", feature = "java-lang-Object")))]
        pub fn register_IInterface_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::IInterface>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "register", .descriptor == "(Landroid/os/IInterface;Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "register\0", "(Landroid/os/IInterface;Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [unregister](https://developer.android.com/reference/android/os/RemoteCallbackList.html#unregister(android.os.IInterface))
        ///
        /// Required features: "android-os-IInterface"
        #[cfg(any(feature = "all", all(feature = "android-os-IInterface")))]
        pub fn unregister<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::IInterface>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "unregister", .descriptor == "(Landroid/os/IInterface;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "unregister\0", "(Landroid/os/IInterface;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [kill](https://developer.android.com/reference/android/os/RemoteCallbackList.html#kill())
        pub fn kill<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "kill", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "kill\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCallbackDied](https://developer.android.com/reference/android/os/RemoteCallbackList.html#onCallbackDied(android.os.IInterface))
        ///
        /// Required features: "android-os-IInterface"
        #[cfg(any(feature = "all", all(feature = "android-os-IInterface")))]
        pub fn onCallbackDied_IInterface<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::IInterface>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "onCallbackDied", .descriptor == "(Landroid/os/IInterface;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "onCallbackDied\0", "(Landroid/os/IInterface;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onCallbackDied](https://developer.android.com/reference/android/os/RemoteCallbackList.html#onCallbackDied(android.os.IInterface,%20java.lang.Object))
        ///
        /// Required features: "android-os-IInterface", "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "android-os-IInterface", feature = "java-lang-Object")))]
        pub fn onCallbackDied_IInterface_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::IInterface>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "onCallbackDied", .descriptor == "(Landroid/os/IInterface;Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "onCallbackDied\0", "(Landroid/os/IInterface;Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [beginBroadcast](https://developer.android.com/reference/android/os/RemoteCallbackList.html#beginBroadcast())
        pub fn beginBroadcast<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "beginBroadcast", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "beginBroadcast\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBroadcastItem](https://developer.android.com/reference/android/os/RemoteCallbackList.html#getBroadcastItem(int))
        ///
        /// Required features: "android-os-IInterface"
        #[cfg(any(feature = "all", all(feature = "android-os-IInterface")))]
        pub fn getBroadcastItem<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::IInterface>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "getBroadcastItem", .descriptor == "(I)Landroid/os/IInterface;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "getBroadcastItem\0", "(I)Landroid/os/IInterface;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBroadcastCookie](https://developer.android.com/reference/android/os/RemoteCallbackList.html#getBroadcastCookie(int))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn getBroadcastCookie<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "getBroadcastCookie", .descriptor == "(I)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "getBroadcastCookie\0", "(I)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [finishBroadcast](https://developer.android.com/reference/android/os/RemoteCallbackList.html#finishBroadcast())
        pub fn finishBroadcast<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "finishBroadcast", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "finishBroadcast\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRegisteredCallbackCount](https://developer.android.com/reference/android/os/RemoteCallbackList.html#getRegisteredCallbackCount())
        pub fn getRegisteredCallbackCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "getRegisteredCallbackCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "getRegisteredCallbackCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRegisteredCallbackItem](https://developer.android.com/reference/android/os/RemoteCallbackList.html#getRegisteredCallbackItem(int))
        ///
        /// Required features: "android-os-IInterface"
        #[cfg(any(feature = "all", all(feature = "android-os-IInterface")))]
        pub fn getRegisteredCallbackItem<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::IInterface>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "getRegisteredCallbackItem", .descriptor == "(I)Landroid/os/IInterface;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "getRegisteredCallbackItem\0", "(I)Landroid/os/IInterface;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRegisteredCallbackCookie](https://developer.android.com/reference/android/os/RemoteCallbackList.html#getRegisteredCallbackCookie(int))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn getRegisteredCallbackCookie<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/RemoteCallbackList", java.flags == PUBLIC, .name == "getRegisteredCallbackCookie", .descriptor == "(I)Ljava/lang/Object;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/RemoteCallbackList\0", "getRegisteredCallbackCookie\0", "(I)Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
