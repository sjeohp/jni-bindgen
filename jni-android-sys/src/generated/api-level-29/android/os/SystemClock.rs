// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-SystemClock"))]
__jni_bindgen! {
    /// public final class [SystemClock](https://developer.android.com/reference/android/os/SystemClock.html)
    ///
    /// Required feature: android-os-SystemClock
    public final class SystemClock ("android/os/SystemClock") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [SystemClock](https://developer.android.com/reference/android/os/SystemClock.html#SystemClock())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::SystemClock>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/os/SystemClock", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/SystemClock\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [sleep](https://developer.android.com/reference/android/os/SystemClock.html#sleep(long))
        pub fn sleep<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/SystemClock", java.flags == PUBLIC | STATIC, .name == "sleep", .descriptor == "(J)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/SystemClock\0", "sleep\0", "(J)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setCurrentTimeMillis](https://developer.android.com/reference/android/os/SystemClock.html#setCurrentTimeMillis(long))
        pub fn setCurrentTimeMillis<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i64) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/SystemClock", java.flags == PUBLIC | STATIC, .name == "setCurrentTimeMillis", .descriptor == "(J)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/SystemClock\0", "setCurrentTimeMillis\0", "(J)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [uptimeMillis](https://developer.android.com/reference/android/os/SystemClock.html#uptimeMillis())
        pub fn uptimeMillis<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/SystemClock", java.flags == PUBLIC | STATIC | NATIVE, .name == "uptimeMillis", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/SystemClock\0", "uptimeMillis\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [elapsedRealtime](https://developer.android.com/reference/android/os/SystemClock.html#elapsedRealtime())
        pub fn elapsedRealtime<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/SystemClock", java.flags == PUBLIC | STATIC | NATIVE, .name == "elapsedRealtime", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/SystemClock\0", "elapsedRealtime\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [elapsedRealtimeNanos](https://developer.android.com/reference/android/os/SystemClock.html#elapsedRealtimeNanos())
        pub fn elapsedRealtimeNanos<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/SystemClock", java.flags == PUBLIC | STATIC | NATIVE, .name == "elapsedRealtimeNanos", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/SystemClock\0", "elapsedRealtimeNanos\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [currentThreadTimeMillis](https://developer.android.com/reference/android/os/SystemClock.html#currentThreadTimeMillis())
        pub fn currentThreadTimeMillis<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/SystemClock", java.flags == PUBLIC | STATIC | NATIVE, .name == "currentThreadTimeMillis", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/SystemClock\0", "currentThreadTimeMillis\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [currentGnssTimeClock](https://developer.android.com/reference/android/os/SystemClock.html#currentGnssTimeClock())
        ///
        /// Required features: "java-time-Clock"
        #[cfg(any(feature = "all", all(feature = "java-time-Clock")))]
        pub fn currentGnssTimeClock<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::time::Clock>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/SystemClock", java.flags == PUBLIC | STATIC, .name == "currentGnssTimeClock", .descriptor == "()Ljava/time/Clock;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/SystemClock\0", "currentGnssTimeClock\0", "()Ljava/time/Clock;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
