// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-strictmode-InstanceCountViolation"))]
__jni_bindgen! {
    /// public class [InstanceCountViolation](https://developer.android.com/reference/android/os/strictmode/InstanceCountViolation.html)
    ///
    /// Required feature: android-os-strictmode-InstanceCountViolation
    public class InstanceCountViolation ("android/os/strictmode/InstanceCountViolation") extends crate::android::os::strictmode::Violation {

        // // Not emitting: Non-public method
        // /// [InstanceCountViolation](https://developer.android.com/reference/android/os/strictmode/InstanceCountViolation.html#InstanceCountViolation(java.lang.Class,%20long,%20int))
        // ///
        // /// Required features: "java-lang-Class"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Class")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>, arg1: i64, arg2: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::strictmode::InstanceCountViolation>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/os/strictmode/InstanceCountViolation", java.flags == (empty), .name == "<init>", .descriptor == "(Ljava/lang/Class;JI)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/strictmode/InstanceCountViolation\0", "<init>\0", "(Ljava/lang/Class;JI)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getNumberOfInstances](https://developer.android.com/reference/android/os/strictmode/InstanceCountViolation.html#getNumberOfInstances())
        pub fn getNumberOfInstances<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/strictmode/InstanceCountViolation", java.flags == PUBLIC, .name == "getNumberOfInstances", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/strictmode/InstanceCountViolation\0", "getNumberOfInstances\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
