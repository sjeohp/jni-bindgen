// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-Debug_InstructionCount"))]
__jni_bindgen! {
    /// public class [Debug.InstructionCount](https://developer.android.com/reference/android/os/Debug.InstructionCount.html)
    ///
    /// Required feature: android-os-Debug_InstructionCount
    #[deprecated] public class Debug_InstructionCount ("android/os/Debug$InstructionCount") extends crate::java::lang::Object {

        /// [InstructionCount](https://developer.android.com/reference/android/os/Debug.InstructionCount.html#InstructionCount())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::Debug_InstructionCount>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug$InstructionCount", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/Debug$InstructionCount\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetAndStart](https://developer.android.com/reference/android/os/Debug.InstructionCount.html#resetAndStart())
        #[deprecated] pub fn resetAndStart<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug$InstructionCount", java.flags == PUBLIC, .name == "resetAndStart", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/Debug$InstructionCount\0", "resetAndStart\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [collect](https://developer.android.com/reference/android/os/Debug.InstructionCount.html#collect())
        #[deprecated] pub fn collect<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug$InstructionCount", java.flags == PUBLIC, .name == "collect", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/Debug$InstructionCount\0", "collect\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [globalTotal](https://developer.android.com/reference/android/os/Debug.InstructionCount.html#globalTotal())
        #[deprecated] pub fn globalTotal<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug$InstructionCount", java.flags == PUBLIC, .name == "globalTotal", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/Debug$InstructionCount\0", "globalTotal\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [globalMethodInvocations](https://developer.android.com/reference/android/os/Debug.InstructionCount.html#globalMethodInvocations())
        #[deprecated] pub fn globalMethodInvocations<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug$InstructionCount", java.flags == PUBLIC, .name == "globalMethodInvocations", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/Debug$InstructionCount\0", "globalMethodInvocations\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
