// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-os-Debug"))]
__jni_bindgen! {
    /// public final class [Debug](https://developer.android.com/reference/android/os/Debug.html)
    ///
    /// Required feature: android-os-Debug
    public final class Debug ("android/os/Debug") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [Debug](https://developer.android.com/reference/android/os/Debug.html#Debug())
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::os::Debug>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/os/Debug", java.flags == (empty), .name == "<init>", .descriptor == "()V"
        //     unsafe {
        //         let __jni_args = [];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/os/Debug\0", "<init>\0", "()V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [waitForDebugger](https://developer.android.com/reference/android/os/Debug.html#waitForDebugger())
        pub fn waitForDebugger<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "waitForDebugger", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "waitForDebugger\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [waitingForDebugger](https://developer.android.com/reference/android/os/Debug.html#waitingForDebugger())
        pub fn waitingForDebugger<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "waitingForDebugger", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "waitingForDebugger\0", "()Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isDebuggerConnected](https://developer.android.com/reference/android/os/Debug.html#isDebuggerConnected())
        pub fn isDebuggerConnected<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "isDebuggerConnected", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "isDebuggerConnected\0", "()Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [changeDebugPort](https://developer.android.com/reference/android/os/Debug.html#changeDebugPort(int))
        #[deprecated] pub fn changeDebugPort<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "changeDebugPort", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "changeDebugPort\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startNativeTracing](https://developer.android.com/reference/android/os/Debug.html#startNativeTracing())
        pub fn startNativeTracing<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "startNativeTracing", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "startNativeTracing\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [stopNativeTracing](https://developer.android.com/reference/android/os/Debug.html#stopNativeTracing())
        pub fn stopNativeTracing<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "stopNativeTracing", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "stopNativeTracing\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [enableEmulatorTraceOutput](https://developer.android.com/reference/android/os/Debug.html#enableEmulatorTraceOutput())
        pub fn enableEmulatorTraceOutput<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "enableEmulatorTraceOutput", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "enableEmulatorTraceOutput\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startMethodTracing](https://developer.android.com/reference/android/os/Debug.html#startMethodTracing())
        pub fn startMethodTracing<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "startMethodTracing", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "startMethodTracing\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startMethodTracing](https://developer.android.com/reference/android/os/Debug.html#startMethodTracing(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn startMethodTracing_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "startMethodTracing", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "startMethodTracing\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startMethodTracing](https://developer.android.com/reference/android/os/Debug.html#startMethodTracing(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn startMethodTracing_String_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "startMethodTracing", .descriptor == "(Ljava/lang/String;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "startMethodTracing\0", "(Ljava/lang/String;I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startMethodTracing](https://developer.android.com/reference/android/os/Debug.html#startMethodTracing(java.lang.String,%20int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn startMethodTracing_String_int_int<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "startMethodTracing", .descriptor == "(Ljava/lang/String;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "startMethodTracing\0", "(Ljava/lang/String;II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startMethodTracingSampling](https://developer.android.com/reference/android/os/Debug.html#startMethodTracingSampling(java.lang.String,%20int,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn startMethodTracingSampling<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32, arg2: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "startMethodTracingSampling", .descriptor == "(Ljava/lang/String;II)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "startMethodTracingSampling\0", "(Ljava/lang/String;II)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [stopMethodTracing](https://developer.android.com/reference/android/os/Debug.html#stopMethodTracing())
        pub fn stopMethodTracing<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "stopMethodTracing", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "stopMethodTracing\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [threadCpuTimeNanos](https://developer.android.com/reference/android/os/Debug.html#threadCpuTimeNanos())
        pub fn threadCpuTimeNanos<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "threadCpuTimeNanos", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "threadCpuTimeNanos\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [startAllocCounting](https://developer.android.com/reference/android/os/Debug.html#startAllocCounting())
        #[deprecated] pub fn startAllocCounting<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "startAllocCounting", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "startAllocCounting\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [stopAllocCounting](https://developer.android.com/reference/android/os/Debug.html#stopAllocCounting())
        #[deprecated] pub fn stopAllocCounting<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "stopAllocCounting", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "stopAllocCounting\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalAllocCount](https://developer.android.com/reference/android/os/Debug.html#getGlobalAllocCount())
        #[deprecated] pub fn getGlobalAllocCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalAllocCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalAllocCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalAllocCount](https://developer.android.com/reference/android/os/Debug.html#resetGlobalAllocCount())
        #[deprecated] pub fn resetGlobalAllocCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalAllocCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalAllocCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalAllocSize](https://developer.android.com/reference/android/os/Debug.html#getGlobalAllocSize())
        #[deprecated] pub fn getGlobalAllocSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalAllocSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalAllocSize\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalAllocSize](https://developer.android.com/reference/android/os/Debug.html#resetGlobalAllocSize())
        #[deprecated] pub fn resetGlobalAllocSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalAllocSize", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalAllocSize\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalFreedCount](https://developer.android.com/reference/android/os/Debug.html#getGlobalFreedCount())
        #[deprecated] pub fn getGlobalFreedCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalFreedCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalFreedCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalFreedCount](https://developer.android.com/reference/android/os/Debug.html#resetGlobalFreedCount())
        #[deprecated] pub fn resetGlobalFreedCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalFreedCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalFreedCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalFreedSize](https://developer.android.com/reference/android/os/Debug.html#getGlobalFreedSize())
        #[deprecated] pub fn getGlobalFreedSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalFreedSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalFreedSize\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalFreedSize](https://developer.android.com/reference/android/os/Debug.html#resetGlobalFreedSize())
        #[deprecated] pub fn resetGlobalFreedSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalFreedSize", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalFreedSize\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalGcInvocationCount](https://developer.android.com/reference/android/os/Debug.html#getGlobalGcInvocationCount())
        #[deprecated] pub fn getGlobalGcInvocationCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalGcInvocationCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalGcInvocationCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalGcInvocationCount](https://developer.android.com/reference/android/os/Debug.html#resetGlobalGcInvocationCount())
        #[deprecated] pub fn resetGlobalGcInvocationCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalGcInvocationCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalGcInvocationCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalClassInitCount](https://developer.android.com/reference/android/os/Debug.html#getGlobalClassInitCount())
        #[deprecated] pub fn getGlobalClassInitCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalClassInitCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalClassInitCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalClassInitCount](https://developer.android.com/reference/android/os/Debug.html#resetGlobalClassInitCount())
        #[deprecated] pub fn resetGlobalClassInitCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalClassInitCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalClassInitCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalClassInitTime](https://developer.android.com/reference/android/os/Debug.html#getGlobalClassInitTime())
        #[deprecated] pub fn getGlobalClassInitTime<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalClassInitTime", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalClassInitTime\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalClassInitTime](https://developer.android.com/reference/android/os/Debug.html#resetGlobalClassInitTime())
        #[deprecated] pub fn resetGlobalClassInitTime<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalClassInitTime", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalClassInitTime\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalExternalAllocCount](https://developer.android.com/reference/android/os/Debug.html#getGlobalExternalAllocCount())
        #[deprecated] pub fn getGlobalExternalAllocCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalExternalAllocCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalExternalAllocCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalExternalAllocSize](https://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalAllocSize())
        #[deprecated] pub fn resetGlobalExternalAllocSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalExternalAllocSize", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalExternalAllocSize\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalExternalAllocCount](https://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalAllocCount())
        #[deprecated] pub fn resetGlobalExternalAllocCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalExternalAllocCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalExternalAllocCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalExternalAllocSize](https://developer.android.com/reference/android/os/Debug.html#getGlobalExternalAllocSize())
        #[deprecated] pub fn getGlobalExternalAllocSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalExternalAllocSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalExternalAllocSize\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalExternalFreedCount](https://developer.android.com/reference/android/os/Debug.html#getGlobalExternalFreedCount())
        #[deprecated] pub fn getGlobalExternalFreedCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalExternalFreedCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalExternalFreedCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalExternalFreedCount](https://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalFreedCount())
        #[deprecated] pub fn resetGlobalExternalFreedCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalExternalFreedCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalExternalFreedCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlobalExternalFreedSize](https://developer.android.com/reference/android/os/Debug.html#getGlobalExternalFreedSize())
        #[deprecated] pub fn getGlobalExternalFreedSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getGlobalExternalFreedSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getGlobalExternalFreedSize\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetGlobalExternalFreedSize](https://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalFreedSize())
        #[deprecated] pub fn resetGlobalExternalFreedSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetGlobalExternalFreedSize", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetGlobalExternalFreedSize\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThreadAllocCount](https://developer.android.com/reference/android/os/Debug.html#getThreadAllocCount())
        #[deprecated] pub fn getThreadAllocCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getThreadAllocCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getThreadAllocCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetThreadAllocCount](https://developer.android.com/reference/android/os/Debug.html#resetThreadAllocCount())
        #[deprecated] pub fn resetThreadAllocCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetThreadAllocCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetThreadAllocCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThreadAllocSize](https://developer.android.com/reference/android/os/Debug.html#getThreadAllocSize())
        #[deprecated] pub fn getThreadAllocSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getThreadAllocSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getThreadAllocSize\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetThreadAllocSize](https://developer.android.com/reference/android/os/Debug.html#resetThreadAllocSize())
        #[deprecated] pub fn resetThreadAllocSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetThreadAllocSize", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetThreadAllocSize\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThreadExternalAllocCount](https://developer.android.com/reference/android/os/Debug.html#getThreadExternalAllocCount())
        #[deprecated] pub fn getThreadExternalAllocCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getThreadExternalAllocCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getThreadExternalAllocCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetThreadExternalAllocCount](https://developer.android.com/reference/android/os/Debug.html#resetThreadExternalAllocCount())
        #[deprecated] pub fn resetThreadExternalAllocCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetThreadExternalAllocCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetThreadExternalAllocCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThreadExternalAllocSize](https://developer.android.com/reference/android/os/Debug.html#getThreadExternalAllocSize())
        #[deprecated] pub fn getThreadExternalAllocSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getThreadExternalAllocSize", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getThreadExternalAllocSize\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetThreadExternalAllocSize](https://developer.android.com/reference/android/os/Debug.html#resetThreadExternalAllocSize())
        #[deprecated] pub fn resetThreadExternalAllocSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetThreadExternalAllocSize", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetThreadExternalAllocSize\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getThreadGcInvocationCount](https://developer.android.com/reference/android/os/Debug.html#getThreadGcInvocationCount())
        #[deprecated] pub fn getThreadGcInvocationCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getThreadGcInvocationCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getThreadGcInvocationCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetThreadGcInvocationCount](https://developer.android.com/reference/android/os/Debug.html#resetThreadGcInvocationCount())
        #[deprecated] pub fn resetThreadGcInvocationCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetThreadGcInvocationCount", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetThreadGcInvocationCount\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resetAllCounts](https://developer.android.com/reference/android/os/Debug.html#resetAllCounts())
        #[deprecated] pub fn resetAllCounts<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "resetAllCounts", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "resetAllCounts\0", "()V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRuntimeStat](https://developer.android.com/reference/android/os/Debug.html#getRuntimeStat(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getRuntimeStat<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getRuntimeStat", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getRuntimeStat\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getRuntimeStats](https://developer.android.com/reference/android/os/Debug.html#getRuntimeStats())
        ///
        /// Required features: "java-util-Map"
        #[cfg(any(feature = "all", all(feature = "java-util-Map")))]
        pub fn getRuntimeStats<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Map>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getRuntimeStats", .descriptor == "()Ljava/util/Map;"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getRuntimeStats\0", "()Ljava/util/Map;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNativeHeapSize](https://developer.android.com/reference/android/os/Debug.html#getNativeHeapSize())
        pub fn getNativeHeapSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getNativeHeapSize", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getNativeHeapSize\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNativeHeapAllocatedSize](https://developer.android.com/reference/android/os/Debug.html#getNativeHeapAllocatedSize())
        pub fn getNativeHeapAllocatedSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getNativeHeapAllocatedSize", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getNativeHeapAllocatedSize\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getNativeHeapFreeSize](https://developer.android.com/reference/android/os/Debug.html#getNativeHeapFreeSize())
        pub fn getNativeHeapFreeSize<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getNativeHeapFreeSize", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getNativeHeapFreeSize\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getMemoryInfo](https://developer.android.com/reference/android/os/Debug.html#getMemoryInfo(android.os.Debug.MemoryInfo))
        ///
        /// Required features: "android-os-Debug_MemoryInfo"
        #[cfg(any(feature = "all", all(feature = "android-os-Debug_MemoryInfo")))]
        pub fn getMemoryInfo<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Debug_MemoryInfo>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getMemoryInfo", .descriptor == "(Landroid/os/Debug$MemoryInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getMemoryInfo\0", "(Landroid/os/Debug$MemoryInfo;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPss](https://developer.android.com/reference/android/os/Debug.html#getPss())
        pub fn getPss<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getPss", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getPss\0", "()J\0");
                __jni_env.call_static_long_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAllocationLimit](https://developer.android.com/reference/android/os/Debug.html#setAllocationLimit(int))
        #[deprecated] pub fn setAllocationLimit<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "setAllocationLimit", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "setAllocationLimit\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setGlobalAllocationLimit](https://developer.android.com/reference/android/os/Debug.html#setGlobalAllocationLimit(int))
        #[deprecated] pub fn setGlobalAllocationLimit<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "setGlobalAllocationLimit", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "setGlobalAllocationLimit\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [printLoadedClasses](https://developer.android.com/reference/android/os/Debug.html#printLoadedClasses(int))
        pub fn printLoadedClasses<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "printLoadedClasses", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "printLoadedClasses\0", "(I)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLoadedClassCount](https://developer.android.com/reference/android/os/Debug.html#getLoadedClassCount())
        pub fn getLoadedClassCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "getLoadedClassCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getLoadedClassCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dumpHprofData](https://developer.android.com/reference/android/os/Debug.html#dumpHprofData(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn dumpHprofData<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "dumpHprofData", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "dumpHprofData\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBinderSentTransactions](https://developer.android.com/reference/android/os/Debug.html#getBinderSentTransactions())
        pub fn getBinderSentTransactions<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getBinderSentTransactions", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getBinderSentTransactions\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBinderReceivedTransactions](https://developer.android.com/reference/android/os/Debug.html#getBinderReceivedTransactions())
        pub fn getBinderReceivedTransactions<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getBinderReceivedTransactions", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getBinderReceivedTransactions\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBinderLocalObjectCount](https://developer.android.com/reference/android/os/Debug.html#getBinderLocalObjectCount())
        pub fn getBinderLocalObjectCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getBinderLocalObjectCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getBinderLocalObjectCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBinderProxyObjectCount](https://developer.android.com/reference/android/os/Debug.html#getBinderProxyObjectCount())
        pub fn getBinderProxyObjectCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getBinderProxyObjectCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getBinderProxyObjectCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBinderDeathObjectCount](https://developer.android.com/reference/android/os/Debug.html#getBinderDeathObjectCount())
        pub fn getBinderDeathObjectCount<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC | NATIVE, .name == "getBinderDeathObjectCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "getBinderDeathObjectCount\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [dumpService](https://developer.android.com/reference/android/os/Debug.html#dumpService(java.lang.String,%20java.io.FileDescriptor,%20java.lang.String%5B%5D))
        ///
        /// Required features: "java-io-FileDescriptor", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-io-FileDescriptor", feature = "java-lang-String")))]
        pub fn dumpService<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::FileDescriptor>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "dumpService", .descriptor == "(Ljava/lang/String;Ljava/io/FileDescriptor;[Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "dumpService\0", "(Ljava/lang/String;Ljava/io/FileDescriptor;[Ljava/lang/String;)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [attachJvmtiAgent](https://developer.android.com/reference/android/os/Debug.html#attachJvmtiAgent(java.lang.String,%20java.lang.String,%20java.lang.ClassLoader))
        ///
        /// Required features: "java-lang-ClassLoader", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-ClassLoader", feature = "java-lang-String")))]
        pub fn attachJvmtiAgent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/os/Debug", java.flags == PUBLIC | STATIC, .name == "attachJvmtiAgent", .descriptor == "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/os/Debug\0", "attachJvmtiAgent\0", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)V\0");
                __jni_env.call_static_void_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [SHOW_CLASSLOADER](https://developer.android.com/reference/android/os/Debug.html#SHOW_CLASSLOADER)
        pub const SHOW_CLASSLOADER : i32 = 2;

        /// public static final [SHOW_FULL_DETAIL](https://developer.android.com/reference/android/os/Debug.html#SHOW_FULL_DETAIL)
        pub const SHOW_FULL_DETAIL : i32 = 1;

        /// public static final [SHOW_INITIALIZED](https://developer.android.com/reference/android/os/Debug.html#SHOW_INITIALIZED)
        pub const SHOW_INITIALIZED : i32 = 4;

        /// public static final [TRACE_COUNT_ALLOCS](https://developer.android.com/reference/android/os/Debug.html#TRACE_COUNT_ALLOCS)
        #[deprecated] pub const TRACE_COUNT_ALLOCS : i32 = 1;
    }
}
