// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-print-PrintJob"))]
__jni_bindgen! {
    /// public final class [PrintJob](https://developer.android.com/reference/android/print/PrintJob.html)
    ///
    /// Required feature: android-print-PrintJob
    public final class PrintJob ("android/print/PrintJob") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [PrintJob](https://developer.android.com/reference/android/print/PrintJob.html#PrintJob(android.print.PrintJobInfo,%20android.print.PrintManager))
        // ///
        // /// Required features: "android-print-PrintJobInfo", "android-print-PrintManager"
        // #[cfg(any(feature = "all", all(feature = "android-print-PrintJobInfo", feature = "android-print-PrintManager")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::print::PrintJobInfo>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::print::PrintManager>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::print::PrintJob>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/print/PrintJob", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/print/PrintJobInfo;Landroid/print/PrintManager;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "<init>\0", "(Landroid/print/PrintJobInfo;Landroid/print/PrintManager;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getId](https://developer.android.com/reference/android/print/PrintJob.html#getId())
        ///
        /// Required features: "android-print-PrintJobId"
        #[cfg(any(feature = "all", all(feature = "android-print-PrintJobId")))]
        pub fn getId<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::print::PrintJobId>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "getId", .descriptor == "()Landroid/print/PrintJobId;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "getId\0", "()Landroid/print/PrintJobId;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getInfo](https://developer.android.com/reference/android/print/PrintJob.html#getInfo())
        ///
        /// Required features: "android-print-PrintJobInfo"
        #[cfg(any(feature = "all", all(feature = "android-print-PrintJobInfo")))]
        pub fn getInfo<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::print::PrintJobInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "getInfo", .descriptor == "()Landroid/print/PrintJobInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "getInfo\0", "()Landroid/print/PrintJobInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cancel](https://developer.android.com/reference/android/print/PrintJob.html#cancel())
        pub fn cancel<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "cancel", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "cancel\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [restart](https://developer.android.com/reference/android/print/PrintJob.html#restart())
        pub fn restart<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "restart", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "restart\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isQueued](https://developer.android.com/reference/android/print/PrintJob.html#isQueued())
        pub fn isQueued<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "isQueued", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "isQueued\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isStarted](https://developer.android.com/reference/android/print/PrintJob.html#isStarted())
        pub fn isStarted<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "isStarted", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "isStarted\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isBlocked](https://developer.android.com/reference/android/print/PrintJob.html#isBlocked())
        pub fn isBlocked<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "isBlocked", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "isBlocked\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isCompleted](https://developer.android.com/reference/android/print/PrintJob.html#isCompleted())
        pub fn isCompleted<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "isCompleted", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "isCompleted\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isFailed](https://developer.android.com/reference/android/print/PrintJob.html#isFailed())
        pub fn isFailed<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "isFailed", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "isFailed\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isCancelled](https://developer.android.com/reference/android/print/PrintJob.html#isCancelled())
        pub fn isCancelled<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "isCancelled", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "isCancelled\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/print/PrintJob.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/print/PrintJob.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/print/PrintJob", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/print/PrintJob\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
