// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-SyncStats"))]
__jni_bindgen! {
    /// public class [SyncStats](https://developer.android.com/reference/android/content/SyncStats.html)
    ///
    /// Required feature: android-content-SyncStats
    public class SyncStats ("android/content/SyncStats") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [SyncStats](https://developer.android.com/reference/android/content/SyncStats.html#SyncStats())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::SyncStats>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncStats", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncStats\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [SyncStats](https://developer.android.com/reference/android/content/SyncStats.html#SyncStats(android.os.Parcel))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn new_Parcel<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::SyncStats>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncStats", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/os/Parcel;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncStats\0", "<init>\0", "(Landroid/os/Parcel;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/content/SyncStats.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncStats", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncStats\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clear](https://developer.android.com/reference/android/content/SyncStats.html#clear())
        pub fn clear<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncStats", java.flags == PUBLIC, .name == "clear", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncStats\0", "clear\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/content/SyncStats.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncStats", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncStats\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/content/SyncStats.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncStats", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncStats\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/content/SyncStats.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/content/SyncStats\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// **get** public [numAuthExceptions](https://developer.android.com/reference/android/content/SyncStats.html#numAuthExceptions)
        pub fn numAuthExceptions<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numAuthExceptions\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numAuthExceptions](https://developer.android.com/reference/android/content/SyncStats.html#numAuthExceptions)
        pub fn set_numAuthExceptions<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numAuthExceptions\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }

        /// **get** public [numConflictDetectedExceptions](https://developer.android.com/reference/android/content/SyncStats.html#numConflictDetectedExceptions)
        pub fn numConflictDetectedExceptions<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numConflictDetectedExceptions\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numConflictDetectedExceptions](https://developer.android.com/reference/android/content/SyncStats.html#numConflictDetectedExceptions)
        pub fn set_numConflictDetectedExceptions<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numConflictDetectedExceptions\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }

        /// **get** public [numDeletes](https://developer.android.com/reference/android/content/SyncStats.html#numDeletes)
        pub fn numDeletes<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numDeletes\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numDeletes](https://developer.android.com/reference/android/content/SyncStats.html#numDeletes)
        pub fn set_numDeletes<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numDeletes\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }

        /// **get** public [numEntries](https://developer.android.com/reference/android/content/SyncStats.html#numEntries)
        pub fn numEntries<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numEntries\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numEntries](https://developer.android.com/reference/android/content/SyncStats.html#numEntries)
        pub fn set_numEntries<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numEntries\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }

        /// **get** public [numInserts](https://developer.android.com/reference/android/content/SyncStats.html#numInserts)
        pub fn numInserts<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numInserts\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numInserts](https://developer.android.com/reference/android/content/SyncStats.html#numInserts)
        pub fn set_numInserts<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numInserts\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }

        /// **get** public [numIoExceptions](https://developer.android.com/reference/android/content/SyncStats.html#numIoExceptions)
        pub fn numIoExceptions<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numIoExceptions\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numIoExceptions](https://developer.android.com/reference/android/content/SyncStats.html#numIoExceptions)
        pub fn set_numIoExceptions<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numIoExceptions\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }

        /// **get** public [numParseExceptions](https://developer.android.com/reference/android/content/SyncStats.html#numParseExceptions)
        pub fn numParseExceptions<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numParseExceptions\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numParseExceptions](https://developer.android.com/reference/android/content/SyncStats.html#numParseExceptions)
        pub fn set_numParseExceptions<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numParseExceptions\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }

        /// **get** public [numSkippedEntries](https://developer.android.com/reference/android/content/SyncStats.html#numSkippedEntries)
        pub fn numSkippedEntries<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numSkippedEntries\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numSkippedEntries](https://developer.android.com/reference/android/content/SyncStats.html#numSkippedEntries)
        pub fn set_numSkippedEntries<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numSkippedEntries\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }

        /// **get** public [numUpdates](https://developer.android.com/reference/android/content/SyncStats.html#numUpdates)
        pub fn numUpdates<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numUpdates\0", "J\0");
                env.get_long_field(class, field)
            }
        }

        /// **set** public [numUpdates](https://developer.android.com/reference/android/content/SyncStats.html#numUpdates)
        pub fn set_numUpdates<'env>(&'env self, value: i64) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncStats\0", "numUpdates\0", "J\0");
                env.set_long_field(class, field, value)
            }
        }
    }
}
