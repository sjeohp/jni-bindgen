// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-SyncInfo"))]
__jni_bindgen! {
    /// public class [SyncInfo](https://developer.android.com/reference/android/content/SyncInfo.html)
    ///
    /// Required feature: android-content-SyncInfo
    public class SyncInfo ("android/content/SyncInfo") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [SyncInfo](https://developer.android.com/reference/android/content/SyncInfo.html#SyncInfo(android.content.SyncInfo))
        // ///
        // /// Required features: "android-content-SyncInfo"
        // #[cfg(any(feature = "all", all(feature = "android-content-SyncInfo")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::SyncInfo>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::SyncInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/content/SyncInfo", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/content/SyncInfo;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncInfo\0", "<init>\0", "(Landroid/content/SyncInfo;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [describeContents](https://developer.android.com/reference/android/content/SyncInfo.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncInfo", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncInfo\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/content/SyncInfo.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncInfo", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncInfo\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public final [account](https://developer.android.com/reference/android/content/SyncInfo.html#account)
        ///
        /// Required feature: android-accounts-Account
        #[cfg(any(feature = "all", feature = "android-accounts-Account"))]
        pub fn account<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::accounts::Account>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncInfo\0", "account\0", "Landroid/accounts/Account;\0");
                env.get_object_field(class, field)
            }
        }

        /// **get** public final [authority](https://developer.android.com/reference/android/content/SyncInfo.html#authority)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn authority<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncInfo\0", "authority\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **get** public final [startTime](https://developer.android.com/reference/android/content/SyncInfo.html#startTime)
        pub fn startTime<'env>(&'env self) -> i64 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/SyncInfo\0", "startTime\0", "J\0");
                env.get_long_field(class, field)
            }
        }
    }
}
