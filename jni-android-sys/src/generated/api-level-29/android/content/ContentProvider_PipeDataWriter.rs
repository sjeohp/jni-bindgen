// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-ContentProvider_PipeDataWriter"))]
__jni_bindgen! {
    /// public interface [ContentProvider.PipeDataWriter](https://developer.android.com/reference/android/content/ContentProvider.PipeDataWriter.html)
    ///
    /// Required feature: android-content-ContentProvider_PipeDataWriter
    public interface ContentProvider_PipeDataWriter ("android/content/ContentProvider$PipeDataWriter") extends crate::java::lang::Object {

        /// [writeDataToPipe](https://developer.android.com/reference/android/content/ContentProvider.PipeDataWriter.html#writeDataToPipe(android.os.ParcelFileDescriptor,%20android.net.Uri,%20java.lang.String,%20android.os.Bundle,%20java.lang.Object))
        ///
        /// Required features: "android-net-Uri", "android-os-Bundle", "android-os-ParcelFileDescriptor", "java-lang-Object", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri", feature = "android-os-Bundle", feature = "android-os-ParcelFileDescriptor", feature = "java-lang-Object", feature = "java-lang-String")))]
        pub fn writeDataToPipe<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelFileDescriptor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>, arg4: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/ContentProvider$PipeDataWriter", java.flags == PUBLIC | ABSTRACT, .name == "writeDataToPipe", .descriptor == "(Landroid/os/ParcelFileDescriptor;Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Ljava/lang/Object;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into()), __jni_bindgen::AsJValue::as_jvalue(&arg4.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/ContentProvider$PipeDataWriter\0", "writeDataToPipe\0", "(Landroid/os/ParcelFileDescriptor;Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Ljava/lang/Object;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
