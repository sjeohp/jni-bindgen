// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-ServiceConnection"))]
__jni_bindgen! {
    /// public interface [ServiceConnection](https://developer.android.com/reference/android/content/ServiceConnection.html)
    ///
    /// Required feature: android-content-ServiceConnection
    public interface ServiceConnection ("android/content/ServiceConnection") extends crate::java::lang::Object {

        /// [onServiceConnected](https://developer.android.com/reference/android/content/ServiceConnection.html#onServiceConnected(android.content.ComponentName,%20android.os.IBinder))
        ///
        /// Required features: "android-content-ComponentName", "android-os-IBinder"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName", feature = "android-os-IBinder")))]
        pub fn onServiceConnected<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ComponentName>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::IBinder>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/ServiceConnection", java.flags == PUBLIC | ABSTRACT, .name == "onServiceConnected", .descriptor == "(Landroid/content/ComponentName;Landroid/os/IBinder;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/ServiceConnection\0", "onServiceConnected\0", "(Landroid/content/ComponentName;Landroid/os/IBinder;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onServiceDisconnected](https://developer.android.com/reference/android/content/ServiceConnection.html#onServiceDisconnected(android.content.ComponentName))
        ///
        /// Required features: "android-content-ComponentName"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName")))]
        pub fn onServiceDisconnected<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ComponentName>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/ServiceConnection", java.flags == PUBLIC | ABSTRACT, .name == "onServiceDisconnected", .descriptor == "(Landroid/content/ComponentName;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/ServiceConnection\0", "onServiceDisconnected\0", "(Landroid/content/ComponentName;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onBindingDied](https://developer.android.com/reference/android/content/ServiceConnection.html#onBindingDied(android.content.ComponentName))
        ///
        /// Required features: "android-content-ComponentName"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName")))]
        pub fn onBindingDied<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ComponentName>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/ServiceConnection", java.flags == PUBLIC, .name == "onBindingDied", .descriptor == "(Landroid/content/ComponentName;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/ServiceConnection\0", "onBindingDied\0", "(Landroid/content/ComponentName;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [onNullBinding](https://developer.android.com/reference/android/content/ServiceConnection.html#onNullBinding(android.content.ComponentName))
        ///
        /// Required features: "android-content-ComponentName"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName")))]
        pub fn onNullBinding<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ComponentName>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/ServiceConnection", java.flags == PUBLIC, .name == "onNullBinding", .descriptor == "(Landroid/content/ComponentName;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/ServiceConnection\0", "onNullBinding\0", "(Landroid/content/ComponentName;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
