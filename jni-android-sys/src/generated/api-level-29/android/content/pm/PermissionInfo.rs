// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-pm-PermissionInfo"))]
__jni_bindgen! {
    /// public class [PermissionInfo](https://developer.android.com/reference/android/content/pm/PermissionInfo.html)
    ///
    /// Required feature: android-content-pm-PermissionInfo
    public class PermissionInfo ("android/content/pm/PermissionInfo") extends crate::android::content::pm::PackageItemInfo, implements crate::android::os::Parcelable {

        /// [PermissionInfo](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PermissionInfo())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::pm::PermissionInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/PermissionInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/PermissionInfo\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [PermissionInfo](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PermissionInfo(android.content.pm.PermissionInfo))
        ///
        /// Required features: "android-content-pm-PermissionInfo"
        #[cfg(any(feature = "all", all(feature = "android-content-pm-PermissionInfo")))]
        #[deprecated] pub fn new_PermissionInfo<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::pm::PermissionInfo>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::pm::PermissionInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/PermissionInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/pm/PermissionInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/PermissionInfo\0", "<init>\0", "(Landroid/content/pm/PermissionInfo;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [loadDescription](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#loadDescription(android.content.pm.PackageManager))
        ///
        /// Required features: "android-content-pm-PackageManager", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-content-pm-PackageManager", feature = "java-lang-CharSequence")))]
        pub fn loadDescription<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::pm::PackageManager>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/PermissionInfo", java.flags == PUBLIC, .name == "loadDescription", .descriptor == "(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/PermissionInfo\0", "loadDescription\0", "(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProtection](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#getProtection())
        pub fn getProtection<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/PermissionInfo", java.flags == PUBLIC, .name == "getProtection", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/PermissionInfo\0", "getProtection\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getProtectionFlags](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#getProtectionFlags())
        pub fn getProtectionFlags<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/PermissionInfo", java.flags == PUBLIC, .name == "getProtectionFlags", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/PermissionInfo\0", "getProtectionFlags\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/PermissionInfo", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/PermissionInfo\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/PermissionInfo", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/PermissionInfo\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/PermissionInfo", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/PermissionInfo\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/content/pm/PermissionInfo\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [FLAG_COSTS_MONEY](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#FLAG_COSTS_MONEY)
        pub const FLAG_COSTS_MONEY : i32 = 1;

        /// public static final [FLAG_HARD_RESTRICTED](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#FLAG_HARD_RESTRICTED)
        pub const FLAG_HARD_RESTRICTED : i32 = 4;

        /// public static final [FLAG_IMMUTABLY_RESTRICTED](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#FLAG_IMMUTABLY_RESTRICTED)
        pub const FLAG_IMMUTABLY_RESTRICTED : i32 = 16;

        /// public static final [FLAG_INSTALLED](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#FLAG_INSTALLED)
        pub const FLAG_INSTALLED : i32 = 1073741824;

        /// public static final [FLAG_SOFT_RESTRICTED](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#FLAG_SOFT_RESTRICTED)
        pub const FLAG_SOFT_RESTRICTED : i32 = 8;

        /// public static final [PROTECTION_DANGEROUS](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_DANGEROUS)
        pub const PROTECTION_DANGEROUS : i32 = 1;

        /// public static final [PROTECTION_FLAG_APPOP](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_APPOP)
        pub const PROTECTION_FLAG_APPOP : i32 = 64;

        /// public static final [PROTECTION_FLAG_DEVELOPMENT](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_DEVELOPMENT)
        pub const PROTECTION_FLAG_DEVELOPMENT : i32 = 32;

        /// public static final [PROTECTION_FLAG_INSTALLER](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_INSTALLER)
        pub const PROTECTION_FLAG_INSTALLER : i32 = 256;

        /// public static final [PROTECTION_FLAG_INSTANT](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_INSTANT)
        pub const PROTECTION_FLAG_INSTANT : i32 = 4096;

        /// public static final [PROTECTION_FLAG_PRE23](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_PRE23)
        pub const PROTECTION_FLAG_PRE23 : i32 = 128;

        /// public static final [PROTECTION_FLAG_PREINSTALLED](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_PREINSTALLED)
        pub const PROTECTION_FLAG_PREINSTALLED : i32 = 1024;

        /// public static final [PROTECTION_FLAG_PRIVILEGED](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_PRIVILEGED)
        pub const PROTECTION_FLAG_PRIVILEGED : i32 = 16;

        /// public static final [PROTECTION_FLAG_RUNTIME_ONLY](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_RUNTIME_ONLY)
        pub const PROTECTION_FLAG_RUNTIME_ONLY : i32 = 8192;

        /// public static final [PROTECTION_FLAG_SETUP](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_SETUP)
        pub const PROTECTION_FLAG_SETUP : i32 = 2048;

        /// public static final [PROTECTION_FLAG_SYSTEM](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_SYSTEM)
        #[deprecated] pub const PROTECTION_FLAG_SYSTEM : i32 = 16;

        /// public static final [PROTECTION_FLAG_VERIFIER](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_FLAG_VERIFIER)
        pub const PROTECTION_FLAG_VERIFIER : i32 = 512;

        /// public static final [PROTECTION_MASK_BASE](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_MASK_BASE)
        #[deprecated] pub const PROTECTION_MASK_BASE : i32 = 15;

        /// public static final [PROTECTION_MASK_FLAGS](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_MASK_FLAGS)
        #[deprecated] pub const PROTECTION_MASK_FLAGS : i32 = 65520;

        /// public static final [PROTECTION_NORMAL](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_NORMAL)
        pub const PROTECTION_NORMAL : i32 = 0;

        /// public static final [PROTECTION_SIGNATURE](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_SIGNATURE)
        pub const PROTECTION_SIGNATURE : i32 = 2;

        /// public static final [PROTECTION_SIGNATURE_OR_SYSTEM](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#PROTECTION_SIGNATURE_OR_SYSTEM)
        #[deprecated] pub const PROTECTION_SIGNATURE_OR_SYSTEM : i32 = 3;

        /// **get** public [descriptionRes](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#descriptionRes)
        pub fn descriptionRes<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "descriptionRes\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [descriptionRes](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#descriptionRes)
        pub fn set_descriptionRes<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "descriptionRes\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [flags](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#flags)
        pub fn flags<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "flags\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [flags](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#flags)
        pub fn set_flags<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "flags\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [group](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#group)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn group<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "group\0", "Ljava/lang/String;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [group](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#group)
        ///
        /// Required feature: java-lang-String
        #[cfg(any(feature = "all", feature = "java-lang-String"))]
        pub fn set_group<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::String>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "group\0", "Ljava/lang/String;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [nonLocalizedDescription](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#nonLocalizedDescription)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn nonLocalizedDescription<'env>(&'env self) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>> {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "nonLocalizedDescription\0", "Ljava/lang/CharSequence;\0");
                env.get_object_field(class, field)
            }
        }

        /// **set** public [nonLocalizedDescription](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#nonLocalizedDescription)
        ///
        /// Required feature: java-lang-CharSequence
        #[cfg(any(feature = "all", feature = "java-lang-CharSequence"))]
        pub fn set_nonLocalizedDescription<'env, 'obj>(&'env self, value: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'obj crate::java::lang::CharSequence>>) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "nonLocalizedDescription\0", "Ljava/lang/CharSequence;\0");
                env.set_object_field(class, field, value)
            }
        }

        /// **get** public [protectionLevel](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#protectionLevel)
        #[deprecated] pub fn protectionLevel<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "protectionLevel\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [protectionLevel](https://developer.android.com/reference/android/content/pm/PermissionInfo.html#protectionLevel)
        #[deprecated] pub fn set_protectionLevel<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/PermissionInfo\0", "protectionLevel\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }
    }
}
