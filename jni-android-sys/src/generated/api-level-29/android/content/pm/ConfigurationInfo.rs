// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-pm-ConfigurationInfo"))]
__jni_bindgen! {
    /// public class [ConfigurationInfo](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html)
    ///
    /// Required feature: android-content-pm-ConfigurationInfo
    public class ConfigurationInfo ("android/content/pm/ConfigurationInfo") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        /// [ConfigurationInfo](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#ConfigurationInfo())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::pm::ConfigurationInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/ConfigurationInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/ConfigurationInfo\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ConfigurationInfo](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#ConfigurationInfo(android.content.pm.ConfigurationInfo))
        ///
        /// Required features: "android-content-pm-ConfigurationInfo"
        #[cfg(any(feature = "all", all(feature = "android-content-pm-ConfigurationInfo")))]
        pub fn new_ConfigurationInfo<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::pm::ConfigurationInfo>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::pm::ConfigurationInfo>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/ConfigurationInfo", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/pm/ConfigurationInfo;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/ConfigurationInfo\0", "<init>\0", "(Landroid/content/pm/ConfigurationInfo;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/ConfigurationInfo", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/ConfigurationInfo\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/ConfigurationInfo", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/ConfigurationInfo\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/ConfigurationInfo", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/ConfigurationInfo\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getGlEsVersion](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#getGlEsVersion())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getGlEsVersion<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/ConfigurationInfo", java.flags == PUBLIC, .name == "getGlEsVersion", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/ConfigurationInfo\0", "getGlEsVersion\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/content/pm/ConfigurationInfo\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [GL_ES_VERSION_UNDEFINED](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#GL_ES_VERSION_UNDEFINED)
        pub const GL_ES_VERSION_UNDEFINED : i32 = 0;

        /// public static final [INPUT_FEATURE_FIVE_WAY_NAV](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#INPUT_FEATURE_FIVE_WAY_NAV)
        pub const INPUT_FEATURE_FIVE_WAY_NAV : i32 = 2;

        /// public static final [INPUT_FEATURE_HARD_KEYBOARD](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#INPUT_FEATURE_HARD_KEYBOARD)
        pub const INPUT_FEATURE_HARD_KEYBOARD : i32 = 1;

        /// **get** public [reqGlEsVersion](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqGlEsVersion)
        pub fn reqGlEsVersion<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqGlEsVersion\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [reqGlEsVersion](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqGlEsVersion)
        pub fn set_reqGlEsVersion<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqGlEsVersion\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [reqInputFeatures](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqInputFeatures)
        pub fn reqInputFeatures<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqInputFeatures\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [reqInputFeatures](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqInputFeatures)
        pub fn set_reqInputFeatures<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqInputFeatures\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [reqKeyboardType](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqKeyboardType)
        pub fn reqKeyboardType<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqKeyboardType\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [reqKeyboardType](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqKeyboardType)
        pub fn set_reqKeyboardType<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqKeyboardType\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [reqNavigation](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqNavigation)
        pub fn reqNavigation<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqNavigation\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [reqNavigation](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqNavigation)
        pub fn set_reqNavigation<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqNavigation\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [reqTouchScreen](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqTouchScreen)
        pub fn reqTouchScreen<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqTouchScreen\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [reqTouchScreen](https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html#reqTouchScreen)
        pub fn set_reqTouchScreen<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/content/pm/ConfigurationInfo\0", "reqTouchScreen\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }
    }
}
