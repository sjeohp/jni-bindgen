// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-pm-LauncherApps_PinItemRequest"))]
__jni_bindgen! {
    /// public final class [LauncherApps.PinItemRequest](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html)
    ///
    /// Required feature: android-content-pm-LauncherApps_PinItemRequest
    public final class LauncherApps_PinItemRequest ("android/content/pm/LauncherApps$PinItemRequest") extends crate::java::lang::Object, implements crate::android::os::Parcelable {

        // // Not emitting: Non-public method
        // /// [PinItemRequest](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#PinItemRequest(android.os.Parcel))
        // ///
        // /// Required features: "android-os-Parcel"
        // #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::pm::LauncherApps_PinItemRequest>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/os/Parcel;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "<init>\0", "(Landroid/os/Parcel;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [getRequestType](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#getRequestType())
        pub fn getRequestType<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "getRequestType", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "getRequestType\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getShortcutInfo](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#getShortcutInfo())
        ///
        /// Required features: "android-content-pm-ShortcutInfo"
        #[cfg(any(feature = "all", all(feature = "android-content-pm-ShortcutInfo")))]
        pub fn getShortcutInfo<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::pm::ShortcutInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "getShortcutInfo", .descriptor == "()Landroid/content/pm/ShortcutInfo;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "getShortcutInfo\0", "()Landroid/content/pm/ShortcutInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAppWidgetProviderInfo](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#getAppWidgetProviderInfo(android.content.Context))
        ///
        /// Required features: "android-appwidget-AppWidgetProviderInfo", "android-content-Context"
        #[cfg(any(feature = "all", all(feature = "android-appwidget-AppWidgetProviderInfo", feature = "android-content-Context")))]
        pub fn getAppWidgetProviderInfo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::appwidget::AppWidgetProviderInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "getAppWidgetProviderInfo", .descriptor == "(Landroid/content/Context;)Landroid/appwidget/AppWidgetProviderInfo;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "getAppWidgetProviderInfo\0", "(Landroid/content/Context;)Landroid/appwidget/AppWidgetProviderInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtras](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#getExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "getExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "getExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isValid](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#isValid())
        pub fn isValid<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "isValid", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "isValid\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [accept](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#accept(android.os.Bundle))
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn accept_Bundle<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "accept", .descriptor == "(Landroid/os/Bundle;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "accept\0", "(Landroid/os/Bundle;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [accept](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#accept())
        pub fn accept<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "accept", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "accept\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/pm/LauncherApps$PinItemRequest", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/pm/LauncherApps$PinItemRequest\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/content/pm/LauncherApps$PinItemRequest\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [REQUEST_TYPE_APPWIDGET](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#REQUEST_TYPE_APPWIDGET)
        pub const REQUEST_TYPE_APPWIDGET : i32 = 2;

        /// public static final [REQUEST_TYPE_SHORTCUT](https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#REQUEST_TYPE_SHORTCUT)
        pub const REQUEST_TYPE_SHORTCUT : i32 = 1;
    }
}
