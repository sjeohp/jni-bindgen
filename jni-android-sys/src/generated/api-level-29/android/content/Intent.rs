// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-Intent"))]
__jni_bindgen! {
    /// public class [Intent](https://developer.android.com/reference/android/content/Intent.html)
    ///
    /// Required feature: android-content-Intent
    public class Intent ("android/content/Intent") extends crate::java::lang::Object, implements crate::android::os::Parcelable, crate::java::lang::Cloneable {

        /// [Intent](https://developer.android.com/reference/android/content/Intent.html#Intent())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::Intent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Intent](https://developer.android.com/reference/android/content/Intent.html#Intent(android.content.Intent))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn new_Intent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::Intent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Intent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "<init>\0", "(Landroid/content/Intent;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Intent](https://developer.android.com/reference/android/content/Intent.html#Intent(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::Intent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Intent](https://developer.android.com/reference/android/content/Intent.html#Intent(java.lang.String,%20android.net.Uri))
        ///
        /// Required features: "android-net-Uri", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri", feature = "java-lang-String")))]
        pub fn new_String_Uri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::Intent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Landroid/net/Uri;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "<init>\0", "(Ljava/lang/String;Landroid/net/Uri;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Intent](https://developer.android.com/reference/android/content/Intent.html#Intent(android.content.Context,%20java.lang.Class))
        ///
        /// Required features: "android-content-Context", "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-lang-Class")))]
        pub fn new_Context_Class<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::Intent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Landroid/content/Context;Ljava/lang/Class;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "<init>\0", "(Landroid/content/Context;Ljava/lang/Class;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Intent](https://developer.android.com/reference/android/content/Intent.html#Intent(java.lang.String,%20android.net.Uri,%20android.content.Context,%20java.lang.Class))
        ///
        /// Required features: "android-content-Context", "android-net-Uri", "java-lang-Class", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-net-Uri", feature = "java-lang-Class", feature = "java-lang-String")))]
        pub fn new_String_Uri_Context_Class<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg3: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::Intent>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;Landroid/net/Uri;Landroid/content/Context;Ljava/lang/Class;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into()), __jni_bindgen::AsJValue::as_jvalue(&arg3.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "<init>\0", "(Ljava/lang/String;Landroid/net/Uri;Landroid/content/Context;Ljava/lang/Class;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createChooser](https://developer.android.com/reference/android/content/Intent.html#createChooser(android.content.Intent,%20java.lang.CharSequence))
        ///
        /// Required features: "android-content-Intent", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-CharSequence")))]
        pub fn createChooser_Intent_CharSequence<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "createChooser", .descriptor == "(Landroid/content/Intent;Ljava/lang/CharSequence;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "createChooser\0", "(Landroid/content/Intent;Ljava/lang/CharSequence;)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createChooser](https://developer.android.com/reference/android/content/Intent.html#createChooser(android.content.Intent,%20java.lang.CharSequence,%20android.content.IntentSender))
        ///
        /// Required features: "android-content-Intent", "android-content-IntentSender", "java-lang-CharSequence"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-content-IntentSender", feature = "java-lang-CharSequence")))]
        pub fn createChooser_Intent_CharSequence_IntentSender<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::IntentSender>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "createChooser", .descriptor == "(Landroid/content/Intent;Ljava/lang/CharSequence;Landroid/content/IntentSender;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "createChooser\0", "(Landroid/content/Intent;Ljava/lang/CharSequence;Landroid/content/IntentSender;)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [clone](https://developer.android.com/reference/android/content/Intent.html#clone())
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn clone<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::Object>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "clone", .descriptor == "()Ljava/lang/Object;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "clone\0", "()Ljava/lang/Object;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [cloneFilter](https://developer.android.com/reference/android/content/Intent.html#cloneFilter())
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn cloneFilter<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "cloneFilter", .descriptor == "()Landroid/content/Intent;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "cloneFilter\0", "()Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [makeMainActivity](https://developer.android.com/reference/android/content/Intent.html#makeMainActivity(android.content.ComponentName))
        ///
        /// Required features: "android-content-ComponentName", "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName", feature = "android-content-Intent")))]
        pub fn makeMainActivity<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ComponentName>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "makeMainActivity", .descriptor == "(Landroid/content/ComponentName;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "makeMainActivity\0", "(Landroid/content/ComponentName;)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [makeMainSelectorActivity](https://developer.android.com/reference/android/content/Intent.html#makeMainSelectorActivity(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn makeMainSelectorActivity<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "makeMainSelectorActivity", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "makeMainSelectorActivity\0", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [makeRestartActivityTask](https://developer.android.com/reference/android/content/Intent.html#makeRestartActivityTask(android.content.ComponentName))
        ///
        /// Required features: "android-content-ComponentName", "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName", feature = "android-content-Intent")))]
        pub fn makeRestartActivityTask<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ComponentName>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "makeRestartActivityTask", .descriptor == "(Landroid/content/ComponentName;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "makeRestartActivityTask\0", "(Landroid/content/ComponentName;)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntent](https://developer.android.com/reference/android/content/Intent.html#getIntent(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        #[deprecated] pub fn getIntent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "getIntent", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "getIntent\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseUri](https://developer.android.com/reference/android/content/Intent.html#parseUri(java.lang.String,%20int))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn parseUri<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "parseUri", .descriptor == "(Ljava/lang/String;I)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "parseUri\0", "(Ljava/lang/String;I)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntentOld](https://developer.android.com/reference/android/content/Intent.html#getIntentOld(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn getIntentOld<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "getIntentOld", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "getIntentOld\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAction](https://developer.android.com/reference/android/content/Intent.html#getAction())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getAction<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getAction", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getAction\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getData](https://developer.android.com/reference/android/content/Intent.html#getData())
        ///
        /// Required features: "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-net-Uri")))]
        pub fn getData<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::net::Uri>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getData", .descriptor == "()Landroid/net/Uri;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getData\0", "()Landroid/net/Uri;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDataString](https://developer.android.com/reference/android/content/Intent.html#getDataString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDataString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getDataString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getDataString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getScheme](https://developer.android.com/reference/android/content/Intent.html#getScheme())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getScheme<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getScheme", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getScheme\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getType](https://developer.android.com/reference/android/content/Intent.html#getType())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getType<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getType", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getType\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resolveType](https://developer.android.com/reference/android/content/Intent.html#resolveType(android.content.Context))
        ///
        /// Required features: "android-content-Context", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "java-lang-String")))]
        pub fn resolveType_Context<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "resolveType", .descriptor == "(Landroid/content/Context;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "resolveType\0", "(Landroid/content/Context;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resolveType](https://developer.android.com/reference/android/content/Intent.html#resolveType(android.content.ContentResolver))
        ///
        /// Required features: "android-content-ContentResolver", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "java-lang-String")))]
        pub fn resolveType_ContentResolver<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "resolveType", .descriptor == "(Landroid/content/ContentResolver;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "resolveType\0", "(Landroid/content/ContentResolver;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resolveTypeIfNeeded](https://developer.android.com/reference/android/content/Intent.html#resolveTypeIfNeeded(android.content.ContentResolver))
        ///
        /// Required features: "android-content-ContentResolver", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-ContentResolver", feature = "java-lang-String")))]
        pub fn resolveTypeIfNeeded<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ContentResolver>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "resolveTypeIfNeeded", .descriptor == "(Landroid/content/ContentResolver;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "resolveTypeIfNeeded\0", "(Landroid/content/ContentResolver;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIdentifier](https://developer.android.com/reference/android/content/Intent.html#getIdentifier())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getIdentifier<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getIdentifier", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getIdentifier\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasCategory](https://developer.android.com/reference/android/content/Intent.html#hasCategory(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn hasCategory<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "hasCategory", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "hasCategory\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCategories](https://developer.android.com/reference/android/content/Intent.html#getCategories())
        ///
        /// Required features: "java-util-Set"
        #[cfg(any(feature = "all", all(feature = "java-util-Set")))]
        pub fn getCategories<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::Set>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getCategories", .descriptor == "()Ljava/util/Set;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getCategories\0", "()Ljava/util/Set;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSelector](https://developer.android.com/reference/android/content/Intent.html#getSelector())
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn getSelector<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getSelector", .descriptor == "()Landroid/content/Intent;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getSelector\0", "()Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getClipData](https://developer.android.com/reference/android/content/Intent.html#getClipData())
        ///
        /// Required features: "android-content-ClipData"
        #[cfg(any(feature = "all", all(feature = "android-content-ClipData")))]
        pub fn getClipData<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ClipData>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getClipData", .descriptor == "()Landroid/content/ClipData;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getClipData\0", "()Landroid/content/ClipData;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExtrasClassLoader](https://developer.android.com/reference/android/content/Intent.html#setExtrasClassLoader(java.lang.ClassLoader))
        ///
        /// Required features: "java-lang-ClassLoader"
        #[cfg(any(feature = "all", all(feature = "java-lang-ClassLoader")))]
        pub fn setExtrasClassLoader<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::ClassLoader>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setExtrasClassLoader", .descriptor == "(Ljava/lang/ClassLoader;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setExtrasClassLoader\0", "(Ljava/lang/ClassLoader;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasExtra](https://developer.android.com/reference/android/content/Intent.html#hasExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn hasExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "hasExtra", .descriptor == "(Ljava/lang/String;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "hasExtra\0", "(Ljava/lang/String;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hasFileDescriptors](https://developer.android.com/reference/android/content/Intent.html#hasFileDescriptors())
        pub fn hasFileDescriptors<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "hasFileDescriptors", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "hasFileDescriptors\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBooleanExtra](https://developer.android.com/reference/android/content/Intent.html#getBooleanExtra(java.lang.String,%20boolean))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getBooleanExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getBooleanExtra", .descriptor == "(Ljava/lang/String;Z)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getBooleanExtra\0", "(Ljava/lang/String;Z)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getByteExtra](https://developer.android.com/reference/android/content/Intent.html#getByteExtra(java.lang.String,%20byte))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getByteExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i8) -> __jni_bindgen::std::result::Result<i8, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getByteExtra", .descriptor == "(Ljava/lang/String;B)B"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getByteExtra\0", "(Ljava/lang/String;B)B\0");
                __jni_env.call_byte_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getShortExtra](https://developer.android.com/reference/android/content/Intent.html#getShortExtra(java.lang.String,%20short))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getShortExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getShortExtra", .descriptor == "(Ljava/lang/String;S)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getShortExtra\0", "(Ljava/lang/String;S)S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharExtra](https://developer.android.com/reference/android/content/Intent.html#getCharExtra(java.lang.String,%20char))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCharExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<__jni_bindgen::jchar, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getCharExtra", .descriptor == "(Ljava/lang/String;C)C"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getCharExtra\0", "(Ljava/lang/String;C)C\0");
                __jni_env.call_char_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntExtra](https://developer.android.com/reference/android/content/Intent.html#getIntExtra(java.lang.String,%20int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getIntExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getIntExtra", .descriptor == "(Ljava/lang/String;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getIntExtra\0", "(Ljava/lang/String;I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLongExtra](https://developer.android.com/reference/android/content/Intent.html#getLongExtra(java.lang.String,%20long))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getLongExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i64) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getLongExtra", .descriptor == "(Ljava/lang/String;J)J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getLongExtra\0", "(Ljava/lang/String;J)J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFloatExtra](https://developer.android.com/reference/android/content/Intent.html#getFloatExtra(java.lang.String,%20float))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getFloatExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: f32) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getFloatExtra", .descriptor == "(Ljava/lang/String;F)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getFloatExtra\0", "(Ljava/lang/String;F)F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDoubleExtra](https://developer.android.com/reference/android/content/Intent.html#getDoubleExtra(java.lang.String,%20double))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDoubleExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: f64) -> __jni_bindgen::std::result::Result<f64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getDoubleExtra", .descriptor == "(Ljava/lang/String;D)D"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getDoubleExtra\0", "(Ljava/lang/String;D)D\0");
                __jni_env.call_double_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStringExtra](https://developer.android.com/reference/android/content/Intent.html#getStringExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getStringExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getStringExtra", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getStringExtra\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharSequenceExtra](https://developer.android.com/reference/android/content/Intent.html#getCharSequenceExtra(java.lang.String))
        ///
        /// Required features: "java-lang-CharSequence", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence", feature = "java-lang-String")))]
        pub fn getCharSequenceExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::CharSequence>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getCharSequenceExtra", .descriptor == "(Ljava/lang/String;)Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getCharSequenceExtra\0", "(Ljava/lang/String;)Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getParcelableExtra](https://developer.android.com/reference/android/content/Intent.html#getParcelableExtra(java.lang.String))
        ///
        /// Required features: "android-os-Parcelable", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcelable", feature = "java-lang-String")))]
        pub fn getParcelableExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getParcelableExtra", .descriptor == "(Ljava/lang/String;)Landroid/os/Parcelable;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getParcelableExtra\0", "(Ljava/lang/String;)Landroid/os/Parcelable;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getParcelableArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getParcelableArrayExtra(java.lang.String))
        ///
        /// Required features: "android-os-Parcelable", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcelable", feature = "java-lang-String")))]
        pub fn getParcelableArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::android::os::Parcelable, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getParcelableArrayExtra", .descriptor == "(Ljava/lang/String;)[Landroid/os/Parcelable;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getParcelableArrayExtra\0", "(Ljava/lang/String;)[Landroid/os/Parcelable;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getParcelableArrayListExtra](https://developer.android.com/reference/android/content/Intent.html#getParcelableArrayListExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-ArrayList"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-ArrayList")))]
        pub fn getParcelableArrayListExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::ArrayList>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getParcelableArrayListExtra", .descriptor == "(Ljava/lang/String;)Ljava/util/ArrayList;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getParcelableArrayListExtra\0", "(Ljava/lang/String;)Ljava/util/ArrayList;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSerializableExtra](https://developer.android.com/reference/android/content/Intent.html#getSerializableExtra(java.lang.String))
        ///
        /// Required features: "java-io-Serializable", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-io-Serializable", feature = "java-lang-String")))]
        pub fn getSerializableExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::io::Serializable>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getSerializableExtra", .descriptor == "(Ljava/lang/String;)Ljava/io/Serializable;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getSerializableExtra\0", "(Ljava/lang/String;)Ljava/io/Serializable;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntegerArrayListExtra](https://developer.android.com/reference/android/content/Intent.html#getIntegerArrayListExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-ArrayList"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-ArrayList")))]
        pub fn getIntegerArrayListExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::ArrayList>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getIntegerArrayListExtra", .descriptor == "(Ljava/lang/String;)Ljava/util/ArrayList;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getIntegerArrayListExtra\0", "(Ljava/lang/String;)Ljava/util/ArrayList;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStringArrayListExtra](https://developer.android.com/reference/android/content/Intent.html#getStringArrayListExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-ArrayList"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-ArrayList")))]
        pub fn getStringArrayListExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::ArrayList>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getStringArrayListExtra", .descriptor == "(Ljava/lang/String;)Ljava/util/ArrayList;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getStringArrayListExtra\0", "(Ljava/lang/String;)Ljava/util/ArrayList;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharSequenceArrayListExtra](https://developer.android.com/reference/android/content/Intent.html#getCharSequenceArrayListExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String", "java-util-ArrayList"
        #[cfg(any(feature = "all", all(feature = "java-lang-String", feature = "java-util-ArrayList")))]
        pub fn getCharSequenceArrayListExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::ArrayList>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getCharSequenceArrayListExtra", .descriptor == "(Ljava/lang/String;)Ljava/util/ArrayList;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getCharSequenceArrayListExtra\0", "(Ljava/lang/String;)Ljava/util/ArrayList;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBooleanArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getBooleanArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getBooleanArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::BooleanArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getBooleanArrayExtra", .descriptor == "(Ljava/lang/String;)[Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getBooleanArrayExtra\0", "(Ljava/lang/String;)[Z\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getByteArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getByteArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getByteArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ByteArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getByteArrayExtra", .descriptor == "(Ljava/lang/String;)[B"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getByteArrayExtra\0", "(Ljava/lang/String;)[B\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getShortArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getShortArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getShortArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ShortArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getShortArrayExtra", .descriptor == "(Ljava/lang/String;)[S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getShortArrayExtra\0", "(Ljava/lang/String;)[S\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getCharArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getCharArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::CharArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getCharArrayExtra", .descriptor == "(Ljava/lang/String;)[C"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getCharArrayExtra\0", "(Ljava/lang/String;)[C\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getIntArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getIntArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getIntArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::IntArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getIntArrayExtra", .descriptor == "(Ljava/lang/String;)[I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getIntArrayExtra\0", "(Ljava/lang/String;)[I\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getLongArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getLongArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getLongArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::LongArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getLongArrayExtra", .descriptor == "(Ljava/lang/String;)[J"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getLongArrayExtra\0", "(Ljava/lang/String;)[J\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFloatArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getFloatArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getFloatArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::FloatArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getFloatArrayExtra", .descriptor == "(Ljava/lang/String;)[F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getFloatArrayExtra\0", "(Ljava/lang/String;)[F\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDoubleArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getDoubleArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getDoubleArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::DoubleArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getDoubleArrayExtra", .descriptor == "(Ljava/lang/String;)[D"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getDoubleArrayExtra\0", "(Ljava/lang/String;)[D\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getStringArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getStringArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getStringArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getStringArrayExtra", .descriptor == "(Ljava/lang/String;)[Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getStringArrayExtra\0", "(Ljava/lang/String;)[Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getCharSequenceArrayExtra](https://developer.android.com/reference/android/content/Intent.html#getCharSequenceArrayExtra(java.lang.String))
        ///
        /// Required features: "java-lang-CharSequence", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-CharSequence", feature = "java-lang-String")))]
        pub fn getCharSequenceArrayExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::ObjectArray<crate::java::lang::CharSequence, crate::java::lang::Throwable>>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getCharSequenceArrayExtra", .descriptor == "(Ljava/lang/String;)[Ljava/lang/CharSequence;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getCharSequenceArrayExtra\0", "(Ljava/lang/String;)[Ljava/lang/CharSequence;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getBundleExtra](https://developer.android.com/reference/android/content/Intent.html#getBundleExtra(java.lang.String))
        ///
        /// Required features: "android-os-Bundle", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle", feature = "java-lang-String")))]
        pub fn getBundleExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getBundleExtra", .descriptor == "(Ljava/lang/String;)Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getBundleExtra\0", "(Ljava/lang/String;)Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExtras](https://developer.android.com/reference/android/content/Intent.html#getExtras())
        ///
        /// Required features: "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-os-Bundle")))]
        pub fn getExtras<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Bundle>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getExtras", .descriptor == "()Landroid/os/Bundle;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getExtras\0", "()Landroid/os/Bundle;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getFlags](https://developer.android.com/reference/android/content/Intent.html#getFlags())
        pub fn getFlags<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getFlags", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getFlags\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getPackage](https://developer.android.com/reference/android/content/Intent.html#getPackage())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn getPackage<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getPackage", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getPackage\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getComponent](https://developer.android.com/reference/android/content/Intent.html#getComponent())
        ///
        /// Required features: "android-content-ComponentName"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName")))]
        pub fn getComponent<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ComponentName>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getComponent", .descriptor == "()Landroid/content/ComponentName;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getComponent\0", "()Landroid/content/ComponentName;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSourceBounds](https://developer.android.com/reference/android/content/Intent.html#getSourceBounds())
        ///
        /// Required features: "android-graphics-Rect"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Rect")))]
        pub fn getSourceBounds<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::graphics::Rect>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "getSourceBounds", .descriptor == "()Landroid/graphics/Rect;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "getSourceBounds\0", "()Landroid/graphics/Rect;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resolveActivity](https://developer.android.com/reference/android/content/Intent.html#resolveActivity(android.content.pm.PackageManager))
        ///
        /// Required features: "android-content-ComponentName", "android-content-pm-PackageManager"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName", feature = "android-content-pm-PackageManager")))]
        pub fn resolveActivity<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::pm::PackageManager>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::ComponentName>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "resolveActivity", .descriptor == "(Landroid/content/pm/PackageManager;)Landroid/content/ComponentName;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "resolveActivity\0", "(Landroid/content/pm/PackageManager;)Landroid/content/ComponentName;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [resolveActivityInfo](https://developer.android.com/reference/android/content/Intent.html#resolveActivityInfo(android.content.pm.PackageManager,%20int))
        ///
        /// Required features: "android-content-pm-ActivityInfo", "android-content-pm-PackageManager"
        #[cfg(any(feature = "all", all(feature = "android-content-pm-ActivityInfo", feature = "android-content-pm-PackageManager")))]
        pub fn resolveActivityInfo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::pm::PackageManager>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::pm::ActivityInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "resolveActivityInfo", .descriptor == "(Landroid/content/pm/PackageManager;I)Landroid/content/pm/ActivityInfo;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "resolveActivityInfo\0", "(Landroid/content/pm/PackageManager;I)Landroid/content/pm/ActivityInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setAction](https://developer.android.com/reference/android/content/Intent.html#setAction(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn setAction<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setAction", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setAction\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setData](https://developer.android.com/reference/android/content/Intent.html#setData(android.net.Uri))
        ///
        /// Required features: "android-content-Intent", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-net-Uri")))]
        pub fn setData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setData", .descriptor == "(Landroid/net/Uri;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setData\0", "(Landroid/net/Uri;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDataAndNormalize](https://developer.android.com/reference/android/content/Intent.html#setDataAndNormalize(android.net.Uri))
        ///
        /// Required features: "android-content-Intent", "android-net-Uri"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-net-Uri")))]
        pub fn setDataAndNormalize<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setDataAndNormalize", .descriptor == "(Landroid/net/Uri;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setDataAndNormalize\0", "(Landroid/net/Uri;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setType](https://developer.android.com/reference/android/content/Intent.html#setType(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn setType<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setType", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setType\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTypeAndNormalize](https://developer.android.com/reference/android/content/Intent.html#setTypeAndNormalize(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn setTypeAndNormalize<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setTypeAndNormalize", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setTypeAndNormalize\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDataAndType](https://developer.android.com/reference/android/content/Intent.html#setDataAndType(android.net.Uri,%20java.lang.String))
        ///
        /// Required features: "android-content-Intent", "android-net-Uri", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-net-Uri", feature = "java-lang-String")))]
        pub fn setDataAndType<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setDataAndType", .descriptor == "(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setDataAndType\0", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDataAndTypeAndNormalize](https://developer.android.com/reference/android/content/Intent.html#setDataAndTypeAndNormalize(android.net.Uri,%20java.lang.String))
        ///
        /// Required features: "android-content-Intent", "android-net-Uri", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-net-Uri", feature = "java-lang-String")))]
        pub fn setDataAndTypeAndNormalize<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::net::Uri>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setDataAndTypeAndNormalize", .descriptor == "(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setDataAndTypeAndNormalize\0", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIdentifier](https://developer.android.com/reference/android/content/Intent.html#setIdentifier(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn setIdentifier<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setIdentifier", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setIdentifier\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addCategory](https://developer.android.com/reference/android/content/Intent.html#addCategory(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn addCategory<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "addCategory", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "addCategory\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeCategory](https://developer.android.com/reference/android/content/Intent.html#removeCategory(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn removeCategory<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "removeCategory", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "removeCategory\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSelector](https://developer.android.com/reference/android/content/Intent.html#setSelector(android.content.Intent))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn setSelector<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setSelector", .descriptor == "(Landroid/content/Intent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setSelector\0", "(Landroid/content/Intent;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setClipData](https://developer.android.com/reference/android/content/Intent.html#setClipData(android.content.ClipData))
        ///
        /// Required features: "android-content-ClipData"
        #[cfg(any(feature = "all", all(feature = "android-content-ClipData")))]
        pub fn setClipData<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ClipData>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setClipData", .descriptor == "(Landroid/content/ClipData;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setClipData\0", "(Landroid/content/ClipData;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20boolean))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_boolean<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;Z)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;Z)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20byte))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_byte<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i8) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;B)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;B)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20char))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_char<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: __jni_bindgen::jchar) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;C)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;C)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20short))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_short<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i16) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;S)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;S)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20int))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_int<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;I)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;I)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20long))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_long<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;J)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;J)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20float))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_float<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;F)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;F)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20double))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_double<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: f64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;D)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;D)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20java.lang.CharSequence))
        ///
        /// Required features: "android-content-Intent", "java-lang-CharSequence", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-CharSequence", feature = "java-lang-String")))]
        pub fn putExtra_String_CharSequence<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::CharSequence>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;Ljava/lang/CharSequence;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;Ljava/lang/CharSequence;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20android.os.Parcelable))
        ///
        /// Required features: "android-content-Intent", "android-os-Parcelable", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-Parcelable", feature = "java-lang-String")))]
        pub fn putExtra_String_Parcelable<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcelable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20android.os.Parcelable%5B%5D))
        ///
        /// Required features: "android-content-Intent", "android-os-Parcelable", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-Parcelable", feature = "java-lang-String")))]
        pub fn putExtra_String_Parcelable_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::android::os::Parcelable, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[Landroid/os/Parcelable;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[Landroid/os/Parcelable;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putParcelableArrayListExtra](https://developer.android.com/reference/android/content/Intent.html#putParcelableArrayListExtra(java.lang.String,%20java.util.ArrayList))
        ///
        /// Required features: "android-content-Intent", "java-lang-String", "java-util-ArrayList"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String", feature = "java-util-ArrayList")))]
        pub fn putParcelableArrayListExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putParcelableArrayListExtra", .descriptor == "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putParcelableArrayListExtra\0", "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putIntegerArrayListExtra](https://developer.android.com/reference/android/content/Intent.html#putIntegerArrayListExtra(java.lang.String,%20java.util.ArrayList))
        ///
        /// Required features: "android-content-Intent", "java-lang-String", "java-util-ArrayList"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String", feature = "java-util-ArrayList")))]
        pub fn putIntegerArrayListExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putIntegerArrayListExtra", .descriptor == "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putIntegerArrayListExtra\0", "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putStringArrayListExtra](https://developer.android.com/reference/android/content/Intent.html#putStringArrayListExtra(java.lang.String,%20java.util.ArrayList))
        ///
        /// Required features: "android-content-Intent", "java-lang-String", "java-util-ArrayList"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String", feature = "java-util-ArrayList")))]
        pub fn putStringArrayListExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putStringArrayListExtra", .descriptor == "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putStringArrayListExtra\0", "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putCharSequenceArrayListExtra](https://developer.android.com/reference/android/content/Intent.html#putCharSequenceArrayListExtra(java.lang.String,%20java.util.ArrayList))
        ///
        /// Required features: "android-content-Intent", "java-lang-String", "java-util-ArrayList"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String", feature = "java-util-ArrayList")))]
        pub fn putCharSequenceArrayListExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::ArrayList>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putCharSequenceArrayListExtra", .descriptor == "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putCharSequenceArrayListExtra\0", "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20java.io.Serializable))
        ///
        /// Required features: "android-content-Intent", "java-io-Serializable", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-io-Serializable", feature = "java-lang-String")))]
        pub fn putExtra_String_Serializable<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::Serializable>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20bool%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_boolean_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::BooleanArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[Z)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[Z)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20byte%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_byte_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ByteArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[B)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[B)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20short%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_short_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ShortArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[S)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[S)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20char%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_char_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::CharArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[C)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[C)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20int%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_int_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::IntArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[I)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[I)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20long%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_long_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::LongArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[J)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[J)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20float%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_float_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::FloatArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[F)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[F)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20double%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_double_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::DoubleArray>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[D)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[D)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20java.lang.String%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn putExtra_String_String_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::String, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20java.lang.CharSequence%5B%5D))
        ///
        /// Required features: "android-content-Intent", "java-lang-CharSequence", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-CharSequence", feature = "java-lang-String")))]
        pub fn putExtra_String_CharSequence_array<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env __jni_bindgen::ObjectArray<crate::java::lang::CharSequence, crate::java::lang::Throwable>>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;[Ljava/lang/CharSequence;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;[Ljava/lang/CharSequence;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtra](https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20android.os.Bundle))
        ///
        /// Required features: "android-content-Intent", "android-os-Bundle", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-Bundle", feature = "java-lang-String")))]
        pub fn putExtra_String_Bundle<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtra", .descriptor == "(Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtra\0", "(Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtras](https://developer.android.com/reference/android/content/Intent.html#putExtras(android.content.Intent))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn putExtras_Intent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtras", .descriptor == "(Landroid/content/Intent;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtras\0", "(Landroid/content/Intent;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [putExtras](https://developer.android.com/reference/android/content/Intent.html#putExtras(android.os.Bundle))
        ///
        /// Required features: "android-content-Intent", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-Bundle")))]
        pub fn putExtras_Bundle<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "putExtras", .descriptor == "(Landroid/os/Bundle;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "putExtras\0", "(Landroid/os/Bundle;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replaceExtras](https://developer.android.com/reference/android/content/Intent.html#replaceExtras(android.content.Intent))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn replaceExtras_Intent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "replaceExtras", .descriptor == "(Landroid/content/Intent;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "replaceExtras\0", "(Landroid/content/Intent;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [replaceExtras](https://developer.android.com/reference/android/content/Intent.html#replaceExtras(android.os.Bundle))
        ///
        /// Required features: "android-content-Intent", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-os-Bundle")))]
        pub fn replaceExtras_Bundle<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "replaceExtras", .descriptor == "(Landroid/os/Bundle;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "replaceExtras\0", "(Landroid/os/Bundle;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeExtra](https://developer.android.com/reference/android/content/Intent.html#removeExtra(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn removeExtra<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "removeExtra", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "removeExtra\0", "(Ljava/lang/String;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setFlags](https://developer.android.com/reference/android/content/Intent.html#setFlags(int))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn setFlags<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setFlags", .descriptor == "(I)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setFlags\0", "(I)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addFlags](https://developer.android.com/reference/android/content/Intent.html#addFlags(int))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn addFlags<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "addFlags", .descriptor == "(I)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "addFlags\0", "(I)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeFlags](https://developer.android.com/reference/android/content/Intent.html#removeFlags(int))
        pub fn removeFlags<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "removeFlags", .descriptor == "(I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "removeFlags\0", "(I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setPackage](https://developer.android.com/reference/android/content/Intent.html#setPackage(java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn setPackage<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setPackage", .descriptor == "(Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setPackage\0", "(Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setComponent](https://developer.android.com/reference/android/content/Intent.html#setComponent(android.content.ComponentName))
        ///
        /// Required features: "android-content-ComponentName", "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-ComponentName", feature = "android-content-Intent")))]
        pub fn setComponent<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::ComponentName>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setComponent", .descriptor == "(Landroid/content/ComponentName;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setComponent\0", "(Landroid/content/ComponentName;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setClassName](https://developer.android.com/reference/android/content/Intent.html#setClassName(android.content.Context,%20java.lang.String))
        ///
        /// Required features: "android-content-Context", "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn setClassName_Context_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setClassName", .descriptor == "(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setClassName\0", "(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setClassName](https://developer.android.com/reference/android/content/Intent.html#setClassName(java.lang.String,%20java.lang.String))
        ///
        /// Required features: "android-content-Intent", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "java-lang-String")))]
        pub fn setClassName_String_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setClassName", .descriptor == "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setClassName\0", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setClass](https://developer.android.com/reference/android/content/Intent.html#setClass(android.content.Context,%20java.lang.Class))
        ///
        /// Required features: "android-content-Context", "android-content-Intent", "java-lang-Class"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-content-Intent", feature = "java-lang-Class")))]
        pub fn setClass<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Class>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setClass", .descriptor == "(Landroid/content/Context;Ljava/lang/Class;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setClass\0", "(Landroid/content/Context;Ljava/lang/Class;)Landroid/content/Intent;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSourceBounds](https://developer.android.com/reference/android/content/Intent.html#setSourceBounds(android.graphics.Rect))
        ///
        /// Required features: "android-graphics-Rect"
        #[cfg(any(feature = "all", all(feature = "android-graphics-Rect")))]
        pub fn setSourceBounds<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::graphics::Rect>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "setSourceBounds", .descriptor == "(Landroid/graphics/Rect;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "setSourceBounds\0", "(Landroid/graphics/Rect;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [fillIn](https://developer.android.com/reference/android/content/Intent.html#fillIn(android.content.Intent,%20int))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn fillIn<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>, arg1: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "fillIn", .descriptor == "(Landroid/content/Intent;I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "fillIn\0", "(Landroid/content/Intent;I)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [filterEquals](https://developer.android.com/reference/android/content/Intent.html#filterEquals(android.content.Intent))
        ///
        /// Required features: "android-content-Intent"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent")))]
        pub fn filterEquals<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Intent>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "filterEquals", .descriptor == "(Landroid/content/Intent;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "filterEquals\0", "(Landroid/content/Intent;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [filterHashCode](https://developer.android.com/reference/android/content/Intent.html#filterHashCode())
        pub fn filterHashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "filterHashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "filterHashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/content/Intent.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toURI](https://developer.android.com/reference/android/content/Intent.html#toURI())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        #[deprecated] pub fn toURI<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "toURI", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "toURI\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toUri](https://developer.android.com/reference/android/content/Intent.html#toUri(int))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toUri<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "toUri", .descriptor == "(I)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "toUri\0", "(I)Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [describeContents](https://developer.android.com/reference/android/content/Intent.html#describeContents())
        pub fn describeContents<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "describeContents", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "describeContents\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [writeToParcel](https://developer.android.com/reference/android/content/Intent.html#writeToParcel(android.os.Parcel,%20int))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn writeToParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>, arg1: i32) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "writeToParcel", .descriptor == "(Landroid/os/Parcel;I)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "writeToParcel\0", "(Landroid/os/Parcel;I)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [readFromParcel](https://developer.android.com/reference/android/content/Intent.html#readFromParcel(android.os.Parcel))
        ///
        /// Required features: "android-os-Parcel"
        #[cfg(any(feature = "all", all(feature = "android-os-Parcel")))]
        pub fn readFromParcel<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Parcel>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC, .name == "readFromParcel", .descriptor == "(Landroid/os/Parcel;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/Intent\0", "readFromParcel\0", "(Landroid/os/Parcel;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseIntent](https://developer.android.com/reference/android/content/Intent.html#parseIntent(android.content.res.Resources,%20org.xmlpull.v1.XmlPullParser,%20android.util.AttributeSet))
        ///
        /// Required features: "android-content-Intent", "android-content-res-Resources", "android-util-AttributeSet", "org-xmlpull-v1-XmlPullParser"
        #[cfg(any(feature = "all", all(feature = "android-content-Intent", feature = "android-content-res-Resources", feature = "android-util-AttributeSet", feature = "org-xmlpull-v1-XmlPullParser")))]
        pub fn parseIntent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::res::Resources>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::org::xmlpull::v1::XmlPullParser>>, arg2: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::AttributeSet>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::Intent>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "parseIntent", .descriptor == "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/content/Intent;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into()), __jni_bindgen::AsJValue::as_jvalue(&arg2.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "parseIntent\0", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/content/Intent;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [normalizeMimeType](https://developer.android.com/reference/android/content/Intent.html#normalizeMimeType(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn normalizeMimeType<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/Intent", java.flags == PUBLIC | STATIC, .name == "normalizeMimeType", .descriptor == "(Ljava/lang/String;)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/content/Intent\0", "normalizeMimeType\0", "(Ljava/lang/String;)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_AIRPLANE_MODE_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_AIRPLANE_MODE_CHANGED)
        pub const ACTION_AIRPLANE_MODE_CHANGED : &'static str = "android.intent.action.AIRPLANE_MODE";

        /// public static final [ACTION_ALL_APPS](https://developer.android.com/reference/android/content/Intent.html#ACTION_ALL_APPS)
        pub const ACTION_ALL_APPS : &'static str = "android.intent.action.ALL_APPS";

        /// public static final [ACTION_ANSWER](https://developer.android.com/reference/android/content/Intent.html#ACTION_ANSWER)
        pub const ACTION_ANSWER : &'static str = "android.intent.action.ANSWER";

        /// public static final [ACTION_APPLICATION_PREFERENCES](https://developer.android.com/reference/android/content/Intent.html#ACTION_APPLICATION_PREFERENCES)
        pub const ACTION_APPLICATION_PREFERENCES : &'static str = "android.intent.action.APPLICATION_PREFERENCES";

        /// public static final [ACTION_APPLICATION_RESTRICTIONS_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_APPLICATION_RESTRICTIONS_CHANGED)
        pub const ACTION_APPLICATION_RESTRICTIONS_CHANGED : &'static str = "android.intent.action.APPLICATION_RESTRICTIONS_CHANGED";

        /// public static final [ACTION_APP_ERROR](https://developer.android.com/reference/android/content/Intent.html#ACTION_APP_ERROR)
        pub const ACTION_APP_ERROR : &'static str = "android.intent.action.APP_ERROR";

        /// public static final [ACTION_ASSIST](https://developer.android.com/reference/android/content/Intent.html#ACTION_ASSIST)
        pub const ACTION_ASSIST : &'static str = "android.intent.action.ASSIST";

        /// public static final [ACTION_ATTACH_DATA](https://developer.android.com/reference/android/content/Intent.html#ACTION_ATTACH_DATA)
        pub const ACTION_ATTACH_DATA : &'static str = "android.intent.action.ATTACH_DATA";

        /// public static final [ACTION_BATTERY_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_CHANGED)
        pub const ACTION_BATTERY_CHANGED : &'static str = "android.intent.action.BATTERY_CHANGED";

        /// public static final [ACTION_BATTERY_LOW](https://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_LOW)
        pub const ACTION_BATTERY_LOW : &'static str = "android.intent.action.BATTERY_LOW";

        /// public static final [ACTION_BATTERY_OKAY](https://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_OKAY)
        pub const ACTION_BATTERY_OKAY : &'static str = "android.intent.action.BATTERY_OKAY";

        /// public static final [ACTION_BOOT_COMPLETED](https://developer.android.com/reference/android/content/Intent.html#ACTION_BOOT_COMPLETED)
        pub const ACTION_BOOT_COMPLETED : &'static str = "android.intent.action.BOOT_COMPLETED";

        /// public static final [ACTION_BUG_REPORT](https://developer.android.com/reference/android/content/Intent.html#ACTION_BUG_REPORT)
        pub const ACTION_BUG_REPORT : &'static str = "android.intent.action.BUG_REPORT";

        /// public static final [ACTION_CALL](https://developer.android.com/reference/android/content/Intent.html#ACTION_CALL)
        pub const ACTION_CALL : &'static str = "android.intent.action.CALL";

        /// public static final [ACTION_CALL_BUTTON](https://developer.android.com/reference/android/content/Intent.html#ACTION_CALL_BUTTON)
        pub const ACTION_CALL_BUTTON : &'static str = "android.intent.action.CALL_BUTTON";

        /// public static final [ACTION_CAMERA_BUTTON](https://developer.android.com/reference/android/content/Intent.html#ACTION_CAMERA_BUTTON)
        pub const ACTION_CAMERA_BUTTON : &'static str = "android.intent.action.CAMERA_BUTTON";

        /// public static final [ACTION_CARRIER_SETUP](https://developer.android.com/reference/android/content/Intent.html#ACTION_CARRIER_SETUP)
        pub const ACTION_CARRIER_SETUP : &'static str = "android.intent.action.CARRIER_SETUP";

        /// public static final [ACTION_CHOOSER](https://developer.android.com/reference/android/content/Intent.html#ACTION_CHOOSER)
        pub const ACTION_CHOOSER : &'static str = "android.intent.action.CHOOSER";

        /// public static final [ACTION_CLOSE_SYSTEM_DIALOGS](https://developer.android.com/reference/android/content/Intent.html#ACTION_CLOSE_SYSTEM_DIALOGS)
        pub const ACTION_CLOSE_SYSTEM_DIALOGS : &'static str = "android.intent.action.CLOSE_SYSTEM_DIALOGS";

        /// public static final [ACTION_CONFIGURATION_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_CONFIGURATION_CHANGED)
        pub const ACTION_CONFIGURATION_CHANGED : &'static str = "android.intent.action.CONFIGURATION_CHANGED";

        /// public static final [ACTION_CREATE_DOCUMENT](https://developer.android.com/reference/android/content/Intent.html#ACTION_CREATE_DOCUMENT)
        pub const ACTION_CREATE_DOCUMENT : &'static str = "android.intent.action.CREATE_DOCUMENT";

        /// public static final [ACTION_CREATE_SHORTCUT](https://developer.android.com/reference/android/content/Intent.html#ACTION_CREATE_SHORTCUT)
        pub const ACTION_CREATE_SHORTCUT : &'static str = "android.intent.action.CREATE_SHORTCUT";

        /// public static final [ACTION_DATE_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_DATE_CHANGED)
        pub const ACTION_DATE_CHANGED : &'static str = "android.intent.action.DATE_CHANGED";

        /// public static final [ACTION_DEFAULT](https://developer.android.com/reference/android/content/Intent.html#ACTION_DEFAULT)
        pub const ACTION_DEFAULT : &'static str = "android.intent.action.VIEW";

        /// public static final [ACTION_DEFINE](https://developer.android.com/reference/android/content/Intent.html#ACTION_DEFINE)
        pub const ACTION_DEFINE : &'static str = "android.intent.action.DEFINE";

        /// public static final [ACTION_DELETE](https://developer.android.com/reference/android/content/Intent.html#ACTION_DELETE)
        pub const ACTION_DELETE : &'static str = "android.intent.action.DELETE";

        /// public static final [ACTION_DEVICE_STORAGE_LOW](https://developer.android.com/reference/android/content/Intent.html#ACTION_DEVICE_STORAGE_LOW)
        #[deprecated] pub const ACTION_DEVICE_STORAGE_LOW : &'static str = "android.intent.action.DEVICE_STORAGE_LOW";

        /// public static final [ACTION_DEVICE_STORAGE_OK](https://developer.android.com/reference/android/content/Intent.html#ACTION_DEVICE_STORAGE_OK)
        #[deprecated] pub const ACTION_DEVICE_STORAGE_OK : &'static str = "android.intent.action.DEVICE_STORAGE_OK";

        /// public static final [ACTION_DIAL](https://developer.android.com/reference/android/content/Intent.html#ACTION_DIAL)
        pub const ACTION_DIAL : &'static str = "android.intent.action.DIAL";

        /// public static final [ACTION_DOCK_EVENT](https://developer.android.com/reference/android/content/Intent.html#ACTION_DOCK_EVENT)
        pub const ACTION_DOCK_EVENT : &'static str = "android.intent.action.DOCK_EVENT";

        /// public static final [ACTION_DREAMING_STARTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_DREAMING_STARTED)
        pub const ACTION_DREAMING_STARTED : &'static str = "android.intent.action.DREAMING_STARTED";

        /// public static final [ACTION_DREAMING_STOPPED](https://developer.android.com/reference/android/content/Intent.html#ACTION_DREAMING_STOPPED)
        pub const ACTION_DREAMING_STOPPED : &'static str = "android.intent.action.DREAMING_STOPPED";

        /// public static final [ACTION_EDIT](https://developer.android.com/reference/android/content/Intent.html#ACTION_EDIT)
        pub const ACTION_EDIT : &'static str = "android.intent.action.EDIT";

        /// public static final [ACTION_EXTERNAL_APPLICATIONS_AVAILABLE](https://developer.android.com/reference/android/content/Intent.html#ACTION_EXTERNAL_APPLICATIONS_AVAILABLE)
        pub const ACTION_EXTERNAL_APPLICATIONS_AVAILABLE : &'static str = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        /// public static final [ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE](https://developer.android.com/reference/android/content/Intent.html#ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE)
        pub const ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE : &'static str = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        /// public static final [ACTION_FACTORY_TEST](https://developer.android.com/reference/android/content/Intent.html#ACTION_FACTORY_TEST)
        pub const ACTION_FACTORY_TEST : &'static str = "android.intent.action.FACTORY_TEST";

        /// public static final [ACTION_GET_CONTENT](https://developer.android.com/reference/android/content/Intent.html#ACTION_GET_CONTENT)
        pub const ACTION_GET_CONTENT : &'static str = "android.intent.action.GET_CONTENT";

        /// public static final [ACTION_GET_RESTRICTION_ENTRIES](https://developer.android.com/reference/android/content/Intent.html#ACTION_GET_RESTRICTION_ENTRIES)
        pub const ACTION_GET_RESTRICTION_ENTRIES : &'static str = "android.intent.action.GET_RESTRICTION_ENTRIES";

        /// public static final [ACTION_GTALK_SERVICE_CONNECTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_GTALK_SERVICE_CONNECTED)
        pub const ACTION_GTALK_SERVICE_CONNECTED : &'static str = "android.intent.action.GTALK_CONNECTED";

        /// public static final [ACTION_GTALK_SERVICE_DISCONNECTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_GTALK_SERVICE_DISCONNECTED)
        pub const ACTION_GTALK_SERVICE_DISCONNECTED : &'static str = "android.intent.action.GTALK_DISCONNECTED";

        /// public static final [ACTION_HEADSET_PLUG](https://developer.android.com/reference/android/content/Intent.html#ACTION_HEADSET_PLUG)
        pub const ACTION_HEADSET_PLUG : &'static str = "android.intent.action.HEADSET_PLUG";

        /// public static final [ACTION_INPUT_METHOD_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_INPUT_METHOD_CHANGED)
        pub const ACTION_INPUT_METHOD_CHANGED : &'static str = "android.intent.action.INPUT_METHOD_CHANGED";

        /// public static final [ACTION_INSERT](https://developer.android.com/reference/android/content/Intent.html#ACTION_INSERT)
        pub const ACTION_INSERT : &'static str = "android.intent.action.INSERT";

        /// public static final [ACTION_INSERT_OR_EDIT](https://developer.android.com/reference/android/content/Intent.html#ACTION_INSERT_OR_EDIT)
        pub const ACTION_INSERT_OR_EDIT : &'static str = "android.intent.action.INSERT_OR_EDIT";

        /// public static final [ACTION_INSTALL_FAILURE](https://developer.android.com/reference/android/content/Intent.html#ACTION_INSTALL_FAILURE)
        pub const ACTION_INSTALL_FAILURE : &'static str = "android.intent.action.INSTALL_FAILURE";

        /// public static final [ACTION_INSTALL_PACKAGE](https://developer.android.com/reference/android/content/Intent.html#ACTION_INSTALL_PACKAGE)
        #[deprecated] pub const ACTION_INSTALL_PACKAGE : &'static str = "android.intent.action.INSTALL_PACKAGE";

        /// public static final [ACTION_LOCALE_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_LOCALE_CHANGED)
        pub const ACTION_LOCALE_CHANGED : &'static str = "android.intent.action.LOCALE_CHANGED";

        /// public static final [ACTION_LOCKED_BOOT_COMPLETED](https://developer.android.com/reference/android/content/Intent.html#ACTION_LOCKED_BOOT_COMPLETED)
        pub const ACTION_LOCKED_BOOT_COMPLETED : &'static str = "android.intent.action.LOCKED_BOOT_COMPLETED";

        /// public static final [ACTION_MAIN](https://developer.android.com/reference/android/content/Intent.html#ACTION_MAIN)
        pub const ACTION_MAIN : &'static str = "android.intent.action.MAIN";

        /// public static final [ACTION_MANAGED_PROFILE_ADDED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_ADDED)
        pub const ACTION_MANAGED_PROFILE_ADDED : &'static str = "android.intent.action.MANAGED_PROFILE_ADDED";

        /// public static final [ACTION_MANAGED_PROFILE_AVAILABLE](https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_AVAILABLE)
        pub const ACTION_MANAGED_PROFILE_AVAILABLE : &'static str = "android.intent.action.MANAGED_PROFILE_AVAILABLE";

        /// public static final [ACTION_MANAGED_PROFILE_REMOVED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_REMOVED)
        pub const ACTION_MANAGED_PROFILE_REMOVED : &'static str = "android.intent.action.MANAGED_PROFILE_REMOVED";

        /// public static final [ACTION_MANAGED_PROFILE_UNAVAILABLE](https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_UNAVAILABLE)
        pub const ACTION_MANAGED_PROFILE_UNAVAILABLE : &'static str = "android.intent.action.MANAGED_PROFILE_UNAVAILABLE";

        /// public static final [ACTION_MANAGED_PROFILE_UNLOCKED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_UNLOCKED)
        pub const ACTION_MANAGED_PROFILE_UNLOCKED : &'static str = "android.intent.action.MANAGED_PROFILE_UNLOCKED";

        /// public static final [ACTION_MANAGE_NETWORK_USAGE](https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGE_NETWORK_USAGE)
        pub const ACTION_MANAGE_NETWORK_USAGE : &'static str = "android.intent.action.MANAGE_NETWORK_USAGE";

        /// public static final [ACTION_MANAGE_PACKAGE_STORAGE](https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGE_PACKAGE_STORAGE)
        pub const ACTION_MANAGE_PACKAGE_STORAGE : &'static str = "android.intent.action.MANAGE_PACKAGE_STORAGE";

        /// public static final [ACTION_MEDIA_BAD_REMOVAL](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_BAD_REMOVAL)
        pub const ACTION_MEDIA_BAD_REMOVAL : &'static str = "android.intent.action.MEDIA_BAD_REMOVAL";

        /// public static final [ACTION_MEDIA_BUTTON](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_BUTTON)
        pub const ACTION_MEDIA_BUTTON : &'static str = "android.intent.action.MEDIA_BUTTON";

        /// public static final [ACTION_MEDIA_CHECKING](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_CHECKING)
        pub const ACTION_MEDIA_CHECKING : &'static str = "android.intent.action.MEDIA_CHECKING";

        /// public static final [ACTION_MEDIA_EJECT](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_EJECT)
        pub const ACTION_MEDIA_EJECT : &'static str = "android.intent.action.MEDIA_EJECT";

        /// public static final [ACTION_MEDIA_MOUNTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_MOUNTED)
        pub const ACTION_MEDIA_MOUNTED : &'static str = "android.intent.action.MEDIA_MOUNTED";

        /// public static final [ACTION_MEDIA_NOFS](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_NOFS)
        pub const ACTION_MEDIA_NOFS : &'static str = "android.intent.action.MEDIA_NOFS";

        /// public static final [ACTION_MEDIA_REMOVED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_REMOVED)
        pub const ACTION_MEDIA_REMOVED : &'static str = "android.intent.action.MEDIA_REMOVED";

        /// public static final [ACTION_MEDIA_SCANNER_FINISHED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_FINISHED)
        pub const ACTION_MEDIA_SCANNER_FINISHED : &'static str = "android.intent.action.MEDIA_SCANNER_FINISHED";

        /// public static final [ACTION_MEDIA_SCANNER_SCAN_FILE](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_SCAN_FILE)
        #[deprecated] pub const ACTION_MEDIA_SCANNER_SCAN_FILE : &'static str = "android.intent.action.MEDIA_SCANNER_SCAN_FILE";

        /// public static final [ACTION_MEDIA_SCANNER_STARTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_STARTED)
        pub const ACTION_MEDIA_SCANNER_STARTED : &'static str = "android.intent.action.MEDIA_SCANNER_STARTED";

        /// public static final [ACTION_MEDIA_SHARED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SHARED)
        pub const ACTION_MEDIA_SHARED : &'static str = "android.intent.action.MEDIA_SHARED";

        /// public static final [ACTION_MEDIA_UNMOUNTABLE](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_UNMOUNTABLE)
        pub const ACTION_MEDIA_UNMOUNTABLE : &'static str = "android.intent.action.MEDIA_UNMOUNTABLE";

        /// public static final [ACTION_MEDIA_UNMOUNTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_UNMOUNTED)
        pub const ACTION_MEDIA_UNMOUNTED : &'static str = "android.intent.action.MEDIA_UNMOUNTED";

        /// public static final [ACTION_MY_PACKAGE_REPLACED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MY_PACKAGE_REPLACED)
        pub const ACTION_MY_PACKAGE_REPLACED : &'static str = "android.intent.action.MY_PACKAGE_REPLACED";

        /// public static final [ACTION_MY_PACKAGE_SUSPENDED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MY_PACKAGE_SUSPENDED)
        pub const ACTION_MY_PACKAGE_SUSPENDED : &'static str = "android.intent.action.MY_PACKAGE_SUSPENDED";

        /// public static final [ACTION_MY_PACKAGE_UNSUSPENDED](https://developer.android.com/reference/android/content/Intent.html#ACTION_MY_PACKAGE_UNSUSPENDED)
        pub const ACTION_MY_PACKAGE_UNSUSPENDED : &'static str = "android.intent.action.MY_PACKAGE_UNSUSPENDED";

        /// public static final [ACTION_NEW_OUTGOING_CALL](https://developer.android.com/reference/android/content/Intent.html#ACTION_NEW_OUTGOING_CALL)
        #[deprecated] pub const ACTION_NEW_OUTGOING_CALL : &'static str = "android.intent.action.NEW_OUTGOING_CALL";

        /// public static final [ACTION_OPEN_DOCUMENT](https://developer.android.com/reference/android/content/Intent.html#ACTION_OPEN_DOCUMENT)
        pub const ACTION_OPEN_DOCUMENT : &'static str = "android.intent.action.OPEN_DOCUMENT";

        /// public static final [ACTION_OPEN_DOCUMENT_TREE](https://developer.android.com/reference/android/content/Intent.html#ACTION_OPEN_DOCUMENT_TREE)
        pub const ACTION_OPEN_DOCUMENT_TREE : &'static str = "android.intent.action.OPEN_DOCUMENT_TREE";

        /// public static final [ACTION_PACKAGES_SUSPENDED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGES_SUSPENDED)
        pub const ACTION_PACKAGES_SUSPENDED : &'static str = "android.intent.action.PACKAGES_SUSPENDED";

        /// public static final [ACTION_PACKAGES_UNSUSPENDED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGES_UNSUSPENDED)
        pub const ACTION_PACKAGES_UNSUSPENDED : &'static str = "android.intent.action.PACKAGES_UNSUSPENDED";

        /// public static final [ACTION_PACKAGE_ADDED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_ADDED)
        pub const ACTION_PACKAGE_ADDED : &'static str = "android.intent.action.PACKAGE_ADDED";

        /// public static final [ACTION_PACKAGE_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_CHANGED)
        pub const ACTION_PACKAGE_CHANGED : &'static str = "android.intent.action.PACKAGE_CHANGED";

        /// public static final [ACTION_PACKAGE_DATA_CLEARED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_DATA_CLEARED)
        pub const ACTION_PACKAGE_DATA_CLEARED : &'static str = "android.intent.action.PACKAGE_DATA_CLEARED";

        /// public static final [ACTION_PACKAGE_FIRST_LAUNCH](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_FIRST_LAUNCH)
        pub const ACTION_PACKAGE_FIRST_LAUNCH : &'static str = "android.intent.action.PACKAGE_FIRST_LAUNCH";

        /// public static final [ACTION_PACKAGE_FULLY_REMOVED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_FULLY_REMOVED)
        pub const ACTION_PACKAGE_FULLY_REMOVED : &'static str = "android.intent.action.PACKAGE_FULLY_REMOVED";

        /// public static final [ACTION_PACKAGE_INSTALL](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_INSTALL)
        #[deprecated] pub const ACTION_PACKAGE_INSTALL : &'static str = "android.intent.action.PACKAGE_INSTALL";

        /// public static final [ACTION_PACKAGE_NEEDS_VERIFICATION](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_NEEDS_VERIFICATION)
        pub const ACTION_PACKAGE_NEEDS_VERIFICATION : &'static str = "android.intent.action.PACKAGE_NEEDS_VERIFICATION";

        /// public static final [ACTION_PACKAGE_REMOVED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_REMOVED)
        pub const ACTION_PACKAGE_REMOVED : &'static str = "android.intent.action.PACKAGE_REMOVED";

        /// public static final [ACTION_PACKAGE_REPLACED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_REPLACED)
        pub const ACTION_PACKAGE_REPLACED : &'static str = "android.intent.action.PACKAGE_REPLACED";

        /// public static final [ACTION_PACKAGE_RESTARTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_RESTARTED)
        pub const ACTION_PACKAGE_RESTARTED : &'static str = "android.intent.action.PACKAGE_RESTARTED";

        /// public static final [ACTION_PACKAGE_VERIFIED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_VERIFIED)
        pub const ACTION_PACKAGE_VERIFIED : &'static str = "android.intent.action.PACKAGE_VERIFIED";

        /// public static final [ACTION_PASTE](https://developer.android.com/reference/android/content/Intent.html#ACTION_PASTE)
        pub const ACTION_PASTE : &'static str = "android.intent.action.PASTE";

        /// public static final [ACTION_PICK](https://developer.android.com/reference/android/content/Intent.html#ACTION_PICK)
        pub const ACTION_PICK : &'static str = "android.intent.action.PICK";

        /// public static final [ACTION_PICK_ACTIVITY](https://developer.android.com/reference/android/content/Intent.html#ACTION_PICK_ACTIVITY)
        pub const ACTION_PICK_ACTIVITY : &'static str = "android.intent.action.PICK_ACTIVITY";

        /// public static final [ACTION_POWER_CONNECTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_CONNECTED)
        pub const ACTION_POWER_CONNECTED : &'static str = "android.intent.action.ACTION_POWER_CONNECTED";

        /// public static final [ACTION_POWER_DISCONNECTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_DISCONNECTED)
        pub const ACTION_POWER_DISCONNECTED : &'static str = "android.intent.action.ACTION_POWER_DISCONNECTED";

        /// public static final [ACTION_POWER_USAGE_SUMMARY](https://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_USAGE_SUMMARY)
        pub const ACTION_POWER_USAGE_SUMMARY : &'static str = "android.intent.action.POWER_USAGE_SUMMARY";

        /// public static final [ACTION_PROCESS_TEXT](https://developer.android.com/reference/android/content/Intent.html#ACTION_PROCESS_TEXT)
        pub const ACTION_PROCESS_TEXT : &'static str = "android.intent.action.PROCESS_TEXT";

        /// public static final [ACTION_PROVIDER_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_PROVIDER_CHANGED)
        pub const ACTION_PROVIDER_CHANGED : &'static str = "android.intent.action.PROVIDER_CHANGED";

        /// public static final [ACTION_QUICK_CLOCK](https://developer.android.com/reference/android/content/Intent.html#ACTION_QUICK_CLOCK)
        pub const ACTION_QUICK_CLOCK : &'static str = "android.intent.action.QUICK_CLOCK";

        /// public static final [ACTION_QUICK_VIEW](https://developer.android.com/reference/android/content/Intent.html#ACTION_QUICK_VIEW)
        pub const ACTION_QUICK_VIEW : &'static str = "android.intent.action.QUICK_VIEW";

        /// public static final [ACTION_REBOOT](https://developer.android.com/reference/android/content/Intent.html#ACTION_REBOOT)
        pub const ACTION_REBOOT : &'static str = "android.intent.action.REBOOT";

        /// public static final [ACTION_RUN](https://developer.android.com/reference/android/content/Intent.html#ACTION_RUN)
        pub const ACTION_RUN : &'static str = "android.intent.action.RUN";

        /// public static final [ACTION_SCREEN_OFF](https://developer.android.com/reference/android/content/Intent.html#ACTION_SCREEN_OFF)
        pub const ACTION_SCREEN_OFF : &'static str = "android.intent.action.SCREEN_OFF";

        /// public static final [ACTION_SCREEN_ON](https://developer.android.com/reference/android/content/Intent.html#ACTION_SCREEN_ON)
        pub const ACTION_SCREEN_ON : &'static str = "android.intent.action.SCREEN_ON";

        /// public static final [ACTION_SEARCH](https://developer.android.com/reference/android/content/Intent.html#ACTION_SEARCH)
        pub const ACTION_SEARCH : &'static str = "android.intent.action.SEARCH";

        /// public static final [ACTION_SEARCH_LONG_PRESS](https://developer.android.com/reference/android/content/Intent.html#ACTION_SEARCH_LONG_PRESS)
        pub const ACTION_SEARCH_LONG_PRESS : &'static str = "android.intent.action.SEARCH_LONG_PRESS";

        /// public static final [ACTION_SEND](https://developer.android.com/reference/android/content/Intent.html#ACTION_SEND)
        pub const ACTION_SEND : &'static str = "android.intent.action.SEND";

        /// public static final [ACTION_SENDTO](https://developer.android.com/reference/android/content/Intent.html#ACTION_SENDTO)
        pub const ACTION_SENDTO : &'static str = "android.intent.action.SENDTO";

        /// public static final [ACTION_SEND_MULTIPLE](https://developer.android.com/reference/android/content/Intent.html#ACTION_SEND_MULTIPLE)
        pub const ACTION_SEND_MULTIPLE : &'static str = "android.intent.action.SEND_MULTIPLE";

        /// public static final [ACTION_SET_WALLPAPER](https://developer.android.com/reference/android/content/Intent.html#ACTION_SET_WALLPAPER)
        pub const ACTION_SET_WALLPAPER : &'static str = "android.intent.action.SET_WALLPAPER";

        /// public static final [ACTION_SHOW_APP_INFO](https://developer.android.com/reference/android/content/Intent.html#ACTION_SHOW_APP_INFO)
        pub const ACTION_SHOW_APP_INFO : &'static str = "android.intent.action.SHOW_APP_INFO";

        /// public static final [ACTION_SHUTDOWN](https://developer.android.com/reference/android/content/Intent.html#ACTION_SHUTDOWN)
        pub const ACTION_SHUTDOWN : &'static str = "android.intent.action.ACTION_SHUTDOWN";

        /// public static final [ACTION_SYNC](https://developer.android.com/reference/android/content/Intent.html#ACTION_SYNC)
        pub const ACTION_SYNC : &'static str = "android.intent.action.SYNC";

        /// public static final [ACTION_SYSTEM_TUTORIAL](https://developer.android.com/reference/android/content/Intent.html#ACTION_SYSTEM_TUTORIAL)
        pub const ACTION_SYSTEM_TUTORIAL : &'static str = "android.intent.action.SYSTEM_TUTORIAL";

        /// public static final [ACTION_TIMEZONE_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_TIMEZONE_CHANGED)
        pub const ACTION_TIMEZONE_CHANGED : &'static str = "android.intent.action.TIMEZONE_CHANGED";

        /// public static final [ACTION_TIME_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_TIME_CHANGED)
        pub const ACTION_TIME_CHANGED : &'static str = "android.intent.action.TIME_SET";

        /// public static final [ACTION_TIME_TICK](https://developer.android.com/reference/android/content/Intent.html#ACTION_TIME_TICK)
        pub const ACTION_TIME_TICK : &'static str = "android.intent.action.TIME_TICK";

        /// public static final [ACTION_TRANSLATE](https://developer.android.com/reference/android/content/Intent.html#ACTION_TRANSLATE)
        pub const ACTION_TRANSLATE : &'static str = "android.intent.action.TRANSLATE";

        /// public static final [ACTION_UID_REMOVED](https://developer.android.com/reference/android/content/Intent.html#ACTION_UID_REMOVED)
        pub const ACTION_UID_REMOVED : &'static str = "android.intent.action.UID_REMOVED";

        /// public static final [ACTION_UMS_CONNECTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_UMS_CONNECTED)
        #[deprecated] pub const ACTION_UMS_CONNECTED : &'static str = "android.intent.action.UMS_CONNECTED";

        /// public static final [ACTION_UMS_DISCONNECTED](https://developer.android.com/reference/android/content/Intent.html#ACTION_UMS_DISCONNECTED)
        #[deprecated] pub const ACTION_UMS_DISCONNECTED : &'static str = "android.intent.action.UMS_DISCONNECTED";

        /// public static final [ACTION_UNINSTALL_PACKAGE](https://developer.android.com/reference/android/content/Intent.html#ACTION_UNINSTALL_PACKAGE)
        #[deprecated] pub const ACTION_UNINSTALL_PACKAGE : &'static str = "android.intent.action.UNINSTALL_PACKAGE";

        /// public static final [ACTION_USER_BACKGROUND](https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_BACKGROUND)
        pub const ACTION_USER_BACKGROUND : &'static str = "android.intent.action.USER_BACKGROUND";

        /// public static final [ACTION_USER_FOREGROUND](https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_FOREGROUND)
        pub const ACTION_USER_FOREGROUND : &'static str = "android.intent.action.USER_FOREGROUND";

        /// public static final [ACTION_USER_INITIALIZE](https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_INITIALIZE)
        pub const ACTION_USER_INITIALIZE : &'static str = "android.intent.action.USER_INITIALIZE";

        /// public static final [ACTION_USER_PRESENT](https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_PRESENT)
        pub const ACTION_USER_PRESENT : &'static str = "android.intent.action.USER_PRESENT";

        /// public static final [ACTION_USER_UNLOCKED](https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_UNLOCKED)
        pub const ACTION_USER_UNLOCKED : &'static str = "android.intent.action.USER_UNLOCKED";

        /// public static final [ACTION_VIEW](https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW)
        pub const ACTION_VIEW : &'static str = "android.intent.action.VIEW";

        /// public static final [ACTION_VIEW_LOCUS](https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW_LOCUS)
        pub const ACTION_VIEW_LOCUS : &'static str = "android.intent.action.VIEW_LOCUS";

        /// public static final [ACTION_VIEW_PERMISSION_USAGE](https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW_PERMISSION_USAGE)
        pub const ACTION_VIEW_PERMISSION_USAGE : &'static str = "android.intent.action.VIEW_PERMISSION_USAGE";

        /// public static final [ACTION_VOICE_COMMAND](https://developer.android.com/reference/android/content/Intent.html#ACTION_VOICE_COMMAND)
        pub const ACTION_VOICE_COMMAND : &'static str = "android.intent.action.VOICE_COMMAND";

        /// public static final [ACTION_WALLPAPER_CHANGED](https://developer.android.com/reference/android/content/Intent.html#ACTION_WALLPAPER_CHANGED)
        #[deprecated] pub const ACTION_WALLPAPER_CHANGED : &'static str = "android.intent.action.WALLPAPER_CHANGED";

        /// public static final [ACTION_WEB_SEARCH](https://developer.android.com/reference/android/content/Intent.html#ACTION_WEB_SEARCH)
        pub const ACTION_WEB_SEARCH : &'static str = "android.intent.action.WEB_SEARCH";

        /// public static final [CATEGORY_ALTERNATIVE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_ALTERNATIVE)
        pub const CATEGORY_ALTERNATIVE : &'static str = "android.intent.category.ALTERNATIVE";

        /// public static final [CATEGORY_APP_BROWSER](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_BROWSER)
        pub const CATEGORY_APP_BROWSER : &'static str = "android.intent.category.APP_BROWSER";

        /// public static final [CATEGORY_APP_CALCULATOR](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_CALCULATOR)
        pub const CATEGORY_APP_CALCULATOR : &'static str = "android.intent.category.APP_CALCULATOR";

        /// public static final [CATEGORY_APP_CALENDAR](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_CALENDAR)
        pub const CATEGORY_APP_CALENDAR : &'static str = "android.intent.category.APP_CALENDAR";

        /// public static final [CATEGORY_APP_CONTACTS](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_CONTACTS)
        pub const CATEGORY_APP_CONTACTS : &'static str = "android.intent.category.APP_CONTACTS";

        /// public static final [CATEGORY_APP_EMAIL](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_EMAIL)
        pub const CATEGORY_APP_EMAIL : &'static str = "android.intent.category.APP_EMAIL";

        /// public static final [CATEGORY_APP_FILES](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_FILES)
        pub const CATEGORY_APP_FILES : &'static str = "android.intent.category.APP_FILES";

        /// public static final [CATEGORY_APP_GALLERY](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_GALLERY)
        pub const CATEGORY_APP_GALLERY : &'static str = "android.intent.category.APP_GALLERY";

        /// public static final [CATEGORY_APP_MAPS](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_MAPS)
        pub const CATEGORY_APP_MAPS : &'static str = "android.intent.category.APP_MAPS";

        /// public static final [CATEGORY_APP_MARKET](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_MARKET)
        pub const CATEGORY_APP_MARKET : &'static str = "android.intent.category.APP_MARKET";

        /// public static final [CATEGORY_APP_MESSAGING](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_MESSAGING)
        pub const CATEGORY_APP_MESSAGING : &'static str = "android.intent.category.APP_MESSAGING";

        /// public static final [CATEGORY_APP_MUSIC](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_MUSIC)
        pub const CATEGORY_APP_MUSIC : &'static str = "android.intent.category.APP_MUSIC";

        /// public static final [CATEGORY_BROWSABLE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_BROWSABLE)
        pub const CATEGORY_BROWSABLE : &'static str = "android.intent.category.BROWSABLE";

        /// public static final [CATEGORY_CAR_DOCK](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_CAR_DOCK)
        pub const CATEGORY_CAR_DOCK : &'static str = "android.intent.category.CAR_DOCK";

        /// public static final [CATEGORY_CAR_MODE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_CAR_MODE)
        pub const CATEGORY_CAR_MODE : &'static str = "android.intent.category.CAR_MODE";

        /// public static final [CATEGORY_DEFAULT](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_DEFAULT)
        pub const CATEGORY_DEFAULT : &'static str = "android.intent.category.DEFAULT";

        /// public static final [CATEGORY_DESK_DOCK](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_DESK_DOCK)
        pub const CATEGORY_DESK_DOCK : &'static str = "android.intent.category.DESK_DOCK";

        /// public static final [CATEGORY_DEVELOPMENT_PREFERENCE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_DEVELOPMENT_PREFERENCE)
        pub const CATEGORY_DEVELOPMENT_PREFERENCE : &'static str = "android.intent.category.DEVELOPMENT_PREFERENCE";

        /// public static final [CATEGORY_EMBED](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_EMBED)
        pub const CATEGORY_EMBED : &'static str = "android.intent.category.EMBED";

        /// public static final [CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST)
        pub const CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST : &'static str = "android.intent.category.FRAMEWORK_INSTRUMENTATION_TEST";

        /// public static final [CATEGORY_HE_DESK_DOCK](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_HE_DESK_DOCK)
        pub const CATEGORY_HE_DESK_DOCK : &'static str = "android.intent.category.HE_DESK_DOCK";

        /// public static final [CATEGORY_HOME](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_HOME)
        pub const CATEGORY_HOME : &'static str = "android.intent.category.HOME";

        /// public static final [CATEGORY_INFO](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_INFO)
        pub const CATEGORY_INFO : &'static str = "android.intent.category.INFO";

        /// public static final [CATEGORY_LAUNCHER](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_LAUNCHER)
        pub const CATEGORY_LAUNCHER : &'static str = "android.intent.category.LAUNCHER";

        /// public static final [CATEGORY_LEANBACK_LAUNCHER](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_LEANBACK_LAUNCHER)
        pub const CATEGORY_LEANBACK_LAUNCHER : &'static str = "android.intent.category.LEANBACK_LAUNCHER";

        /// public static final [CATEGORY_LE_DESK_DOCK](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_LE_DESK_DOCK)
        pub const CATEGORY_LE_DESK_DOCK : &'static str = "android.intent.category.LE_DESK_DOCK";

        /// public static final [CATEGORY_MONKEY](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_MONKEY)
        pub const CATEGORY_MONKEY : &'static str = "android.intent.category.MONKEY";

        /// public static final [CATEGORY_OPENABLE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_OPENABLE)
        pub const CATEGORY_OPENABLE : &'static str = "android.intent.category.OPENABLE";

        /// public static final [CATEGORY_PREFERENCE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_PREFERENCE)
        pub const CATEGORY_PREFERENCE : &'static str = "android.intent.category.PREFERENCE";

        /// public static final [CATEGORY_SAMPLE_CODE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_SAMPLE_CODE)
        pub const CATEGORY_SAMPLE_CODE : &'static str = "android.intent.category.SAMPLE_CODE";

        /// public static final [CATEGORY_SECONDARY_HOME](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_SECONDARY_HOME)
        pub const CATEGORY_SECONDARY_HOME : &'static str = "android.intent.category.SECONDARY_HOME";

        /// public static final [CATEGORY_SELECTED_ALTERNATIVE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_SELECTED_ALTERNATIVE)
        pub const CATEGORY_SELECTED_ALTERNATIVE : &'static str = "android.intent.category.SELECTED_ALTERNATIVE";

        /// public static final [CATEGORY_TAB](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_TAB)
        pub const CATEGORY_TAB : &'static str = "android.intent.category.TAB";

        /// public static final [CATEGORY_TEST](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_TEST)
        pub const CATEGORY_TEST : &'static str = "android.intent.category.TEST";

        /// public static final [CATEGORY_TYPED_OPENABLE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_TYPED_OPENABLE)
        pub const CATEGORY_TYPED_OPENABLE : &'static str = "android.intent.category.TYPED_OPENABLE";

        /// public static final [CATEGORY_UNIT_TEST](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_UNIT_TEST)
        pub const CATEGORY_UNIT_TEST : &'static str = "android.intent.category.UNIT_TEST";

        /// public static final [CATEGORY_VOICE](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_VOICE)
        pub const CATEGORY_VOICE : &'static str = "android.intent.category.VOICE";

        /// public static final [CATEGORY_VR_HOME](https://developer.android.com/reference/android/content/Intent.html#CATEGORY_VR_HOME)
        pub const CATEGORY_VR_HOME : &'static str = "android.intent.category.VR_HOME";

        /// **get** public static final [CREATOR](https://developer.android.com/reference/android/content/Intent.html#CREATOR)
        ///
        /// Required feature: android-os-Parcelable_Creator
        #[cfg(any(feature = "all", feature = "android-os-Parcelable_Creator"))]
        pub fn CREATOR<'env>(env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::Parcelable_Creator>> {
            unsafe {
                let (class, field) = env.require_class_static_field("android/content/Intent\0", "CREATOR\0", "Landroid/os/Parcelable$Creator;\0");
                env.get_static_object_field(class, field)
            }
        }

        /// public static final [EXTRA_ALARM_COUNT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ALARM_COUNT)
        pub const EXTRA_ALARM_COUNT : &'static str = "android.intent.extra.ALARM_COUNT";

        /// public static final [EXTRA_ALLOW_MULTIPLE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ALLOW_MULTIPLE)
        pub const EXTRA_ALLOW_MULTIPLE : &'static str = "android.intent.extra.ALLOW_MULTIPLE";

        /// public static final [EXTRA_ALLOW_REPLACE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ALLOW_REPLACE)
        #[deprecated] pub const EXTRA_ALLOW_REPLACE : &'static str = "android.intent.extra.ALLOW_REPLACE";

        /// public static final [EXTRA_ALTERNATE_INTENTS](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ALTERNATE_INTENTS)
        pub const EXTRA_ALTERNATE_INTENTS : &'static str = "android.intent.extra.ALTERNATE_INTENTS";

        /// public static final [EXTRA_ASSIST_CONTEXT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_CONTEXT)
        pub const EXTRA_ASSIST_CONTEXT : &'static str = "android.intent.extra.ASSIST_CONTEXT";

        /// public static final [EXTRA_ASSIST_INPUT_DEVICE_ID](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_INPUT_DEVICE_ID)
        pub const EXTRA_ASSIST_INPUT_DEVICE_ID : &'static str = "android.intent.extra.ASSIST_INPUT_DEVICE_ID";

        /// public static final [EXTRA_ASSIST_INPUT_HINT_KEYBOARD](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_INPUT_HINT_KEYBOARD)
        pub const EXTRA_ASSIST_INPUT_HINT_KEYBOARD : &'static str = "android.intent.extra.ASSIST_INPUT_HINT_KEYBOARD";

        /// public static final [EXTRA_ASSIST_PACKAGE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_PACKAGE)
        pub const EXTRA_ASSIST_PACKAGE : &'static str = "android.intent.extra.ASSIST_PACKAGE";

        /// public static final [EXTRA_ASSIST_UID](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_UID)
        pub const EXTRA_ASSIST_UID : &'static str = "android.intent.extra.ASSIST_UID";

        /// public static final [EXTRA_AUTO_LAUNCH_SINGLE_CHOICE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_AUTO_LAUNCH_SINGLE_CHOICE)
        pub const EXTRA_AUTO_LAUNCH_SINGLE_CHOICE : &'static str = "android.intent.extra.AUTO_LAUNCH_SINGLE_CHOICE";

        /// public static final [EXTRA_BCC](https://developer.android.com/reference/android/content/Intent.html#EXTRA_BCC)
        pub const EXTRA_BCC : &'static str = "android.intent.extra.BCC";

        /// public static final [EXTRA_BUG_REPORT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_BUG_REPORT)
        pub const EXTRA_BUG_REPORT : &'static str = "android.intent.extra.BUG_REPORT";

        /// public static final [EXTRA_CC](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CC)
        pub const EXTRA_CC : &'static str = "android.intent.extra.CC";

        /// public static final [EXTRA_CHANGED_COMPONENT_NAME](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHANGED_COMPONENT_NAME)
        #[deprecated] pub const EXTRA_CHANGED_COMPONENT_NAME : &'static str = "android.intent.extra.changed_component_name";

        /// public static final [EXTRA_CHANGED_COMPONENT_NAME_LIST](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHANGED_COMPONENT_NAME_LIST)
        pub const EXTRA_CHANGED_COMPONENT_NAME_LIST : &'static str = "android.intent.extra.changed_component_name_list";

        /// public static final [EXTRA_CHANGED_PACKAGE_LIST](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHANGED_PACKAGE_LIST)
        pub const EXTRA_CHANGED_PACKAGE_LIST : &'static str = "android.intent.extra.changed_package_list";

        /// public static final [EXTRA_CHANGED_UID_LIST](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHANGED_UID_LIST)
        pub const EXTRA_CHANGED_UID_LIST : &'static str = "android.intent.extra.changed_uid_list";

        /// public static final [EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER)
        pub const EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER : &'static str = "android.intent.extra.CHOOSER_REFINEMENT_INTENT_SENDER";

        /// public static final [EXTRA_CHOOSER_TARGETS](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_TARGETS)
        pub const EXTRA_CHOOSER_TARGETS : &'static str = "android.intent.extra.CHOOSER_TARGETS";

        /// public static final [EXTRA_CHOSEN_COMPONENT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOSEN_COMPONENT)
        pub const EXTRA_CHOSEN_COMPONENT : &'static str = "android.intent.extra.CHOSEN_COMPONENT";

        /// public static final [EXTRA_CHOSEN_COMPONENT_INTENT_SENDER](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOSEN_COMPONENT_INTENT_SENDER)
        pub const EXTRA_CHOSEN_COMPONENT_INTENT_SENDER : &'static str = "android.intent.extra.CHOSEN_COMPONENT_INTENT_SENDER";

        /// public static final [EXTRA_COMPONENT_NAME](https://developer.android.com/reference/android/content/Intent.html#EXTRA_COMPONENT_NAME)
        pub const EXTRA_COMPONENT_NAME : &'static str = "android.intent.extra.COMPONENT_NAME";

        /// public static final [EXTRA_CONTENT_ANNOTATIONS](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CONTENT_ANNOTATIONS)
        pub const EXTRA_CONTENT_ANNOTATIONS : &'static str = "android.intent.extra.CONTENT_ANNOTATIONS";

        /// public static final [EXTRA_CONTENT_QUERY](https://developer.android.com/reference/android/content/Intent.html#EXTRA_CONTENT_QUERY)
        pub const EXTRA_CONTENT_QUERY : &'static str = "android.intent.extra.CONTENT_QUERY";

        /// public static final [EXTRA_DATA_REMOVED](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DATA_REMOVED)
        pub const EXTRA_DATA_REMOVED : &'static str = "android.intent.extra.DATA_REMOVED";

        /// public static final [EXTRA_DOCK_STATE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE)
        pub const EXTRA_DOCK_STATE : &'static str = "android.intent.extra.DOCK_STATE";

        /// public static final [EXTRA_DOCK_STATE_CAR](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_CAR)
        pub const EXTRA_DOCK_STATE_CAR : i32 = 2;

        /// public static final [EXTRA_DOCK_STATE_DESK](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_DESK)
        pub const EXTRA_DOCK_STATE_DESK : i32 = 1;

        /// public static final [EXTRA_DOCK_STATE_HE_DESK](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_HE_DESK)
        pub const EXTRA_DOCK_STATE_HE_DESK : i32 = 4;

        /// public static final [EXTRA_DOCK_STATE_LE_DESK](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_LE_DESK)
        pub const EXTRA_DOCK_STATE_LE_DESK : i32 = 3;

        /// public static final [EXTRA_DOCK_STATE_UNDOCKED](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_UNDOCKED)
        pub const EXTRA_DOCK_STATE_UNDOCKED : i32 = 0;

        /// public static final [EXTRA_DONT_KILL_APP](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DONT_KILL_APP)
        pub const EXTRA_DONT_KILL_APP : &'static str = "android.intent.extra.DONT_KILL_APP";

        /// public static final [EXTRA_DURATION_MILLIS](https://developer.android.com/reference/android/content/Intent.html#EXTRA_DURATION_MILLIS)
        pub const EXTRA_DURATION_MILLIS : &'static str = "android.intent.extra.DURATION_MILLIS";

        /// public static final [EXTRA_EMAIL](https://developer.android.com/reference/android/content/Intent.html#EXTRA_EMAIL)
        pub const EXTRA_EMAIL : &'static str = "android.intent.extra.EMAIL";

        /// public static final [EXTRA_EXCLUDE_COMPONENTS](https://developer.android.com/reference/android/content/Intent.html#EXTRA_EXCLUDE_COMPONENTS)
        pub const EXTRA_EXCLUDE_COMPONENTS : &'static str = "android.intent.extra.EXCLUDE_COMPONENTS";

        /// public static final [EXTRA_FROM_STORAGE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_FROM_STORAGE)
        pub const EXTRA_FROM_STORAGE : &'static str = "android.intent.extra.FROM_STORAGE";

        /// public static final [EXTRA_HTML_TEXT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_HTML_TEXT)
        pub const EXTRA_HTML_TEXT : &'static str = "android.intent.extra.HTML_TEXT";

        /// public static final [EXTRA_INDEX](https://developer.android.com/reference/android/content/Intent.html#EXTRA_INDEX)
        pub const EXTRA_INDEX : &'static str = "android.intent.extra.INDEX";

        /// public static final [EXTRA_INITIAL_INTENTS](https://developer.android.com/reference/android/content/Intent.html#EXTRA_INITIAL_INTENTS)
        pub const EXTRA_INITIAL_INTENTS : &'static str = "android.intent.extra.INITIAL_INTENTS";

        /// public static final [EXTRA_INSTALLER_PACKAGE_NAME](https://developer.android.com/reference/android/content/Intent.html#EXTRA_INSTALLER_PACKAGE_NAME)
        pub const EXTRA_INSTALLER_PACKAGE_NAME : &'static str = "android.intent.extra.INSTALLER_PACKAGE_NAME";

        /// public static final [EXTRA_INTENT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_INTENT)
        pub const EXTRA_INTENT : &'static str = "android.intent.extra.INTENT";

        /// public static final [EXTRA_KEY_EVENT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_KEY_EVENT)
        pub const EXTRA_KEY_EVENT : &'static str = "android.intent.extra.KEY_EVENT";

        /// public static final [EXTRA_LOCAL_ONLY](https://developer.android.com/reference/android/content/Intent.html#EXTRA_LOCAL_ONLY)
        pub const EXTRA_LOCAL_ONLY : &'static str = "android.intent.extra.LOCAL_ONLY";

        /// public static final [EXTRA_LOCUS_ID](https://developer.android.com/reference/android/content/Intent.html#EXTRA_LOCUS_ID)
        pub const EXTRA_LOCUS_ID : &'static str = "android.intent.extra.LOCUS_ID";

        /// public static final [EXTRA_MIME_TYPES](https://developer.android.com/reference/android/content/Intent.html#EXTRA_MIME_TYPES)
        pub const EXTRA_MIME_TYPES : &'static str = "android.intent.extra.MIME_TYPES";

        /// public static final [EXTRA_NOT_UNKNOWN_SOURCE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_NOT_UNKNOWN_SOURCE)
        pub const EXTRA_NOT_UNKNOWN_SOURCE : &'static str = "android.intent.extra.NOT_UNKNOWN_SOURCE";

        /// public static final [EXTRA_ORIGINATING_URI](https://developer.android.com/reference/android/content/Intent.html#EXTRA_ORIGINATING_URI)
        pub const EXTRA_ORIGINATING_URI : &'static str = "android.intent.extra.ORIGINATING_URI";

        /// public static final [EXTRA_PACKAGE_NAME](https://developer.android.com/reference/android/content/Intent.html#EXTRA_PACKAGE_NAME)
        pub const EXTRA_PACKAGE_NAME : &'static str = "android.intent.extra.PACKAGE_NAME";

        /// public static final [EXTRA_PHONE_NUMBER](https://developer.android.com/reference/android/content/Intent.html#EXTRA_PHONE_NUMBER)
        pub const EXTRA_PHONE_NUMBER : &'static str = "android.intent.extra.PHONE_NUMBER";

        /// public static final [EXTRA_PROCESS_TEXT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_PROCESS_TEXT)
        pub const EXTRA_PROCESS_TEXT : &'static str = "android.intent.extra.PROCESS_TEXT";

        /// public static final [EXTRA_PROCESS_TEXT_READONLY](https://developer.android.com/reference/android/content/Intent.html#EXTRA_PROCESS_TEXT_READONLY)
        pub const EXTRA_PROCESS_TEXT_READONLY : &'static str = "android.intent.extra.PROCESS_TEXT_READONLY";

        /// public static final [EXTRA_QUICK_VIEW_FEATURES](https://developer.android.com/reference/android/content/Intent.html#EXTRA_QUICK_VIEW_FEATURES)
        pub const EXTRA_QUICK_VIEW_FEATURES : &'static str = "android.intent.extra.QUICK_VIEW_FEATURES";

        /// public static final [EXTRA_QUIET_MODE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_QUIET_MODE)
        pub const EXTRA_QUIET_MODE : &'static str = "android.intent.extra.QUIET_MODE";

        /// public static final [EXTRA_REFERRER](https://developer.android.com/reference/android/content/Intent.html#EXTRA_REFERRER)
        pub const EXTRA_REFERRER : &'static str = "android.intent.extra.REFERRER";

        /// public static final [EXTRA_REFERRER_NAME](https://developer.android.com/reference/android/content/Intent.html#EXTRA_REFERRER_NAME)
        pub const EXTRA_REFERRER_NAME : &'static str = "android.intent.extra.REFERRER_NAME";

        /// public static final [EXTRA_REMOTE_INTENT_TOKEN](https://developer.android.com/reference/android/content/Intent.html#EXTRA_REMOTE_INTENT_TOKEN)
        pub const EXTRA_REMOTE_INTENT_TOKEN : &'static str = "android.intent.extra.remote_intent_token";

        /// public static final [EXTRA_REPLACEMENT_EXTRAS](https://developer.android.com/reference/android/content/Intent.html#EXTRA_REPLACEMENT_EXTRAS)
        pub const EXTRA_REPLACEMENT_EXTRAS : &'static str = "android.intent.extra.REPLACEMENT_EXTRAS";

        /// public static final [EXTRA_REPLACING](https://developer.android.com/reference/android/content/Intent.html#EXTRA_REPLACING)
        pub const EXTRA_REPLACING : &'static str = "android.intent.extra.REPLACING";

        /// public static final [EXTRA_RESTRICTIONS_BUNDLE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_RESTRICTIONS_BUNDLE)
        pub const EXTRA_RESTRICTIONS_BUNDLE : &'static str = "android.intent.extra.restrictions_bundle";

        /// public static final [EXTRA_RESTRICTIONS_INTENT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_RESTRICTIONS_INTENT)
        pub const EXTRA_RESTRICTIONS_INTENT : &'static str = "android.intent.extra.restrictions_intent";

        /// public static final [EXTRA_RESTRICTIONS_LIST](https://developer.android.com/reference/android/content/Intent.html#EXTRA_RESTRICTIONS_LIST)
        pub const EXTRA_RESTRICTIONS_LIST : &'static str = "android.intent.extra.restrictions_list";

        /// public static final [EXTRA_RESULT_RECEIVER](https://developer.android.com/reference/android/content/Intent.html#EXTRA_RESULT_RECEIVER)
        pub const EXTRA_RESULT_RECEIVER : &'static str = "android.intent.extra.RESULT_RECEIVER";

        /// public static final [EXTRA_RETURN_RESULT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_RETURN_RESULT)
        pub const EXTRA_RETURN_RESULT : &'static str = "android.intent.extra.RETURN_RESULT";

        /// public static final [EXTRA_SHORTCUT_ICON](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_ICON)
        #[deprecated] pub const EXTRA_SHORTCUT_ICON : &'static str = "android.intent.extra.shortcut.ICON";

        /// public static final [EXTRA_SHORTCUT_ICON_RESOURCE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_ICON_RESOURCE)
        #[deprecated] pub const EXTRA_SHORTCUT_ICON_RESOURCE : &'static str = "android.intent.extra.shortcut.ICON_RESOURCE";

        /// public static final [EXTRA_SHORTCUT_ID](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_ID)
        pub const EXTRA_SHORTCUT_ID : &'static str = "android.intent.extra.shortcut.ID";

        /// public static final [EXTRA_SHORTCUT_INTENT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_INTENT)
        #[deprecated] pub const EXTRA_SHORTCUT_INTENT : &'static str = "android.intent.extra.shortcut.INTENT";

        /// public static final [EXTRA_SHORTCUT_NAME](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_NAME)
        #[deprecated] pub const EXTRA_SHORTCUT_NAME : &'static str = "android.intent.extra.shortcut.NAME";

        /// public static final [EXTRA_SHUTDOWN_USERSPACE_ONLY](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHUTDOWN_USERSPACE_ONLY)
        pub const EXTRA_SHUTDOWN_USERSPACE_ONLY : &'static str = "android.intent.extra.SHUTDOWN_USERSPACE_ONLY";

        /// public static final [EXTRA_SPLIT_NAME](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SPLIT_NAME)
        pub const EXTRA_SPLIT_NAME : &'static str = "android.intent.extra.SPLIT_NAME";

        /// public static final [EXTRA_STREAM](https://developer.android.com/reference/android/content/Intent.html#EXTRA_STREAM)
        pub const EXTRA_STREAM : &'static str = "android.intent.extra.STREAM";

        /// public static final [EXTRA_SUBJECT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SUBJECT)
        pub const EXTRA_SUBJECT : &'static str = "android.intent.extra.SUBJECT";

        /// public static final [EXTRA_SUSPENDED_PACKAGE_EXTRAS](https://developer.android.com/reference/android/content/Intent.html#EXTRA_SUSPENDED_PACKAGE_EXTRAS)
        pub const EXTRA_SUSPENDED_PACKAGE_EXTRAS : &'static str = "android.intent.extra.SUSPENDED_PACKAGE_EXTRAS";

        /// public static final [EXTRA_TEMPLATE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_TEMPLATE)
        pub const EXTRA_TEMPLATE : &'static str = "android.intent.extra.TEMPLATE";

        /// public static final [EXTRA_TEXT](https://developer.android.com/reference/android/content/Intent.html#EXTRA_TEXT)
        pub const EXTRA_TEXT : &'static str = "android.intent.extra.TEXT";

        /// public static final [EXTRA_TITLE](https://developer.android.com/reference/android/content/Intent.html#EXTRA_TITLE)
        pub const EXTRA_TITLE : &'static str = "android.intent.extra.TITLE";

        /// public static final [EXTRA_UID](https://developer.android.com/reference/android/content/Intent.html#EXTRA_UID)
        pub const EXTRA_UID : &'static str = "android.intent.extra.UID";

        /// public static final [EXTRA_USER](https://developer.android.com/reference/android/content/Intent.html#EXTRA_USER)
        pub const EXTRA_USER : &'static str = "android.intent.extra.USER";

        /// public static final [FILL_IN_ACTION](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_ACTION)
        pub const FILL_IN_ACTION : i32 = 1;

        /// public static final [FILL_IN_CATEGORIES](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_CATEGORIES)
        pub const FILL_IN_CATEGORIES : i32 = 4;

        /// public static final [FILL_IN_CLIP_DATA](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_CLIP_DATA)
        pub const FILL_IN_CLIP_DATA : i32 = 128;

        /// public static final [FILL_IN_COMPONENT](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_COMPONENT)
        pub const FILL_IN_COMPONENT : i32 = 8;

        /// public static final [FILL_IN_DATA](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_DATA)
        pub const FILL_IN_DATA : i32 = 2;

        /// public static final [FILL_IN_IDENTIFIER](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_IDENTIFIER)
        pub const FILL_IN_IDENTIFIER : i32 = 256;

        /// public static final [FILL_IN_PACKAGE](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_PACKAGE)
        pub const FILL_IN_PACKAGE : i32 = 16;

        /// public static final [FILL_IN_SELECTOR](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_SELECTOR)
        pub const FILL_IN_SELECTOR : i32 = 64;

        /// public static final [FILL_IN_SOURCE_BOUNDS](https://developer.android.com/reference/android/content/Intent.html#FILL_IN_SOURCE_BOUNDS)
        pub const FILL_IN_SOURCE_BOUNDS : i32 = 32;

        /// public static final [FLAG_ACTIVITY_BROUGHT_TO_FRONT](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_BROUGHT_TO_FRONT)
        pub const FLAG_ACTIVITY_BROUGHT_TO_FRONT : i32 = 4194304;

        /// public static final [FLAG_ACTIVITY_CLEAR_TASK](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_CLEAR_TASK)
        pub const FLAG_ACTIVITY_CLEAR_TASK : i32 = 32768;

        /// public static final [FLAG_ACTIVITY_CLEAR_TOP](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_CLEAR_TOP)
        pub const FLAG_ACTIVITY_CLEAR_TOP : i32 = 67108864;

        /// public static final [FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET)
        #[deprecated] pub const FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET : i32 = 524288;

        /// public static final [FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS)
        pub const FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS : i32 = 8388608;

        /// public static final [FLAG_ACTIVITY_FORWARD_RESULT](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_FORWARD_RESULT)
        pub const FLAG_ACTIVITY_FORWARD_RESULT : i32 = 33554432;

        /// public static final [FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY)
        pub const FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY : i32 = 1048576;

        /// public static final [FLAG_ACTIVITY_LAUNCH_ADJACENT](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_LAUNCH_ADJACENT)
        pub const FLAG_ACTIVITY_LAUNCH_ADJACENT : i32 = 4096;

        /// public static final [FLAG_ACTIVITY_MATCH_EXTERNAL](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_MATCH_EXTERNAL)
        pub const FLAG_ACTIVITY_MATCH_EXTERNAL : i32 = 2048;

        /// public static final [FLAG_ACTIVITY_MULTIPLE_TASK](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_MULTIPLE_TASK)
        pub const FLAG_ACTIVITY_MULTIPLE_TASK : i32 = 134217728;

        /// public static final [FLAG_ACTIVITY_NEW_DOCUMENT](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NEW_DOCUMENT)
        pub const FLAG_ACTIVITY_NEW_DOCUMENT : i32 = 524288;

        /// public static final [FLAG_ACTIVITY_NEW_TASK](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NEW_TASK)
        pub const FLAG_ACTIVITY_NEW_TASK : i32 = 268435456;

        /// public static final [FLAG_ACTIVITY_NO_ANIMATION](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_ANIMATION)
        pub const FLAG_ACTIVITY_NO_ANIMATION : i32 = 65536;

        /// public static final [FLAG_ACTIVITY_NO_HISTORY](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_HISTORY)
        pub const FLAG_ACTIVITY_NO_HISTORY : i32 = 1073741824;

        /// public static final [FLAG_ACTIVITY_NO_USER_ACTION](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_USER_ACTION)
        pub const FLAG_ACTIVITY_NO_USER_ACTION : i32 = 262144;

        /// public static final [FLAG_ACTIVITY_PREVIOUS_IS_TOP](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_PREVIOUS_IS_TOP)
        pub const FLAG_ACTIVITY_PREVIOUS_IS_TOP : i32 = 16777216;

        /// public static final [FLAG_ACTIVITY_REORDER_TO_FRONT](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_REORDER_TO_FRONT)
        pub const FLAG_ACTIVITY_REORDER_TO_FRONT : i32 = 131072;

        /// public static final [FLAG_ACTIVITY_RESET_TASK_IF_NEEDED](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_RESET_TASK_IF_NEEDED)
        pub const FLAG_ACTIVITY_RESET_TASK_IF_NEEDED : i32 = 2097152;

        /// public static final [FLAG_ACTIVITY_RETAIN_IN_RECENTS](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_RETAIN_IN_RECENTS)
        pub const FLAG_ACTIVITY_RETAIN_IN_RECENTS : i32 = 8192;

        /// public static final [FLAG_ACTIVITY_SINGLE_TOP](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_SINGLE_TOP)
        pub const FLAG_ACTIVITY_SINGLE_TOP : i32 = 536870912;

        /// public static final [FLAG_ACTIVITY_TASK_ON_HOME](https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_TASK_ON_HOME)
        pub const FLAG_ACTIVITY_TASK_ON_HOME : i32 = 16384;

        /// public static final [FLAG_DEBUG_LOG_RESOLUTION](https://developer.android.com/reference/android/content/Intent.html#FLAG_DEBUG_LOG_RESOLUTION)
        pub const FLAG_DEBUG_LOG_RESOLUTION : i32 = 8;

        /// public static final [FLAG_DIRECT_BOOT_AUTO](https://developer.android.com/reference/android/content/Intent.html#FLAG_DIRECT_BOOT_AUTO)
        pub const FLAG_DIRECT_BOOT_AUTO : i32 = 256;

        /// public static final [FLAG_EXCLUDE_STOPPED_PACKAGES](https://developer.android.com/reference/android/content/Intent.html#FLAG_EXCLUDE_STOPPED_PACKAGES)
        pub const FLAG_EXCLUDE_STOPPED_PACKAGES : i32 = 16;

        /// public static final [FLAG_FROM_BACKGROUND](https://developer.android.com/reference/android/content/Intent.html#FLAG_FROM_BACKGROUND)
        pub const FLAG_FROM_BACKGROUND : i32 = 4;

        /// public static final [FLAG_GRANT_PERSISTABLE_URI_PERMISSION](https://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_PERSISTABLE_URI_PERMISSION)
        pub const FLAG_GRANT_PERSISTABLE_URI_PERMISSION : i32 = 64;

        /// public static final [FLAG_GRANT_PREFIX_URI_PERMISSION](https://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_PREFIX_URI_PERMISSION)
        pub const FLAG_GRANT_PREFIX_URI_PERMISSION : i32 = 128;

        /// public static final [FLAG_GRANT_READ_URI_PERMISSION](https://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_READ_URI_PERMISSION)
        pub const FLAG_GRANT_READ_URI_PERMISSION : i32 = 1;

        /// public static final [FLAG_GRANT_WRITE_URI_PERMISSION](https://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_WRITE_URI_PERMISSION)
        pub const FLAG_GRANT_WRITE_URI_PERMISSION : i32 = 2;

        /// public static final [FLAG_INCLUDE_STOPPED_PACKAGES](https://developer.android.com/reference/android/content/Intent.html#FLAG_INCLUDE_STOPPED_PACKAGES)
        pub const FLAG_INCLUDE_STOPPED_PACKAGES : i32 = 32;

        /// public static final [FLAG_RECEIVER_FOREGROUND](https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_FOREGROUND)
        pub const FLAG_RECEIVER_FOREGROUND : i32 = 268435456;

        /// public static final [FLAG_RECEIVER_NO_ABORT](https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_NO_ABORT)
        pub const FLAG_RECEIVER_NO_ABORT : i32 = 134217728;

        /// public static final [FLAG_RECEIVER_REGISTERED_ONLY](https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_REGISTERED_ONLY)
        pub const FLAG_RECEIVER_REGISTERED_ONLY : i32 = 1073741824;

        /// public static final [FLAG_RECEIVER_REPLACE_PENDING](https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_REPLACE_PENDING)
        pub const FLAG_RECEIVER_REPLACE_PENDING : i32 = 536870912;

        /// public static final [FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS](https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS)
        pub const FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS : i32 = 2097152;

        /// public static final [METADATA_DOCK_HOME](https://developer.android.com/reference/android/content/Intent.html#METADATA_DOCK_HOME)
        pub const METADATA_DOCK_HOME : &'static str = "android.dock_home";

        /// public static final [URI_ALLOW_UNSAFE](https://developer.android.com/reference/android/content/Intent.html#URI_ALLOW_UNSAFE)
        pub const URI_ALLOW_UNSAFE : i32 = 4;

        /// public static final [URI_ANDROID_APP_SCHEME](https://developer.android.com/reference/android/content/Intent.html#URI_ANDROID_APP_SCHEME)
        pub const URI_ANDROID_APP_SCHEME : i32 = 2;

        /// public static final [URI_INTENT_SCHEME](https://developer.android.com/reference/android/content/Intent.html#URI_INTENT_SCHEME)
        pub const URI_INTENT_SCHEME : i32 = 1;
    }
}
