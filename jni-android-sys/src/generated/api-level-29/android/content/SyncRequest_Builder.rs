// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-content-SyncRequest_Builder"))]
__jni_bindgen! {
    /// public class [SyncRequest.Builder](https://developer.android.com/reference/android/content/SyncRequest.Builder.html)
    ///
    /// Required feature: android-content-SyncRequest_Builder
    public class SyncRequest_Builder ("android/content/SyncRequest$Builder") extends crate::java::lang::Object {

        /// [Builder](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#Builder())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [syncOnce](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#syncOnce())
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn syncOnce<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "syncOnce", .descriptor == "()Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "syncOnce\0", "()Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [syncPeriodic](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#syncPeriodic(long,%20long))
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn syncPeriodic<'env>(&'env self, arg0: i64, arg1: i64) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "syncPeriodic", .descriptor == "(JJ)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "syncPeriodic\0", "(JJ)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setDisallowMetered](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setDisallowMetered(boolean))
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn setDisallowMetered<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setDisallowMetered", .descriptor == "(Z)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setDisallowMetered\0", "(Z)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setRequiresCharging](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setRequiresCharging(boolean))
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn setRequiresCharging<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setRequiresCharging", .descriptor == "(Z)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setRequiresCharging\0", "(Z)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSyncAdapter](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setSyncAdapter(android.accounts.Account,%20java.lang.String))
        ///
        /// Required features: "android-accounts-Account", "android-content-SyncRequest_Builder", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-accounts-Account", feature = "android-content-SyncRequest_Builder", feature = "java-lang-String")))]
        pub fn setSyncAdapter<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::accounts::Account>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setSyncAdapter", .descriptor == "(Landroid/accounts/Account;Ljava/lang/String;)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setSyncAdapter\0", "(Landroid/accounts/Account;Ljava/lang/String;)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExtras](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setExtras(android.os.Bundle))
        ///
        /// Required features: "android-content-SyncRequest_Builder", "android-os-Bundle"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder", feature = "android-os-Bundle")))]
        pub fn setExtras<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::Bundle>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setExtras", .descriptor == "(Landroid/os/Bundle;)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setExtras\0", "(Landroid/os/Bundle;)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setNoRetry](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setNoRetry(boolean))
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn setNoRetry<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setNoRetry", .descriptor == "(Z)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setNoRetry\0", "(Z)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIgnoreSettings](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setIgnoreSettings(boolean))
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn setIgnoreSettings<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setIgnoreSettings", .descriptor == "(Z)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setIgnoreSettings\0", "(Z)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setIgnoreBackoff](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setIgnoreBackoff(boolean))
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn setIgnoreBackoff<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setIgnoreBackoff", .descriptor == "(Z)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setIgnoreBackoff\0", "(Z)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setManual](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setManual(boolean))
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn setManual<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setManual", .descriptor == "(Z)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setManual\0", "(Z)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setExpedited](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#setExpedited(boolean))
        ///
        /// Required features: "android-content-SyncRequest_Builder"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest_Builder")))]
        pub fn setExpedited<'env>(&'env self, arg0: bool) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest_Builder>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "setExpedited", .descriptor == "(Z)Landroid/content/SyncRequest$Builder;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "setExpedited\0", "(Z)Landroid/content/SyncRequest$Builder;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [build](https://developer.android.com/reference/android/content/SyncRequest.Builder.html#build())
        ///
        /// Required features: "android-content-SyncRequest"
        #[cfg(any(feature = "all", all(feature = "android-content-SyncRequest")))]
        pub fn build<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::content::SyncRequest>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/content/SyncRequest$Builder", java.flags == PUBLIC, .name == "build", .descriptor == "()Landroid/content/SyncRequest;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/content/SyncRequest$Builder\0", "build\0", "()Landroid/content/SyncRequest;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
