// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-util-EventLogTags"))]
__jni_bindgen! {
    /// public class [EventLogTags](https://developer.android.com/reference/android/util/EventLogTags.html)
    ///
    /// Required feature: android-util-EventLogTags
    #[deprecated] public class EventLogTags ("android/util/EventLogTags") extends crate::java::lang::Object {

        /// [EventLogTags](https://developer.android.com/reference/android/util/EventLogTags.html#EventLogTags())
        #[deprecated] pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::util::EventLogTags>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/EventLogTags", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/EventLogTags\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [EventLogTags](https://developer.android.com/reference/android/util/EventLogTags.html#EventLogTags(java.io.BufferedReader))
        ///
        /// Required features: "java-io-BufferedReader"
        #[cfg(any(feature = "all", all(feature = "java-io-BufferedReader")))]
        #[deprecated] pub fn new_BufferedReader<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::io::BufferedReader>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::util::EventLogTags>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/EventLogTags", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/io/BufferedReader;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/EventLogTags\0", "<init>\0", "(Ljava/io/BufferedReader;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get](https://developer.android.com/reference/android/util/EventLogTags.html#get(java.lang.String))
        ///
        /// Required features: "android-util-EventLogTags_Description", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-util-EventLogTags_Description", feature = "java-lang-String")))]
        #[deprecated] pub fn get_String<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::util::EventLogTags_Description>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/EventLogTags", java.flags == PUBLIC, .name == "get", .descriptor == "(Ljava/lang/String;)Landroid/util/EventLogTags$Description;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/EventLogTags\0", "get\0", "(Ljava/lang/String;)Landroid/util/EventLogTags$Description;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [get](https://developer.android.com/reference/android/util/EventLogTags.html#get(int))
        ///
        /// Required features: "android-util-EventLogTags_Description"
        #[cfg(any(feature = "all", all(feature = "android-util-EventLogTags_Description")))]
        #[deprecated] pub fn get_int<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::util::EventLogTags_Description>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/EventLogTags", java.flags == PUBLIC, .name == "get", .descriptor == "(I)Landroid/util/EventLogTags$Description;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/EventLogTags\0", "get\0", "(I)Landroid/util/EventLogTags$Description;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }
    }
}
