// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-util-Half"))]
__jni_bindgen! {
    /// public final class [Half](https://developer.android.com/reference/android/util/Half.html)
    ///
    /// Required feature: android-util-Half
    public final class Half ("android/util/Half") extends crate::java::lang::Number, implements crate::java::lang::Comparable {

        /// [Half](https://developer.android.com/reference/android/util/Half.html#Half(short))
        pub fn new_short<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::util::Half>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "<init>", .descriptor == "(S)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "<init>\0", "(S)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Half](https://developer.android.com/reference/android/util/Half.html#Half(float))
        pub fn new_float<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::util::Half>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "<init>", .descriptor == "(F)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "<init>\0", "(F)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Half](https://developer.android.com/reference/android/util/Half.html#Half(double))
        pub fn new_double<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f64) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::util::Half>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "<init>", .descriptor == "(D)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "<init>\0", "(D)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [Half](https://developer.android.com/reference/android/util/Half.html#Half(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn new_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::util::Half>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "<init>", .descriptor == "(Ljava/lang/String;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "<init>\0", "(Ljava/lang/String;)V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [halfValue](https://developer.android.com/reference/android/util/Half.html#halfValue())
        pub fn halfValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "halfValue", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "halfValue\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [byteValue](https://developer.android.com/reference/android/util/Half.html#byteValue())
        pub fn byteValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<i8, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "byteValue", .descriptor == "()B"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "byteValue\0", "()B\0");
                __jni_env.call_byte_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [shortValue](https://developer.android.com/reference/android/util/Half.html#shortValue())
        pub fn shortValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "shortValue", .descriptor == "()S"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "shortValue\0", "()S\0");
                __jni_env.call_short_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [intValue](https://developer.android.com/reference/android/util/Half.html#intValue())
        pub fn intValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "intValue", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "intValue\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [longValue](https://developer.android.com/reference/android/util/Half.html#longValue())
        pub fn longValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<i64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "longValue", .descriptor == "()J"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "longValue\0", "()J\0");
                __jni_env.call_long_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [floatValue](https://developer.android.com/reference/android/util/Half.html#floatValue())
        pub fn floatValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "floatValue", .descriptor == "()F"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "floatValue\0", "()F\0");
                __jni_env.call_float_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [doubleValue](https://developer.android.com/reference/android/util/Half.html#doubleValue())
        pub fn doubleValue<'env>(&'env self) -> __jni_bindgen::std::result::Result<f64, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "doubleValue", .descriptor == "()D"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "doubleValue\0", "()D\0");
                __jni_env.call_double_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNaN](https://developer.android.com/reference/android/util/Half.html#isNaN())
        pub fn isNaN<'env>(&'env self) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "isNaN", .descriptor == "()Z"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "isNaN\0", "()Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/util/Half.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/util/Half.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/util/Half.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [compareTo](https://developer.android.com/reference/android/util/Half.html#compareTo(android.util.Half))
        ///
        /// Required features: "android-util-Half"
        #[cfg(any(feature = "all", all(feature = "android-util-Half")))]
        pub fn compareTo_Half<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::Half>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC, .name == "compareTo", .descriptor == "(Landroid/util/Half;)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "compareTo\0", "(Landroid/util/Half;)I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/util/Half.html#hashCode(short))
        pub fn hashCode_short<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "hashCode", .descriptor == "(S)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "hashCode\0", "(S)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [compare](https://developer.android.com/reference/android/util/Half.html#compare(short,%20short))
        pub fn compare<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "compare", .descriptor == "(SS)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "compare\0", "(SS)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [halfToShortBits](https://developer.android.com/reference/android/util/Half.html#halfToShortBits(short))
        pub fn halfToShortBits<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "halfToShortBits", .descriptor == "(S)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "halfToShortBits\0", "(S)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [halfToIntBits](https://developer.android.com/reference/android/util/Half.html#halfToIntBits(short))
        pub fn halfToIntBits<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "halfToIntBits", .descriptor == "(S)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "halfToIntBits\0", "(S)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [halfToRawIntBits](https://developer.android.com/reference/android/util/Half.html#halfToRawIntBits(short))
        pub fn halfToRawIntBits<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "halfToRawIntBits", .descriptor == "(S)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "halfToRawIntBits\0", "(S)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [intBitsToHalf](https://developer.android.com/reference/android/util/Half.html#intBitsToHalf(int))
        pub fn intBitsToHalf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "intBitsToHalf", .descriptor == "(I)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "intBitsToHalf\0", "(I)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [copySign](https://developer.android.com/reference/android/util/Half.html#copySign(short,%20short))
        pub fn copySign<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "copySign", .descriptor == "(SS)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "copySign\0", "(SS)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [abs](https://developer.android.com/reference/android/util/Half.html#abs(short))
        pub fn abs<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "abs", .descriptor == "(S)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "abs\0", "(S)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [round](https://developer.android.com/reference/android/util/Half.html#round(short))
        pub fn round<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "round", .descriptor == "(S)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "round\0", "(S)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [ceil](https://developer.android.com/reference/android/util/Half.html#ceil(short))
        pub fn ceil<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "ceil", .descriptor == "(S)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "ceil\0", "(S)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [floor](https://developer.android.com/reference/android/util/Half.html#floor(short))
        pub fn floor<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "floor", .descriptor == "(S)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "floor\0", "(S)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [trunc](https://developer.android.com/reference/android/util/Half.html#trunc(short))
        pub fn trunc<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "trunc", .descriptor == "(S)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "trunc\0", "(S)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [min](https://developer.android.com/reference/android/util/Half.html#min(short,%20short))
        pub fn min<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "min", .descriptor == "(SS)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "min\0", "(SS)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [max](https://developer.android.com/reference/android/util/Half.html#max(short,%20short))
        pub fn max<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "max", .descriptor == "(SS)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "max\0", "(SS)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [less](https://developer.android.com/reference/android/util/Half.html#less(short,%20short))
        pub fn less<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "less", .descriptor == "(SS)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "less\0", "(SS)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [lessEquals](https://developer.android.com/reference/android/util/Half.html#lessEquals(short,%20short))
        pub fn lessEquals<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "lessEquals", .descriptor == "(SS)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "lessEquals\0", "(SS)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [greater](https://developer.android.com/reference/android/util/Half.html#greater(short,%20short))
        pub fn greater<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "greater", .descriptor == "(SS)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "greater\0", "(SS)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [greaterEquals](https://developer.android.com/reference/android/util/Half.html#greaterEquals(short,%20short))
        pub fn greaterEquals<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "greaterEquals", .descriptor == "(SS)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "greaterEquals\0", "(SS)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/util/Half.html#equals(short,%20short))
        pub fn equals_short_short<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16, arg1: i16) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "equals", .descriptor == "(SS)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "equals\0", "(SS)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSign](https://developer.android.com/reference/android/util/Half.html#getSign(short))
        pub fn getSign<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "getSign", .descriptor == "(S)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "getSign\0", "(S)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getExponent](https://developer.android.com/reference/android/util/Half.html#getExponent(short))
        pub fn getExponent<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "getExponent", .descriptor == "(S)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "getExponent\0", "(S)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSignificand](https://developer.android.com/reference/android/util/Half.html#getSignificand(short))
        pub fn getSignificand<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "getSignificand", .descriptor == "(S)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "getSignificand\0", "(S)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isInfinite](https://developer.android.com/reference/android/util/Half.html#isInfinite(short))
        pub fn isInfinite<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "isInfinite", .descriptor == "(S)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "isInfinite\0", "(S)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNaN](https://developer.android.com/reference/android/util/Half.html#isNaN(short))
        pub fn isNaN_short<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "isNaN", .descriptor == "(S)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "isNaN\0", "(S)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNormalized](https://developer.android.com/reference/android/util/Half.html#isNormalized(short))
        pub fn isNormalized<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "isNormalized", .descriptor == "(S)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "isNormalized\0", "(S)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toFloat](https://developer.android.com/reference/android/util/Half.html#toFloat(short))
        pub fn toFloat<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<f32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "toFloat", .descriptor == "(S)F"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "toFloat\0", "(S)F\0");
                __jni_env.call_static_float_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toHalf](https://developer.android.com/reference/android/util/Half.html#toHalf(float))
        pub fn toHalf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "toHalf", .descriptor == "(F)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "toHalf\0", "(F)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [valueOf](https://developer.android.com/reference/android/util/Half.html#valueOf(short))
        ///
        /// Required features: "android-util-Half"
        #[cfg(any(feature = "all", all(feature = "android-util-Half")))]
        pub fn valueOf_short<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::util::Half>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "valueOf", .descriptor == "(S)Landroid/util/Half;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "valueOf\0", "(S)Landroid/util/Half;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [valueOf](https://developer.android.com/reference/android/util/Half.html#valueOf(float))
        ///
        /// Required features: "android-util-Half"
        #[cfg(any(feature = "all", all(feature = "android-util-Half")))]
        pub fn valueOf_float<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: f32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::util::Half>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "valueOf", .descriptor == "(F)Landroid/util/Half;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "valueOf\0", "(F)Landroid/util/Half;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [valueOf](https://developer.android.com/reference/android/util/Half.html#valueOf(java.lang.String))
        ///
        /// Required features: "android-util-Half", "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "android-util-Half", feature = "java-lang-String")))]
        pub fn valueOf_String<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::util::Half>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "valueOf", .descriptor == "(Ljava/lang/String;)Landroid/util/Half;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "valueOf\0", "(Ljava/lang/String;)Landroid/util/Half;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [parseHalf](https://developer.android.com/reference/android/util/Half.html#parseHalf(java.lang.String))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn parseHalf<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::String>>) -> __jni_bindgen::std::result::Result<i16, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "parseHalf", .descriptor == "(Ljava/lang/String;)S"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "parseHalf\0", "(Ljava/lang/String;)S\0");
                __jni_env.call_static_short_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/util/Half.html#toString(short))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString_short<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "toString", .descriptor == "(S)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "toString\0", "(S)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toHexString](https://developer.android.com/reference/android/util/Half.html#toHexString(short))
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toHexString<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i16) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/Half", java.flags == PUBLIC | STATIC, .name == "toHexString", .descriptor == "(S)Ljava/lang/String;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/util/Half\0", "toHexString\0", "(S)Ljava/lang/String;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        // // Not emitting: Bridge method - type erasure
        // /// [compareTo](https://developer.android.com/reference/android/util/Half.html#compareTo(java.lang.Object))
        // ///
        // /// Required features: "java-lang-Object"
        // #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        // pub fn compareTo_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/util/Half", java.flags == PUBLIC | BRIDGE | SYNTHETIC, .name == "compareTo", .descriptor == "(Ljava/lang/Object;)I"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/Half\0", "compareTo\0", "(Ljava/lang/Object;)I\0");
        //         __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// public static final [EPSILON](https://developer.android.com/reference/android/util/Half.html#EPSILON)
        pub const EPSILON : i16 = 5120;

        /// public static final [LOWEST_VALUE](https://developer.android.com/reference/android/util/Half.html#LOWEST_VALUE)
        pub const LOWEST_VALUE : i16 = -1025;

        /// public static final [MAX_EXPONENT](https://developer.android.com/reference/android/util/Half.html#MAX_EXPONENT)
        pub const MAX_EXPONENT : i32 = 15;

        /// public static final [MAX_VALUE](https://developer.android.com/reference/android/util/Half.html#MAX_VALUE)
        pub const MAX_VALUE : i16 = 31743;

        /// public static final [MIN_EXPONENT](https://developer.android.com/reference/android/util/Half.html#MIN_EXPONENT)
        pub const MIN_EXPONENT : i32 = -14;

        /// public static final [MIN_NORMAL](https://developer.android.com/reference/android/util/Half.html#MIN_NORMAL)
        pub const MIN_NORMAL : i16 = 1024;

        /// public static final [MIN_VALUE](https://developer.android.com/reference/android/util/Half.html#MIN_VALUE)
        pub const MIN_VALUE : i16 = 1;

        /// public static final [NEGATIVE_INFINITY](https://developer.android.com/reference/android/util/Half.html#NEGATIVE_INFINITY)
        pub const NEGATIVE_INFINITY : i16 = -1024;

        /// public static final [NEGATIVE_ZERO](https://developer.android.com/reference/android/util/Half.html#NEGATIVE_ZERO)
        pub const NEGATIVE_ZERO : i16 = -32768;

        /// public static final [NaN](https://developer.android.com/reference/android/util/Half.html#NaN)
        pub const NaN : i16 = 32256;

        /// public static final [POSITIVE_INFINITY](https://developer.android.com/reference/android/util/Half.html#POSITIVE_INFINITY)
        pub const POSITIVE_INFINITY : i16 = 31744;

        /// public static final [POSITIVE_ZERO](https://developer.android.com/reference/android/util/Half.html#POSITIVE_ZERO)
        pub const POSITIVE_ZERO : i16 = 0;

        /// public static final [SIZE](https://developer.android.com/reference/android/util/Half.html#SIZE)
        pub const SIZE : i32 = 16;
    }
}
