// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-util-DisplayMetrics"))]
__jni_bindgen! {
    /// public class [DisplayMetrics](https://developer.android.com/reference/android/util/DisplayMetrics.html)
    ///
    /// Required feature: android-util-DisplayMetrics
    public class DisplayMetrics ("android/util/DisplayMetrics") extends crate::java::lang::Object {

        /// [DisplayMetrics](https://developer.android.com/reference/android/util/DisplayMetrics.html#DisplayMetrics())
        pub fn new<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::util::DisplayMetrics>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/DisplayMetrics", java.flags == PUBLIC, .name == "<init>", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/DisplayMetrics\0", "<init>\0", "()V\0");
                __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setTo](https://developer.android.com/reference/android/util/DisplayMetrics.html#setTo(android.util.DisplayMetrics))
        ///
        /// Required features: "android-util-DisplayMetrics"
        #[cfg(any(feature = "all", all(feature = "android-util-DisplayMetrics")))]
        pub fn setTo<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::DisplayMetrics>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/DisplayMetrics", java.flags == PUBLIC, .name == "setTo", .descriptor == "(Landroid/util/DisplayMetrics;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/DisplayMetrics\0", "setTo\0", "(Landroid/util/DisplayMetrics;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setToDefaults](https://developer.android.com/reference/android/util/DisplayMetrics.html#setToDefaults())
        pub fn setToDefaults<'env>(&'env self) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/DisplayMetrics", java.flags == PUBLIC, .name == "setToDefaults", .descriptor == "()V"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/DisplayMetrics\0", "setToDefaults\0", "()V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/util/DisplayMetrics.html#equals(java.lang.Object))
        ///
        /// Required features: "java-lang-Object"
        #[cfg(any(feature = "all", all(feature = "java-lang-Object")))]
        pub fn equals_Object<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::lang::Object>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/DisplayMetrics", java.flags == PUBLIC, .name == "equals", .descriptor == "(Ljava/lang/Object;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/DisplayMetrics\0", "equals\0", "(Ljava/lang/Object;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [equals](https://developer.android.com/reference/android/util/DisplayMetrics.html#equals(android.util.DisplayMetrics))
        ///
        /// Required features: "android-util-DisplayMetrics"
        #[cfg(any(feature = "all", all(feature = "android-util-DisplayMetrics")))]
        pub fn equals_DisplayMetrics<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::util::DisplayMetrics>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/DisplayMetrics", java.flags == PUBLIC, .name == "equals", .descriptor == "(Landroid/util/DisplayMetrics;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/DisplayMetrics\0", "equals\0", "(Landroid/util/DisplayMetrics;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [hashCode](https://developer.android.com/reference/android/util/DisplayMetrics.html#hashCode())
        pub fn hashCode<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/DisplayMetrics", java.flags == PUBLIC, .name == "hashCode", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/DisplayMetrics\0", "hashCode\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [toString](https://developer.android.com/reference/android/util/DisplayMetrics.html#toString())
        ///
        /// Required features: "java-lang-String"
        #[cfg(any(feature = "all", all(feature = "java-lang-String")))]
        pub fn toString<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::lang::String>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/util/DisplayMetrics", java.flags == PUBLIC, .name == "toString", .descriptor == "()Ljava/lang/String;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/util/DisplayMetrics\0", "toString\0", "()Ljava/lang/String;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [DENSITY_140](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_140)
        pub const DENSITY_140 : i32 = 140;

        /// public static final [DENSITY_180](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_180)
        pub const DENSITY_180 : i32 = 180;

        /// public static final [DENSITY_200](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_200)
        pub const DENSITY_200 : i32 = 200;

        /// public static final [DENSITY_220](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_220)
        pub const DENSITY_220 : i32 = 220;

        /// public static final [DENSITY_260](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_260)
        pub const DENSITY_260 : i32 = 260;

        /// public static final [DENSITY_280](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_280)
        pub const DENSITY_280 : i32 = 280;

        /// public static final [DENSITY_300](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_300)
        pub const DENSITY_300 : i32 = 300;

        /// public static final [DENSITY_340](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_340)
        pub const DENSITY_340 : i32 = 340;

        /// public static final [DENSITY_360](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_360)
        pub const DENSITY_360 : i32 = 360;

        /// public static final [DENSITY_400](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_400)
        pub const DENSITY_400 : i32 = 400;

        /// public static final [DENSITY_420](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_420)
        pub const DENSITY_420 : i32 = 420;

        /// public static final [DENSITY_440](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_440)
        pub const DENSITY_440 : i32 = 440;

        /// public static final [DENSITY_450](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_450)
        pub const DENSITY_450 : i32 = 450;

        /// public static final [DENSITY_560](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_560)
        pub const DENSITY_560 : i32 = 560;

        /// public static final [DENSITY_600](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_600)
        pub const DENSITY_600 : i32 = 600;

        /// public static final [DENSITY_DEFAULT](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_DEFAULT)
        pub const DENSITY_DEFAULT : i32 = 160;

        /// **get** public static final [DENSITY_DEVICE_STABLE](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_DEVICE_STABLE)
        pub fn DENSITY_DEVICE_STABLE<'env>(env: &'env __jni_bindgen::Env) -> i32 {
            unsafe {
                let (class, field) = env.require_class_static_field("android/util/DisplayMetrics\0", "DENSITY_DEVICE_STABLE\0", "I\0");
                env.get_static_int_field(class, field)
            }
        }

        /// public static final [DENSITY_HIGH](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_HIGH)
        pub const DENSITY_HIGH : i32 = 240;

        /// public static final [DENSITY_LOW](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_LOW)
        pub const DENSITY_LOW : i32 = 120;

        /// public static final [DENSITY_MEDIUM](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_MEDIUM)
        pub const DENSITY_MEDIUM : i32 = 160;

        /// public static final [DENSITY_TV](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_TV)
        pub const DENSITY_TV : i32 = 213;

        /// public static final [DENSITY_XHIGH](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_XHIGH)
        pub const DENSITY_XHIGH : i32 = 320;

        /// public static final [DENSITY_XXHIGH](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_XXHIGH)
        pub const DENSITY_XXHIGH : i32 = 480;

        /// public static final [DENSITY_XXXHIGH](https://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_XXXHIGH)
        pub const DENSITY_XXXHIGH : i32 = 640;

        /// **get** public [density](https://developer.android.com/reference/android/util/DisplayMetrics.html#density)
        pub fn density<'env>(&'env self) -> f32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "density\0", "F\0");
                env.get_float_field(class, field)
            }
        }

        /// **set** public [density](https://developer.android.com/reference/android/util/DisplayMetrics.html#density)
        pub fn set_density<'env>(&'env self, value: f32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "density\0", "F\0");
                env.set_float_field(class, field, value)
            }
        }

        /// **get** public [densityDpi](https://developer.android.com/reference/android/util/DisplayMetrics.html#densityDpi)
        pub fn densityDpi<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "densityDpi\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [densityDpi](https://developer.android.com/reference/android/util/DisplayMetrics.html#densityDpi)
        pub fn set_densityDpi<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "densityDpi\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [heightPixels](https://developer.android.com/reference/android/util/DisplayMetrics.html#heightPixels)
        pub fn heightPixels<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "heightPixels\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [heightPixels](https://developer.android.com/reference/android/util/DisplayMetrics.html#heightPixels)
        pub fn set_heightPixels<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "heightPixels\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [scaledDensity](https://developer.android.com/reference/android/util/DisplayMetrics.html#scaledDensity)
        pub fn scaledDensity<'env>(&'env self) -> f32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "scaledDensity\0", "F\0");
                env.get_float_field(class, field)
            }
        }

        /// **set** public [scaledDensity](https://developer.android.com/reference/android/util/DisplayMetrics.html#scaledDensity)
        pub fn set_scaledDensity<'env>(&'env self, value: f32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "scaledDensity\0", "F\0");
                env.set_float_field(class, field, value)
            }
        }

        /// **get** public [widthPixels](https://developer.android.com/reference/android/util/DisplayMetrics.html#widthPixels)
        pub fn widthPixels<'env>(&'env self) -> i32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "widthPixels\0", "I\0");
                env.get_int_field(class, field)
            }
        }

        /// **set** public [widthPixels](https://developer.android.com/reference/android/util/DisplayMetrics.html#widthPixels)
        pub fn set_widthPixels<'env>(&'env self, value: i32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "widthPixels\0", "I\0");
                env.set_int_field(class, field, value)
            }
        }

        /// **get** public [xdpi](https://developer.android.com/reference/android/util/DisplayMetrics.html#xdpi)
        pub fn xdpi<'env>(&'env self) -> f32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "xdpi\0", "F\0");
                env.get_float_field(class, field)
            }
        }

        /// **set** public [xdpi](https://developer.android.com/reference/android/util/DisplayMetrics.html#xdpi)
        pub fn set_xdpi<'env>(&'env self, value: f32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "xdpi\0", "F\0");
                env.set_float_field(class, field, value)
            }
        }

        /// **get** public [ydpi](https://developer.android.com/reference/android/util/DisplayMetrics.html#ydpi)
        pub fn ydpi<'env>(&'env self) -> f32 {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "ydpi\0", "F\0");
                env.get_float_field(class, field)
            }
        }

        /// **set** public [ydpi](https://developer.android.com/reference/android/util/DisplayMetrics.html#ydpi)
        pub fn set_ydpi<'env>(&'env self, value: f32) {
            unsafe {
                let env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (class, field) = env.require_class_field("android/util/DisplayMetrics\0", "ydpi\0", "F\0");
                env.set_float_field(class, field, value)
            }
        }
    }
}
