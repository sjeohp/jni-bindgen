// WARNING:  This file was autogenerated by jni-bindgen.  Any changes to this file may be lost!!!


#[cfg(any(feature = "all", feature = "android-telephony-SubscriptionManager"))]
__jni_bindgen! {
    /// public class [SubscriptionManager](https://developer.android.com/reference/android/telephony/SubscriptionManager.html)
    ///
    /// Required feature: android-telephony-SubscriptionManager
    public class SubscriptionManager ("android/telephony/SubscriptionManager") extends crate::java::lang::Object {

        // // Not emitting: Non-public method
        // /// [SubscriptionManager](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#SubscriptionManager(android.content.Context))
        // ///
        // /// Required features: "android-content-Context"
        // #[cfg(any(feature = "all", all(feature = "android-content-Context")))]
        // fn new<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::Local<'env, crate::android::telephony::SubscriptionManager>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
        //     // class.path == "android/telephony/SubscriptionManager", java.flags == (empty), .name == "<init>", .descriptor == "(Landroid/content/Context;)V"
        //     unsafe {
        //         let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
        //         let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "<init>\0", "(Landroid/content/Context;)V\0");
        //         __jni_env.new_object_a(__jni_class, __jni_method, __jni_args.as_ptr())
        //     }
        // }

        /// [from](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#from(android.content.Context))
        ///
        /// Required features: "android-content-Context", "android-telephony-SubscriptionManager"
        #[cfg(any(feature = "all", all(feature = "android-content-Context", feature = "android-telephony-SubscriptionManager")))]
        #[deprecated] pub fn from<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::content::Context>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telephony::SubscriptionManager>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC | STATIC, .name == "from", .descriptor == "(Landroid/content/Context;)Landroid/telephony/SubscriptionManager;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telephony/SubscriptionManager\0", "from\0", "(Landroid/content/Context;)Landroid/telephony/SubscriptionManager;\0");
                __jni_env.call_static_object_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addOnSubscriptionsChangedListener](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener))
        ///
        /// Required features: "android-telephony-SubscriptionManager_OnSubscriptionsChangedListener"
        #[cfg(any(feature = "all", all(feature = "android-telephony-SubscriptionManager_OnSubscriptionsChangedListener")))]
        pub fn addOnSubscriptionsChangedListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telephony::SubscriptionManager_OnSubscriptionsChangedListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "addOnSubscriptionsChangedListener", .descriptor == "(Landroid/telephony/SubscriptionManager$OnSubscriptionsChangedListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "addOnSubscriptionsChangedListener\0", "(Landroid/telephony/SubscriptionManager$OnSubscriptionsChangedListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeOnSubscriptionsChangedListener](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener))
        ///
        /// Required features: "android-telephony-SubscriptionManager_OnSubscriptionsChangedListener"
        #[cfg(any(feature = "all", all(feature = "android-telephony-SubscriptionManager_OnSubscriptionsChangedListener")))]
        pub fn removeOnSubscriptionsChangedListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telephony::SubscriptionManager_OnSubscriptionsChangedListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "removeOnSubscriptionsChangedListener", .descriptor == "(Landroid/telephony/SubscriptionManager$OnSubscriptionsChangedListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "removeOnSubscriptionsChangedListener\0", "(Landroid/telephony/SubscriptionManager$OnSubscriptionsChangedListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addOnOpportunisticSubscriptionsChangedListener](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#addOnOpportunisticSubscriptionsChangedListener(java.util.concurrent.Executor,%20android.telephony.SubscriptionManager.OnOpportunisticSubscriptionsChangedListener))
        ///
        /// Required features: "android-telephony-SubscriptionManager_OnOpportunisticSubscriptionsChangedListener", "java-util-concurrent-Executor"
        #[cfg(any(feature = "all", all(feature = "android-telephony-SubscriptionManager_OnOpportunisticSubscriptionsChangedListener", feature = "java-util-concurrent-Executor")))]
        pub fn addOnOpportunisticSubscriptionsChangedListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::concurrent::Executor>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telephony::SubscriptionManager_OnOpportunisticSubscriptionsChangedListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "addOnOpportunisticSubscriptionsChangedListener", .descriptor == "(Ljava/util/concurrent/Executor;Landroid/telephony/SubscriptionManager$OnOpportunisticSubscriptionsChangedListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "addOnOpportunisticSubscriptionsChangedListener\0", "(Ljava/util/concurrent/Executor;Landroid/telephony/SubscriptionManager$OnOpportunisticSubscriptionsChangedListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeOnOpportunisticSubscriptionsChangedListener](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#removeOnOpportunisticSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnOpportunisticSubscriptionsChangedListener))
        ///
        /// Required features: "android-telephony-SubscriptionManager_OnOpportunisticSubscriptionsChangedListener"
        #[cfg(any(feature = "all", all(feature = "android-telephony-SubscriptionManager_OnOpportunisticSubscriptionsChangedListener")))]
        pub fn removeOnOpportunisticSubscriptionsChangedListener<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telephony::SubscriptionManager_OnOpportunisticSubscriptionsChangedListener>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "removeOnOpportunisticSubscriptionsChangedListener", .descriptor == "(Landroid/telephony/SubscriptionManager$OnOpportunisticSubscriptionsChangedListener;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "removeOnOpportunisticSubscriptionsChangedListener\0", "(Landroid/telephony/SubscriptionManager$OnOpportunisticSubscriptionsChangedListener;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActiveSubscriptionInfo](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getActiveSubscriptionInfo(int))
        ///
        /// Required features: "android-telephony-SubscriptionInfo"
        #[cfg(any(feature = "all", all(feature = "android-telephony-SubscriptionInfo")))]
        pub fn getActiveSubscriptionInfo<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telephony::SubscriptionInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getActiveSubscriptionInfo", .descriptor == "(I)Landroid/telephony/SubscriptionInfo;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getActiveSubscriptionInfo\0", "(I)Landroid/telephony/SubscriptionInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActiveSubscriptionInfoForSimSlotIndex](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getActiveSubscriptionInfoForSimSlotIndex(int))
        ///
        /// Required features: "android-telephony-SubscriptionInfo"
        #[cfg(any(feature = "all", all(feature = "android-telephony-SubscriptionInfo")))]
        pub fn getActiveSubscriptionInfoForSimSlotIndex<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::telephony::SubscriptionInfo>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getActiveSubscriptionInfoForSimSlotIndex", .descriptor == "(I)Landroid/telephony/SubscriptionInfo;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getActiveSubscriptionInfoForSimSlotIndex\0", "(I)Landroid/telephony/SubscriptionInfo;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActiveSubscriptionInfoList](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getActiveSubscriptionInfoList())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getActiveSubscriptionInfoList<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getActiveSubscriptionInfoList", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getActiveSubscriptionInfoList\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getAccessibleSubscriptionInfoList](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getAccessibleSubscriptionInfoList())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getAccessibleSubscriptionInfoList<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getAccessibleSubscriptionInfoList", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getAccessibleSubscriptionInfoList\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActiveSubscriptionInfoCount](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getActiveSubscriptionInfoCount())
        pub fn getActiveSubscriptionInfoCount<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getActiveSubscriptionInfoCount", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getActiveSubscriptionInfoCount\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getActiveSubscriptionInfoCountMax](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getActiveSubscriptionInfoCountMax())
        pub fn getActiveSubscriptionInfoCountMax<'env>(&'env self) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getActiveSubscriptionInfoCountMax", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getActiveSubscriptionInfoCountMax\0", "()I\0");
                __jni_env.call_int_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSlotIndex](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getSlotIndex(int))
        pub fn getSlotIndex<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC | STATIC, .name == "getSlotIndex", .descriptor == "(I)I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telephony/SubscriptionManager\0", "getSlotIndex\0", "(I)I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSubscriptionIds](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getSubscriptionIds(int))
        pub fn getSubscriptionIds<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, __jni_bindgen::IntArray>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getSubscriptionIds", .descriptor == "(I)[I"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getSubscriptionIds\0", "(I)[I\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultSubscriptionId](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getDefaultSubscriptionId())
        pub fn getDefaultSubscriptionId<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC | STATIC, .name == "getDefaultSubscriptionId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telephony/SubscriptionManager\0", "getDefaultSubscriptionId\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultVoiceSubscriptionId](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getDefaultVoiceSubscriptionId())
        pub fn getDefaultVoiceSubscriptionId<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC | STATIC, .name == "getDefaultVoiceSubscriptionId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telephony/SubscriptionManager\0", "getDefaultVoiceSubscriptionId\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultSmsSubscriptionId](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getDefaultSmsSubscriptionId())
        pub fn getDefaultSmsSubscriptionId<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC | STATIC, .name == "getDefaultSmsSubscriptionId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telephony/SubscriptionManager\0", "getDefaultSmsSubscriptionId\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getDefaultDataSubscriptionId](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getDefaultDataSubscriptionId())
        pub fn getDefaultDataSubscriptionId<'env>(__jni_env: &'env __jni_bindgen::Env) -> __jni_bindgen::std::result::Result<i32, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC | STATIC, .name == "getDefaultDataSubscriptionId", .descriptor == "()I"
            unsafe {
                let __jni_args = [];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telephony/SubscriptionManager\0", "getDefaultDataSubscriptionId\0", "()I\0");
                __jni_env.call_static_int_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isValidSubscriptionId](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#isValidSubscriptionId(int))
        pub fn isValidSubscriptionId<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC | STATIC, .name == "isValidSubscriptionId", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telephony/SubscriptionManager\0", "isValidSubscriptionId\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isUsableSubscriptionId](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#isUsableSubscriptionId(int))
        pub fn isUsableSubscriptionId<'env>(__jni_env: &'env __jni_bindgen::Env, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC | STATIC, .name == "isUsableSubscriptionId", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let (__jni_class, __jni_method) = __jni_env.require_class_static_method("android/telephony/SubscriptionManager\0", "isUsableSubscriptionId\0", "(I)Z\0");
                __jni_env.call_static_boolean_method_a(__jni_class, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isNetworkRoaming](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#isNetworkRoaming(int))
        pub fn isNetworkRoaming<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "isNetworkRoaming", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "isNetworkRoaming\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [isActiveSubscriptionId](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#isActiveSubscriptionId(int))
        pub fn isActiveSubscriptionId<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "isActiveSubscriptionId", .descriptor == "(I)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "isActiveSubscriptionId\0", "(I)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSubscriptionPlans](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getSubscriptionPlans(int))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getSubscriptionPlans<'env>(&'env self, arg0: i32) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getSubscriptionPlans", .descriptor == "(I)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getSubscriptionPlans\0", "(I)Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubscriptionPlans](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#setSubscriptionPlans(int,%20java.util.List))
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn setSubscriptionPlans<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "setSubscriptionPlans", .descriptor == "(ILjava/util/List;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "setSubscriptionPlans\0", "(ILjava/util/List;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubscriptionOverrideUnmetered](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#setSubscriptionOverrideUnmetered(int,%20boolean,%20long))
        pub fn setSubscriptionOverrideUnmetered<'env>(&'env self, arg0: i32, arg1: bool, arg2: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "setSubscriptionOverrideUnmetered", .descriptor == "(IZJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "setSubscriptionOverrideUnmetered\0", "(IZJ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setSubscriptionOverrideCongested](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#setSubscriptionOverrideCongested(int,%20boolean,%20long))
        pub fn setSubscriptionOverrideCongested<'env>(&'env self, arg0: i32, arg1: bool, arg2: i64) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "setSubscriptionOverrideCongested", .descriptor == "(IZJ)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1), __jni_bindgen::AsJValue::as_jvalue(&arg2)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "setSubscriptionOverrideCongested\0", "(IZJ)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [canManageSubscription](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#canManageSubscription(android.telephony.SubscriptionInfo))
        ///
        /// Required features: "android-telephony-SubscriptionInfo"
        #[cfg(any(feature = "all", all(feature = "android-telephony-SubscriptionInfo")))]
        pub fn canManageSubscription<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::telephony::SubscriptionInfo>>) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "canManageSubscription", .descriptor == "(Landroid/telephony/SubscriptionInfo;)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "canManageSubscription\0", "(Landroid/telephony/SubscriptionInfo;)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getOpportunisticSubscriptions](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getOpportunisticSubscriptions())
        ///
        /// Required features: "java-util-List"
        #[cfg(any(feature = "all", all(feature = "java-util-List")))]
        pub fn getOpportunisticSubscriptions<'env>(&'env self) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getOpportunisticSubscriptions", .descriptor == "()Ljava/util/List;"
            unsafe {
                let __jni_args = [];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getOpportunisticSubscriptions\0", "()Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [switchToSubscription](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#switchToSubscription(int,%20android.app.PendingIntent))
        ///
        /// Required features: "android-app-PendingIntent"
        #[cfg(any(feature = "all", all(feature = "android-app-PendingIntent")))]
        pub fn switchToSubscription<'env>(&'env self, arg0: i32, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::app::PendingIntent>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "switchToSubscription", .descriptor == "(ILandroid/app/PendingIntent;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "switchToSubscription\0", "(ILandroid/app/PendingIntent;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [setOpportunistic](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#setOpportunistic(boolean,%20int))
        pub fn setOpportunistic<'env>(&'env self, arg0: bool, arg1: i32) -> __jni_bindgen::std::result::Result<bool, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "setOpportunistic", .descriptor == "(ZI)Z"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0), __jni_bindgen::AsJValue::as_jvalue(&arg1)];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "setOpportunistic\0", "(ZI)Z\0");
                __jni_env.call_boolean_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [createSubscriptionGroup](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#createSubscriptionGroup(java.util.List))
        ///
        /// Required features: "android-os-ParcelUuid", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "android-os-ParcelUuid", feature = "java-util-List")))]
        pub fn createSubscriptionGroup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::android::os::ParcelUuid>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "createSubscriptionGroup", .descriptor == "(Ljava/util/List;)Landroid/os/ParcelUuid;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "createSubscriptionGroup\0", "(Ljava/util/List;)Landroid/os/ParcelUuid;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [addSubscriptionsIntoGroup](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#addSubscriptionsIntoGroup(java.util.List,%20android.os.ParcelUuid))
        ///
        /// Required features: "android-os-ParcelUuid", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "android-os-ParcelUuid", feature = "java-util-List")))]
        pub fn addSubscriptionsIntoGroup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelUuid>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "addSubscriptionsIntoGroup", .descriptor == "(Ljava/util/List;Landroid/os/ParcelUuid;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "addSubscriptionsIntoGroup\0", "(Ljava/util/List;Landroid/os/ParcelUuid;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [removeSubscriptionsFromGroup](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#removeSubscriptionsFromGroup(java.util.List,%20android.os.ParcelUuid))
        ///
        /// Required features: "android-os-ParcelUuid", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "android-os-ParcelUuid", feature = "java-util-List")))]
        pub fn removeSubscriptionsFromGroup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::java::util::List>>, arg1: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelUuid>>) -> __jni_bindgen::std::result::Result<(), __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "removeSubscriptionsFromGroup", .descriptor == "(Ljava/util/List;Landroid/os/ParcelUuid;)V"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into()), __jni_bindgen::AsJValue::as_jvalue(&arg1.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "removeSubscriptionsFromGroup\0", "(Ljava/util/List;Landroid/os/ParcelUuid;)V\0");
                __jni_env.call_void_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// [getSubscriptionsInGroup](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#getSubscriptionsInGroup(android.os.ParcelUuid))
        ///
        /// Required features: "android-os-ParcelUuid", "java-util-List"
        #[cfg(any(feature = "all", all(feature = "android-os-ParcelUuid", feature = "java-util-List")))]
        pub fn getSubscriptionsInGroup<'env>(&'env self, arg0: impl __jni_bindgen::std::convert::Into<__jni_bindgen::std::option::Option<&'env crate::android::os::ParcelUuid>>) -> __jni_bindgen::std::result::Result<__jni_bindgen::std::option::Option<__jni_bindgen::Local<'env, crate::java::util::List>>, __jni_bindgen::Local<'env, crate::java::lang::Throwable>> {
            // class.path == "android/telephony/SubscriptionManager", java.flags == PUBLIC, .name == "getSubscriptionsInGroup", .descriptor == "(Landroid/os/ParcelUuid;)Ljava/util/List;"
            unsafe {
                let __jni_args = [__jni_bindgen::AsJValue::as_jvalue(&arg0.into())];
                let __jni_env = __jni_bindgen::Env::from_ptr(self.0.env);
                let (__jni_class, __jni_method) = __jni_env.require_class_method("android/telephony/SubscriptionManager\0", "getSubscriptionsInGroup\0", "(Landroid/os/ParcelUuid;)Ljava/util/List;\0");
                __jni_env.call_object_method_a(self.0.object, __jni_method, __jni_args.as_ptr())
            }
        }

        /// public static final [ACTION_DEFAULT_SMS_SUBSCRIPTION_CHANGED](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#ACTION_DEFAULT_SMS_SUBSCRIPTION_CHANGED)
        pub const ACTION_DEFAULT_SMS_SUBSCRIPTION_CHANGED : &'static str = "android.telephony.action.DEFAULT_SMS_SUBSCRIPTION_CHANGED";

        /// public static final [ACTION_DEFAULT_SUBSCRIPTION_CHANGED](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#ACTION_DEFAULT_SUBSCRIPTION_CHANGED)
        pub const ACTION_DEFAULT_SUBSCRIPTION_CHANGED : &'static str = "android.telephony.action.DEFAULT_SUBSCRIPTION_CHANGED";

        /// public static final [ACTION_MANAGE_SUBSCRIPTION_PLANS](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#ACTION_MANAGE_SUBSCRIPTION_PLANS)
        pub const ACTION_MANAGE_SUBSCRIPTION_PLANS : &'static str = "android.telephony.action.MANAGE_SUBSCRIPTION_PLANS";

        /// public static final [ACTION_REFRESH_SUBSCRIPTION_PLANS](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#ACTION_REFRESH_SUBSCRIPTION_PLANS)
        pub const ACTION_REFRESH_SUBSCRIPTION_PLANS : &'static str = "android.telephony.action.REFRESH_SUBSCRIPTION_PLANS";

        /// public static final [DATA_ROAMING_DISABLE](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#DATA_ROAMING_DISABLE)
        pub const DATA_ROAMING_DISABLE : i32 = 0;

        /// public static final [DATA_ROAMING_ENABLE](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#DATA_ROAMING_ENABLE)
        pub const DATA_ROAMING_ENABLE : i32 = 1;

        /// public static final [DEFAULT_SUBSCRIPTION_ID](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#DEFAULT_SUBSCRIPTION_ID)
        pub const DEFAULT_SUBSCRIPTION_ID : i32 = 2147483647;

        /// public static final [EXTRA_SUBSCRIPTION_INDEX](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#EXTRA_SUBSCRIPTION_INDEX)
        pub const EXTRA_SUBSCRIPTION_INDEX : &'static str = "android.telephony.extra.SUBSCRIPTION_INDEX";

        /// public static final [INVALID_SIM_SLOT_INDEX](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#INVALID_SIM_SLOT_INDEX)
        pub const INVALID_SIM_SLOT_INDEX : i32 = -1;

        /// public static final [INVALID_SUBSCRIPTION_ID](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#INVALID_SUBSCRIPTION_ID)
        pub const INVALID_SUBSCRIPTION_ID : i32 = -1;

        /// public static final [SUBSCRIPTION_TYPE_LOCAL_SIM](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#SUBSCRIPTION_TYPE_LOCAL_SIM)
        pub const SUBSCRIPTION_TYPE_LOCAL_SIM : i32 = 0;

        /// public static final [SUBSCRIPTION_TYPE_REMOTE_SIM](https://developer.android.com/reference/android/telephony/SubscriptionManager.html#SUBSCRIPTION_TYPE_REMOTE_SIM)
        pub const SUBSCRIPTION_TYPE_REMOTE_SIM : i32 = 1;
    }
}
